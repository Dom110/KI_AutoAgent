{
  "timestamp": "2025-10-05T11:55:04.526856",
  "key": "code_index",
  "value": {
    "ast": {
      "files": {
        "hello.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "setup_project.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "verify_reviewer_test.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "exists",
              "line": 67
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "items",
              "line": 93
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "exists",
              "line": 31
            },
            {
              "function": "append",
              "line": 38
            },
            {
              "function": "exists",
              "line": 52
            },
            {
              "function": "append",
              "line": 59
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "append",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "append",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "open",
              "line": 68
            },
            {
              "function": "read",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "append",
              "line": 73
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "now",
              "line": 149
            }
          ]
        },
        "test_system_understanding.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 63
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 131
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 15
            },
            {
              "function": "basicConfig",
              "line": 21
            },
            {
              "function": "getLogger",
              "line": 25
            },
            {
              "function": "str",
              "line": 15
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "ArchitectAgent",
              "line": 33
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "CodeSmithAgent",
              "line": 104
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "run",
              "line": 200
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "get",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "test_architect_understanding",
              "line": 182
            },
            {
              "function": "test_codesmith_understanding",
              "line": 185
            },
            {
              "function": "main",
              "line": 200
            },
            {
              "function": "Path",
              "line": 15
            },
            {
              "function": "understand_system",
              "line": 38
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print_exc",
              "line": 64
            },
            {
              "function": "analyze_infrastructure_improvements",
              "line": 69
            },
            {
              "function": "open",
              "line": 76
            },
            {
              "function": "write",
              "line": 77
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "generate_architecture_flowchart",
              "line": 86
            },
            {
              "function": "open",
              "line": 91
            },
            {
              "function": "write",
              "line": 92
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "analyze_codebase",
              "line": 109
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print_exc",
              "line": 132
            },
            {
              "function": "cleanup_dead_code",
              "line": 137
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "refactor_complex_code",
              "line": 155
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "enumerate",
              "line": 159
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "get",
              "line": 122
            },
            {
              "function": "open",
              "line": 145
            },
            {
              "function": "write",
              "line": 146
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "len",
              "line": 41
            },
            {
              "function": "len",
              "line": 42
            },
            {
              "function": "len",
              "line": 43
            },
            {
              "function": "len",
              "line": 44
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "get",
              "line": 57
            },
            {
              "function": "get",
              "line": 58
            },
            {
              "function": "get",
              "line": 59
            },
            {
              "function": "len",
              "line": 116
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "len",
              "line": 118
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "get",
              "line": 124
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "get",
              "line": 117
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "len",
              "line": 158
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            }
          ]
        },
        "test_dashboard_create.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 177
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "run",
              "line": 181
            },
            {
              "function": "test_dashboard_creation",
              "line": 181
            },
            {
              "function": "connect",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "loads",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "loads",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "now",
              "line": 64
            },
            {
              "function": "total_seconds",
              "line": 164
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 169
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print_exc",
              "line": 178
            },
            {
              "function": "recv",
              "line": 30
            },
            {
              "function": "send",
              "line": 39
            },
            {
              "function": "recv",
              "line": 43
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "send",
              "line": 65
            },
            {
              "function": "dumps",
              "line": 39
            },
            {
              "function": "dumps",
              "line": 65
            },
            {
              "function": "loads",
              "line": 74
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "get",
              "line": 32
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "wait_for",
              "line": 73
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "now",
              "line": 164
            },
            {
              "function": "len",
              "line": 172
            },
            {
              "function": "recv",
              "line": 73
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "get",
              "line": 86
            },
            {
              "function": "get",
              "line": 87
            },
            {
              "function": "get",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "get",
              "line": 92
            },
            {
              "function": "get",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "get",
              "line": 97
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "append",
              "line": 102
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "get",
              "line": 112
            },
            {
              "function": "get",
              "line": 113
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "get",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "send",
              "line": 129
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "get",
              "line": 138
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "get",
              "line": 142
            },
            {
              "function": "dumps",
              "line": 129
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "str",
              "line": 118
            },
            {
              "function": "get",
              "line": 139
            },
            {
              "function": "get",
              "line": 140
            },
            {
              "function": "get",
              "line": 146
            },
            {
              "function": "get",
              "line": 147
            },
            {
              "function": "get",
              "line": 148
            },
            {
              "function": "len",
              "line": 149
            },
            {
              "function": "len",
              "line": 150
            },
            {
              "function": "get",
              "line": 156
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "get",
              "line": 150
            }
          ]
        },
        "send_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "run",
              "line": 74
            },
            {
              "function": "connect",
              "line": 16
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "send_approval",
              "line": 74
            },
            {
              "function": "recv",
              "line": 18
            },
            {
              "function": "send",
              "line": 23
            },
            {
              "function": "recv",
              "line": 24
            },
            {
              "function": "send",
              "line": 34
            },
            {
              "function": "dumps",
              "line": 23
            },
            {
              "function": "dumps",
              "line": 34
            },
            {
              "function": "timeout",
              "line": 42
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "loads",
              "line": 19
            },
            {
              "function": "loads",
              "line": 25
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "get",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "get",
              "line": 57
            },
            {
              "function": "get",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "lower",
              "line": 60
            },
            {
              "function": "lower",
              "line": 60
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 68
            }
          ]
        },
        "__version__.py": {
          "functions": [
            {
              "name": "get_version",
              "line": 18,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "__version__.py"
            },
            {
              "name": "get_version_tuple",
              "line": 22,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "__version__.py"
            },
            {
              "name": "is_compatible",
              "line": 26,
              "async": false,
              "calls": [
                "isinstance",
                "split",
                "map",
                "tuple"
              ],
              "parameters": [
                "required_version"
              ],
              "decorators": [],
              "file": "__version__.py"
            }
          ],
          "classes": [],
          "imports": [],
          "calls": [
            {
              "function": "isinstance",
              "line": 28
            },
            {
              "function": "tuple",
              "line": 29
            },
            {
              "function": "map",
              "line": 29
            },
            {
              "function": "split",
              "line": 29
            }
          ]
        },
        "test_dashboard_request.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "run",
              "line": 110
            },
            {
              "function": "connect",
              "line": 17
            },
            {
              "function": "loads",
              "line": 20
            },
            {
              "function": "get",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "send_dashboard_request",
              "line": 110
            },
            {
              "function": "recv",
              "line": 19
            },
            {
              "function": "send",
              "line": 31
            },
            {
              "function": "recv",
              "line": 34
            },
            {
              "function": "send",
              "line": 43
            },
            {
              "function": "dumps",
              "line": 31
            },
            {
              "function": "dumps",
              "line": 43
            },
            {
              "function": "timeout",
              "line": 50
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "dumps",
              "line": 30
            },
            {
              "function": "dumps",
              "line": 42
            },
            {
              "function": "loads",
              "line": 53
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "get",
              "line": 57
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "recv",
              "line": 52
            },
            {
              "function": "len",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "str",
              "line": 61
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "get",
              "line": 70
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "send",
              "line": 91
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "dumps",
              "line": 91
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "str",
              "line": 100
            }
          ]
        },
        "test_infrastructure_comprehensive.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 17
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 12
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "exit",
              "line": 14
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "ArchitectAgent",
              "line": 31
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "TaskRequest",
              "line": 37
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "TaskRequest",
              "line": 54
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "run",
              "line": 173
            },
            {
              "function": "execute_with_memory",
              "line": 42
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "execute_with_memory",
              "line": 59
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "TaskRequest",
              "line": 97
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "TaskRequest",
              "line": 122
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "test_infrastructure_analysis_comprehensive",
              "line": 170
            },
            {
              "function": "main",
              "line": 173
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "append",
              "line": 72
            },
            {
              "function": "append",
              "line": 74
            },
            {
              "function": "lower",
              "line": 75
            },
            {
              "function": "append",
              "line": 76
            },
            {
              "function": "append",
              "line": 78
            },
            {
              "function": "append",
              "line": 80
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "execute_with_memory",
              "line": 102
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "execute_with_memory",
              "line": 127
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "dirname",
              "line": 39
            },
            {
              "function": "dirname",
              "line": 56
            },
            {
              "function": "lower",
              "line": 71
            },
            {
              "function": "lower",
              "line": 71
            },
            {
              "function": "lower",
              "line": 73
            },
            {
              "function": "lower",
              "line": 73
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "lower",
              "line": 106
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "dirname",
              "line": 39
            },
            {
              "function": "dirname",
              "line": 56
            },
            {
              "function": "len",
              "line": 82
            },
            {
              "function": "dirname",
              "line": 99
            },
            {
              "function": "dirname",
              "line": 124
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "append",
              "line": 138
            },
            {
              "function": "dirname",
              "line": 99
            },
            {
              "function": "dirname",
              "line": 124
            },
            {
              "function": "capitalize",
              "line": 138
            },
            {
              "function": "join",
              "line": 141
            }
          ]
        },
        "test_api_keys.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService",
                "OpenAIConfig"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "utils.anthropic_service",
              "names": [
                "AnthropicService"
              ],
              "line": 59
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 101
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "load_dotenv",
              "line": 16
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "getenv",
              "line": 89
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "getenv",
              "line": 25
            },
            {
              "function": "getenv",
              "line": 61
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "getenv",
              "line": 103
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "OpenAIConfig",
              "line": 33
            },
            {
              "function": "OpenAIService",
              "line": 34
            },
            {
              "function": "run",
              "line": 49
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "AnthropicService",
              "line": 66
            },
            {
              "function": "run",
              "line": 80
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "test_openai",
              "line": 49
            },
            {
              "function": "test_anthropic",
              "line": 80
            },
            {
              "function": "json",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "len",
              "line": 30
            },
            {
              "function": "complete",
              "line": 39
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "get_completion",
              "line": 70
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "join",
              "line": 123
            }
          ]
        },
        "real_whiteboard_request.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 120
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "run",
              "line": 126
            },
            {
              "function": "generate_whiteboard_app",
              "line": 126
            },
            {
              "function": "strftime",
              "line": 23
            },
            {
              "function": "connect",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "loads",
              "line": 31
            },
            {
              "function": "get",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "now",
              "line": 58
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print_exc",
              "line": 121
            },
            {
              "function": "recv",
              "line": 30
            },
            {
              "function": "send",
              "line": 50
            },
            {
              "function": "now",
              "line": 23
            },
            {
              "function": "dumps",
              "line": 50
            },
            {
              "function": "loads",
              "line": 63
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "now",
              "line": 110
            },
            {
              "function": "now",
              "line": 60
            },
            {
              "function": "wait_for",
              "line": 62
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "recv",
              "line": 62
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "get",
              "line": 71
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "upper",
              "line": 74
            },
            {
              "function": "send",
              "line": 91
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "dumps",
              "line": 91
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "upper",
              "line": 78
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "get",
              "line": 95
            },
            {
              "function": "get",
              "line": 98
            }
          ]
        },
        "cli.py": {
          "functions": [
            {
              "name": "main",
              "line": 394,
              "async": false,
              "calls": [
                "add_argument",
                "ArgumentParser",
                "initialize",
                "_process_task",
                "run_tests",
                "_run_test_scenarios",
                "KIAutoAgentCLI",
                "run",
                "run_task",
                "parse_args"
              ],
              "parameters": [],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_show_welcome",
              "line": 67,
              "async": false,
              "calls": [
                "print",
                "Panel"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_display_results",
              "line": 198,
              "async": false,
              "calls": [
                "findall",
                "join",
                "Panel",
                "print",
                "Syntax",
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "result"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_show_help",
              "line": 257,
              "async": false,
              "calls": [
                "Table",
                "add_row",
                "print",
                "add_column"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_show_agents",
              "line": 275,
              "async": false,
              "calls": [
                "Table",
                "add_row",
                "print",
                "add_column"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_show_history",
              "line": 299,
              "async": false,
              "calls": [
                "add_column",
                "get",
                "fromisoformat",
                "add_row",
                "strftime",
                "Table",
                "enumerate",
                "print",
                "len",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_load_history",
              "line": 375,
              "async": false,
              "calls": [
                "open",
                "load",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            },
            {
              "name": "_save_history",
              "line": 385,
              "async": false,
              "calls": [
                "open",
                "dump"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "cli.py"
            }
          ],
          "classes": [
            {
              "name": "KIAutoAgentCLI",
              "line": 30,
              "methods": [
                "__init__",
                "_show_welcome",
                "_display_results",
                "_show_help",
                "_show_agents",
                "_show_history",
                "_load_history",
                "_save_history"
              ],
              "bases": [],
              "file": "cli.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "rich.console",
              "names": [
                "Console"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "rich.table",
              "names": [
                "Table"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "rich.panel",
              "names": [
                "Panel"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "rich.progress",
              "names": [
                "Progress",
                "SpinnerColumn",
                "TextColumn"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "rich.prompt",
              "names": [
                "Prompt",
                "Confirm"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "rich.syntax",
              "names": [
                "Syntax"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "rich",
              "names": [
                "print"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "orchestration.master_dispatcher",
              "names": [
                "MasterDispatcher"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "agents",
              "names": [
                "AVAILABLE_AGENTS"
              ],
              "line": 26
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 239
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 23
            },
            {
              "function": "Console",
              "line": 28
            },
            {
              "function": "dirname",
              "line": 23
            },
            {
              "function": "ArgumentParser",
              "line": 396
            },
            {
              "function": "add_argument",
              "line": 397
            },
            {
              "function": "add_argument",
              "line": 398
            },
            {
              "function": "parse_args",
              "line": 399
            },
            {
              "function": "KIAutoAgentCLI",
              "line": 401
            },
            {
              "function": "main",
              "line": 420
            },
            {
              "function": "abspath",
              "line": 23
            },
            {
              "function": "now",
              "line": 38
            },
            {
              "function": "_show_welcome",
              "line": 65
            },
            {
              "function": "Panel",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "get",
              "line": 201
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "get",
              "line": 206
            },
            {
              "function": "get",
              "line": 212
            },
            {
              "function": "get",
              "line": 220
            },
            {
              "function": "get",
              "line": 232
            },
            {
              "function": "get",
              "line": 252
            },
            {
              "function": "Table",
              "line": 259
            },
            {
              "function": "add_column",
              "line": 260
            },
            {
              "function": "add_column",
              "line": 261
            },
            {
              "function": "add_column",
              "line": 262
            },
            {
              "function": "add_row",
              "line": 264
            },
            {
              "function": "add_row",
              "line": 265
            },
            {
              "function": "add_row",
              "line": 266
            },
            {
              "function": "add_row",
              "line": 267
            },
            {
              "function": "add_row",
              "line": 268
            },
            {
              "function": "add_row",
              "line": 269
            },
            {
              "function": "add_row",
              "line": 270
            },
            {
              "function": "add_row",
              "line": 271
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "Table",
              "line": 277
            },
            {
              "function": "add_column",
              "line": 278
            },
            {
              "function": "add_column",
              "line": 279
            },
            {
              "function": "add_column",
              "line": 280
            },
            {
              "function": "add_column",
              "line": 281
            },
            {
              "function": "print",
              "line": 297
            },
            {
              "function": "Table",
              "line": 305
            },
            {
              "function": "add_column",
              "line": 306
            },
            {
              "function": "add_column",
              "line": 307
            },
            {
              "function": "add_column",
              "line": 308
            },
            {
              "function": "add_column",
              "line": 309
            },
            {
              "function": "enumerate",
              "line": 311
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "len",
              "line": 328
            },
            {
              "function": "Panel",
              "line": 346
            },
            {
              "function": "print",
              "line": 347
            },
            {
              "function": "print",
              "line": 359
            },
            {
              "function": "enumerate",
              "line": 361
            },
            {
              "function": "print",
              "line": 373
            },
            {
              "function": "exists",
              "line": 378
            },
            {
              "function": "run",
              "line": 408
            },
            {
              "function": "Progress",
              "line": 42
            },
            {
              "function": "add_task",
              "line": 47
            },
            {
              "function": "update",
              "line": 50
            },
            {
              "function": "MasterDispatcher",
              "line": 51
            },
            {
              "function": "advance",
              "line": 52
            },
            {
              "function": "update",
              "line": 55
            },
            {
              "function": "advance",
              "line": 57
            },
            {
              "function": "update",
              "line": 60
            },
            {
              "function": "_load_history",
              "line": 61
            },
            {
              "function": "advance",
              "line": 62
            },
            {
              "function": "initialize",
              "line": 97
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "Progress",
              "line": 161
            },
            {
              "function": "add_task",
              "line": 167
            },
            {
              "function": "print",
              "line": 208
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "print",
              "line": 217
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "add_row",
              "line": 295
            },
            {
              "function": "print",
              "line": 302
            },
            {
              "function": "strftime",
              "line": 312
            },
            {
              "function": "get",
              "line": 314
            },
            {
              "function": "add_row",
              "line": 317
            },
            {
              "function": "get_agent_stats",
              "line": 324
            },
            {
              "function": "now",
              "line": 327
            },
            {
              "function": "sum",
              "line": 329
            },
            {
              "function": "max",
              "line": 329
            },
            {
              "function": "items",
              "line": 341
            },
            {
              "function": "print",
              "line": 362
            },
            {
              "function": "run_task",
              "line": 408
            },
            {
              "function": "run",
              "line": 414
            },
            {
              "function": "run",
              "line": 417
            },
            {
              "function": "SpinnerColumn",
              "line": 43
            },
            {
              "function": "TextColumn",
              "line": 44
            },
            {
              "function": "sleep",
              "line": 56
            },
            {
              "function": "ask",
              "line": 102
            },
            {
              "function": "lower",
              "line": 108
            },
            {
              "function": "strip",
              "line": 109
            },
            {
              "function": "SpinnerColumn",
              "line": 162
            },
            {
              "function": "TextColumn",
              "line": 163
            },
            {
              "function": "stop",
              "line": 180
            },
            {
              "function": "_display_results",
              "line": 183
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "findall",
              "line": 240
            },
            {
              "function": "Panel",
              "line": 247
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "str",
              "line": 317
            },
            {
              "function": "get",
              "line": 367
            },
            {
              "function": "print",
              "line": 369
            },
            {
              "function": "open",
              "line": 389
            },
            {
              "function": "dump",
              "line": 390
            },
            {
              "function": "initialize",
              "line": 406
            },
            {
              "function": "_process_task",
              "line": 407
            },
            {
              "function": "run_tests",
              "line": 414
            },
            {
              "function": "run",
              "line": 417
            },
            {
              "function": "strip",
              "line": 104
            },
            {
              "function": "ask",
              "line": 113
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "process_request",
              "line": 175
            },
            {
              "function": "stop",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "Syntax",
              "line": 243
            },
            {
              "function": "print",
              "line": 244
            },
            {
              "function": "fromisoformat",
              "line": 312
            },
            {
              "function": "len",
              "line": 313
            },
            {
              "function": "split",
              "line": 333
            },
            {
              "function": "process_request",
              "line": 366
            },
            {
              "function": "print",
              "line": 371
            },
            {
              "function": "open",
              "line": 380
            },
            {
              "function": "load",
              "line": 381
            },
            {
              "function": "initialize",
              "line": 412
            },
            {
              "function": "_run_test_scenarios",
              "line": 413
            },
            {
              "function": "_save_history",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "_show_help",
              "line": 119
            },
            {
              "function": "isoformat",
              "line": 187
            },
            {
              "function": "get",
              "line": 208
            },
            {
              "function": "get",
              "line": 209
            },
            {
              "function": "get",
              "line": 215
            },
            {
              "function": "get",
              "line": 216
            },
            {
              "function": "get",
              "line": 217
            },
            {
              "function": "get",
              "line": 223
            },
            {
              "function": "get",
              "line": 224
            },
            {
              "function": "get",
              "line": 225
            },
            {
              "function": "get",
              "line": 342
            },
            {
              "function": "get",
              "line": 342
            },
            {
              "function": "len",
              "line": 362
            },
            {
              "function": "split",
              "line": 108
            },
            {
              "function": "clear",
              "line": 122
            },
            {
              "function": "_show_welcome",
              "line": 123
            },
            {
              "function": "join",
              "line": 229
            },
            {
              "function": "len",
              "line": 247
            },
            {
              "function": "get",
              "line": 329
            },
            {
              "function": "str",
              "line": 333
            },
            {
              "function": "len",
              "line": 109
            },
            {
              "function": "_show_agents",
              "line": 126
            },
            {
              "function": "str",
              "line": 150
            },
            {
              "function": "now",
              "line": 187
            },
            {
              "function": "str",
              "line": 196
            },
            {
              "function": "str",
              "line": 371
            },
            {
              "function": "_show_history",
              "line": 129
            },
            {
              "function": "_show_stats",
              "line": 132
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "_process_task",
              "line": 136
            },
            {
              "function": "_run_test_scenarios",
              "line": 141
            },
            {
              "function": "_process_task",
              "line": 145
            }
          ]
        },
        "test_websocket_debug.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "test_websocket_debug.py"
            }
          ],
          "classes": [
            {
              "name": "WebSocketTestClient",
              "line": 32,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "test_websocket_debug.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 21
            },
            {
              "function": "getLogger",
              "line": 30
            },
            {
              "function": "info",
              "line": 134
            },
            {
              "function": "info",
              "line": 135
            },
            {
              "function": "info",
              "line": 136
            },
            {
              "function": "WebSocketTestClient",
              "line": 138
            },
            {
              "function": "info",
              "line": 141
            },
            {
              "function": "info",
              "line": 148
            },
            {
              "function": "info",
              "line": 153
            },
            {
              "function": "info",
              "line": 161
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 164
            },
            {
              "function": "info",
              "line": 172
            },
            {
              "function": "items",
              "line": 173
            },
            {
              "function": "any",
              "line": 177
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "any",
              "line": 179
            },
            {
              "function": "info",
              "line": 181
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "info",
              "line": 183
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "info",
              "line": 189
            },
            {
              "function": "info",
              "line": 190
            },
            {
              "function": "info",
              "line": 193
            },
            {
              "function": "info",
              "line": 202
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "debug",
              "line": 71
            },
            {
              "function": "time",
              "line": 77
            },
            {
              "function": "connect",
              "line": 142
            },
            {
              "function": "error",
              "line": 144
            },
            {
              "function": "send_task",
              "line": 149
            },
            {
              "function": "receive_messages",
              "line": 150
            },
            {
              "function": "send_task",
              "line": 154
            },
            {
              "function": "receive_messages",
              "line": 155
            },
            {
              "function": "close",
              "line": 158
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "info",
              "line": 174
            },
            {
              "function": "open",
              "line": 187
            },
            {
              "function": "dump",
              "line": 188
            },
            {
              "function": "run",
              "line": 196
            },
            {
              "function": "FileHandler",
              "line": 25
            },
            {
              "function": "StreamHandler",
              "line": 26
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "loads",
              "line": 47
            },
            {
              "function": "send",
              "line": 73
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "run_test",
              "line": 196
            },
            {
              "function": "info",
              "line": 198
            },
            {
              "function": "error",
              "line": 200
            },
            {
              "function": "connect",
              "line": 43
            },
            {
              "function": "recv",
              "line": 46
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "error",
              "line": 54
            },
            {
              "function": "error",
              "line": 58
            },
            {
              "function": "dumps",
              "line": 73
            },
            {
              "function": "loads",
              "line": 87
            },
            {
              "function": "append",
              "line": 88
            },
            {
              "function": "get",
              "line": 90
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "error",
              "line": 124
            },
            {
              "function": "close",
              "line": 129
            },
            {
              "function": "len",
              "line": 164
            },
            {
              "function": "get",
              "line": 177
            },
            {
              "function": "get",
              "line": 178
            },
            {
              "function": "get",
              "line": 179
            },
            {
              "function": "strftime",
              "line": 193
            },
            {
              "function": "strftime",
              "line": 202
            },
            {
              "function": "dumps",
              "line": 71
            },
            {
              "function": "time",
              "line": 80
            },
            {
              "function": "wait_for",
              "line": 82
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "recv",
              "line": 83
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "info",
              "line": 99
            },
            {
              "function": "now",
              "line": 193
            },
            {
              "function": "now",
              "line": 202
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "get",
              "line": 103
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 109
            },
            {
              "function": "get",
              "line": 113
            },
            {
              "function": "error",
              "line": 114
            },
            {
              "function": "debug",
              "line": 118
            }
          ]
        },
        "test_quick_infra.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 67
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 22
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "exit",
              "line": 13
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "ArchitectAgent",
              "line": 38
            },
            {
              "function": "hasattr",
              "line": 41
            },
            {
              "function": "hasattr",
              "line": 42
            },
            {
              "function": "hasattr",
              "line": 43
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "TaskRequest",
              "line": 69
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "run",
              "line": 117
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "quick_test",
              "line": 107
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "main",
              "line": 117
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "isinstance",
              "line": 58
            },
            {
              "function": "wait_for",
              "line": 75
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "wait_for",
              "line": 53
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "execute_with_memory",
              "line": 76
            },
            {
              "function": "understand_system",
              "line": 54
            },
            {
              "function": "hasattr",
              "line": 81
            },
            {
              "function": "type",
              "line": 57
            },
            {
              "function": "list",
              "line": 59
            },
            {
              "function": "keys",
              "line": 59
            }
          ]
        },
        "quick_test_key.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "openai",
              "names": [
                "openai"
              ],
              "line": 28
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 31
            },
            {
              "type": "import",
              "module": "openai",
              "names": [
                "openai"
              ],
              "line": 33
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 7
            },
            {
              "function": "print",
              "line": 8
            },
            {
              "function": "strip",
              "line": 10
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "OpenAI",
              "line": 36
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "exit",
              "line": 14
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "len",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "create",
              "line": 40
            },
            {
              "function": "input",
              "line": 10
            },
            {
              "function": "startswith",
              "line": 16
            },
            {
              "function": "startswith",
              "line": 16
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "check_call",
              "line": 32
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "len",
              "line": 20
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "lower",
              "line": 90
            },
            {
              "function": "lower",
              "line": 90
            },
            {
              "function": "type",
              "line": 87
            },
            {
              "function": "str",
              "line": 90
            },
            {
              "function": "str",
              "line": 90
            }
          ]
        },
        "test_v4_features.py": {
          "functions": [
            {
              "name": "test_v4_features",
              "line": 14,
              "async": false,
              "calls": [
                "read",
                "open",
                "join",
                "split",
                "print",
                "append",
                "all"
              ],
              "parameters": [],
              "decorators": [],
              "file": "test_v4_features.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 102
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "exit",
              "line": 12
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "test_v4_features",
              "line": 156
            },
            {
              "function": "exit",
              "line": 157
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "open",
              "line": 25
            },
            {
              "function": "read",
              "line": 26
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "open",
              "line": 40
            },
            {
              "function": "read",
              "line": 41
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "open",
              "line": 55
            },
            {
              "function": "read",
              "line": 56
            },
            {
              "function": "all",
              "line": 57
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "open",
              "line": 76
            },
            {
              "function": "read",
              "line": 77
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "open",
              "line": 120
            },
            {
              "function": "read",
              "line": 121
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "append",
              "line": 87
            },
            {
              "function": "split",
              "line": 87
            },
            {
              "function": "join",
              "line": 93
            }
          ]
        },
        "test_execution_time_fix.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "AgentRegistry",
                "TaskRequest"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "agents.specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 27
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 36
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "exit",
              "line": 13
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "AgentRegistry",
              "line": 23
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "TaskRequest",
              "line": 65
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "hasattr",
              "line": 73
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "run",
              "line": 108
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 28
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "ArchitectAgent",
              "line": 37
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "TaskRequest",
              "line": 49
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "hasattr",
              "line": 57
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "dispatch_task",
              "line": 70
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "TaskRequest",
              "line": 80
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "hasattr",
              "line": 88
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "test_execution_time",
              "line": 108
            },
            {
              "function": "register_agent",
              "line": 29
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "register_agent",
              "line": 38
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "dispatch_task",
              "line": 54
            },
            {
              "function": "dispatch_task",
              "line": 85
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "list",
              "line": 43
            },
            {
              "function": "keys",
              "line": 43
            },
            {
              "function": "dirname",
              "line": 82
            },
            {
              "function": "dirname",
              "line": 82
            }
          ]
        },
        "test_langgraph_system.py": {
          "functions": [
            {
              "name": "print_test_header",
              "line": 40,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "title"
              ],
              "decorators": [],
              "file": "test_langgraph_system.py"
            },
            {
              "name": "print_success",
              "line": 47,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "test_langgraph_system.py"
            },
            {
              "name": "print_error",
              "line": 52,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "test_langgraph_system.py"
            },
            {
              "name": "print_info",
              "line": 57,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "test_langgraph_system.py"
            },
            {
              "name": "test_node",
              "line": 188,
              "async": false,
              "calls": [],
              "parameters": [
                "state"
              ],
              "decorators": [],
              "file": "test_langgraph_system.py"
            }
          ],
          "classes": [
            {
              "name": "Colors",
              "line": 29,
              "methods": [],
              "bases": [],
              "file": "test_langgraph_system.py"
            },
            {
              "name": "TestAgent",
              "line": 67,
              "methods": [],
              "bases": [],
              "file": "test_langgraph_system.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "langgraph_system",
              "names": [
                "create_agent_workflow",
                "ExtendedAgentState",
                "create_initial_state"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "langgraph_system.extensions",
              "names": [
                "ToolRegistry",
                "tool",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 20
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print_test_header",
              "line": 64
            },
            {
              "function": "ToolRegistry",
              "line": 77
            },
            {
              "function": "TestAgent",
              "line": 78
            },
            {
              "function": "auto_discover_tools",
              "line": 80
            },
            {
              "function": "print_info",
              "line": 81
            },
            {
              "function": "print_test_header",
              "line": 99
            },
            {
              "function": "ApprovalManager",
              "line": 101
            },
            {
              "function": "create_task",
              "line": 105
            },
            {
              "function": "print_info",
              "line": 119
            },
            {
              "function": "print_test_header",
              "line": 137
            },
            {
              "function": "PersistentAgentMemory",
              "line": 139
            },
            {
              "function": "store_memory",
              "line": 145
            },
            {
              "function": "print_info",
              "line": 153
            },
            {
              "function": "recall_similar",
              "line": 156
            },
            {
              "function": "print_info",
              "line": 157
            },
            {
              "function": "learn_pattern",
              "line": 160
            },
            {
              "function": "get_learned_solution",
              "line": 170
            },
            {
              "function": "get_memory_stats",
              "line": 175
            },
            {
              "function": "print_info",
              "line": 176
            },
            {
              "function": "print_test_header",
              "line": 183
            },
            {
              "function": "DynamicWorkflowManager",
              "line": 185
            },
            {
              "function": "add_node",
              "line": 192
            },
            {
              "function": "add_edge",
              "line": 203
            },
            {
              "function": "get_graph_info",
              "line": 208
            },
            {
              "function": "print_info",
              "line": 209
            },
            {
              "function": "visualize_graph",
              "line": 212
            },
            {
              "function": "print_info",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print_test_header",
              "line": 221
            },
            {
              "function": "create_agent_workflow",
              "line": 224
            },
            {
              "function": "print_info",
              "line": 229
            },
            {
              "function": "print_test_header",
              "line": 258
            },
            {
              "function": "create_initial_state",
              "line": 260
            },
            {
              "function": "print_info",
              "line": 268
            },
            {
              "function": "print_info",
              "line": 269
            },
            {
              "function": "print_info",
              "line": 270
            },
            {
              "function": "print_info",
              "line": 271
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print_test_header",
              "line": 310
            },
            {
              "function": "sum",
              "line": 312
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "run",
              "line": 332
            },
            {
              "function": "exit",
              "line": 333
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "tool",
              "line": 68
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "len",
              "line": 94
            },
            {
              "function": "request_approval",
              "line": 113
            },
            {
              "function": "print_success",
              "line": 122
            },
            {
              "function": "print_error",
              "line": 125
            },
            {
              "function": "sleep",
              "line": 131
            },
            {
              "function": "auto_approve",
              "line": 132
            },
            {
              "function": "print_success",
              "line": 167
            },
            {
              "function": "print_success",
              "line": 172
            },
            {
              "function": "print_success",
              "line": 200
            },
            {
              "function": "print_success",
              "line": 205
            },
            {
              "function": "print_info",
              "line": 241
            },
            {
              "function": "print_info",
              "line": 242
            },
            {
              "function": "print_success",
              "line": 274
            },
            {
              "function": "print_error",
              "line": 277
            },
            {
              "function": "len",
              "line": 313
            },
            {
              "function": "print",
              "line": 324
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "main",
              "line": 332
            },
            {
              "function": "print_success",
              "line": 90
            },
            {
              "function": "hasattr",
              "line": 108
            },
            {
              "function": "then",
              "line": 106
            },
            {
              "function": "auto_approve_after_delay",
              "line": 109
            },
            {
              "function": "execute",
              "line": 233
            },
            {
              "function": "print_success",
              "line": 245
            },
            {
              "function": "print_error",
              "line": 248
            },
            {
              "function": "print_error",
              "line": 252
            },
            {
              "function": "append",
              "line": 304
            },
            {
              "function": "print",
              "line": 317
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "len",
              "line": 81
            },
            {
              "function": "call_tool",
              "line": 89
            },
            {
              "function": "print_error",
              "line": 92
            },
            {
              "function": "sleep",
              "line": 108
            },
            {
              "function": "len",
              "line": 157
            },
            {
              "function": "test_func",
              "line": 303
            },
            {
              "function": "print_error",
              "line": 306
            },
            {
              "function": "append",
              "line": 307
            },
            {
              "function": "len",
              "line": 321
            },
            {
              "function": "sleep",
              "line": 106
            },
            {
              "function": "auto_approve",
              "line": 107
            },
            {
              "function": "len",
              "line": 242
            },
            {
              "function": "get",
              "line": 242
            }
          ]
        },
        "send_real_request.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "run",
              "line": 133
            },
            {
              "function": "send_real_request",
              "line": 133
            },
            {
              "function": "connect",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "time",
              "line": 64
            },
            {
              "function": "set",
              "line": 67
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "recv",
              "line": 46
            },
            {
              "function": "send",
              "line": 58
            },
            {
              "function": "time",
              "line": 112
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "dumps",
              "line": 58
            },
            {
              "function": "time",
              "line": 70
            },
            {
              "function": "loads",
              "line": 73
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "int",
              "line": 53
            },
            {
              "function": "wait_for",
              "line": 72
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "add",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "join",
              "line": 117
            },
            {
              "function": "time",
              "line": 53
            },
            {
              "function": "recv",
              "line": 72
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "loads",
              "line": 47
            },
            {
              "function": "get",
              "line": 88
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "upper",
              "line": 80
            },
            {
              "function": "get",
              "line": 89
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "upper",
              "line": 84
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "get",
              "line": 93
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "get",
              "line": 96
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get",
              "line": 106
            }
          ]
        },
        "fixes/orchestrator_file_write_fix.py": {
          "functions": [
            {
              "name": "_extract_file_path",
              "line": 64,
              "async": false,
              "calls": [
                "search",
                "group"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "fixes/orchestrator_file_write_fix.py"
            },
            {
              "name": "_determine_file_path",
              "line": 84,
              "async": false,
              "calls": [
                "lower",
                "_extract_feature_name"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "fixes/orchestrator_file_write_fix.py"
            },
            {
              "name": "_extract_feature_name",
              "line": 123,
              "async": false,
              "calls": [
                "lower",
                "len",
                "replace",
                "split"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "fixes/orchestrator_file_write_fix.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 68
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 127
            }
          ],
          "calls": [
            {
              "function": "lower",
              "line": 18
            },
            {
              "function": "any",
              "line": 19
            },
            {
              "function": "_extract_file_path",
              "line": 22
            },
            {
              "function": "lower",
              "line": 88
            },
            {
              "function": "_extract_feature_name",
              "line": 107
            },
            {
              "function": "split",
              "line": 133
            },
            {
              "function": "get_agent",
              "line": 26
            },
            {
              "function": "_execute_subtask_original",
              "line": 62
            },
            {
              "function": "search",
              "line": 78
            },
            {
              "function": "replace",
              "line": 138
            },
            {
              "function": "hasattr",
              "line": 27
            },
            {
              "function": "get_agent",
              "line": 51
            },
            {
              "function": "group",
              "line": 80
            },
            {
              "function": "lower",
              "line": 133
            },
            {
              "function": "info",
              "line": 33
            },
            {
              "function": "_determine_file_path",
              "line": 31
            },
            {
              "function": "implement_code_to_file",
              "line": 35
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "error",
              "line": 46
            },
            {
              "function": "hasattr",
              "line": 53
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "create_redis_config",
              "line": 54
            },
            {
              "function": "hasattr",
              "line": 57
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "create_docker_compose",
              "line": 58
            },
            {
              "function": "get",
              "line": 59
            }
          ]
        },
        "fixes/task_request_enhancement.py": {
          "functions": [
            {
              "name": "enhance_subtask_for_file_writing",
              "line": 27,
              "async": false,
              "calls": [
                "get",
                "lower",
                "any"
              ],
              "parameters": [
                "subtask"
              ],
              "decorators": [],
              "file": "fixes/task_request_enhancement.py"
            },
            {
              "name": "to_file_task",
              "line": 17,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "fixes/task_request_enhancement.py"
            }
          ],
          "classes": [
            {
              "name": "EnhancedTaskRequest",
              "line": 9,
              "methods": [
                "to_file_task"
              ],
              "bases": [],
              "file": "fixes/task_request_enhancement.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 6
            }
          ],
          "calls": [
            {
              "function": "field",
              "line": 14
            },
            {
              "function": "lower",
              "line": 31
            },
            {
              "function": "any",
              "line": 34
            },
            {
              "function": "_original_decompose",
              "line": 57
            },
            {
              "function": "enhance_subtask_for_file_writing",
              "line": 62
            },
            {
              "function": "append",
              "line": 63
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "append",
              "line": 22
            },
            {
              "function": "get",
              "line": 31
            },
            {
              "function": "lower",
              "line": 43
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "lower",
              "line": 45
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "len",
              "line": 68
            },
            {
              "function": "get",
              "line": 45
            }
          ]
        },
        "claude_web_proxy/claude_browser.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [
                "mkdir",
                "home",
                "Path",
                "str"
              ],
              "parameters": [
                "self",
                "user_data_dir",
                "headless"
              ],
              "decorators": [],
              "file": "claude_web_proxy/claude_browser.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeBrowser",
              "line": 15,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "claude_web_proxy/claude_browser.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "playwright.async_api",
              "names": [
                "async_playwright",
                "Browser",
                "Page",
                "Playwright"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "get_logger",
              "line": 13
            },
            {
              "function": "ClaudeBrowser",
              "line": 471
            },
            {
              "function": "run",
              "line": 497
            },
            {
              "function": "mkdir",
              "line": 39
            },
            {
              "function": "start_browser",
              "line": 472
            },
            {
              "function": "test_browser",
              "line": 497
            },
            {
              "function": "str",
              "line": 34
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "info",
              "line": 79
            },
            {
              "function": "info",
              "line": 109
            },
            {
              "function": "info",
              "line": 113
            },
            {
              "function": "info",
              "line": 211
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "info",
              "line": 241
            },
            {
              "function": "time",
              "line": 245
            },
            {
              "function": "warning",
              "line": 261
            },
            {
              "function": "error",
              "line": 264
            },
            {
              "function": "info",
              "line": 297
            },
            {
              "function": "info",
              "line": 319
            },
            {
              "function": "info",
              "line": 400
            },
            {
              "function": "warning",
              "line": 440
            },
            {
              "function": "info",
              "line": 454
            },
            {
              "function": "start_browser",
              "line": 460
            },
            {
              "function": "close",
              "line": 465
            },
            {
              "function": "ClaudeBrowser",
              "line": 479
            },
            {
              "function": "Path",
              "line": 39
            },
            {
              "function": "start",
              "line": 44
            },
            {
              "function": "launch_persistent_context",
              "line": 47
            },
            {
              "function": "len",
              "line": 60
            },
            {
              "function": "set_extra_http_headers",
              "line": 66
            },
            {
              "function": "error",
              "line": 73
            },
            {
              "function": "goto",
              "line": 80
            },
            {
              "function": "sleep",
              "line": 83
            },
            {
              "function": "_comprehensive_login_check",
              "line": 86
            },
            {
              "function": "info",
              "line": 90
            },
            {
              "function": "info",
              "line": 94
            },
            {
              "function": "error",
              "line": 100
            },
            {
              "function": "title",
              "line": 112
            },
            {
              "function": "error",
              "line": 137
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "append",
              "line": 176
            },
            {
              "function": "append",
              "line": 188
            },
            {
              "function": "append",
              "line": 200
            },
            {
              "function": "info",
              "line": 207
            },
            {
              "function": "error",
              "line": 217
            },
            {
              "function": "info",
              "line": 236
            },
            {
              "function": "debug_login_detection",
              "line": 242
            },
            {
              "function": "info",
              "line": 257
            },
            {
              "function": "debug_login_detection",
              "line": 262
            },
            {
              "function": "error",
              "line": 268
            },
            {
              "function": "error",
              "line": 301
            },
            {
              "function": "Exception",
              "line": 317
            },
            {
              "function": "Exception",
              "line": 338
            },
            {
              "function": "click",
              "line": 341
            },
            {
              "function": "fill",
              "line": 342
            },
            {
              "function": "sleep",
              "line": 367
            },
            {
              "function": "sleep",
              "line": 386
            },
            {
              "function": "sleep",
              "line": 395
            },
            {
              "function": "get_latest_response",
              "line": 398
            },
            {
              "function": "error",
              "line": 404
            },
            {
              "function": "query_selector_all",
              "line": 431
            },
            {
              "function": "reversed",
              "line": 433
            },
            {
              "function": "content",
              "line": 439
            },
            {
              "function": "error",
              "line": 444
            },
            {
              "function": "error",
              "line": 456
            },
            {
              "function": "check_login_status",
              "line": 481
            },
            {
              "function": "print",
              "line": 484
            },
            {
              "function": "print",
              "line": 493
            },
            {
              "function": "print",
              "line": 495
            },
            {
              "function": "new_page",
              "line": 63
            },
            {
              "function": "debug_login_detection",
              "line": 96
            },
            {
              "function": "info",
              "line": 132
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "append",
              "line": 178
            },
            {
              "function": "append",
              "line": 190
            },
            {
              "function": "title",
              "line": 194
            },
            {
              "function": "append",
              "line": 202
            },
            {
              "function": "goto",
              "line": 237
            },
            {
              "function": "sleep",
              "line": 238
            },
            {
              "function": "get_event_loop",
              "line": 245
            },
            {
              "function": "time",
              "line": 248
            },
            {
              "function": "_comprehensive_login_check",
              "line": 250
            },
            {
              "function": "info",
              "line": 254
            },
            {
              "function": "sleep",
              "line": 258
            },
            {
              "function": "info",
              "line": 291
            },
            {
              "function": "len",
              "line": 319
            },
            {
              "function": "press",
              "line": 364
            },
            {
              "function": "len",
              "line": 400
            },
            {
              "function": "close",
              "line": 451
            },
            {
              "function": "stop",
              "line": 453
            },
            {
              "function": "wait_for_login",
              "line": 485
            },
            {
              "function": "start_new_conversation",
              "line": 489
            },
            {
              "function": "send_message",
              "line": 492
            },
            {
              "function": "home",
              "line": 34
            },
            {
              "function": "async_playwright",
              "line": 44
            },
            {
              "function": "str",
              "line": 73
            },
            {
              "function": "str",
              "line": 100
            },
            {
              "function": "query_selector",
              "line": 130
            },
            {
              "function": "info",
              "line": 134
            },
            {
              "function": "str",
              "line": 137
            },
            {
              "function": "query_selector",
              "line": 154
            },
            {
              "function": "query_selector",
              "line": 172
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "str",
              "line": 217
            },
            {
              "function": "str",
              "line": 268
            },
            {
              "function": "debug_login_detection",
              "line": 271
            },
            {
              "function": "error",
              "line": 273
            },
            {
              "function": "click",
              "line": 289
            },
            {
              "function": "sleep",
              "line": 290
            },
            {
              "function": "str",
              "line": 301
            },
            {
              "function": "wait_for_selector",
              "line": 332
            },
            {
              "function": "click",
              "line": 356
            },
            {
              "function": "wait_for_selector",
              "line": 380
            },
            {
              "function": "wait_for_selector",
              "line": 389
            },
            {
              "function": "str",
              "line": 404
            },
            {
              "function": "query_selector_all",
              "line": 420
            },
            {
              "function": "strip",
              "line": 425
            },
            {
              "function": "inner_text",
              "line": 434
            },
            {
              "function": "strip",
              "line": 435
            },
            {
              "function": "strip",
              "line": 436
            },
            {
              "function": "str",
              "line": 444
            },
            {
              "function": "str",
              "line": 445
            },
            {
              "function": "str",
              "line": 456
            },
            {
              "function": "get_event_loop",
              "line": 248
            },
            {
              "function": "inner_text",
              "line": 424
            },
            {
              "function": "strip",
              "line": 426
            },
            {
              "function": "len",
              "line": 435
            },
            {
              "function": "str",
              "line": 273
            },
            {
              "function": "strip",
              "line": 435
            }
          ]
        },
        "claude_web_proxy/quick_test.py": {
          "functions": [
            {
              "name": "print_instructions",
              "line": 159,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [],
              "decorators": [],
              "file": "claude_web_proxy/quick_test.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 15
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "str",
              "line": 13
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "get",
              "line": 139
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 169
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "create_claude_web_llm",
              "line": 64
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "time",
              "line": 67
            },
            {
              "function": "generate",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "create_claude_web_llm",
              "line": 85
            },
            {
              "function": "quick_health_check",
              "line": 118
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "quick_status_check",
              "line": 127
            },
            {
              "function": "get",
              "line": 129
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "get",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 143
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print_instructions",
              "line": 184
            },
            {
              "function": "run",
              "line": 186
            },
            {
              "function": "ClientSession",
              "line": 21
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "ClientSession",
              "line": 38
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "time",
              "line": 71
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "generate",
              "line": 95
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "quick_message_test",
              "line": 141
            },
            {
              "function": "quick_agent_test",
              "line": 144
            },
            {
              "function": "len",
              "line": 183
            },
            {
              "function": "run_quick_tests",
              "line": 186
            },
            {
              "function": "Path",
              "line": 13
            },
            {
              "function": "get",
              "line": 22
            },
            {
              "function": "get",
              "line": 39
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "json",
              "line": 24
            },
            {
              "function": "json",
              "line": 41
            },
            {
              "function": "get",
              "line": 25
            }
          ]
        },
        "claude_web_proxy/fastapi_server.py": {
          "functions": [
            {
              "name": "run_server",
              "line": 295,
              "async": false,
              "calls": [
                "run"
              ],
              "parameters": [
                "host",
                "port",
                "reload"
              ],
              "decorators": [],
              "file": "claude_web_proxy/fastapi_server.py"
            },
            {
              "name": "check_browser_context_status",
              "line": 114,
              "async": false,
              "calls": [
                "len",
                "debug",
                "is_closed",
                "str"
              ],
              "parameters": [],
              "decorators": [],
              "file": "claude_web_proxy/fastapi_server.py"
            }
          ],
          "classes": [
            {
              "name": "ChatRequest",
              "line": 26,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "claude_web_proxy/fastapi_server.py"
            },
            {
              "name": "ChatResponse",
              "line": 31,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "claude_web_proxy/fastapi_server.py"
            },
            {
              "name": "StatusResponse",
              "line": 37,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "claude_web_proxy/fastapi_server.py"
            },
            {
              "name": "SetupRequest",
              "line": 43,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "claude_web_proxy/fastapi_server.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "contextlib",
              "names": [
                "asynccontextmanager"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any",
                "List"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "FastAPI",
                "HTTPException",
                "BackgroundTasks"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "fastapi.middleware.cors",
              "names": [
                "CORSMiddleware"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "fastapi.responses",
              "names": [
                "JSONResponse"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "pydantic",
              "names": [
                "BaseModel",
                "Field"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "uvicorn",
              "names": [
                "uvicorn"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "claude_browser",
              "names": [
                "ClaudeBrowser"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "get_logger",
              "line": 21
            },
            {
              "function": "FastAPI",
              "line": 75
            },
            {
              "function": "add_middleware",
              "line": 83
            },
            {
              "function": "now",
              "line": 92
            },
            {
              "function": "get",
              "line": 94
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "post",
              "line": 150
            },
            {
              "function": "post",
              "line": 195
            },
            {
              "function": "post",
              "line": 228
            },
            {
              "function": "post",
              "line": 250
            },
            {
              "function": "delete",
              "line": 270
            },
            {
              "function": "exception_handler",
              "line": 287
            },
            {
              "function": "Field",
              "line": 27
            },
            {
              "function": "Field",
              "line": 28
            },
            {
              "function": "Field",
              "line": 29
            },
            {
              "function": "Field",
              "line": 32
            },
            {
              "function": "Field",
              "line": 33
            },
            {
              "function": "Field",
              "line": 34
            },
            {
              "function": "Field",
              "line": 35
            },
            {
              "function": "Field",
              "line": 44
            },
            {
              "function": "Field",
              "line": 45
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "error",
              "line": 289
            },
            {
              "function": "JSONResponse",
              "line": 290
            },
            {
              "function": "run",
              "line": 297
            },
            {
              "function": "run_server",
              "line": 306
            },
            {
              "function": "ClaudeBrowser",
              "line": 57
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "StatusResponse",
              "line": 105
            },
            {
              "function": "check_browser_context_status",
              "line": 132
            },
            {
              "function": "total_seconds",
              "line": 137
            },
            {
              "function": "StatusResponse",
              "line": 139
            },
            {
              "function": "ClaudeBrowser",
              "line": 161
            },
            {
              "function": "HTTPException",
              "line": 201
            },
            {
              "function": "ChatResponse",
              "line": 217
            },
            {
              "function": "HTTPException",
              "line": 234
            },
            {
              "function": "ClaudeBrowser",
              "line": 261
            },
            {
              "function": "start_browser",
              "line": 58
            },
            {
              "function": "error",
              "line": 61
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "error",
              "line": 147
            },
            {
              "function": "HTTPException",
              "line": 148
            },
            {
              "function": "start_browser",
              "line": 162
            },
            {
              "function": "check_login_status",
              "line": 165
            },
            {
              "function": "info",
              "line": 168
            },
            {
              "function": "JSONResponse",
              "line": 186
            },
            {
              "function": "error",
              "line": 192
            },
            {
              "function": "HTTPException",
              "line": 193
            },
            {
              "function": "check_login_status",
              "line": 205
            },
            {
              "function": "HTTPException",
              "line": 207
            },
            {
              "function": "send_message",
              "line": 215
            },
            {
              "function": "error",
              "line": 225
            },
            {
              "function": "HTTPException",
              "line": 226
            },
            {
              "function": "start_new_conversation",
              "line": 237
            },
            {
              "function": "JSONResponse",
              "line": 241
            },
            {
              "function": "error",
              "line": 247
            },
            {
              "function": "HTTPException",
              "line": 248
            },
            {
              "function": "start_browser",
              "line": 262
            },
            {
              "function": "error",
              "line": 267
            },
            {
              "function": "HTTPException",
              "line": 268
            },
            {
              "function": "str",
              "line": 289
            },
            {
              "function": "close",
              "line": 69
            },
            {
              "function": "error",
              "line": 72
            },
            {
              "function": "now",
              "line": 142
            },
            {
              "function": "close",
              "line": 158
            },
            {
              "function": "JSONResponse",
              "line": 171
            },
            {
              "function": "wait_for_login",
              "line": 177
            },
            {
              "function": "start_new_conversation",
              "line": 212
            },
            {
              "function": "now",
              "line": 221
            },
            {
              "function": "close",
              "line": 258
            },
            {
              "function": "close",
              "line": 277
            },
            {
              "function": "error",
              "line": 281
            },
            {
              "function": "HTTPException",
              "line": 282
            },
            {
              "function": "str",
              "line": 61
            },
            {
              "function": "len",
              "line": 121
            },
            {
              "function": "is_closed",
              "line": 126
            },
            {
              "function": "debug",
              "line": 129
            },
            {
              "function": "now",
              "line": 137
            },
            {
              "function": "str",
              "line": 147
            },
            {
              "function": "str",
              "line": 192
            },
            {
              "function": "str",
              "line": 225
            },
            {
              "function": "str",
              "line": 247
            },
            {
              "function": "str",
              "line": 267
            },
            {
              "function": "str",
              "line": 72
            },
            {
              "function": "str",
              "line": 281
            },
            {
              "function": "str",
              "line": 292
            },
            {
              "function": "str",
              "line": 129
            },
            {
              "function": "str",
              "line": 148
            },
            {
              "function": "str",
              "line": 193
            },
            {
              "function": "str",
              "line": 226
            },
            {
              "function": "str",
              "line": 248
            },
            {
              "function": "str",
              "line": 268
            },
            {
              "function": "str",
              "line": 282
            }
          ]
        },
        "claude_web_proxy/crewai_integration.py": {
          "functions": [
            {
              "name": "create_claude_web_agent",
              "line": 286,
              "async": false,
              "calls": [
                "ClaudeWebLLM",
                "ImportError",
                "Agent"
              ],
              "parameters": [
                "role",
                "goal",
                "backstory",
                "server_url"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "create_claude_web_llm",
              "line": 320,
              "async": false,
              "calls": [
                "ClaudeWebLLM"
              ],
              "parameters": [
                "server_url"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "info",
                "__init__",
                "super",
                "rstrip"
              ],
              "parameters": [
                "self",
                "server_url",
                "timeout",
                "new_conversation_per_agent"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "generate",
              "line": 171,
              "async": false,
              "calls": [
                "result",
                "_send_message_async",
                "run_until_complete",
                "is_running",
                "submit",
                "close",
                "error",
                "run",
                "ThreadPoolExecutor",
                "new_event_loop",
                "get",
                "set_event_loop",
                "get_running_loop",
                "str"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "stream_generate",
              "line": 227,
              "async": false,
              "calls": [
                "generate"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "get_model_info",
              "line": 241,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "__del__",
              "line": 257,
              "async": false,
              "calls": [
                "create_task",
                "is_closed",
                "catch_warnings",
                "simplefilter",
                "hasattr",
                "close",
                "get_running_loop"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "__init__",
              "line": 19,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "generate",
              "line": 22,
              "async": false,
              "calls": [
                "NotImplementedError"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "run_in_thread",
              "line": 200,
              "async": false,
              "calls": [
                "_send_message_async",
                "run_until_complete",
                "close",
                "new_event_loop",
                "set_event_loop"
              ],
              "parameters": [],
              "decorators": [],
              "file": "claude_web_proxy/crewai_integration.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeWebLLM",
              "line": 29,
              "methods": [
                "__init__",
                "generate",
                "stream_generate",
                "get_model_info",
                "__del__",
                "run_in_thread"
              ],
              "bases": [
                "BaseLLM"
              ],
              "file": "claude_web_proxy/crewai_integration.py"
            },
            {
              "name": "BaseLLM",
              "line": 18,
              "methods": [
                "__init__",
                "generate"
              ],
              "bases": [],
              "file": "claude_web_proxy/crewai_integration.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any",
                "List",
                "Union"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "crewai.llm",
              "names": [
                "BaseLLM"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "crewai.agent",
              "names": [
                "Agent"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "concurrent.futures",
              "names": [
                "concurrent.futures"
              ],
              "line": 197
            },
            {
              "type": "import",
              "module": "threading",
              "names": [
                "threading"
              ],
              "line": 198
            },
            {
              "type": "import",
              "module": "warnings",
              "names": [
                "warnings"
              ],
              "line": 271
            }
          ],
          "calls": [
            {
              "function": "get_logger",
              "line": 27
            },
            {
              "function": "ClaudeWebLLM",
              "line": 308
            },
            {
              "function": "Agent",
              "line": 311
            },
            {
              "function": "ClaudeWebLLM",
              "line": 331
            },
            {
              "function": "__init__",
              "line": 49
            },
            {
              "function": "rstrip",
              "line": 50
            },
            {
              "function": "info",
              "line": 56
            },
            {
              "function": "generate",
              "line": 233
            },
            {
              "function": "ImportError",
              "line": 305
            },
            {
              "function": "ClaudeWebLLM",
              "line": 338
            },
            {
              "function": "print",
              "line": 359
            },
            {
              "function": "run",
              "line": 360
            },
            {
              "function": "print",
              "line": 362
            },
            {
              "function": "print",
              "line": 363
            },
            {
              "function": "TCPConnector",
              "line": 63
            },
            {
              "function": "ClientTimeout",
              "line": 64
            },
            {
              "function": "ClientSession",
              "line": 65
            },
            {
              "function": "info",
              "line": 90
            },
            {
              "function": "is_running",
              "line": 195
            },
            {
              "function": "get",
              "line": 224
            },
            {
              "function": "get",
              "line": 224
            },
            {
              "function": "_send_message_async",
              "line": 225
            },
            {
              "function": "agenerate",
              "line": 238
            },
            {
              "function": "info",
              "line": 255
            },
            {
              "function": "hasattr",
              "line": 259
            },
            {
              "function": "print",
              "line": 343
            },
            {
              "function": "print",
              "line": 350
            },
            {
              "function": "test_claude_web_llm",
              "line": 360
            },
            {
              "function": "NotImplementedError",
              "line": 23
            },
            {
              "function": "super",
              "line": 49
            },
            {
              "function": "_get_session",
              "line": 74
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "error",
              "line": 81
            },
            {
              "function": "_check_server_status",
              "line": 87
            },
            {
              "function": "_get_session",
              "line": 91
            },
            {
              "function": "post",
              "line": 99
            },
            {
              "function": "error",
              "line": 110
            },
            {
              "function": "Exception",
              "line": 131
            },
            {
              "function": "_get_session",
              "line": 133
            },
            {
              "function": "post",
              "line": 150
            },
            {
              "function": "error",
              "line": 168
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get_running_loop",
              "line": 189
            },
            {
              "function": "run_until_complete",
              "line": 214
            },
            {
              "function": "error",
              "line": 217
            },
            {
              "function": "close",
              "line": 254
            },
            {
              "function": "agenerate",
              "line": 342
            },
            {
              "function": "agenerate",
              "line": 346
            },
            {
              "function": "print",
              "line": 353
            },
            {
              "function": "cleanup",
              "line": 355
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "info",
              "line": 102
            },
            {
              "function": "error",
              "line": 106
            },
            {
              "function": "_ensure_setup",
              "line": 130
            },
            {
              "function": "info",
              "line": 147
            },
            {
              "function": "get",
              "line": 153
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "error",
              "line": 162
            },
            {
              "function": "Exception",
              "line": 165
            },
            {
              "function": "run",
              "line": 192
            },
            {
              "function": "new_event_loop",
              "line": 201
            },
            {
              "function": "set_event_loop",
              "line": 202
            },
            {
              "function": "ThreadPoolExecutor",
              "line": 210
            },
            {
              "function": "submit",
              "line": 211
            },
            {
              "function": "result",
              "line": 212
            },
            {
              "function": "_send_message_async",
              "line": 214
            },
            {
              "function": "get_running_loop",
              "line": 264
            },
            {
              "function": "json",
              "line": 77
            },
            {
              "function": "str",
              "line": 81
            },
            {
              "function": "json",
              "line": 101
            },
            {
              "function": "get",
              "line": 103
            },
            {
              "function": "text",
              "line": 105
            },
            {
              "function": "str",
              "line": 110
            },
            {
              "function": "json",
              "line": 152
            },
            {
              "function": "text",
              "line": 161
            },
            {
              "function": "str",
              "line": 168
            },
            {
              "function": "_send_message_async",
              "line": 192
            },
            {
              "function": "run_until_complete",
              "line": 204
            },
            {
              "function": "close",
              "line": 208
            },
            {
              "function": "str",
              "line": 217
            },
            {
              "function": "str",
              "line": 218
            },
            {
              "function": "is_closed",
              "line": 265
            },
            {
              "function": "create_task",
              "line": 267
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "len",
              "line": 156
            },
            {
              "function": "len",
              "line": 157
            },
            {
              "function": "_send_message_async",
              "line": 205
            },
            {
              "function": "close",
              "line": 267
            },
            {
              "function": "catch_warnings",
              "line": 272
            },
            {
              "function": "simplefilter",
              "line": 273
            }
          ]
        },
        "claude_web_proxy/setup_and_test.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 31,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/setup_and_test.py"
            },
            {
              "name": "install_playwright_browsers",
              "line": 65,
              "async": false,
              "calls": [
                "error",
                "info",
                "run",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/setup_and_test.py"
            },
            {
              "name": "start_server",
              "line": 87,
              "async": false,
              "calls": [
                "Popen",
                "Path",
                "poll",
                "sleep",
                "error",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/setup_and_test.py"
            },
            {
              "name": "stop_server",
              "line": 108,
              "async": false,
              "calls": [
                "wait",
                "terminate",
                "kill"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "claude_web_proxy/setup_and_test.py"
            },
            {
              "name": "generate_setup_report",
              "line": 296,
              "async": false,
              "calls": [
                "items",
                "strftime"
              ],
              "parameters": [
                "self",
                "results"
              ],
              "decorators": [],
              "file": "claude_web_proxy/setup_and_test.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeWebProxyTester",
              "line": 28,
              "methods": [
                "__init__",
                "install_playwright_browsers",
                "start_server",
                "stop_server",
                "generate_setup_report"
              ],
              "bases": [],
              "file": "claude_web_proxy/setup_and_test.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.claude_browser",
              "names": [
                "ClaudeBrowser"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.fastapi_server",
              "names": [
                "run_server"
              ],
              "line": 21
            },
            {
              "type": "import",
              "module": "multiprocessing",
              "names": [
                "multiprocessing"
              ],
              "line": 22
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 23
            },
            {
              "type": "import",
              "module": "signal",
              "names": [
                "signal"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 357
            },
            {
              "type": "import",
              "module": "playwright",
              "names": [
                "playwright"
              ],
              "line": 40
            },
            {
              "type": "import",
              "module": "fastapi",
              "names": [
                "fastapi"
              ],
              "line": 46
            },
            {
              "type": "import",
              "module": "uvicorn",
              "names": [
                "uvicorn"
              ],
              "line": 52
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 58
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "ClaudeWebLLM",
                "create_claude_web_llm"
              ],
              "line": 193
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 18
            },
            {
              "function": "get_logger",
              "line": 26
            },
            {
              "function": "str",
              "line": 18
            },
            {
              "function": "ArgumentParser",
              "line": 359
            },
            {
              "function": "add_argument",
              "line": 360
            },
            {
              "function": "add_argument",
              "line": 361
            },
            {
              "function": "add_argument",
              "line": 362
            },
            {
              "function": "parse_args",
              "line": 364
            },
            {
              "function": "ClaudeWebProxyTester",
              "line": 366
            },
            {
              "function": "run",
              "line": 404
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "items",
              "line": 235
            },
            {
              "function": "print",
              "line": 240
            },
            {
              "function": "install_playwright_browsers",
              "line": 241
            },
            {
              "function": "print",
              "line": 243
            },
            {
              "function": "print",
              "line": 246
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 252
            },
            {
              "function": "start_server",
              "line": 253
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "stop_server",
              "line": 278
            },
            {
              "function": "all",
              "line": 286
            },
            {
              "function": "print",
              "line": 288
            },
            {
              "function": "items",
              "line": 311
            },
            {
              "function": "print",
              "line": 369
            },
            {
              "function": "print",
              "line": 370
            },
            {
              "function": "print",
              "line": 371
            },
            {
              "function": "main",
              "line": 404
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "run",
              "line": 69
            },
            {
              "function": "Popen",
              "line": 91
            },
            {
              "function": "sleep",
              "line": 100
            },
            {
              "function": "info",
              "line": 140
            },
            {
              "function": "ClientSession",
              "line": 161
            },
            {
              "function": "create_claude_web_llm",
              "line": 196
            },
            {
              "function": "get_model_info",
              "line": 199
            },
            {
              "function": "info",
              "line": 200
            },
            {
              "function": "time",
              "line": 218
            },
            {
              "function": "check_dependencies",
              "line": 234
            },
            {
              "function": "print",
              "line": 237
            },
            {
              "function": "test_browser_automation",
              "line": 247
            },
            {
              "function": "print",
              "line": 259
            },
            {
              "function": "print",
              "line": 262
            },
            {
              "function": "print",
              "line": 265
            },
            {
              "function": "items",
              "line": 267
            },
            {
              "function": "test_crewai_integration",
              "line": 273
            },
            {
              "function": "print",
              "line": 290
            },
            {
              "function": "print",
              "line": 292
            },
            {
              "function": "items",
              "line": 328
            },
            {
              "function": "run_server",
              "line": 374
            },
            {
              "function": "generate_setup_report",
              "line": 394
            },
            {
              "function": "print",
              "line": 399
            },
            {
              "function": "print",
              "line": 400
            },
            {
              "function": "Path",
              "line": 18
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "error",
              "line": 80
            },
            {
              "function": "error",
              "line": 84
            },
            {
              "function": "poll",
              "line": 102
            },
            {
              "function": "error",
              "line": 105
            },
            {
              "function": "terminate",
              "line": 112
            },
            {
              "function": "wait",
              "line": 113
            },
            {
              "function": "ClientSession",
              "line": 123
            },
            {
              "function": "error",
              "line": 134
            },
            {
              "function": "ClaudeBrowser",
              "line": 142
            },
            {
              "function": "info",
              "line": 145
            },
            {
              "function": "error",
              "line": 154
            },
            {
              "function": "generate",
              "line": 204
            },
            {
              "function": "info",
              "line": 205
            },
            {
              "function": "error",
              "line": 212
            },
            {
              "function": "test_server_health",
              "line": 260
            },
            {
              "function": "test_server_endpoints",
              "line": 266
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "strftime",
              "line": 300
            },
            {
              "function": "print",
              "line": 376
            },
            {
              "function": "run_comprehensive_test",
              "line": 379
            },
            {
              "function": "generate_setup_report",
              "line": 381
            },
            {
              "function": "print",
              "line": 382
            },
            {
              "function": "run_comprehensive_test",
              "line": 386
            },
            {
              "function": "open",
              "line": 390
            },
            {
              "function": "dump",
              "line": 391
            },
            {
              "function": "open",
              "line": 396
            },
            {
              "function": "write",
              "line": 397
            },
            {
              "function": "kill",
              "line": 115
            },
            {
              "function": "wait",
              "line": 116
            },
            {
              "function": "get",
              "line": 124
            },
            {
              "function": "check_login_status",
              "line": 144
            },
            {
              "function": "info",
              "line": 148
            },
            {
              "function": "info",
              "line": 149
            },
            {
              "function": "get",
              "line": 164
            },
            {
              "function": "error",
              "line": 170
            },
            {
              "function": "post",
              "line": 176
            },
            {
              "function": "error",
              "line": 185
            },
            {
              "function": "info",
              "line": 207
            },
            {
              "function": "Path",
              "line": 389
            },
            {
              "function": "Path",
              "line": 395
            },
            {
              "function": "str",
              "line": 84
            },
            {
              "function": "str",
              "line": 105
            },
            {
              "function": "info",
              "line": 127
            },
            {
              "function": "error",
              "line": 130
            },
            {
              "function": "str",
              "line": 134
            },
            {
              "function": "str",
              "line": 154
            },
            {
              "function": "info",
              "line": 168
            },
            {
              "function": "info",
              "line": 180
            },
            {
              "function": "info",
              "line": 183
            },
            {
              "function": "len",
              "line": 205
            },
            {
              "function": "str",
              "line": 212
            },
            {
              "function": "Path",
              "line": 97
            },
            {
              "function": "json",
              "line": 126
            },
            {
              "function": "json",
              "line": 167
            },
            {
              "function": "str",
              "line": 170
            },
            {
              "function": "text",
              "line": 182
            },
            {
              "function": "str",
              "line": 185
            },
            {
              "function": "str",
              "line": 207
            }
          ]
        },
        "claude_web_proxy/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "claude_browser",
              "names": [
                "ClaudeBrowser"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "crewai_integration",
              "names": [
                "ClaudeWebLLM",
                "create_claude_web_llm"
              ],
              "line": 11
            }
          ],
          "calls": []
        },
        "claude_web_proxy/debug_browser_api.py": {
          "functions": [
            {
              "name": "recommended_browser_status_check",
              "line": 132,
              "async": false,
              "calls": [
                "hasattr",
                "len",
                "is_closed"
              ],
              "parameters": [],
              "decorators": [],
              "file": "claude_web_proxy/debug_browser_api.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "playwright.async_api",
              "names": [
                "async_playwright"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 15
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 12
            },
            {
              "function": "get_logger",
              "line": 17
            },
            {
              "function": "str",
              "line": 12
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "run",
              "line": 293
            },
            {
              "function": "async_playwright",
              "line": 24
            },
            {
              "function": "analyze_browser_api",
              "line": 293
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "recommended_browser_status_check",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 211
            },
            {
              "function": "print",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 218
            },
            {
              "function": "print",
              "line": 219
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "print",
              "line": 221
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "print",
              "line": 226
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 259
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "Path",
              "line": 12
            },
            {
              "function": "launch",
              "line": 27
            },
            {
              "function": "new_context",
              "line": 31
            },
            {
              "function": "new_page",
              "line": 35
            },
            {
              "function": "is_connected",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "is_closed",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "launch_persistent_context",
              "line": 204
            },
            {
              "function": "launch",
              "line": 217
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "print",
              "line": 288
            },
            {
              "function": "dir",
              "line": 43
            },
            {
              "function": "any",
              "line": 54
            },
            {
              "function": "dir",
              "line": 62
            },
            {
              "function": "any",
              "line": 73
            },
            {
              "function": "dir",
              "line": 81
            },
            {
              "function": "any",
              "line": 91
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "len",
              "line": 262
            },
            {
              "function": "is_closed",
              "line": 264
            },
            {
              "function": "print",
              "line": 266
            },
            {
              "function": "print",
              "line": 268
            },
            {
              "function": "print",
              "line": 270
            },
            {
              "function": "close",
              "line": 276
            },
            {
              "function": "close",
              "line": 277
            },
            {
              "function": "close",
              "line": 287
            },
            {
              "function": "type",
              "line": 28
            },
            {
              "function": "type",
              "line": 32
            },
            {
              "function": "type",
              "line": 36
            },
            {
              "function": "startswith",
              "line": 44
            },
            {
              "function": "len",
              "line": 45
            },
            {
              "function": "lower",
              "line": 49
            },
            {
              "function": "startswith",
              "line": 63
            },
            {
              "function": "len",
              "line": 64
            },
            {
              "function": "lower",
              "line": 68
            },
            {
              "function": "startswith",
              "line": 82
            },
            {
              "function": "lower",
              "line": 86
            },
            {
              "function": "len",
              "line": 140
            },
            {
              "function": "type",
              "line": 209
            },
            {
              "function": "hasattr",
              "line": 210
            },
            {
              "function": "hasattr",
              "line": 211
            },
            {
              "function": "hasattr",
              "line": 212
            },
            {
              "function": "hasattr",
              "line": 213
            },
            {
              "function": "hasattr",
              "line": 214
            },
            {
              "function": "type",
              "line": 218
            },
            {
              "function": "hasattr",
              "line": 219
            },
            {
              "function": "hasattr",
              "line": 220
            },
            {
              "function": "hasattr",
              "line": 221
            },
            {
              "function": "hasattr",
              "line": 222
            },
            {
              "function": "hasattr",
              "line": 223
            },
            {
              "function": "len",
              "line": 113
            },
            {
              "function": "hasattr",
              "line": 146
            },
            {
              "function": "is_closed",
              "line": 146
            },
            {
              "function": "len",
              "line": 265
            },
            {
              "function": "format_exc",
              "line": 283
            },
            {
              "function": "lower",
              "line": 54
            },
            {
              "function": "lower",
              "line": 73
            },
            {
              "function": "lower",
              "line": 91
            },
            {
              "function": "len",
              "line": 114
            }
          ]
        },
        "core/memory_manager.py": {
          "functions": [
            {
              "name": "get_memory_manager",
              "line": 171,
              "async": false,
              "calls": [
                "MemoryManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "__init__",
              "line": 31,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "store",
              "line": 39,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "memory_type",
                "data"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "retrieve",
              "line": 43,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "memory_type",
                "query"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "clear",
              "line": 47,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "memory_type"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "store_code_pattern",
              "line": 98,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "name",
                "description",
                "language",
                "code",
                "use_cases"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "store_learning",
              "line": 121,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "description",
                "lesson",
                "context",
                "impact"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "get_relevant_learnings",
              "line": 145,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "context",
                "limit"
              ],
              "decorators": [],
              "file": "core/memory_manager.py"
            },
            {
              "name": "learning_entries",
              "line": 163,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "property"
              ],
              "file": "core/memory_manager.py"
            }
          ],
          "classes": [
            {
              "name": "MemoryType",
              "line": 13,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "core/memory_manager.py"
            },
            {
              "name": "MemoryManager",
              "line": 20,
              "methods": [
                "__init__",
                "store",
                "retrieve",
                "clear",
                "store_code_pattern",
                "store_learning",
                "get_relevant_learnings",
                "learning_entries"
              ],
              "bases": [],
              "file": "core/memory_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "debug",
              "line": 37
            },
            {
              "function": "append",
              "line": 41
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "debug",
              "line": 79
            },
            {
              "function": "debug",
              "line": 95
            },
            {
              "function": "debug",
              "line": 118
            },
            {
              "function": "debug",
              "line": 142
            },
            {
              "function": "debug",
              "line": 158
            },
            {
              "function": "MemoryManager",
              "line": 175
            }
          ]
        },
        "core/pause_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 31,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "file": "core/pause_handler.py"
            },
            {
              "name": "pause",
              "line": 42,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "task_id",
                "state",
                "reason"
              ],
              "decorators": [],
              "file": "core/pause_handler.py"
            },
            {
              "name": "resume",
              "line": 50,
              "async": false,
              "calls": [
                "get",
                "info",
                "pop"
              ],
              "parameters": [
                "self",
                "task_id"
              ],
              "decorators": [],
              "file": "core/pause_handler.py"
            },
            {
              "name": "is_paused",
              "line": 58,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "task_id"
              ],
              "decorators": [],
              "file": "core/pause_handler.py"
            }
          ],
          "classes": [
            {
              "name": "PauseAction",
              "line": 13,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "core/pause_handler.py"
            },
            {
              "name": "PauseHandler",
              "line": 20,
              "methods": [
                "__init__",
                "pause",
                "resume",
                "is_paused"
              ],
              "bases": [],
              "file": "core/pause_handler.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "debug",
              "line": 40
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "pop",
              "line": 53
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "get",
              "line": 55
            }
          ]
        },
        "core/cache_manager.py": {
          "functions": [
            {
              "name": "cache_agent_response",
              "line": 83,
              "async": false,
              "calls": [
                "wraps",
                "set",
                "hasattr",
                "info",
                "encode",
                "hexdigest",
                "md5",
                "get",
                "connect",
                "func",
                "CacheManager"
              ],
              "parameters": [
                "ttl"
              ],
              "decorators": [],
              "file": "core/cache_manager.py"
            },
            {
              "name": "__init__",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "redis_url"
              ],
              "decorators": [],
              "file": "core/cache_manager.py"
            },
            {
              "name": "decorator",
              "line": 93,
              "async": false,
              "calls": [
                "wraps",
                "set",
                "hasattr",
                "info",
                "encode",
                "hexdigest",
                "md5",
                "get",
                "connect",
                "func",
                "CacheManager"
              ],
              "parameters": [
                "func"
              ],
              "decorators": [],
              "file": "core/cache_manager.py"
            }
          ],
          "classes": [
            {
              "name": "CacheManager",
              "line": 24,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "core/cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Any",
                "Callable"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "functools",
              "names": [
                "wraps"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "aioredis",
              "names": [
                "aioredis"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "warning",
              "line": 21
            },
            {
              "function": "wraps",
              "line": 94
            },
            {
              "function": "CacheManager",
              "line": 130
            },
            {
              "function": "info",
              "line": 40
            },
            {
              "function": "debug",
              "line": 66
            },
            {
              "function": "hexdigest",
              "line": 98
            },
            {
              "function": "info",
              "line": 112
            },
            {
              "function": "connect",
              "line": 131
            },
            {
              "function": "from_url",
              "line": 38
            },
            {
              "function": "ping",
              "line": 39
            },
            {
              "function": "error",
              "line": 42
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "loads",
              "line": 53
            },
            {
              "function": "error",
              "line": 55
            },
            {
              "function": "set",
              "line": 65
            },
            {
              "function": "error",
              "line": 68
            },
            {
              "function": "keys",
              "line": 76
            },
            {
              "function": "debug",
              "line": 79
            },
            {
              "function": "error",
              "line": 81
            },
            {
              "function": "hasattr",
              "line": 101
            },
            {
              "function": "CacheManager",
              "line": 102
            },
            {
              "function": "get",
              "line": 106
            },
            {
              "function": "info",
              "line": 108
            },
            {
              "function": "func",
              "line": 113
            },
            {
              "function": "set",
              "line": 116
            },
            {
              "function": "dumps",
              "line": 65
            },
            {
              "function": "delete",
              "line": 78
            },
            {
              "function": "md5",
              "line": 98
            },
            {
              "function": "connect",
              "line": 103
            },
            {
              "function": "encode",
              "line": 98
            },
            {
              "function": "len",
              "line": 79
            }
          ]
        },
        "core/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "memory_manager",
              "names": [
                "MemoryManager",
                "MemoryType",
                "get_memory_manager"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "shared_context_manager",
              "names": [
                "SharedContextManager",
                "get_shared_context"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "conversation_context_manager",
              "names": [
                "ConversationContextManager",
                "get_conversation_context"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pause_handler",
              "names": [
                "PauseHandler",
                "PauseAction"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "git_checkpoint_manager",
              "names": [
                "GitCheckpointManager"
              ],
              "line": 9
            }
          ],
          "calls": []
        },
        "core/shared_context_manager.py": {
          "functions": [
            {
              "name": "get_shared_context",
              "line": 51,
              "async": false,
              "calls": [
                "SharedContextManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "set",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "key",
                "value"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "get",
              "line": 31,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "key",
                "default"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "update",
              "line": 35,
              "async": false,
              "calls": [
                "update"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "clear",
              "line": 39,
              "async": false,
              "calls": [
                "clear"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            },
            {
              "name": "get_all",
              "line": 43,
              "async": false,
              "calls": [
                "copy"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/shared_context_manager.py"
            }
          ],
          "classes": [
            {
              "name": "SharedContextManager",
              "line": 12,
              "methods": [
                "__init__",
                "set",
                "get",
                "update",
                "clear",
                "get_all"
              ],
              "bases": [],
              "file": "core/shared_context_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 25
            },
            {
              "function": "get",
              "line": 33
            },
            {
              "function": "update",
              "line": 37
            },
            {
              "function": "clear",
              "line": 41
            },
            {
              "function": "copy",
              "line": 45
            },
            {
              "function": "SharedContextManager",
              "line": 55
            }
          ]
        },
        "core/conversation_context_manager.py": {
          "functions": [
            {
              "name": "get_conversation_context",
              "line": 50,
              "async": false,
              "calls": [
                "ConversationContextManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "core/conversation_context_manager.py"
            },
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/conversation_context_manager.py"
            },
            {
              "name": "add_message",
              "line": 27,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "conversation_id",
                "role",
                "content"
              ],
              "decorators": [],
              "file": "core/conversation_context_manager.py"
            },
            {
              "name": "get_conversation",
              "line": 37,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "conversation_id"
              ],
              "decorators": [],
              "file": "core/conversation_context_manager.py"
            },
            {
              "name": "clear_conversation",
              "line": 41,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "conversation_id"
              ],
              "decorators": [],
              "file": "core/conversation_context_manager.py"
            }
          ],
          "classes": [
            {
              "name": "ConversationContextManager",
              "line": 12,
              "methods": [
                "__init__",
                "add_message",
                "get_conversation",
                "clear_conversation"
              ],
              "bases": [],
              "file": "core/conversation_context_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 25
            },
            {
              "function": "append",
              "line": 32
            },
            {
              "function": "get",
              "line": 39
            },
            {
              "function": "ConversationContextManager",
              "line": 54
            }
          ]
        },
        "core/git_checkpoint_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "file": "core/git_checkpoint_manager.py"
            },
            {
              "name": "create_checkpoint",
              "line": 34,
              "async": false,
              "calls": [
                "info",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "name",
                "message"
              ],
              "decorators": [],
              "file": "core/git_checkpoint_manager.py"
            },
            {
              "name": "list_checkpoints",
              "line": 45,
              "async": false,
              "calls": [
                "copy"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/git_checkpoint_manager.py"
            },
            {
              "name": "rollback_to",
              "line": 49,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "checkpoint_id"
              ],
              "decorators": [],
              "file": "core/git_checkpoint_manager.py"
            }
          ],
          "classes": [
            {
              "name": "GitCheckpointManager",
              "line": 12,
              "methods": [
                "__init__",
                "create_checkpoint",
                "list_checkpoints",
                "rollback_to"
              ],
              "bases": [],
              "file": "core/git_checkpoint_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 32
            },
            {
              "function": "append",
              "line": 37
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "copy",
              "line": 47
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "len",
              "line": 36
            }
          ]
        },
        "core/exceptions.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 13,
              "async": false,
              "calls": [
                "join",
                "__init__",
                "super",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "dependencies"
              ],
              "decorators": [],
              "file": "core/exceptions.py"
            },
            {
              "name": "__init__",
              "line": 40,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "component",
                "file",
                "line"
              ],
              "decorators": [],
              "file": "core/exceptions.py"
            },
            {
              "name": "__init__",
              "line": 65,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "component",
                "reason",
                "solution",
                "file",
                "line"
              ],
              "decorators": [],
              "file": "core/exceptions.py"
            }
          ],
          "classes": [
            {
              "name": "DependencyError",
              "line": 6,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "core/exceptions.py"
            },
            {
              "name": "CacheNotAvailableError",
              "line": 33,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "core/exceptions.py"
            },
            {
              "name": "SystemNotReadyError",
              "line": 58,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "core/exceptions.py"
            }
          ],
          "imports": [],
          "calls": [
            {
              "function": "join",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 30
            },
            {
              "function": "__init__",
              "line": 55
            },
            {
              "function": "__init__",
              "line": 77
            },
            {
              "function": "get",
              "line": 19
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "get",
              "line": 21
            },
            {
              "function": "append",
              "line": 23
            },
            {
              "function": "super",
              "line": 30
            },
            {
              "function": "super",
              "line": 55
            },
            {
              "function": "super",
              "line": 77
            }
          ]
        },
        "core/analysis/semgrep_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/semgrep_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "SemgrepAnalyzer",
              "line": 12,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "core/analysis/semgrep_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 19
            },
            {
              "function": "progress_callback",
              "line": 41
            }
          ]
        },
        "core/analysis/vulture_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/vulture_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "VultureAnalyzer",
              "line": 12,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "core/analysis/vulture_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 19
            },
            {
              "function": "progress_callback",
              "line": 40
            }
          ]
        },
        "core/analysis/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "core/analysis/radon_metrics.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/radon_metrics.py"
            }
          ],
          "classes": [
            {
              "name": "RadonMetrics",
              "line": 12,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "core/analysis/radon_metrics.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 19
            },
            {
              "function": "progress_callback",
              "line": 40
            }
          ]
        },
        "core/analysis/layer_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 56,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_classify_files_into_layers",
              "line": 139,
              "async": false,
              "calls": [
                "keys",
                "_detect_file_layer"
              ],
              "parameters": [
                "self",
                "ast_data"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_detect_file_layer",
              "line": 154,
              "async": false,
              "calls": [
                "items",
                "max",
                "basename",
                "lower",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_build_layer_structure",
              "line": 193,
              "async": false,
              "calls": [
                "items",
                "sort",
                "get",
                "len",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_detect_layer_violations",
              "line": 221,
              "async": false,
              "calls": [
                "items",
                "_check_layer_violation",
                "_resolve_import_to_file",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "file_layers",
                "import_graph"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_resolve_import_to_file",
              "line": 254,
              "async": false,
              "calls": [
                "keys",
                "replace"
              ],
              "parameters": [
                "self",
                "import_name",
                "file_layers"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_check_layer_violation",
              "line": 274,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "from_file",
                "from_layer",
                "to_file",
                "to_layer"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_calculate_quality_score",
              "line": 331,
              "async": false,
              "calls": [
                "values",
                "max",
                "round",
                "len",
                "min",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers",
                "violations",
                "ast_data"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_calculate_metrics",
              "line": 373,
              "async": false,
              "calls": [
                "len",
                "dict",
                "values",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers",
                "violations",
                "ast_data"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            },
            {
              "name": "_empty_layer_analysis",
              "line": 405,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/layer_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "LayerAnalyzer",
              "line": 15,
              "methods": [
                "__init__",
                "_classify_files_into_layers",
                "_detect_file_layer",
                "_build_layer_structure",
                "_detect_layer_violations",
                "_resolve_import_to_file",
                "_check_layer_violation",
                "_calculate_quality_score",
                "_calculate_metrics",
                "_empty_layer_analysis"
              ],
              "bases": [],
              "file": "core/analysis/layer_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Set",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "info",
              "line": 99
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "_classify_files_into_layers",
              "line": 109
            },
            {
              "function": "info",
              "line": 110
            },
            {
              "function": "_build_layer_structure",
              "line": 113
            },
            {
              "function": "_detect_layer_violations",
              "line": 117
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "_calculate_quality_score",
              "line": 122
            },
            {
              "function": "_calculate_metrics",
              "line": 126
            },
            {
              "function": "info",
              "line": 136
            },
            {
              "function": "keys",
              "line": 148
            },
            {
              "function": "lower",
              "line": 163
            },
            {
              "function": "defaultdict",
              "line": 166
            },
            {
              "function": "items",
              "line": 168
            },
            {
              "function": "defaultdict",
              "line": 198
            },
            {
              "function": "items",
              "line": 199
            },
            {
              "function": "items",
              "line": 204
            },
            {
              "function": "sort",
              "line": 217
            },
            {
              "function": "items",
              "line": 236
            },
            {
              "function": "keys",
              "line": 265
            },
            {
              "function": "get",
              "line": 293
            },
            {
              "function": "get",
              "line": 294
            },
            {
              "function": "get",
              "line": 296
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "get",
              "line": 298
            },
            {
              "function": "len",
              "line": 345
            },
            {
              "function": "len",
              "line": 350
            },
            {
              "function": "len",
              "line": 354
            },
            {
              "function": "len",
              "line": 355
            },
            {
              "function": "min",
              "line": 358
            },
            {
              "function": "defaultdict",
              "line": 361
            },
            {
              "function": "values",
              "line": 362
            },
            {
              "function": "max",
              "line": 369
            },
            {
              "function": "round",
              "line": 371
            },
            {
              "function": "len",
              "line": 382
            },
            {
              "function": "len",
              "line": 383
            },
            {
              "function": "len",
              "line": 387
            },
            {
              "function": "len",
              "line": 388
            },
            {
              "function": "defaultdict",
              "line": 391
            },
            {
              "function": "values",
              "line": 392
            },
            {
              "function": "warning",
              "line": 105
            },
            {
              "function": "_empty_layer_analysis",
              "line": 106
            },
            {
              "function": "_detect_file_layer",
              "line": 149
            },
            {
              "function": "max",
              "line": 187
            },
            {
              "function": "append",
              "line": 200
            },
            {
              "function": "get",
              "line": 205
            },
            {
              "function": "append",
              "line": 207
            },
            {
              "function": "get",
              "line": 237
            },
            {
              "function": "replace",
              "line": 267
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "min",
              "line": 369
            },
            {
              "function": "len",
              "line": 399
            },
            {
              "function": "dict",
              "line": 402
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "basename",
              "line": 181
            },
            {
              "function": "_resolve_import_to_file",
              "line": 241
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "_check_layer_violation",
              "line": 248
            },
            {
              "function": "len",
              "line": 110
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "append",
              "line": 250
            },
            {
              "function": "replace",
              "line": 267
            }
          ]
        },
        "core/analysis/call_graph_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_function_registry",
              "line": 120,
              "async": false,
              "calls": [
                "get",
                "items"
              ],
              "parameters": [
                "self",
                "ast_data"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_call_relationships",
              "line": 144,
              "async": false,
              "calls": [
                "_resolve_function_id",
                "items",
                "dict",
                "get",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "ast_data",
                "function_registry"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_resolve_function_id",
              "line": 179,
              "async": false,
              "calls": [
                "endswith"
              ],
              "parameters": [
                "self",
                "func_name",
                "current_file",
                "function_registry"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_detect_entry_points",
              "line": 206,
              "async": false,
              "calls": [
                "append",
                "items",
                "len",
                "any"
              ],
              "parameters": [
                "self",
                "function_registry",
                "reverse_call_graph"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_find_unused_functions",
              "line": 240,
              "async": false,
              "calls": [
                "items",
                "endswith",
                "len",
                "append",
                "startswith"
              ],
              "parameters": [
                "self",
                "function_registry",
                "reverse_call_graph",
                "entry_points"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_detect_hot_paths",
              "line": 275,
              "async": false,
              "calls": [
                "append",
                "len",
                "sort",
                "_bfs_paths"
              ],
              "parameters": [
                "self",
                "call_graph",
                "entry_points"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_bfs_paths",
              "line": 304,
              "async": false,
              "calls": [
                "get",
                "deque",
                "set",
                "popleft",
                "len",
                "append",
                "add"
              ],
              "parameters": [
                "self",
                "start",
                "call_graph",
                "max_depth"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_nodes",
              "line": 336,
              "async": false,
              "calls": [
                "get",
                "len",
                "items",
                "append"
              ],
              "parameters": [
                "self",
                "function_registry",
                "call_graph",
                "reverse_call_graph"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_edges",
              "line": 367,
              "async": false,
              "calls": [
                "get",
                "append",
                "items",
                "split"
              ],
              "parameters": [
                "self",
                "call_graph",
                "ast_data"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_analyze_clusters",
              "line": 399,
              "async": false,
              "calls": [
                "items",
                "sort",
                "split",
                "round",
                "enumerate",
                "get",
                "len",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "call_graph",
                "function_registry"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_calculate_metrics",
              "line": 446,
              "async": false,
              "calls": [
                "max",
                "len",
                "_calculate_call_depth",
                "round"
              ],
              "parameters": [
                "self",
                "nodes",
                "edges",
                "call_graph"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_calculate_call_depth",
              "line": 477,
              "async": false,
              "calls": [
                "max",
                "set",
                "copy",
                "get",
                "_calculate_call_depth",
                "add"
              ],
              "parameters": [
                "self",
                "func_id",
                "call_graph",
                "visited"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_empty_call_graph",
              "line": 505,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/analysis/call_graph_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "CallGraphAnalyzer",
              "line": 14,
              "methods": [
                "__init__",
                "_build_function_registry",
                "_build_call_relationships",
                "_resolve_function_id",
                "_detect_entry_points",
                "_find_unused_functions",
                "_detect_hot_paths",
                "_bfs_paths",
                "_build_nodes",
                "_build_edges",
                "_analyze_clusters",
                "_calculate_metrics",
                "_calculate_call_depth",
                "_empty_call_graph"
              ],
              "bases": [],
              "file": "core/analysis/call_graph_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Set",
                "Tuple"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict",
                "deque"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 65
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "_build_function_registry",
              "line": 73
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "_build_call_relationships",
              "line": 77
            },
            {
              "function": "_detect_entry_points",
              "line": 82
            },
            {
              "function": "info",
              "line": 84
            },
            {
              "function": "_find_unused_functions",
              "line": 87
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "_detect_hot_paths",
              "line": 92
            },
            {
              "function": "_build_nodes",
              "line": 95
            },
            {
              "function": "_build_edges",
              "line": 98
            },
            {
              "function": "_analyze_clusters",
              "line": 101
            },
            {
              "function": "_calculate_metrics",
              "line": 104
            },
            {
              "function": "info",
              "line": 117
            },
            {
              "function": "items",
              "line": 129
            },
            {
              "function": "defaultdict",
              "line": 157
            },
            {
              "function": "defaultdict",
              "line": 158
            },
            {
              "function": "items",
              "line": 160
            },
            {
              "function": "items",
              "line": 223
            },
            {
              "function": "items",
              "line": 258
            },
            {
              "function": "sort",
              "line": 300
            },
            {
              "function": "deque",
              "line": 314
            },
            {
              "function": "set",
              "line": 315
            },
            {
              "function": "items",
              "line": 347
            },
            {
              "function": "items",
              "line": 377
            },
            {
              "function": "defaultdict",
              "line": 408
            },
            {
              "function": "enumerate",
              "line": 415
            },
            {
              "function": "sort",
              "line": 442
            },
            {
              "function": "len",
              "line": 455
            },
            {
              "function": "len",
              "line": 456
            },
            {
              "function": "add",
              "line": 492
            },
            {
              "function": "get",
              "line": 494
            },
            {
              "function": "max",
              "line": 498
            },
            {
              "function": "warning",
              "line": 69
            },
            {
              "function": "_empty_call_graph",
              "line": 70
            },
            {
              "function": "get",
              "line": 130
            },
            {
              "function": "get",
              "line": 165
            },
            {
              "function": "dict",
              "line": 177
            },
            {
              "function": "dict",
              "line": 177
            },
            {
              "function": "endswith",
              "line": 200
            },
            {
              "function": "_bfs_paths",
              "line": 289
            },
            {
              "function": "popleft",
              "line": 318
            },
            {
              "function": "add",
              "line": 325
            },
            {
              "function": "append",
              "line": 327
            },
            {
              "function": "get",
              "line": 330
            },
            {
              "function": "len",
              "line": 348
            },
            {
              "function": "len",
              "line": 349
            },
            {
              "function": "append",
              "line": 354
            },
            {
              "function": "append",
              "line": 412
            },
            {
              "function": "items",
              "line": 415
            },
            {
              "function": "_calculate_call_depth",
              "line": 462
            },
            {
              "function": "max",
              "line": 463
            },
            {
              "function": "round",
              "line": 472
            },
            {
              "function": "len",
              "line": 473
            },
            {
              "function": "len",
              "line": 474
            },
            {
              "function": "set",
              "line": 487
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "_resolve_function_id",
              "line": 169
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "any",
              "line": 235
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "len",
              "line": 320
            },
            {
              "function": "get",
              "line": 348
            },
            {
              "function": "get",
              "line": 349
            },
            {
              "function": "get",
              "line": 352
            },
            {
              "function": "get",
              "line": 384
            },
            {
              "function": "get",
              "line": 385
            },
            {
              "function": "append",
              "line": 390
            },
            {
              "function": "split",
              "line": 411
            },
            {
              "function": "len",
              "line": 416
            },
            {
              "function": "append",
              "line": 431
            },
            {
              "function": "_calculate_call_depth",
              "line": 499
            },
            {
              "function": "len",
              "line": 74
            },
            {
              "function": "len",
              "line": 84
            },
            {
              "function": "len",
              "line": 89
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "get",
              "line": 137
            },
            {
              "function": "get",
              "line": 138
            },
            {
              "function": "get",
              "line": 139
            },
            {
              "function": "append",
              "line": 174
            },
            {
              "function": "append",
              "line": 175
            },
            {
              "function": "len",
              "line": 232
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "startswith",
              "line": 262
            },
            {
              "function": "endswith",
              "line": 262
            },
            {
              "function": "len",
              "line": 270
            },
            {
              "function": "len",
              "line": 292
            },
            {
              "function": "append",
              "line": 293
            },
            {
              "function": "append",
              "line": 332
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "split",
              "line": 380
            },
            {
              "function": "split",
              "line": 381
            },
            {
              "function": "get",
              "line": 422
            },
            {
              "function": "copy",
              "line": 499
            },
            {
              "function": "get",
              "line": 387
            },
            {
              "function": "len",
              "line": 435
            },
            {
              "function": "round",
              "line": 436
            },
            {
              "function": "len",
              "line": 296
            }
          ]
        },
        "core/indexing/tree_sitter_indexer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_extract_function_calls",
              "line": 94,
              "async": false,
              "calls": [
                "isinstance",
                "walk",
                "set",
                "_get_call_name",
                "list",
                "append"
              ],
              "parameters": [
                "self",
                "func_node"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_call_name",
              "line": 104,
              "async": false,
              "calls": [
                "isinstance"
              ],
              "parameters": [
                "self",
                "call_node"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_name",
              "line": 113,
              "async": false,
              "calls": [
                "isinstance",
                "_get_attribute_path",
                "str"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_attribute_path",
              "line": 121,
              "async": false,
              "calls": [
                "isinstance",
                "append",
                "join",
                "reversed"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_decorator_name",
              "line": 132,
              "async": false,
              "calls": [
                "isinstance",
                "_get_call_name",
                "str"
              ],
              "parameters": [
                "self",
                "decorator"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_extract_import",
              "line": 140,
              "async": false,
              "calls": [
                "isinstance"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            }
          ],
          "classes": [
            {
              "name": "TreeSitterIndexer",
              "line": 14,
              "methods": [
                "__init__",
                "_extract_function_calls",
                "_get_call_name",
                "_get_name",
                "_get_attribute_path",
                "_get_decorator_name",
                "_extract_import"
              ],
              "bases": [],
              "file": "core/indexing/tree_sitter_indexer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "ast",
              "names": [
                "ast"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 22
            },
            {
              "function": "walk",
              "line": 97
            },
            {
              "function": "list",
              "line": 102
            },
            {
              "function": "isinstance",
              "line": 107
            },
            {
              "function": "isinstance",
              "line": 115
            },
            {
              "function": "str",
              "line": 119
            },
            {
              "function": "isinstance",
              "line": 125
            },
            {
              "function": "isinstance",
              "line": 128
            },
            {
              "function": "join",
              "line": 130
            },
            {
              "function": "isinstance",
              "line": 134
            },
            {
              "function": "str",
              "line": 138
            },
            {
              "function": "isinstance",
              "line": 142
            },
            {
              "function": "endswith",
              "line": 36
            },
            {
              "function": "parse",
              "line": 43
            },
            {
              "function": "walk",
              "line": 51
            },
            {
              "function": "isinstance",
              "line": 98
            },
            {
              "function": "set",
              "line": 102
            },
            {
              "function": "isinstance",
              "line": 109
            },
            {
              "function": "isinstance",
              "line": 117
            },
            {
              "function": "append",
              "line": 126
            },
            {
              "function": "append",
              "line": 129
            },
            {
              "function": "reversed",
              "line": 130
            },
            {
              "function": "isinstance",
              "line": 136
            },
            {
              "function": "isinstance",
              "line": 149
            },
            {
              "function": "open",
              "line": 40
            },
            {
              "function": "read",
              "line": 41
            },
            {
              "function": "isinstance",
              "line": 52
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "_get_call_name",
              "line": 99
            },
            {
              "function": "_get_attribute_path",
              "line": 118
            },
            {
              "function": "_get_call_name",
              "line": 137
            },
            {
              "function": "_extract_function_calls",
              "line": 53
            },
            {
              "function": "append",
              "line": 54
            },
            {
              "function": "isinstance",
              "line": 63
            },
            {
              "function": "append",
              "line": 101
            },
            {
              "function": "append",
              "line": 65
            },
            {
              "function": "isinstance",
              "line": 72
            },
            {
              "function": "isinstance",
              "line": 57
            },
            {
              "function": "append",
              "line": 73
            },
            {
              "function": "isinstance",
              "line": 75
            },
            {
              "function": "_get_decorator_name",
              "line": 60
            },
            {
              "function": "walk",
              "line": 64
            },
            {
              "function": "isinstance",
              "line": 64
            },
            {
              "function": "_extract_import",
              "line": 73
            },
            {
              "function": "_get_call_name",
              "line": 76
            },
            {
              "function": "_get_name",
              "line": 69
            },
            {
              "function": "append",
              "line": 78
            }
          ]
        },
        "core/indexing/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "core/indexing/code_indexer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 22,
              "async": false,
              "calls": [
                "TreeSitterIndexer"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "core/indexing/code_indexer.py"
            },
            {
              "name": "_find_python_files",
              "line": 108,
              "async": false,
              "calls": [
                "join",
                "walk",
                "append",
                "endswith"
              ],
              "parameters": [
                "self",
                "root_path"
              ],
              "decorators": [],
              "file": "core/indexing/code_indexer.py"
            },
            {
              "name": "_count_total_lines",
              "line": 123,
              "async": false,
              "calls": [
                "open",
                "len",
                "readlines"
              ],
              "parameters": [
                "self",
                "files"
              ],
              "decorators": [],
              "file": "core/indexing/code_indexer.py"
            }
          ],
          "classes": [
            {
              "name": "CodeIndexer",
              "line": 16,
              "methods": [
                "__init__",
                "_find_python_files",
                "_count_total_lines"
              ],
              "bases": [],
              "file": "core/indexing/code_indexer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "TreeSitterIndexer",
              "line": 23
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "_find_python_files",
              "line": 56
            },
            {
              "function": "len",
              "line": 57
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "enumerate",
              "line": 67
            },
            {
              "function": "info",
              "line": 98
            },
            {
              "function": "walk",
              "line": 112
            },
            {
              "function": "relpath",
              "line": 72
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "len",
              "line": 92
            },
            {
              "function": "len",
              "line": 93
            },
            {
              "function": "sum",
              "line": 94
            },
            {
              "function": "_count_total_lines",
              "line": 95
            },
            {
              "function": "progress_callback",
              "line": 53
            },
            {
              "function": "index_file",
              "line": 71
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "append",
              "line": 83
            },
            {
              "function": "append",
              "line": 87
            },
            {
              "function": "endswith",
              "line": 117
            },
            {
              "function": "progress_callback",
              "line": 69
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "len",
              "line": 94
            },
            {
              "function": "join",
              "line": 118
            },
            {
              "function": "append",
              "line": 119
            },
            {
              "function": "open",
              "line": 128
            },
            {
              "function": "len",
              "line": 129
            },
            {
              "function": "values",
              "line": 94
            },
            {
              "function": "readlines",
              "line": 129
            },
            {
              "function": "basename",
              "line": 69
            }
          ]
        },
        "config/capabilities_loader.py": {
          "functions": [
            {
              "name": "get_capabilities_loader",
              "line": 187,
              "async": false,
              "calls": [
                "CapabilitiesLoader"
              ],
              "parameters": [],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "apply_capabilities_to_agent",
              "line": 194,
              "async": false,
              "calls": [
                "get_capabilities_loader",
                "apply_to_config"
              ],
              "parameters": [
                "agent_config"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [
                "_load_capabilities",
                "join",
                "dirname"
              ],
              "parameters": [
                "self",
                "config_path"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "_load_capabilities",
              "line": 32,
              "async": false,
              "calls": [
                "warning",
                "exists",
                "open",
                "info",
                "error",
                "get",
                "len",
                "safe_load"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "get_agent_capabilities",
              "line": 49,
              "async": false,
              "calls": [
                "get",
                "info",
                "replace"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "apply_to_config",
              "line": 83,
              "async": false,
              "calls": [
                "debug",
                "isinstance",
                "get_agent_capabilities",
                "get",
                "getattr"
              ],
              "parameters": [
                "self",
                "agent_config"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "can_agent_write",
              "line": 113,
              "async": false,
              "calls": [
                "split",
                "abspath",
                "get_agent_capabilities",
                "lstrip",
                "fnmatch",
                "rstrip",
                "get",
                "len",
                "startswith"
              ],
              "parameters": [
                "self",
                "agent_name",
                "file_path"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            },
            {
              "name": "get_all_capabilities",
              "line": 180,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "config/capabilities_loader.py"
            }
          ],
          "classes": [
            {
              "name": "CapabilitiesLoader",
              "line": 14,
              "methods": [
                "__init__",
                "_load_capabilities",
                "get_agent_capabilities",
                "apply_to_config",
                "can_agent_write",
                "get_all_capabilities"
              ],
              "bases": [],
              "file": "config/capabilities_loader.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 146
            },
            {
              "type": "import",
              "module": "fnmatch",
              "names": [
                "fnmatch"
              ],
              "line": 147
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "get_capabilities_loader",
              "line": 204
            },
            {
              "function": "apply_to_config",
              "line": 205
            },
            {
              "function": "_load_capabilities",
              "line": 30
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "replace",
              "line": 72
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "getattr",
              "line": 93
            },
            {
              "function": "get_agent_capabilities",
              "line": 97
            },
            {
              "function": "getattr",
              "line": 101
            },
            {
              "function": "debug",
              "line": 110
            },
            {
              "function": "get_agent_capabilities",
              "line": 124
            },
            {
              "function": "get",
              "line": 135
            },
            {
              "function": "abspath",
              "line": 140
            },
            {
              "function": "get",
              "line": 182
            },
            {
              "function": "CapabilitiesLoader",
              "line": 191
            },
            {
              "function": "join",
              "line": 25
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "isinstance",
              "line": 107
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "exists",
              "line": 35
            },
            {
              "function": "warning",
              "line": 36
            },
            {
              "function": "open",
              "line": 39
            },
            {
              "function": "safe_load",
              "line": 40
            },
            {
              "function": "error",
              "line": 46
            },
            {
              "function": "startswith",
              "line": 151
            },
            {
              "function": "abspath",
              "line": 174
            },
            {
              "function": "startswith",
              "line": 175
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "split",
              "line": 158
            },
            {
              "function": "fnmatch",
              "line": 170
            },
            {
              "function": "len",
              "line": 42
            },
            {
              "function": "len",
              "line": 159
            },
            {
              "function": "rstrip",
              "line": 160
            },
            {
              "function": "lstrip",
              "line": 161
            },
            {
              "function": "startswith",
              "line": 164
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "lstrip",
              "line": 165
            },
            {
              "function": "fnmatch",
              "line": 166
            },
            {
              "function": "lstrip",
              "line": 166
            },
            {
              "function": "len",
              "line": 165
            }
          ]
        },
        "config/settings.py": {
          "functions": [
            {
              "name": "get_language_directive",
              "line": 124,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "config/settings.py"
            },
            {
              "name": "get_timeout",
              "line": 129,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "cls",
                "task_type"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "config/settings.py"
            },
            {
              "name": "update_from_vscode",
              "line": 139,
              "async": false,
              "calls": [
                "_auto_detect_provider"
              ],
              "parameters": [
                "cls",
                "vscode_settings"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "config/settings.py"
            },
            {
              "name": "_auto_detect_provider",
              "line": 229,
              "async": false,
              "calls": [
                "lower",
                "startswith"
              ],
              "parameters": [
                "cls",
                "model"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "config/settings.py"
            },
            {
              "name": "to_dict",
              "line": 251,
              "async": false,
              "calls": [],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "config/settings.py"
            }
          ],
          "classes": [
            {
              "name": "Settings",
              "line": 9,
              "methods": [
                "get_language_directive",
                "get_timeout",
                "update_from_vscode",
                "_auto_detect_provider",
                "to_dict"
              ],
              "bases": [],
              "file": "config/settings.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "Settings",
              "line": 320
            },
            {
              "function": "getenv",
              "line": 14
            },
            {
              "function": "getenv",
              "line": 55
            },
            {
              "function": "lower",
              "line": 54
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "lower",
              "line": 239
            },
            {
              "function": "startswith",
              "line": 240
            },
            {
              "function": "_auto_detect_provider",
              "line": 176
            },
            {
              "function": "startswith",
              "line": 242
            },
            {
              "function": "getenv",
              "line": 54
            },
            {
              "function": "startswith",
              "line": 244
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            },
            {
              "name": "get_capabilities",
              "line": 66,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            },
            {
              "name": "_build_arbitration_prompt",
              "line": 134,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "enumerate"
              ],
              "parameters": [
                "self",
                "task",
                "conflicting_outputs",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            },
            {
              "name": "_extract_decision_components",
              "line": 354,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "decision"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            },
            {
              "name": "is_conflict_resolvable",
              "line": 371,
              "async": false,
              "calls": [
                "get",
                "len",
                "str"
              ],
              "parameters": [
                "self",
                "conflicting_outputs"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            },
            {
              "name": "get_conflict_complexity",
              "line": 386,
              "async": false,
              "calls": [
                "get",
                "sum",
                "len",
                "str"
              ],
              "parameters": [
                "self",
                "conflicting_outputs"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            }
          ],
          "classes": [
            {
              "name": "OpusArbitrator",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_arbitration_prompt",
                "_extract_decision_components",
                "is_conflict_resolvable",
                "get_conflict_complexity"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "_build_arbitration_prompt",
              "line": 112
            },
            {
              "function": "_extract_decision_components",
              "line": 118
            },
            {
              "function": "append",
              "line": 141
            },
            {
              "function": "get",
              "line": 144
            },
            {
              "function": "get",
              "line": 146
            },
            {
              "function": "get",
              "line": 148
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "append",
              "line": 152
            },
            {
              "function": "append",
              "line": 153
            },
            {
              "function": "enumerate",
              "line": 156
            },
            {
              "function": "append",
              "line": 165
            },
            {
              "function": "append",
              "line": 166
            },
            {
              "function": "append",
              "line": 167
            },
            {
              "function": "append",
              "line": 170
            },
            {
              "function": "append",
              "line": 171
            },
            {
              "function": "append",
              "line": 172
            },
            {
              "function": "append",
              "line": 173
            },
            {
              "function": "append",
              "line": 174
            },
            {
              "function": "append",
              "line": 175
            },
            {
              "function": "append",
              "line": 176
            },
            {
              "function": "join",
              "line": 178
            },
            {
              "function": "len",
              "line": 390
            },
            {
              "function": "sum",
              "line": 391
            },
            {
              "function": "len",
              "line": 102
            },
            {
              "function": "_make_arbitration_decision",
              "line": 115
            },
            {
              "function": "append",
              "line": 145
            },
            {
              "function": "append",
              "line": 147
            },
            {
              "function": "append",
              "line": 149
            },
            {
              "function": "get",
              "line": 157
            },
            {
              "function": "get",
              "line": 158
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "append",
              "line": 161
            },
            {
              "function": "append",
              "line": 162
            },
            {
              "function": "append",
              "line": 163
            },
            {
              "function": "len",
              "line": 376
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "get",
              "line": 128
            },
            {
              "function": "len",
              "line": 391
            },
            {
              "function": "get",
              "line": 381
            },
            {
              "function": "len",
              "line": 381
            },
            {
              "function": "str",
              "line": 391
            },
            {
              "function": "str",
              "line": 381
            },
            {
              "function": "get",
              "line": 391
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
            },
            {
              "name": "get_capabilities",
              "line": 51,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
            },
            {
              "name": "_build_documentation_prompt",
              "line": 100,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
            },
            {
              "name": "_structure_documentation",
              "line": 371,
              "async": false,
              "calls": [
                "keys",
                "join",
                "lower",
                "split",
                "replace",
                "list",
                "append",
                "len",
                "startswith"
              ],
              "parameters": [
                "self",
                "documentation"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
            }
          ],
          "classes": [
            {
              "name": "DocuBot",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_documentation_prompt",
                "_structure_documentation"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 375
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "_build_documentation_prompt",
              "line": 83
            },
            {
              "function": "_structure_documentation",
              "line": 89
            },
            {
              "function": "append",
              "line": 107
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "append",
              "line": 122
            },
            {
              "function": "append",
              "line": 123
            },
            {
              "function": "append",
              "line": 124
            },
            {
              "function": "append",
              "line": 125
            },
            {
              "function": "append",
              "line": 126
            },
            {
              "function": "join",
              "line": 128
            },
            {
              "function": "split",
              "line": 381
            },
            {
              "function": "_generate_documentation",
              "line": 86
            },
            {
              "function": "get",
              "line": 96
            },
            {
              "function": "append",
              "line": 111
            },
            {
              "function": "append",
              "line": 115
            },
            {
              "function": "append",
              "line": 119
            },
            {
              "function": "startswith",
              "line": 382
            },
            {
              "function": "join",
              "line": 396
            },
            {
              "function": "list",
              "line": 400
            },
            {
              "function": "len",
              "line": 401
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "replace",
              "line": 385
            },
            {
              "function": "startswith",
              "line": 387
            },
            {
              "function": "keys",
              "line": 400
            },
            {
              "function": "split",
              "line": 401
            },
            {
              "function": "join",
              "line": 384
            },
            {
              "function": "replace",
              "line": 390
            },
            {
              "function": "append",
              "line": 393
            },
            {
              "function": "lower",
              "line": 385
            },
            {
              "function": "join",
              "line": 389
            },
            {
              "function": "lower",
              "line": 390
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 15,
              "async": false,
              "calls": [
                "getenv",
                "print"
              ],
              "parameters": [
                "self",
                "name",
                "role",
                "model"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "get_capabilities",
              "line": 33,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "_build_prompt",
              "line": 48,
              "async": false,
              "calls": [
                "items",
                "join",
                "len",
                "append",
                "str"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "_extract_code",
              "line": 87,
              "async": false,
              "calls": [
                "join",
                "findall"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "_validate_code",
              "line": 102,
              "async": false,
              "calls": [
                "append",
                "parse",
                "str"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "get_stats",
              "line": 132,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "reset_stats",
              "line": 148,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            },
            {
              "name": "__repr__",
              "line": 155,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            }
          ],
          "classes": [
            {
              "name": "BaseAgent",
              "line": 9,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_prompt",
                "_extract_code",
                "_validate_code",
                "get_stats",
                "reset_stats",
                "__repr__"
              ],
              "bases": [
                "ABC"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 4
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 91
            },
            {
              "type": "import",
              "module": "ast",
              "names": [
                "ast"
              ],
              "line": 106
            }
          ],
          "calls": [
            {
              "function": "getenv",
              "line": 26
            },
            {
              "function": "getenv",
              "line": 27
            },
            {
              "function": "getenv",
              "line": 28
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "append",
              "line": 59
            },
            {
              "function": "append",
              "line": 72
            },
            {
              "function": "join",
              "line": 74
            },
            {
              "function": "findall",
              "line": 94
            },
            {
              "function": "append",
              "line": 56
            },
            {
              "function": "append",
              "line": 63
            },
            {
              "function": "items",
              "line": 64
            },
            {
              "function": "append",
              "line": 69
            },
            {
              "function": "join",
              "line": 97
            },
            {
              "function": "parse",
              "line": 116
            },
            {
              "function": "append",
              "line": 125
            },
            {
              "function": "append",
              "line": 128
            },
            {
              "function": "append",
              "line": 119
            },
            {
              "function": "append",
              "line": 121
            },
            {
              "function": "append",
              "line": 68
            },
            {
              "function": "str",
              "line": 67
            },
            {
              "function": "len",
              "line": 67
            },
            {
              "function": "str",
              "line": 67
            },
            {
              "function": "str",
              "line": 119
            },
            {
              "function": "str",
              "line": 121
            },
            {
              "function": "str",
              "line": 67
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "get_capabilities",
              "line": 66,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "_mock_research_for_testing",
              "line": 186,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "_create_research_plan",
              "line": 296,
              "async": false,
              "calls": [
                "get",
                "lower",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "_build_research_prompt",
              "line": 339,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context",
                "research_plan"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "_synthesize_findings",
              "line": 383,
              "async": false,
              "calls": [
                "findall",
                "split",
                "lower",
                "startswith",
                "strip"
              ],
              "parameters": [
                "self",
                "research_results"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            },
            {
              "name": "_generate_recommendations",
              "line": 419,
              "async": false,
              "calls": [
                "extend",
                "append",
                "get"
              ],
              "parameters": [
                "self",
                "synthesis"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            }
          ],
          "classes": [
            {
              "name": "ResearchBot",
              "line": 11,
              "methods": [
                "__init__",
                "get_capabilities",
                "_mock_research_for_testing",
                "_create_research_plan",
                "_build_research_prompt",
                "_synthesize_findings",
                "_generate_recommendations"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 388
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 18
            },
            {
              "function": "_create_research_plan",
              "line": 108
            },
            {
              "function": "_build_research_prompt",
              "line": 111
            },
            {
              "function": "_synthesize_findings",
              "line": 117
            },
            {
              "function": "_generate_recommendations",
              "line": 120
            },
            {
              "function": "getenv",
              "line": 138
            },
            {
              "function": "lower",
              "line": 308
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "get",
              "line": 334
            },
            {
              "function": "append",
              "line": 346
            },
            {
              "function": "append",
              "line": 349
            },
            {
              "function": "append",
              "line": 350
            },
            {
              "function": "append",
              "line": 351
            },
            {
              "function": "get",
              "line": 365
            },
            {
              "function": "get",
              "line": 368
            },
            {
              "function": "append",
              "line": 372
            },
            {
              "function": "append",
              "line": 373
            },
            {
              "function": "append",
              "line": 374
            },
            {
              "function": "append",
              "line": 375
            },
            {
              "function": "append",
              "line": 376
            },
            {
              "function": "append",
              "line": 377
            },
            {
              "function": "append",
              "line": 378
            },
            {
              "function": "append",
              "line": 379
            },
            {
              "function": "join",
              "line": 381
            },
            {
              "function": "findall",
              "line": 391
            },
            {
              "function": "extend",
              "line": 445
            },
            {
              "function": "_conduct_research_via_api",
              "line": 114
            },
            {
              "function": "len",
              "line": 129
            },
            {
              "function": "get",
              "line": 130
            },
            {
              "function": "_mock_research_for_testing",
              "line": 140
            },
            {
              "function": "append",
              "line": 355
            },
            {
              "function": "append",
              "line": 359
            },
            {
              "function": "append",
              "line": 362
            },
            {
              "function": "append",
              "line": 366
            },
            {
              "function": "append",
              "line": 369
            },
            {
              "function": "get",
              "line": 426
            },
            {
              "function": "append",
              "line": 427
            },
            {
              "function": "get",
              "line": 429
            },
            {
              "function": "get",
              "line": 432
            },
            {
              "function": "get",
              "line": 435
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "append",
              "line": 441
            },
            {
              "function": "append",
              "line": 442
            },
            {
              "function": "super",
              "line": 18
            },
            {
              "function": "get",
              "line": 129
            },
            {
              "function": "ClientSession",
              "line": 167
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "_mock_research_for_testing",
              "line": 184
            },
            {
              "function": "append",
              "line": 330
            },
            {
              "function": "append",
              "line": 331
            },
            {
              "function": "append",
              "line": 361
            },
            {
              "function": "split",
              "line": 399
            },
            {
              "function": "strip",
              "line": 400
            },
            {
              "function": "lower",
              "line": 406
            },
            {
              "function": "lower",
              "line": 408
            },
            {
              "function": "append",
              "line": 430
            },
            {
              "function": "append",
              "line": 433
            },
            {
              "function": "append",
              "line": 436
            },
            {
              "function": "post",
              "line": 168
            },
            {
              "function": "split",
              "line": 400
            },
            {
              "function": "startswith",
              "line": 400
            },
            {
              "function": "lower",
              "line": 407
            },
            {
              "function": "lower",
              "line": 407
            },
            {
              "function": "Exception",
              "line": 179
            },
            {
              "function": "join",
              "line": 355
            },
            {
              "function": "ClientTimeout",
              "line": 172
            },
            {
              "function": "json",
              "line": 175
            },
            {
              "function": "text",
              "line": 178
            },
            {
              "function": "split",
              "line": 399
            },
            {
              "function": "strip",
              "line": 400
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "architect_gpt",
              "names": [
                "ArchitectGPT"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "codesmith_claude",
              "names": [
                "CodeSmithClaude"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "docu_bot",
              "names": [
                "DocuBot"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "reviewer_gpt",
              "names": [
                "ReviewerGPT"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "fixer_bot",
              "names": [
                "FixerBot"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "trade_strat",
              "names": [
                "TradeStrat"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "research_bot",
              "names": [
                "ResearchBot"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "opus_arbitrator",
              "names": [
                "OpusArbitrator"
              ],
              "line": 14
            }
          ],
          "calls": []
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "get_capabilities",
              "line": 51,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_build_code_review_prompt",
              "line": 134,
              "async": false,
              "calls": [
                "read",
                "join",
                "open",
                "print",
                "get",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_build_previous_analysis_prompt",
              "line": 258,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_build_final_review_prompt",
              "line": 287,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_build_review_prompt",
              "line": 365,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_categorize_issues",
              "line": 562,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "review_result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_generate_recommendations",
              "line": 620,
              "async": false,
              "calls": [
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "issues"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            },
            {
              "name": "_calculate_quality_score",
              "line": 652,
              "async": false,
              "calls": [
                "max",
                "len",
                "items",
                "min"
              ],
              "parameters": [
                "self",
                "issues"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            }
          ],
          "classes": [
            {
              "name": "ReviewerGPT",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_code_review_prompt",
                "_build_previous_analysis_prompt",
                "_build_final_review_prompt",
                "_build_review_prompt",
                "_categorize_issues",
                "_generate_recommendations",
                "_calculate_quality_score"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Tuple"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 101
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 188
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 226
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "get",
              "line": 177
            },
            {
              "function": "join",
              "line": 180
            },
            {
              "function": "get",
              "line": 282
            },
            {
              "function": "join",
              "line": 285
            },
            {
              "function": "get",
              "line": 309
            },
            {
              "function": "join",
              "line": 312
            },
            {
              "function": "_build_review_prompt",
              "line": 319
            },
            {
              "function": "_categorize_issues",
              "line": 325
            },
            {
              "function": "_generate_recommendations",
              "line": 328
            },
            {
              "function": "_build_review_prompt",
              "line": 344
            },
            {
              "function": "_categorize_issues",
              "line": 350
            },
            {
              "function": "_generate_recommendations",
              "line": 353
            },
            {
              "function": "append",
              "line": 372
            },
            {
              "function": "get",
              "line": 375
            },
            {
              "function": "get",
              "line": 379
            },
            {
              "function": "get",
              "line": 383
            },
            {
              "function": "append",
              "line": 387
            },
            {
              "function": "append",
              "line": 388
            },
            {
              "function": "append",
              "line": 389
            },
            {
              "function": "append",
              "line": 390
            },
            {
              "function": "append",
              "line": 391
            },
            {
              "function": "append",
              "line": 392
            },
            {
              "function": "join",
              "line": 394
            },
            {
              "function": "get",
              "line": 627
            },
            {
              "function": "get",
              "line": 633
            },
            {
              "function": "get",
              "line": 639
            },
            {
              "function": "get",
              "line": 645
            },
            {
              "function": "items",
              "line": 666
            },
            {
              "function": "max",
              "line": 670
            },
            {
              "function": "create_claude_web_llm",
              "line": 103
            },
            {
              "function": "_build_code_review_prompt",
              "line": 109
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "append",
              "line": 178
            },
            {
              "function": "create_claude_web_llm",
              "line": 190
            },
            {
              "function": "_build_previous_analysis_prompt",
              "line": 196
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "create_claude_web_llm",
              "line": 228
            },
            {
              "function": "_build_final_review_prompt",
              "line": 234
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "append",
              "line": 283
            },
            {
              "function": "append",
              "line": 310
            },
            {
              "function": "_perform_review",
              "line": 322
            },
            {
              "function": "_perform_review",
              "line": 347
            },
            {
              "function": "_calculate_quality_score",
              "line": 361
            },
            {
              "function": "append",
              "line": 376
            },
            {
              "function": "append",
              "line": 380
            },
            {
              "function": "append",
              "line": 384
            },
            {
              "function": "append",
              "line": 628
            },
            {
              "function": "append",
              "line": 634
            },
            {
              "function": "append",
              "line": 640
            },
            {
              "function": "append",
              "line": 646
            },
            {
              "function": "min",
              "line": 670
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "_perform_code_review",
              "line": 84
            },
            {
              "function": "agenerate",
              "line": 112
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "open",
              "line": 143
            },
            {
              "function": "read",
              "line": 144
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "agenerate",
              "line": 199
            },
            {
              "function": "print",
              "line": 211
            },
            {
              "function": "agenerate",
              "line": 237
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "append",
              "line": 630
            },
            {
              "function": "append",
              "line": 636
            },
            {
              "function": "append",
              "line": 642
            },
            {
              "function": "append",
              "line": 648
            },
            {
              "function": "_analyze_previous_results",
              "line": 86
            },
            {
              "function": "len",
              "line": 668
            },
            {
              "function": "_perform_final_review",
              "line": 88
            },
            {
              "function": "len",
              "line": 145
            },
            {
              "function": "_analyze_code_issues",
              "line": 90
            },
            {
              "function": "_general_review",
              "line": 93
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
            },
            {
              "name": "get_capabilities",
              "line": 51,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
            },
            {
              "name": "_build_architecture_prompt",
              "line": 100,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
            },
            {
              "name": "_extract_artifacts",
              "line": 242,
              "async": false,
              "calls": [
                "findall"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
            }
          ],
          "classes": [
            {
              "name": "ArchitectGPT",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_architecture_prompt",
                "_extract_artifacts"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 246
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "_build_architecture_prompt",
              "line": 83
            },
            {
              "function": "_extract_artifacts",
              "line": 90
            },
            {
              "function": "append",
              "line": 107
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "get",
              "line": 113
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "append",
              "line": 120
            },
            {
              "function": "append",
              "line": 121
            },
            {
              "function": "append",
              "line": 122
            },
            {
              "function": "append",
              "line": 123
            },
            {
              "function": "append",
              "line": 124
            },
            {
              "function": "append",
              "line": 125
            },
            {
              "function": "append",
              "line": 126
            },
            {
              "function": "join",
              "line": 128
            },
            {
              "function": "findall",
              "line": 251
            },
            {
              "function": "findall",
              "line": 256
            },
            {
              "function": "findall",
              "line": 262
            },
            {
              "function": "_generate_architecture",
              "line": 87
            },
            {
              "function": "append",
              "line": 111
            },
            {
              "function": "append",
              "line": 114
            },
            {
              "function": "append",
              "line": 117
            },
            {
              "function": "super",
              "line": 15
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "get_capabilities",
              "line": 62,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_build_validation_prompt",
              "line": 154,
              "async": false,
              "calls": [
                "read",
                "join",
                "open",
                "print",
                "get",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_build_improvement_prompt",
              "line": 242,
              "async": false,
              "calls": [
                "read",
                "join",
                "open",
                "print",
                "get",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_analyze_requirements",
              "line": 386,
              "async": false,
              "calls": [
                "get",
                "lower"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_build_strategy_prompt",
              "line": 429,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context",
                "requirements"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_create_backtest_framework",
              "line": 902,
              "async": false,
              "calls": [
                "search",
                "group"
              ],
              "parameters": [
                "self",
                "strategy"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            },
            {
              "name": "_generate_performance_metrics",
              "line": 962,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "strategy"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            }
          ],
          "classes": [
            {
              "name": "TradeStrat",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_validation_prompt",
                "_build_improvement_prompt",
                "_analyze_requirements",
                "_build_strategy_prompt",
                "_create_backtest_framework",
                "_generate_performance_metrics"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 907
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 121
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 208
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "get",
              "line": 197
            },
            {
              "function": "join",
              "line": 200
            },
            {
              "function": "get",
              "line": 260
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "join",
              "line": 326
            },
            {
              "function": "_analyze_requirements",
              "line": 333
            },
            {
              "function": "_build_strategy_prompt",
              "line": 336
            },
            {
              "function": "_create_backtest_framework",
              "line": 342
            },
            {
              "function": "_generate_performance_metrics",
              "line": 345
            },
            {
              "function": "_analyze_requirements",
              "line": 362
            },
            {
              "function": "_build_strategy_prompt",
              "line": 365
            },
            {
              "function": "_create_backtest_framework",
              "line": 371
            },
            {
              "function": "_generate_performance_metrics",
              "line": 374
            },
            {
              "function": "lower",
              "line": 399
            },
            {
              "function": "get",
              "line": 420
            },
            {
              "function": "get",
              "line": 422
            },
            {
              "function": "get",
              "line": 424
            },
            {
              "function": "append",
              "line": 436
            },
            {
              "function": "append",
              "line": 439
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "append",
              "line": 441
            },
            {
              "function": "append",
              "line": 442
            },
            {
              "function": "append",
              "line": 443
            },
            {
              "function": "get",
              "line": 446
            },
            {
              "function": "get",
              "line": 450
            },
            {
              "function": "append",
              "line": 454
            },
            {
              "function": "append",
              "line": 455
            },
            {
              "function": "append",
              "line": 456
            },
            {
              "function": "append",
              "line": 457
            },
            {
              "function": "append",
              "line": 458
            },
            {
              "function": "append",
              "line": 459
            },
            {
              "function": "append",
              "line": 460
            },
            {
              "function": "join",
              "line": 462
            },
            {
              "function": "search",
              "line": 908
            },
            {
              "function": "create_claude_web_llm",
              "line": 123
            },
            {
              "function": "_build_validation_prompt",
              "line": 129
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "append",
              "line": 198
            },
            {
              "function": "create_claude_web_llm",
              "line": 210
            },
            {
              "function": "_build_improvement_prompt",
              "line": 216
            },
            {
              "function": "print",
              "line": 221
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "get",
              "line": 262
            },
            {
              "function": "append",
              "line": 324
            },
            {
              "function": "_generate_strategy",
              "line": 339
            },
            {
              "function": "_generate_strategy",
              "line": 368
            },
            {
              "function": "append",
              "line": 447
            },
            {
              "function": "append",
              "line": 451
            },
            {
              "function": "group",
              "line": 909
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "_validate_trading_logic",
              "line": 106
            },
            {
              "function": "agenerate",
              "line": 132
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "open",
              "line": 163
            },
            {
              "function": "read",
              "line": 164
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "agenerate",
              "line": 219
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "open",
              "line": 251
            },
            {
              "function": "read",
              "line": 252
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "_suggest_improvements",
              "line": 108
            },
            {
              "function": "_design_strategy",
              "line": 110
            },
            {
              "function": "_develop_strategy",
              "line": 113
            },
            {
              "function": "len",
              "line": 165
            },
            {
              "function": "len",
              "line": 253
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            },
            {
              "name": "get_capabilities",
              "line": 58,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            },
            {
              "name": "_analyze_problem",
              "line": 117,
              "async": false,
              "calls": [
                "get",
                "lower"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            },
            {
              "name": "_build_fix_prompt",
              "line": 152,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context",
                "analysis"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            },
            {
              "name": "_validate_fixes",
              "line": 537,
              "async": false,
              "calls": [
                "enumerate",
                "append",
                "compile",
                "findall"
              ],
              "parameters": [
                "self",
                "fixes"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            },
            {
              "name": "_create_fix_summary",
              "line": 567,
              "async": false,
              "calls": [
                "len",
                "sum"
              ],
              "parameters": [
                "self",
                "validated_fixes"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            }
          ],
          "classes": [
            {
              "name": "FixerBot",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_analyze_problem",
                "_build_fix_prompt",
                "_validate_fixes",
                "_create_fix_summary"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional",
                "Tuple"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 542
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "_analyze_problem",
              "line": 93
            },
            {
              "function": "_build_fix_prompt",
              "line": 96
            },
            {
              "function": "_validate_fixes",
              "line": 102
            },
            {
              "function": "_create_fix_summary",
              "line": 105
            },
            {
              "function": "lower",
              "line": 129
            },
            {
              "function": "get",
              "line": 144
            },
            {
              "function": "get",
              "line": 147
            },
            {
              "function": "append",
              "line": 159
            },
            {
              "function": "append",
              "line": 162
            },
            {
              "function": "append",
              "line": 163
            },
            {
              "function": "get",
              "line": 166
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "get",
              "line": 173
            },
            {
              "function": "get",
              "line": 177
            },
            {
              "function": "append",
              "line": 181
            },
            {
              "function": "append",
              "line": 182
            },
            {
              "function": "append",
              "line": 183
            },
            {
              "function": "append",
              "line": 184
            },
            {
              "function": "append",
              "line": 185
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "join",
              "line": 188
            },
            {
              "function": "findall",
              "line": 545
            },
            {
              "function": "enumerate",
              "line": 547
            },
            {
              "function": "sum",
              "line": 571
            },
            {
              "function": "len",
              "line": 572
            },
            {
              "function": "_generate_fixes",
              "line": 99
            },
            {
              "function": "append",
              "line": 167
            },
            {
              "function": "append",
              "line": 171
            },
            {
              "function": "append",
              "line": 174
            },
            {
              "function": "append",
              "line": 178
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "compile",
              "line": 550
            },
            {
              "function": "append",
              "line": 551
            },
            {
              "function": "append",
              "line": 558
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 14,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            },
            {
              "name": "get_capabilities",
              "line": 52,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            },
            {
              "name": "_build_analysis_prompt",
              "line": 146,
              "async": false,
              "calls": [
                "read",
                "join",
                "open",
                "print",
                "get",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            },
            {
              "name": "_build_coding_prompt",
              "line": 240,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "task",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            },
            {
              "name": "_build_implementation_prompt",
              "line": 572,
              "async": false,
              "calls": [
                "read",
                "join",
                "open",
                "print",
                "get",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            },
            {
              "name": "_organize_code",
              "line": 654,
              "async": false,
              "calls": [
                "findall"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            }
          ],
          "classes": [
            {
              "name": "CodeSmithClaude",
              "line": 8,
              "methods": [
                "__init__",
                "get_capabilities",
                "_build_analysis_prompt",
                "_build_coding_prompt",
                "_build_implementation_prompt",
                "_organize_code"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 658
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 113
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 278
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 538
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 15
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "join",
              "line": 188
            },
            {
              "function": "_build_coding_prompt",
              "line": 195
            },
            {
              "function": "_validate_code",
              "line": 201
            },
            {
              "function": "_organize_code",
              "line": 204
            },
            {
              "function": "_build_coding_prompt",
              "line": 220
            },
            {
              "function": "_validate_code",
              "line": 226
            },
            {
              "function": "_organize_code",
              "line": 229
            },
            {
              "function": "append",
              "line": 247
            },
            {
              "function": "get",
              "line": 250
            },
            {
              "function": "get",
              "line": 254
            },
            {
              "function": "get",
              "line": 258
            },
            {
              "function": "append",
              "line": 262
            },
            {
              "function": "append",
              "line": 263
            },
            {
              "function": "append",
              "line": 264
            },
            {
              "function": "append",
              "line": 265
            },
            {
              "function": "append",
              "line": 266
            },
            {
              "function": "append",
              "line": 267
            },
            {
              "function": "append",
              "line": 268
            },
            {
              "function": "join",
              "line": 270
            },
            {
              "function": "get",
              "line": 590
            },
            {
              "function": "get",
              "line": 649
            },
            {
              "function": "join",
              "line": 652
            },
            {
              "function": "findall",
              "line": 669
            },
            {
              "function": "findall",
              "line": 674
            },
            {
              "function": "findall",
              "line": 679
            },
            {
              "function": "create_claude_web_llm",
              "line": 115
            },
            {
              "function": "_build_analysis_prompt",
              "line": 121
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "_generate_code",
              "line": 198
            },
            {
              "function": "_generate_code",
              "line": 223
            },
            {
              "function": "append",
              "line": 251
            },
            {
              "function": "append",
              "line": 255
            },
            {
              "function": "append",
              "line": 259
            },
            {
              "function": "create_claude_web_llm",
              "line": 281
            },
            {
              "function": "print",
              "line": 289
            },
            {
              "function": "create_claude_web_llm",
              "line": 540
            },
            {
              "function": "_build_implementation_prompt",
              "line": 546
            },
            {
              "function": "print",
              "line": 551
            },
            {
              "function": "print",
              "line": 583
            },
            {
              "function": "get",
              "line": 592
            },
            {
              "function": "append",
              "line": 650
            },
            {
              "function": "super",
              "line": 15
            },
            {
              "function": "_read_and_analyze_code",
              "line": 98
            },
            {
              "function": "agenerate",
              "line": 124
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "open",
              "line": 155
            },
            {
              "function": "read",
              "line": 156
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "agenerate",
              "line": 287
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "agenerate",
              "line": 549
            },
            {
              "function": "print",
              "line": 562
            },
            {
              "function": "open",
              "line": 581
            },
            {
              "function": "read",
              "line": 582
            },
            {
              "function": "print",
              "line": 585
            },
            {
              "function": "get",
              "line": 594
            },
            {
              "function": "_implement_improvements",
              "line": 100
            },
            {
              "function": "_implement_code",
              "line": 102
            },
            {
              "function": "_generate_code_implementation",
              "line": 105
            },
            {
              "function": "len",
              "line": 157
            },
            {
              "function": "len",
              "line": 583
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 26,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
            },
            {
              "name": "start_claude_web_server",
              "line": 31,
              "async": false,
              "calls": [
                "print",
                "Popen",
                "sleep"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
            },
            {
              "name": "stop_claude_web_server",
              "line": 51,
              "async": false,
              "calls": [
                "print",
                "wait",
                "terminate",
                "kill"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
            }
          ],
          "classes": [
            {
              "name": "KIAutoAgentClaudeWebIntegration",
              "line": 23,
              "methods": [
                "__init__",
                "start_claude_web_server",
                "stop_claude_web_server"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "orchestration.master_dispatcher",
              "names": [
                "MasterDispatcher"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "orchestration.intent_classifier",
              "names": [
                "IntentClassifier"
              ],
              "line": 20
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 335
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 16
            },
            {
              "function": "Path",
              "line": 15
            },
            {
              "function": "str",
              "line": 16
            },
            {
              "function": "ArgumentParser",
              "line": 337
            },
            {
              "function": "add_argument",
              "line": 338
            },
            {
              "function": "add_argument",
              "line": 339
            },
            {
              "function": "add_argument",
              "line": 340
            },
            {
              "function": "parse_args",
              "line": 342
            },
            {
              "function": "KIAutoAgentClaudeWebIntegration",
              "line": 344
            },
            {
              "function": "run",
              "line": 387
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "IntentClassifier",
              "line": 121
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 219
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "print",
              "line": 221
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "print",
              "line": 270
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "print",
              "line": 277
            },
            {
              "function": "print",
              "line": 278
            },
            {
              "function": "print",
              "line": 279
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print",
              "line": 288
            },
            {
              "function": "main",
              "line": 387
            },
            {
              "function": "Popen",
              "line": 36
            },
            {
              "function": "sleep",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "get",
              "line": 137
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "create_claude_web_llm",
              "line": 162
            },
            {
              "function": "create_claude_web_llm",
              "line": 166
            },
            {
              "function": "generate",
              "line": 183
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "generate",
              "line": 208
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "start_claude_web_server",
              "line": 291
            },
            {
              "function": "print",
              "line": 292
            },
            {
              "function": "print",
              "line": 296
            },
            {
              "function": "print",
              "line": 305
            },
            {
              "function": "print",
              "line": 306
            },
            {
              "function": "print",
              "line": 307
            },
            {
              "function": "print",
              "line": 309
            },
            {
              "function": "print",
              "line": 310
            },
            {
              "function": "print",
              "line": 311
            },
            {
              "function": "print",
              "line": 312
            },
            {
              "function": "print",
              "line": 313
            },
            {
              "function": "print",
              "line": 315
            },
            {
              "function": "print",
              "line": 316
            },
            {
              "function": "print",
              "line": 317
            },
            {
              "function": "print",
              "line": 318
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "print",
              "line": 322
            },
            {
              "function": "print",
              "line": 323
            },
            {
              "function": "print",
              "line": 324
            },
            {
              "function": "print",
              "line": 325
            },
            {
              "function": "stop_claude_web_server",
              "line": 330
            },
            {
              "function": "demonstrate_system_architecture_comparison",
              "line": 347
            },
            {
              "function": "start_claude_web_server",
              "line": 349
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "terminate",
              "line": 55
            },
            {
              "function": "wait",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "classify",
              "line": 135
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 217
            },
            {
              "function": "sleep",
              "line": 297
            },
            {
              "function": "demonstrate_modified_agent_usage",
              "line": 300
            },
            {
              "function": "demonstrate_intent_classification_with_claude_web",
              "line": 301
            },
            {
              "function": "demonstrate_workflow_execution_with_claude_web",
              "line": 302
            },
            {
              "function": "demonstrate_system_architecture_comparison",
              "line": 303
            },
            {
              "function": "print",
              "line": 361
            },
            {
              "function": "print",
              "line": 362
            },
            {
              "function": "print",
              "line": 363
            },
            {
              "function": "print",
              "line": 364
            },
            {
              "function": "print",
              "line": 365
            },
            {
              "function": "print",
              "line": 366
            },
            {
              "function": "print",
              "line": 367
            },
            {
              "function": "print",
              "line": 368
            },
            {
              "function": "print",
              "line": 369
            },
            {
              "function": "print",
              "line": 370
            },
            {
              "function": "print",
              "line": 371
            },
            {
              "function": "print",
              "line": 372
            },
            {
              "function": "print",
              "line": 373
            },
            {
              "function": "print",
              "line": 374
            },
            {
              "function": "print",
              "line": 375
            },
            {
              "function": "print",
              "line": 376
            },
            {
              "function": "print",
              "line": 377
            },
            {
              "function": "print",
              "line": 378
            },
            {
              "function": "print",
              "line": 379
            },
            {
              "function": "print",
              "line": 380
            },
            {
              "function": "print",
              "line": 381
            },
            {
              "function": "print",
              "line": 382
            },
            {
              "function": "print",
              "line": 383
            },
            {
              "function": "kill",
              "line": 59
            },
            {
              "function": "wait",
              "line": 60
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "stop_claude_web_server",
              "line": 353
            },
            {
              "function": "run_complete_integration_demo",
              "line": 355
            },
            {
              "function": "print",
              "line": 357
            },
            {
              "function": "print",
              "line": 359
            },
            {
              "function": "demonstrate_workflow_execution_with_claude_web",
              "line": 351
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py": {
          "functions": [
            {
              "name": "main",
              "line": 131,
              "async": false,
              "calls": [
                "test_login_detection",
                "input",
                "run",
                "print",
                "test_comprehensive_checks",
                "strip"
              ],
              "parameters": [],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.claude_browser",
              "names": [
                "ClaudeBrowser"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "structlog",
              "names": [
                "structlog"
              ],
              "line": 15
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 12
            },
            {
              "function": "configure",
              "line": 18
            },
            {
              "function": "get_logger",
              "line": 27
            },
            {
              "function": "Path",
              "line": 11
            },
            {
              "function": "str",
              "line": 12
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "strip",
              "line": 139
            },
            {
              "function": "main",
              "line": 155
            },
            {
              "function": "make_filtering_bound_logger",
              "line": 22
            },
            {
              "function": "PrintLoggerFactory",
              "line": 23
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "ClaudeBrowser",
              "line": 39
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "ClaudeBrowser",
              "line": 106
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "input",
              "line": 123
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "run",
              "line": 143
            },
            {
              "function": "ConsoleRenderer",
              "line": 20
            },
            {
              "function": "start_browser",
              "line": 40
            },
            {
              "function": "check_login_status",
              "line": 48
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "check_login_status",
              "line": 74
            },
            {
              "function": "debug_login_detection",
              "line": 79
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "start_browser",
              "line": 107
            },
            {
              "function": "goto",
              "line": 110
            },
            {
              "function": "sleep",
              "line": 111
            },
            {
              "function": "debug_login_detection",
              "line": 114
            },
            {
              "function": "_comprehensive_login_check",
              "line": 118
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "input",
              "line": 139
            },
            {
              "function": "test_login_detection",
              "line": 143
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "run",
              "line": 146
            },
            {
              "function": "wait_for_login",
              "line": 60
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "close",
              "line": 95
            },
            {
              "function": "close",
              "line": 129
            },
            {
              "function": "test_comprehensive_checks",
              "line": 146
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "str",
              "line": 91
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 16,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            },
            {
              "name": "_group_steps_for_execution",
              "line": 101,
              "async": false,
              "calls": [
                "sorted",
                "items",
                "dict",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            },
            {
              "name": "_compile_final_output",
              "line": 216,
              "async": false,
              "calls": [
                "join",
                "get",
                "len",
                "append",
                "str"
              ],
              "parameters": [
                "self",
                "result",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            },
            {
              "name": "get_current_status",
              "line": 257,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            },
            {
              "name": "get_execution_history",
              "line": 269,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "limit"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            }
          ],
          "classes": [
            {
              "name": "ExecutionEngine",
              "line": 10,
              "methods": [
                "__init__",
                "_group_steps_for_execution",
                "_compile_final_output",
                "get_current_status",
                "get_execution_history"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 4
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "time",
              "line": 25
            },
            {
              "function": "get",
              "line": 105
            },
            {
              "function": "dict",
              "line": 112
            },
            {
              "function": "zip",
              "line": 134
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "append",
              "line": 221
            },
            {
              "function": "append",
              "line": 249
            },
            {
              "function": "append",
              "line": 250
            },
            {
              "function": "append",
              "line": 251
            },
            {
              "function": "append",
              "line": 252
            },
            {
              "function": "append",
              "line": 253
            },
            {
              "function": "join",
              "line": 255
            },
            {
              "function": "get",
              "line": 29
            },
            {
              "function": "isoformat",
              "line": 30
            },
            {
              "function": "_group_steps_for_execution",
              "line": 43
            },
            {
              "function": "items",
              "line": 46
            },
            {
              "function": "_compile_final_output",
              "line": 71
            },
            {
              "function": "isoformat",
              "line": 95
            },
            {
              "function": "append",
              "line": 96
            },
            {
              "function": "get",
              "line": 106
            },
            {
              "function": "append",
              "line": 109
            },
            {
              "function": "sorted",
              "line": 112
            },
            {
              "function": "append",
              "line": 123
            },
            {
              "function": "_execute_single_step",
              "line": 126
            },
            {
              "function": "append",
              "line": 127
            },
            {
              "function": "gather",
              "line": 130
            },
            {
              "function": "isinstance",
              "line": 135
            },
            {
              "function": "get",
              "line": 172
            },
            {
              "function": "copy",
              "line": 180
            },
            {
              "function": "get",
              "line": 183
            },
            {
              "function": "hasattr",
              "line": 188
            },
            {
              "function": "append",
              "line": 200
            },
            {
              "function": "print",
              "line": 202
            },
            {
              "function": "append",
              "line": 225
            },
            {
              "function": "append",
              "line": 244
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "items",
              "line": 59
            },
            {
              "function": "time",
              "line": 74
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "append",
              "line": 87
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "items",
              "line": 112
            },
            {
              "function": "_execute_single_step",
              "line": 152
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "append",
              "line": 246
            },
            {
              "function": "get",
              "line": 262
            },
            {
              "function": "len",
              "line": 263
            },
            {
              "function": "len",
              "line": 264
            },
            {
              "function": "get",
              "line": 265
            },
            {
              "function": "get",
              "line": 24
            },
            {
              "function": "now",
              "line": 30
            },
            {
              "function": "any",
              "line": 49
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "now",
              "line": 95
            },
            {
              "function": "str",
              "line": 138
            },
            {
              "function": "format_exc",
              "line": 139
            },
            {
              "function": "get",
              "line": 156
            },
            {
              "function": "get",
              "line": 156
            },
            {
              "function": "get",
              "line": 180
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "execute",
              "line": 189
            },
            {
              "function": "str",
              "line": 210
            },
            {
              "function": "format_exc",
              "line": 211
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "get",
              "line": 230
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "append",
              "line": 233
            },
            {
              "function": "get",
              "line": 235
            },
            {
              "function": "get",
              "line": 251
            },
            {
              "function": "len",
              "line": 252
            },
            {
              "function": "len",
              "line": 253
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "get",
              "line": 264
            },
            {
              "function": "len",
              "line": 49
            },
            {
              "function": "_execute_parallel",
              "line": 52
            },
            {
              "function": "_execute_sequential",
              "line": 56
            },
            {
              "function": "get",
              "line": 63
            },
            {
              "function": "append",
              "line": 64
            },
            {
              "function": "append",
              "line": 65
            },
            {
              "function": "str",
              "line": 89
            },
            {
              "function": "format_exc",
              "line": 90
            },
            {
              "function": "len",
              "line": 225
            },
            {
              "function": "str",
              "line": 237
            },
            {
              "function": "append",
              "line": 240
            },
            {
              "function": "len",
              "line": 244
            },
            {
              "function": "len",
              "line": 47
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "len",
              "line": 80
            },
            {
              "function": "str",
              "line": 92
            },
            {
              "function": "str",
              "line": 207
            },
            {
              "function": "len",
              "line": 238
            },
            {
              "function": "len",
              "line": 51
            },
            {
              "function": "len",
              "line": 55
            },
            {
              "function": "get",
              "line": 67
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [
                "now"
              ],
              "parameters": [
                "self",
                "max_iterations"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "record_iteration",
              "line": 41,
              "async": false,
              "calls": [
                "len",
                "append",
                "IterationReason"
              ],
              "parameters": [
                "self",
                "reason",
                "agent",
                "quality_score",
                "critical_issues"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_generate_iteration_summary",
              "line": 87,
              "async": false,
              "calls": [
                "sorted",
                "get",
                "items",
                "_identify_problem_areas",
                "_generate_recommendation",
                "total_seconds",
                "now",
                "IterationSummary",
                "set",
                "list",
                "extend",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_identify_problem_areas",
              "line": 151,
              "async": false,
              "calls": [
                "items",
                "sum",
                "join",
                "extend",
                "lower",
                "append"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_generate_recommendation",
              "line": 178,
              "async": false,
              "calls": [
                "sum",
                "len",
                "items",
                "any"
              ],
              "parameters": [
                "self",
                "common_issues",
                "agent_performance"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_generate_user_options",
              "line": 207,
              "async": false,
              "calls": [
                "sorted",
                "len",
                "startswith"
              ],
              "parameters": [
                "self",
                "summary"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_get_primary_recommendation",
              "line": 257,
              "async": false,
              "calls": [
                "next",
                "_generate_user_options"
              ],
              "parameters": [
                "self",
                "summary"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "__init__",
              "line": 269,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_display_iteration_analysis",
              "line": 295,
              "async": false,
              "calls": [
                "display_panel",
                "_format_iteration_timeline",
                "_format_problematic_areas",
                "_format_common_issues",
                "print",
                "_format_agent_performance"
              ],
              "parameters": [
                "self",
                "summary",
                "cli_interface"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_format_common_issues",
              "line": 329,
              "async": false,
              "calls": [
                "enumerate",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "common_issues"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_format_agent_performance",
              "line": 340,
              "async": false,
              "calls": [
                "join",
                "items",
                "append"
              ],
              "parameters": [
                "self",
                "agent_performance"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_format_problematic_areas",
              "line": 359,
              "async": false,
              "calls": [
                "join"
              ],
              "parameters": [
                "self",
                "problematic_areas"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "_format_iteration_timeline",
              "line": 366,
              "async": false,
              "calls": [
                "join",
                "split",
                "len",
                "append",
                "insert"
              ],
              "parameters": [
                "self",
                "reasons"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "__init__",
              "line": 422,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "__init__",
              "line": 530,
              "async": false,
              "calls": [
                "IterationDecisionExecutor",
                "UserInteractionHandler",
                "IterationController"
              ],
              "parameters": [
                "self",
                "max_iterations"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "get_iteration_statistics",
              "line": 566,
              "async": false,
              "calls": [
                "isoformat",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            }
          ],
          "classes": [
            {
              "name": "IterationReason",
              "line": 11,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "IterationSummary",
              "line": 21,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "IterationController",
              "line": 31,
              "methods": [
                "__init__",
                "record_iteration",
                "_generate_iteration_summary",
                "_identify_problem_areas",
                "_generate_recommendation",
                "_generate_user_options",
                "_get_primary_recommendation"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "UserInteractionHandler",
              "line": 264,
              "methods": [
                "__init__",
                "_display_iteration_analysis",
                "_format_common_issues",
                "_format_agent_performance",
                "_format_problematic_areas",
                "_format_iteration_timeline"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "IterationDecisionExecutor",
              "line": 417,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            },
            {
              "name": "IterationManager",
              "line": 525,
              "methods": [
                "__init__",
                "get_iteration_statistics"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "field",
              "line": 18
            },
            {
              "function": "now",
              "line": 39
            },
            {
              "function": "IterationReason",
              "line": 43
            },
            {
              "function": "append",
              "line": 50
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "items",
              "line": 128
            },
            {
              "function": "_identify_problem_areas",
              "line": 133
            },
            {
              "function": "total_seconds",
              "line": 136
            },
            {
              "function": "_generate_recommendation",
              "line": 139
            },
            {
              "function": "IterationSummary",
              "line": 141
            },
            {
              "function": "join",
              "line": 164
            },
            {
              "function": "lower",
              "line": 169
            },
            {
              "function": "items",
              "line": 171
            },
            {
              "function": "len",
              "line": 184
            },
            {
              "function": "sorted",
              "line": 255
            },
            {
              "function": "_generate_user_options",
              "line": 259
            },
            {
              "function": "next",
              "line": 260
            },
            {
              "function": "_display_iteration_analysis",
              "line": 279
            },
            {
              "function": "append",
              "line": 286
            },
            {
              "function": "enumerate",
              "line": 335
            },
            {
              "function": "join",
              "line": 338
            },
            {
              "function": "items",
              "line": 346
            },
            {
              "function": "join",
              "line": 357
            },
            {
              "function": "join",
              "line": 364
            },
            {
              "function": "join",
              "line": 384
            },
            {
              "function": "enumerate",
              "line": 391
            },
            {
              "function": "format",
              "line": 397
            },
            {
              "function": "append",
              "line": 461
            },
            {
              "function": "IterationController",
              "line": 531
            },
            {
              "function": "UserInteractionHandler",
              "line": 532
            },
            {
              "function": "IterationDecisionExecutor",
              "line": 533
            },
            {
              "function": "_generate_iteration_summary",
              "line": 57
            },
            {
              "function": "record_iteration",
              "line": 73
            },
            {
              "function": "IterationSummary",
              "line": 90
            },
            {
              "function": "extend",
              "line": 103
            },
            {
              "function": "sorted",
              "line": 110
            },
            {
              "function": "extend",
              "line": 125
            },
            {
              "function": "list",
              "line": 130
            },
            {
              "function": "extend",
              "line": 167
            },
            {
              "function": "sum",
              "line": 172
            },
            {
              "function": "sum",
              "line": 185
            },
            {
              "function": "any",
              "line": 193
            },
            {
              "function": "len",
              "line": 202
            },
            {
              "function": "_get_user_choice",
              "line": 283
            },
            {
              "function": "display_panel",
              "line": 325
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "append",
              "line": 336
            },
            {
              "function": "append",
              "line": 352
            },
            {
              "function": "append",
              "line": 376
            },
            {
              "function": "len",
              "line": 381
            },
            {
              "function": "insert",
              "line": 382
            },
            {
              "function": "len",
              "line": 397
            },
            {
              "function": "display_text",
              "line": 400
            },
            {
              "function": "print",
              "line": 403
            },
            {
              "function": "input",
              "line": 404
            },
            {
              "function": "isoformat",
              "line": 431
            },
            {
              "function": "update",
              "line": 436
            },
            {
              "function": "check_iteration_limit",
              "line": 540
            },
            {
              "function": "prompt_user_decision",
              "line": 546
            },
            {
              "function": "execute_decision",
              "line": 551
            },
            {
              "function": "isoformat",
              "line": 18
            },
            {
              "function": "_generate_user_options",
              "line": 64
            },
            {
              "function": "_get_primary_recommendation",
              "line": 65
            },
            {
              "function": "get",
              "line": 107
            },
            {
              "function": "items",
              "line": 110
            },
            {
              "function": "set",
              "line": 130
            },
            {
              "function": "len",
              "line": 142
            },
            {
              "function": "append",
              "line": 174
            },
            {
              "function": "len",
              "line": 190
            },
            {
              "function": "len",
              "line": 193
            },
            {
              "function": "items",
              "line": 198
            },
            {
              "function": "startswith",
              "line": 215
            },
            {
              "function": "startswith",
              "line": 250
            },
            {
              "function": "isoformat",
              "line": 287
            },
            {
              "function": "len",
              "line": 290
            },
            {
              "function": "_format_common_issues",
              "line": 307
            },
            {
              "function": "_format_agent_performance",
              "line": 310
            },
            {
              "function": "_format_problematic_areas",
              "line": 313
            },
            {
              "function": "_format_iteration_timeline",
              "line": 316
            },
            {
              "function": "get_user_input",
              "line": 401
            },
            {
              "function": "int",
              "line": 407
            },
            {
              "function": "len",
              "line": 408
            },
            {
              "function": "print",
              "line": 411
            },
            {
              "function": "print",
              "line": 414
            },
            {
              "function": "update",
              "line": 439
            },
            {
              "function": "get",
              "line": 470
            },
            {
              "function": "len",
              "line": 571
            },
            {
              "function": "isoformat",
              "line": 572
            },
            {
              "function": "len",
              "line": 575
            },
            {
              "function": "len",
              "line": 578
            },
            {
              "function": "len",
              "line": 44
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "now",
              "line": 136
            },
            {
              "function": "join",
              "line": 169
            },
            {
              "function": "len",
              "line": 222
            },
            {
              "function": "len",
              "line": 243
            },
            {
              "function": "split",
              "line": 373
            },
            {
              "function": "now",
              "line": 431
            },
            {
              "function": "_extend_iterations",
              "line": 436
            },
            {
              "function": "update",
              "line": 442
            },
            {
              "function": "now",
              "line": 18
            },
            {
              "function": "len",
              "line": 236
            },
            {
              "function": "now",
              "line": 287
            },
            {
              "function": "len",
              "line": 382
            },
            {
              "function": "_extend_iterations",
              "line": 439
            },
            {
              "function": "update",
              "line": 445
            },
            {
              "function": "_accept_current_state",
              "line": 442
            },
            {
              "function": "update",
              "line": 448
            },
            {
              "function": "len",
              "line": 378
            },
            {
              "function": "_restart_simplified",
              "line": 445
            },
            {
              "function": "update",
              "line": 451
            },
            {
              "function": "update",
              "line": 454
            },
            {
              "function": "_break_into_subtasks",
              "line": 448
            },
            {
              "function": "_request_human_review",
              "line": 451
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "master_dispatcher",
              "names": [
                "MasterDispatcher"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "intent_classifier",
              "names": [
                "IntentClassifier"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "workflow_generator",
              "names": [
                "WorkflowGenerator"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "execution_engine",
              "names": [
                "ExecutionEngine"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "learning_system",
              "names": [
                "LearningSystem"
              ],
              "line": 10
            }
          ],
          "calls": []
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 37,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "_calculate_intent_score",
              "line": 275,
              "async": false,
              "calls": [
                "search",
                "len",
                "min"
              ],
              "parameters": [
                "self",
                "text",
                "config"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "_calculate_enhanced_intent_score",
              "line": 306,
              "async": false,
              "calls": [
                "lower",
                "min",
                "any",
                "_calculate_intent_score"
              ],
              "parameters": [
                "self",
                "text",
                "config",
                "intent_type"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "_extract_entities",
              "line": 343,
              "async": false,
              "calls": [
                "items",
                "findall",
                "list",
                "lower",
                "fromkeys"
              ],
              "parameters": [
                "self",
                "text"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "_assess_complexity",
              "line": 355,
              "async": false,
              "calls": [
                "len",
                "split"
              ],
              "parameters": [
                "self",
                "text",
                "intent"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "get_intent_description",
              "line": 378,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "intent_type"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            }
          ],
          "classes": [
            {
              "name": "IntentType",
              "line": 9,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "Intent",
              "line": 23,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            },
            {
              "name": "IntentClassifier",
              "line": 31,
              "methods": [
                "__init__",
                "_calculate_intent_score",
                "_calculate_enhanced_intent_score",
                "_extract_entities",
                "_assess_complexity",
                "get_intent_description"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 4
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "lower",
              "line": 233
            },
            {
              "function": "items",
              "line": 239
            },
            {
              "function": "_extract_entities",
              "line": 261
            },
            {
              "function": "_assess_complexity",
              "line": 264
            },
            {
              "function": "min",
              "line": 304
            },
            {
              "function": "_calculate_intent_score",
              "line": 310
            },
            {
              "function": "min",
              "line": 341
            },
            {
              "function": "items",
              "line": 347
            },
            {
              "function": "len",
              "line": 357
            },
            {
              "function": "get",
              "line": 392
            },
            {
              "function": "_calculate_enhanced_intent_score",
              "line": 240
            },
            {
              "function": "max",
              "line": 247
            },
            {
              "function": "get",
              "line": 258
            },
            {
              "function": "len",
              "line": 279
            },
            {
              "function": "len",
              "line": 279
            },
            {
              "function": "search",
              "line": 289
            },
            {
              "function": "lower",
              "line": 325
            },
            {
              "function": "lower",
              "line": 333
            },
            {
              "function": "any",
              "line": 338
            },
            {
              "function": "findall",
              "line": 348
            },
            {
              "function": "split",
              "line": 357
            },
            {
              "function": "get",
              "line": 243
            },
            {
              "function": "lower",
              "line": 348
            },
            {
              "function": "list",
              "line": 351
            },
            {
              "function": "fromkeys",
              "line": 351
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py": {
          "functions": [
            {
              "name": "__post_init__",
              "line": 26,
              "async": false,
              "calls": [
                "isoformat",
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [
                "ExecutionEngine",
                "_initialize_agents",
                "IntentClassifier",
                "LearningSystem",
                "print",
                "WorkflowGenerator"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_detect_project_type",
              "line": 160,
              "async": false,
              "calls": [
                "sum",
                "values",
                "max",
                "print",
                "lower",
                "search"
              ],
              "parameters": [
                "self",
                "user_input",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_initialize_agents",
              "line": 239,
              "async": false,
              "calls": [
                "ResearchBot",
                "CodeSmithClaude",
                "ArchitectGPT",
                "TradeStrat",
                "DocuBot",
                "ReviewerGPT",
                "print",
                "len",
                "FixerBot"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_get_agent_capabilities",
              "line": 263,
              "async": false,
              "calls": [
                "hasattr",
                "items",
                "get_capabilities"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_optimize_workflow",
              "line": 276,
              "async": false,
              "calls": [
                "enumerate",
                "get"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_get_quality_gates_for_context",
              "line": 294,
              "async": false,
              "calls": [
                "hasattr",
                "get_quality_gates",
                "get"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "_format_response",
              "line": 317,
              "async": false,
              "calls": [
                "get_project_specifics",
                "hasattr",
                "get",
                "len",
                "getattr"
              ],
              "parameters": [
                "self",
                "result",
                "workflow",
                "intent"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            }
          ],
          "classes": [
            {
              "name": "UserRequest",
              "line": 20,
              "methods": [
                "__post_init__"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            },
            {
              "name": "MasterDispatcher",
              "line": 30,
              "methods": [
                "__init__",
                "_detect_project_type",
                "_initialize_agents",
                "_get_agent_capabilities",
                "_optimize_workflow",
                "_get_quality_gates_for_context",
                "_format_response"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "intent_classifier",
              "names": [
                "IntentClassifier"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "workflow_generator",
              "names": [
                "WorkflowGenerator"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "execution_engine",
              "names": [
                "ExecutionEngine"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "learning_system",
              "names": [
                "LearningSystem"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "shared_context",
              "names": [
                "ProjectContextFactory"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "agents",
              "names": [
                "ArchitectGPT",
                "CodeSmithClaude",
                "DocuBot",
                "ReviewerGPT",
                "FixerBot",
                "TradeStrat",
                "ResearchBot"
              ],
              "line": 242
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "IntentClassifier",
              "line": 40
            },
            {
              "function": "WorkflowGenerator",
              "line": 41
            },
            {
              "function": "ExecutionEngine",
              "line": 42
            },
            {
              "function": "LearningSystem",
              "line": 43
            },
            {
              "function": "_initialize_agents",
              "line": 47
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "copy",
              "line": 99
            },
            {
              "function": "update",
              "line": 100
            },
            {
              "function": "UserRequest",
              "line": 108
            },
            {
              "function": "lower",
              "line": 164
            },
            {
              "function": "search",
              "line": 221
            },
            {
              "function": "search",
              "line": 224
            },
            {
              "function": "search",
              "line": 227
            },
            {
              "function": "items",
              "line": 266
            },
            {
              "function": "enumerate",
              "line": 286
            },
            {
              "function": "get",
              "line": 343
            },
            {
              "function": "suggest_workflow",
              "line": 356
            },
            {
              "function": "isoformat",
              "line": 28
            },
            {
              "function": "_detect_project_type",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "create_project_context",
              "line": 89
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "_optimize_workflow",
              "line": 130
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "_format_response",
              "line": 148
            },
            {
              "function": "sum",
              "line": 213
            },
            {
              "function": "sum",
              "line": 214
            },
            {
              "function": "sum",
              "line": 215
            },
            {
              "function": "sum",
              "line": 216
            },
            {
              "function": "sum",
              "line": 217
            },
            {
              "function": "max",
              "line": 231
            },
            {
              "function": "max",
              "line": 232
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "hasattr",
              "line": 267
            },
            {
              "function": "get",
              "line": 282
            },
            {
              "function": "hasattr",
              "line": 302
            },
            {
              "function": "get",
              "line": 307
            },
            {
              "function": "get",
              "line": 327
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "get",
              "line": 329
            },
            {
              "function": "get",
              "line": 333
            },
            {
              "function": "get_agent_performance",
              "line": 351
            },
            {
              "function": "classify",
              "line": 355
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "create_project_context",
              "line": 96
            },
            {
              "function": "get_domain_instructions",
              "line": 103
            },
            {
              "function": "get_quality_gates",
              "line": 104
            },
            {
              "function": "get_project_specifics",
              "line": 105
            },
            {
              "function": "classify",
              "line": 116
            },
            {
              "function": "generate",
              "line": 121
            },
            {
              "function": "execute",
              "line": 134
            },
            {
              "function": "record_execution",
              "line": 140
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "values",
              "line": 231
            },
            {
              "function": "ArchitectGPT",
              "line": 248
            },
            {
              "function": "CodeSmithClaude",
              "line": 249
            },
            {
              "function": "DocuBot",
              "line": 250
            },
            {
              "function": "ReviewerGPT",
              "line": 251
            },
            {
              "function": "FixerBot",
              "line": 252
            },
            {
              "function": "TradeStrat",
              "line": 253
            },
            {
              "function": "ResearchBot",
              "line": 254
            },
            {
              "function": "print",
              "line": 259
            },
            {
              "function": "get_capabilities",
              "line": 268
            },
            {
              "function": "get_quality_gates",
              "line": 303
            },
            {
              "function": "len",
              "line": 323
            },
            {
              "function": "len",
              "line": 324
            },
            {
              "function": "get",
              "line": 325
            },
            {
              "function": "get",
              "line": 336
            },
            {
              "function": "getattr",
              "line": 337
            },
            {
              "function": "get",
              "line": 339
            },
            {
              "function": "now",
              "line": 28
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "str",
              "line": 156
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "get",
              "line": 324
            },
            {
              "function": "hasattr",
              "line": 338
            },
            {
              "function": "getattr",
              "line": 338
            },
            {
              "function": "_get_agent_capabilities",
              "line": 125
            },
            {
              "function": "len",
              "line": 127
            },
            {
              "function": "len",
              "line": 256
            },
            {
              "function": "get_project_specifics",
              "line": 338
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "str",
              "line": 153
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py": {
          "functions": [
            {
              "name": "__post_init__",
              "line": 19,
              "async": false,
              "calls": [
                "isoformat",
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_context_for_agent",
              "line": 26,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_agent_instruction_summary",
              "line": 31,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "add_agent_output",
              "line": 35,
              "async": false,
              "calls": [
                "isoformat",
                "now"
              ],
              "parameters": [
                "self",
                "agent_name",
                "step_id",
                "output"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_iteration_summary",
              "line": 46,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "start_new_iteration",
              "line": 56,
              "async": false,
              "calls": [
                "isoformat",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "reason"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_relevant_outputs",
              "line": 65,
              "async": false,
              "calls": [
                "items",
                "range"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "create_project_context",
              "line": 83,
              "async": false,
              "calls": [
                "get",
                "lower",
                "context_class",
                "GenericProjectContext"
              ],
              "parameters": [
                "project_type",
                "project_name"
              ],
              "decorators": [
                "staticmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_available_project_types",
              "line": 119,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [
                "staticmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "create_shared_context",
              "line": 136,
              "async": false,
              "calls": [
                "create_project_context",
                "ProjectSharedContext"
              ],
              "parameters": [
                "project_type",
                "user_request",
                "project_name"
              ],
              "decorators": [
                "staticmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "__init__",
              "line": 165,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "project_name",
                "project_type"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_domain_instructions",
              "line": 169,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_quality_gates",
              "line": 193,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_project_specifics",
              "line": 196,
              "async": false,
              "calls": [
                "ProjectSpecification"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "create_context",
              "line": 215,
              "async": false,
              "calls": [
                "create_shared_context"
              ],
              "parameters": [
                "project_type",
                "user_request"
              ],
              "decorators": [
                "staticmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_context_for_agent",
              "line": 229,
              "async": false,
              "calls": [
                "get_relevant_outputs"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_agent_instruction_summary",
              "line": 238,
              "async": false,
              "calls": [
                "dumps",
                "get_relevant_outputs"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "__init__",
              "line": 257,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "update_context",
              "line": 261,
              "async": false,
              "calls": [
                "isoformat",
                "append",
                "add_agent_output",
                "now"
              ],
              "parameters": [
                "self",
                "agent_name",
                "step_id",
                "output"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "should_continue_iteration",
              "line": 273,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "quality_result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "prepare_agent_context",
              "line": 280,
              "async": false,
              "calls": [
                "len",
                "get_context_for_agent",
                "update"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_context_statistics",
              "line": 293,
              "async": false,
              "calls": [
                "sum",
                "values",
                "max",
                "get",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_context_for_agent",
              "line": 322,
              "async": false,
              "calls": [
                "get_quality_gates",
                "get_project_specifics",
                "get_domain_instructions",
                "get_relevant_outputs",
                "update",
                "getattr"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "get_agent_instruction_summary",
              "line": 342,
              "async": false,
              "calls": [
                "get_agent_enhancement_instructions",
                "get_domain_instructions",
                "hasattr",
                "dumps",
                "get_relevant_outputs",
                "getattr"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            }
          ],
          "classes": [
            {
              "name": "SharedContext",
              "line": 12,
              "methods": [
                "__post_init__",
                "get_context_for_agent",
                "get_agent_instruction_summary",
                "add_agent_output",
                "get_iteration_summary",
                "start_new_iteration",
                "get_relevant_outputs"
              ],
              "bases": [
                "ABC"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "ProjectContextFactory",
              "line": 77,
              "methods": [
                "create_project_context",
                "get_available_project_types",
                "create_shared_context"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "GenericProjectContext",
              "line": 162,
              "methods": [
                "__init__",
                "get_domain_instructions",
                "get_quality_gates",
                "get_project_specifics"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "ContextFactory",
              "line": 209,
              "methods": [
                "create_context"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "GenericSharedContext",
              "line": 224,
              "methods": [
                "get_context_for_agent",
                "get_agent_instruction_summary"
              ],
              "bases": [
                "SharedContext"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "SharedContextManager",
              "line": 252,
              "methods": [
                "__init__",
                "update_context",
                "should_continue_iteration",
                "prepare_agent_context",
                "get_context_statistics"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            },
            {
              "name": "ProjectSharedContext",
              "line": 316,
              "methods": [
                "get_context_for_agent",
                "get_agent_instruction_summary"
              ],
              "bases": [
                "SharedContext"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "project_contexts",
              "names": [
                "TradingProjectContext",
                "WebAppProjectContext",
                "BaseProjectContext"
              ],
              "line": 94
            },
            {
              "type": "from_import",
              "module": "project_contexts.base_project_context",
              "names": [
                "ProjectSpecification"
              ],
              "line": 197
            }
          ],
          "calls": [
            {
              "function": "isoformat",
              "line": 23
            },
            {
              "function": "append",
              "line": 58
            },
            {
              "function": "range",
              "line": 70
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "create_project_context",
              "line": 154
            },
            {
              "function": "ProjectSharedContext",
              "line": 155
            },
            {
              "function": "ProjectSpecification",
              "line": 198
            },
            {
              "function": "create_shared_context",
              "line": 218
            },
            {
              "function": "add_agent_output",
              "line": 263
            },
            {
              "function": "append",
              "line": 266
            },
            {
              "function": "get",
              "line": 278
            },
            {
              "function": "get_context_for_agent",
              "line": 282
            },
            {
              "function": "update",
              "line": 283
            },
            {
              "function": "sum",
              "line": 295
            },
            {
              "function": "values",
              "line": 301
            },
            {
              "function": "hasattr",
              "line": 367
            },
            {
              "function": "get_relevant_outputs",
              "line": 373
            },
            {
              "function": "isoformat",
              "line": 43
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "lower",
              "line": 111
            },
            {
              "function": "context_class",
              "line": 113
            },
            {
              "function": "GenericProjectContext",
              "line": 116
            },
            {
              "function": "get_relevant_outputs",
              "line": 233
            },
            {
              "function": "values",
              "line": 302
            },
            {
              "function": "len",
              "line": 310
            },
            {
              "function": "get_relevant_outputs",
              "line": 326
            },
            {
              "function": "getattr",
              "line": 328
            },
            {
              "function": "update",
              "line": 333
            },
            {
              "function": "get_agent_enhancement_instructions",
              "line": 368
            },
            {
              "function": "now",
              "line": 23
            },
            {
              "function": "isoformat",
              "line": 61
            },
            {
              "function": "items",
              "line": 72
            },
            {
              "function": "dumps",
              "line": 247
            },
            {
              "function": "isoformat",
              "line": 267
            },
            {
              "function": "len",
              "line": 296
            },
            {
              "function": "max",
              "line": 311
            },
            {
              "function": "getattr",
              "line": 359
            },
            {
              "function": "get_domain_instructions",
              "line": 361
            },
            {
              "function": "now",
              "line": 43
            },
            {
              "function": "get_relevant_outputs",
              "line": 247
            },
            {
              "function": "len",
              "line": 288
            },
            {
              "function": "values",
              "line": 297
            },
            {
              "function": "get",
              "line": 304
            },
            {
              "function": "getattr",
              "line": 334
            },
            {
              "function": "get_domain_instructions",
              "line": 335
            },
            {
              "function": "get_quality_gates",
              "line": 336
            },
            {
              "function": "get_project_specifics",
              "line": 337
            },
            {
              "function": "dumps",
              "line": 378
            },
            {
              "function": "now",
              "line": 61
            },
            {
              "function": "now",
              "line": 267
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [
                "Path",
                "mkdir",
                "_load_metrics",
                "_load_patterns",
                "print",
                "len",
                "_load_history"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "suggest_workflow",
              "line": 75,
              "async": false,
              "calls": [
                "max",
                "print",
                "_find_similar_executions"
              ],
              "parameters": [
                "self",
                "intent"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "get_intent_statistics",
              "line": 129,
              "async": false,
              "calls": [
                "get",
                "append",
                "items",
                "mean"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_load_history",
              "line": 176,
              "async": false,
              "calls": [
                "print",
                "open",
                "load",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_load_patterns",
              "line": 186,
              "async": false,
              "calls": [
                "print",
                "open",
                "load",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_load_metrics",
              "line": 196,
              "async": false,
              "calls": [
                "print",
                "open",
                "load",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_save_all",
              "line": 206,
              "async": false,
              "calls": [
                "print",
                "open",
                "dump"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_calculate_metrics",
              "line": 224,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_was_successful",
              "line": 251,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_record_success_pattern",
              "line": 255,
              "async": false,
              "calls": [
                "get",
                "append",
                "sorted"
              ],
              "parameters": [
                "self",
                "execution_record"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_update_performance_metrics",
              "line": 279,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "execution_record"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_find_similar_executions",
              "line": 303,
              "async": false,
              "calls": [
                "get",
                "append",
                "sort"
              ],
              "parameters": [
                "self",
                "intent"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_extract_agents_used",
              "line": 319,
              "async": false,
              "calls": [
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            },
            {
              "name": "_calculate_agent_rating",
              "line": 328,
              "async": false,
              "calls": [
                "get",
                "min"
              ],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            }
          ],
          "classes": [
            {
              "name": "LearningSystem",
              "line": 11,
              "methods": [
                "__init__",
                "suggest_workflow",
                "get_intent_statistics",
                "_load_history",
                "_load_patterns",
                "_load_metrics",
                "_save_all",
                "_calculate_metrics",
                "_was_successful",
                "_record_success_pattern",
                "_update_performance_metrics",
                "_find_similar_executions",
                "_extract_agents_used",
                "_calculate_agent_rating"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 4
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "statistics",
              "names": [
                "statistics"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "Path",
              "line": 19
            },
            {
              "function": "mkdir",
              "line": 20
            },
            {
              "function": "_load_history",
              "line": 28
            },
            {
              "function": "_load_patterns",
              "line": 29
            },
            {
              "function": "_load_metrics",
              "line": 30
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "_calculate_metrics",
              "line": 45
            },
            {
              "function": "append",
              "line": 61
            },
            {
              "function": "_was_successful",
              "line": 64
            },
            {
              "function": "_update_performance_metrics",
              "line": 68
            },
            {
              "function": "_save_all",
              "line": 71
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "_find_similar_executions",
              "line": 80
            },
            {
              "function": "max",
              "line": 86
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "items",
              "line": 113
            },
            {
              "function": "items",
              "line": 159
            },
            {
              "function": "exists",
              "line": 178
            },
            {
              "function": "exists",
              "line": 188
            },
            {
              "function": "exists",
              "line": 198
            },
            {
              "function": "get",
              "line": 244
            },
            {
              "function": "len",
              "line": 245
            },
            {
              "function": "len",
              "line": 246
            },
            {
              "function": "len",
              "line": 247
            },
            {
              "function": "get",
              "line": 257
            },
            {
              "function": "append",
              "line": 270
            },
            {
              "function": "get",
              "line": 282
            },
            {
              "function": "get",
              "line": 305
            },
            {
              "function": "sort",
              "line": 315
            },
            {
              "function": "get",
              "line": 322
            },
            {
              "function": "get",
              "line": 330
            },
            {
              "function": "min",
              "line": 337
            },
            {
              "function": "isoformat",
              "line": 50
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "len",
              "line": 54
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "_extract_agents_used",
              "line": 57
            },
            {
              "function": "_record_success_pattern",
              "line": 65
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "get",
              "line": 152
            },
            {
              "function": "get",
              "line": 153
            },
            {
              "function": "get",
              "line": 155
            },
            {
              "function": "len",
              "line": 229
            },
            {
              "function": "len",
              "line": 229
            },
            {
              "function": "get",
              "line": 236
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 247
            },
            {
              "function": "get",
              "line": 253
            },
            {
              "function": "get",
              "line": 264
            },
            {
              "function": "get",
              "line": 265
            },
            {
              "function": "get",
              "line": 266
            },
            {
              "function": "get",
              "line": 267
            },
            {
              "function": "sorted",
              "line": 273
            },
            {
              "function": "get",
              "line": 300
            },
            {
              "function": "get",
              "line": 301
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "get",
              "line": 334
            },
            {
              "function": "len",
              "line": 49
            },
            {
              "function": "get",
              "line": 54
            },
            {
              "function": "get",
              "line": 113
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "append",
              "line": 154
            },
            {
              "function": "append",
              "line": 156
            },
            {
              "function": "mean",
              "line": 161
            },
            {
              "function": "mean",
              "line": 166
            },
            {
              "function": "open",
              "line": 210
            },
            {
              "function": "dump",
              "line": 211
            },
            {
              "function": "open",
              "line": 214
            },
            {
              "function": "dump",
              "line": 215
            },
            {
              "function": "open",
              "line": 218
            },
            {
              "function": "dump",
              "line": 219
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "get",
              "line": 229
            },
            {
              "function": "get",
              "line": 229
            },
            {
              "function": "len",
              "line": 231
            },
            {
              "function": "get",
              "line": 238
            },
            {
              "function": "get",
              "line": 257
            },
            {
              "function": "get",
              "line": 295
            },
            {
              "function": "get",
              "line": 309
            },
            {
              "function": "append",
              "line": 325
            },
            {
              "function": "len",
              "line": 32
            },
            {
              "function": "now",
              "line": 50
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "get",
              "line": 117
            },
            {
              "function": "get",
              "line": 123
            },
            {
              "function": "_calculate_agent_rating",
              "line": 124
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "open",
              "line": 180
            },
            {
              "function": "load",
              "line": 181
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "open",
              "line": 190
            },
            {
              "function": "load",
              "line": 191
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "open",
              "line": 200
            },
            {
              "function": "load",
              "line": 201
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "get",
              "line": 266
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "get",
              "line": 300
            },
            {
              "function": "get",
              "line": 311
            },
            {
              "function": "append",
              "line": 312
            },
            {
              "function": "get",
              "line": 315
            },
            {
              "function": "get",
              "line": 309
            },
            {
              "function": "get",
              "line": 311
            },
            {
              "function": "get",
              "line": 315
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "_load_templates"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_load_templates",
              "line": 66,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_select_template",
              "line": 360,
              "async": false,
              "calls": [
                "get",
                "copy",
                "print"
              ],
              "parameters": [
                "self",
                "intent_type"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_customize_workflow",
              "line": 369,
              "async": false,
              "calls": [
                "enumerate",
                "WorkflowStep",
                "get",
                "len",
                "append",
                "insert"
              ],
              "parameters": [
                "self",
                "template",
                "intent",
                "context",
                "user_input"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_optimize_parallel_execution",
              "line": 418,
              "async": false,
              "calls": [
                "range",
                "max",
                "any",
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_validate_agents",
              "line": 453,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "workflow",
                "agent_capabilities"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "_estimate_total_time",
              "line": 472,
              "async": false,
              "calls": [
                "get",
                "sum",
                "max",
                "values"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "get_workflow_summary",
              "line": 491,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            }
          ],
          "classes": [
            {
              "name": "WorkflowStep",
              "line": 10,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            },
            {
              "name": "WorkflowGenerator",
              "line": 23,
              "methods": [
                "__init__",
                "_load_templates",
                "_select_template",
                "_customize_workflow",
                "_optimize_parallel_execution",
                "_validate_agents",
                "_estimate_total_time",
                "get_workflow_summary"
              ],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 4
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "field",
              "line": 16
            },
            {
              "function": "field",
              "line": 17
            },
            {
              "function": "_load_templates",
              "line": 30
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "_select_template",
              "line": 45
            },
            {
              "function": "_customize_workflow",
              "line": 48
            },
            {
              "function": "_optimize_parallel_execution",
              "line": 51
            },
            {
              "function": "_validate_agents",
              "line": 54
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "copy",
              "line": 367
            },
            {
              "function": "enumerate",
              "line": 378
            },
            {
              "function": "range",
              "line": 439
            },
            {
              "function": "get",
              "line": 457
            },
            {
              "function": "get",
              "line": 478
            },
            {
              "function": "get",
              "line": 497
            },
            {
              "function": "get",
              "line": 502
            },
            {
              "function": "isoformat",
              "line": 58
            },
            {
              "function": "get",
              "line": 60
            },
            {
              "function": "_estimate_total_time",
              "line": 61
            },
            {
              "function": "print",
              "line": 364
            },
            {
              "function": "WorkflowStep",
              "line": 379
            },
            {
              "function": "get",
              "line": 389
            },
            {
              "function": "append",
              "line": 396
            },
            {
              "function": "get",
              "line": 399
            },
            {
              "function": "insert",
              "line": 409
            },
            {
              "function": "get",
              "line": 420
            },
            {
              "function": "max",
              "line": 436
            },
            {
              "function": "len",
              "line": 447
            },
            {
              "function": "any",
              "line": 448
            },
            {
              "function": "get",
              "line": 474
            },
            {
              "function": "sum",
              "line": 486
            },
            {
              "function": "sum",
              "line": 489
            },
            {
              "function": "len",
              "line": 401
            },
            {
              "function": "get",
              "line": 428
            },
            {
              "function": "len",
              "line": 441
            },
            {
              "function": "append",
              "line": 460
            },
            {
              "function": "get",
              "line": 478
            },
            {
              "function": "get",
              "line": 481
            },
            {
              "function": "max",
              "line": 484
            },
            {
              "function": "values",
              "line": 486
            },
            {
              "function": "get",
              "line": 493
            },
            {
              "function": "get",
              "line": 494
            },
            {
              "function": "len",
              "line": 495
            },
            {
              "function": "get",
              "line": 502
            },
            {
              "function": "now",
              "line": 58
            },
            {
              "function": "get",
              "line": 383
            },
            {
              "function": "get",
              "line": 384
            },
            {
              "function": "get",
              "line": 385
            },
            {
              "function": "max",
              "line": 432
            },
            {
              "function": "get",
              "line": 448
            },
            {
              "function": "get",
              "line": 484
            },
            {
              "function": "get",
              "line": 489
            },
            {
              "function": "get",
              "line": 495
            },
            {
              "function": "get",
              "line": 499
            },
            {
              "function": "get",
              "line": 440
            },
            {
              "function": "join",
              "line": 467
            },
            {
              "function": "get",
              "line": 500
            },
            {
              "function": "get",
              "line": 432
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            },
            {
              "name": "get_default_thresholds",
              "line": 21,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            },
            {
              "name": "_analyze_unified_engine",
              "line": 264,
              "async": false,
              "calls": [
                "len",
                "sum",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            },
            {
              "name": "_analyze_future_leak_prevention",
              "line": 293,
              "async": false,
              "calls": [
                "sum",
                "search",
                "max",
                "len",
                "append",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            },
            {
              "name": "_analyze_iterative_processing",
              "line": 331,
              "async": false,
              "calls": [
                "len",
                "sum",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            },
            {
              "name": "_analyze_engine_chart_decoupling",
              "line": 360,
              "async": false,
              "calls": [
                "sum",
                "search",
                "max",
                "len",
                "append",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            }
          ],
          "classes": [
            {
              "name": "EngineParityQualityGate",
              "line": 12,
              "methods": [
                "__init__",
                "get_default_thresholds",
                "_analyze_unified_engine",
                "_analyze_future_leak_prevention",
                "_analyze_iterative_processing",
                "_analyze_engine_chart_decoupling"
              ],
              "bases": [
                "BaseQualityGate"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_quality_gate",
              "names": [
                "BaseQualityGate",
                "QualityCheck",
                "QualityGateResult",
                "QualityLevel"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 19
            },
            {
              "function": "time",
              "line": 31
            },
            {
              "function": "update",
              "line": 35
            },
            {
              "function": "update",
              "line": 36
            },
            {
              "function": "update",
              "line": 37
            },
            {
              "function": "update",
              "line": 38
            },
            {
              "function": "update",
              "line": 41
            },
            {
              "function": "update",
              "line": 42
            },
            {
              "function": "update",
              "line": 43
            },
            {
              "function": "update",
              "line": 46
            },
            {
              "function": "update",
              "line": 47
            },
            {
              "function": "calculate_overall_score",
              "line": 50
            },
            {
              "function": "determine_pass_status",
              "line": 51
            },
            {
              "function": "len",
              "line": 54
            },
            {
              "function": "sum",
              "line": 55
            },
            {
              "function": "sum",
              "line": 57
            },
            {
              "function": "QualityGateResult",
              "line": 62
            },
            {
              "function": "generate_summary",
              "line": 76
            },
            {
              "function": "_analyze_unified_engine",
              "line": 81
            },
            {
              "function": "_analyze_future_leak_prevention",
              "line": 97
            },
            {
              "function": "_analyze_iterative_processing",
              "line": 113
            },
            {
              "function": "_analyze_engine_chart_decoupling",
              "line": 129
            },
            {
              "function": "sum",
              "line": 151
            },
            {
              "function": "sum",
              "line": 175
            },
            {
              "function": "sum",
              "line": 199
            },
            {
              "function": "sum",
              "line": 223
            },
            {
              "function": "sum",
              "line": 247
            },
            {
              "function": "min",
              "line": 248
            },
            {
              "function": "sum",
              "line": 273
            },
            {
              "function": "sum",
              "line": 310
            },
            {
              "function": "sum",
              "line": 311
            },
            {
              "function": "max",
              "line": 315
            },
            {
              "function": "sum",
              "line": 340
            },
            {
              "function": "sum",
              "line": 376
            },
            {
              "function": "sum",
              "line": 377
            },
            {
              "function": "max",
              "line": 381
            },
            {
              "function": "create_quality_check",
              "line": 84
            },
            {
              "function": "create_quality_check",
              "line": 100
            },
            {
              "function": "create_quality_check",
              "line": 116
            },
            {
              "function": "create_quality_check",
              "line": 132
            },
            {
              "function": "len",
              "line": 152
            },
            {
              "function": "create_quality_check",
              "line": 156
            },
            {
              "function": "len",
              "line": 176
            },
            {
              "function": "create_quality_check",
              "line": 180
            },
            {
              "function": "len",
              "line": 200
            },
            {
              "function": "create_quality_check",
              "line": 204
            },
            {
              "function": "len",
              "line": 224
            },
            {
              "function": "create_quality_check",
              "line": 228
            },
            {
              "function": "create_quality_check",
              "line": 252
            },
            {
              "function": "len",
              "line": 274
            },
            {
              "function": "min",
              "line": 315
            },
            {
              "function": "append",
              "line": 320
            },
            {
              "function": "len",
              "line": 321
            },
            {
              "function": "append",
              "line": 322
            },
            {
              "function": "len",
              "line": 341
            },
            {
              "function": "min",
              "line": 381
            },
            {
              "function": "append",
              "line": 386
            },
            {
              "function": "len",
              "line": 387
            },
            {
              "function": "append",
              "line": 388
            },
            {
              "function": "super",
              "line": 19
            },
            {
              "function": "_check_unified_engine",
              "line": 35
            },
            {
              "function": "_check_future_leak_prevention",
              "line": 36
            },
            {
              "function": "_check_iterative_processing",
              "line": 37
            },
            {
              "function": "_check_engine_chart_decoupling",
              "line": 38
            },
            {
              "function": "_check_data_access_patterns",
              "line": 41
            },
            {
              "function": "_check_decision_timing",
              "line": 42
            },
            {
              "function": "_check_mode_switching",
              "line": 43
            },
            {
              "function": "_check_result_flow",
              "line": 46
            },
            {
              "function": "_check_timing_abstraction",
              "line": 47
            },
            {
              "function": "time",
              "line": 60
            },
            {
              "function": "generate_summary",
              "line": 71
            },
            {
              "function": "generate_recommendations",
              "line": 72
            },
            {
              "function": "search",
              "line": 279
            },
            {
              "function": "append",
              "line": 280
            },
            {
              "function": "search",
              "line": 281
            },
            {
              "function": "append",
              "line": 282
            },
            {
              "function": "search",
              "line": 283
            },
            {
              "function": "append",
              "line": 284
            },
            {
              "function": "len",
              "line": 314
            },
            {
              "function": "search",
              "line": 346
            },
            {
              "function": "append",
              "line": 347
            },
            {
              "function": "search",
              "line": 348
            },
            {
              "function": "append",
              "line": 349
            },
            {
              "function": "search",
              "line": 350
            },
            {
              "function": "append",
              "line": 351
            },
            {
              "function": "len",
              "line": 380
            },
            {
              "function": "values",
              "line": 55
            },
            {
              "function": "values",
              "line": 57
            },
            {
              "function": "search",
              "line": 151
            },
            {
              "function": "search",
              "line": 175
            },
            {
              "function": "search",
              "line": 199
            },
            {
              "function": "search",
              "line": 223
            },
            {
              "function": "search",
              "line": 247
            },
            {
              "function": "search",
              "line": 273
            },
            {
              "function": "len",
              "line": 289
            },
            {
              "function": "search",
              "line": 310
            },
            {
              "function": "search",
              "line": 311
            },
            {
              "function": "search",
              "line": 340
            },
            {
              "function": "len",
              "line": 356
            },
            {
              "function": "search",
              "line": 376
            },
            {
              "function": "search",
              "line": 377
            },
            {
              "function": "len",
              "line": 160
            },
            {
              "function": "len",
              "line": 184
            },
            {
              "function": "len",
              "line": 208
            },
            {
              "function": "len",
              "line": 232
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
            },
            {
              "name": "get_default_thresholds",
              "line": 21,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
            }
          ],
          "classes": [
            {
              "name": "SecurityQualityGate",
              "line": 12,
              "methods": [
                "__init__",
                "get_default_thresholds"
              ],
              "bases": [
                "BaseQualityGate"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_quality_gate",
              "names": [
                "BaseQualityGate",
                "QualityCheck",
                "QualityGateResult",
                "QualityLevel"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 19
            },
            {
              "function": "time",
              "line": 31
            },
            {
              "function": "update",
              "line": 35
            },
            {
              "function": "update",
              "line": 36
            },
            {
              "function": "update",
              "line": 37
            },
            {
              "function": "update",
              "line": 38
            },
            {
              "function": "update",
              "line": 39
            },
            {
              "function": "update",
              "line": 40
            },
            {
              "function": "update",
              "line": 41
            },
            {
              "function": "update",
              "line": 42
            },
            {
              "function": "update",
              "line": 43
            },
            {
              "function": "update",
              "line": 44
            },
            {
              "function": "update",
              "line": 47
            },
            {
              "function": "update",
              "line": 48
            },
            {
              "function": "update",
              "line": 49
            },
            {
              "function": "update",
              "line": 50
            },
            {
              "function": "update",
              "line": 51
            },
            {
              "function": "calculate_overall_score",
              "line": 58
            },
            {
              "function": "determine_pass_status",
              "line": 59
            },
            {
              "function": "len",
              "line": 62
            },
            {
              "function": "sum",
              "line": 63
            },
            {
              "function": "sum",
              "line": 65
            },
            {
              "function": "QualityGateResult",
              "line": 70
            },
            {
              "function": "generate_summary",
              "line": 84
            },
            {
              "function": "sum",
              "line": 103
            },
            {
              "function": "sum",
              "line": 104
            },
            {
              "function": "sum",
              "line": 112
            },
            {
              "function": "max",
              "line": 115
            },
            {
              "function": "sum",
              "line": 154
            },
            {
              "function": "sum",
              "line": 155
            },
            {
              "function": "max",
              "line": 157
            },
            {
              "function": "sum",
              "line": 195
            },
            {
              "function": "sum",
              "line": 196
            },
            {
              "function": "max",
              "line": 198
            },
            {
              "function": "sum",
              "line": 234
            },
            {
              "function": "sum",
              "line": 235
            },
            {
              "function": "sum",
              "line": 278
            },
            {
              "function": "sum",
              "line": 279
            },
            {
              "function": "bool",
              "line": 282
            },
            {
              "function": "sum",
              "line": 325
            },
            {
              "function": "sum",
              "line": 326
            },
            {
              "function": "max",
              "line": 328
            },
            {
              "function": "sum",
              "line": 365
            },
            {
              "function": "sum",
              "line": 366
            },
            {
              "function": "max",
              "line": 368
            },
            {
              "function": "sum",
              "line": 406
            },
            {
              "function": "sum",
              "line": 407
            },
            {
              "function": "max",
              "line": 409
            },
            {
              "function": "findall",
              "line": 432
            },
            {
              "function": "sum",
              "line": 474
            },
            {
              "function": "sum",
              "line": 475
            },
            {
              "function": "min",
              "line": 477
            },
            {
              "function": "bool",
              "line": 505
            },
            {
              "function": "sum",
              "line": 506
            },
            {
              "function": "sum",
              "line": 539
            },
            {
              "function": "bool",
              "line": 540
            },
            {
              "function": "sum",
              "line": 572
            },
            {
              "function": "bool",
              "line": 573
            },
            {
              "function": "sum",
              "line": 609
            },
            {
              "function": "sum",
              "line": 610
            },
            {
              "function": "max",
              "line": 612
            },
            {
              "function": "sum",
              "line": 648
            },
            {
              "function": "sum",
              "line": 649
            },
            {
              "function": "max",
              "line": 651
            },
            {
              "function": "update",
              "line": 55
            },
            {
              "function": "append",
              "line": 120
            },
            {
              "function": "append",
              "line": 122
            },
            {
              "function": "append",
              "line": 124
            },
            {
              "function": "create_quality_check",
              "line": 127
            },
            {
              "function": "min",
              "line": 157
            },
            {
              "function": "append",
              "line": 162
            },
            {
              "function": "append",
              "line": 164
            },
            {
              "function": "create_quality_check",
              "line": 167
            },
            {
              "function": "append",
              "line": 203
            },
            {
              "function": "append",
              "line": 204
            },
            {
              "function": "append",
              "line": 206
            },
            {
              "function": "create_quality_check",
              "line": 209
            },
            {
              "function": "max",
              "line": 243
            },
            {
              "function": "append",
              "line": 248
            },
            {
              "function": "append",
              "line": 249
            },
            {
              "function": "create_quality_check",
              "line": 252
            },
            {
              "function": "search",
              "line": 282
            },
            {
              "function": "max",
              "line": 288
            },
            {
              "function": "append",
              "line": 293
            },
            {
              "function": "append",
              "line": 295
            },
            {
              "function": "create_quality_check",
              "line": 298
            },
            {
              "function": "min",
              "line": 328
            },
            {
              "function": "append",
              "line": 333
            },
            {
              "function": "append",
              "line": 335
            },
            {
              "function": "create_quality_check",
              "line": 338
            },
            {
              "function": "append",
              "line": 373
            },
            {
              "function": "append",
              "line": 374
            },
            {
              "function": "append",
              "line": 376
            },
            {
              "function": "create_quality_check",
              "line": 379
            },
            {
              "function": "append",
              "line": 414
            },
            {
              "function": "append",
              "line": 415
            },
            {
              "function": "create_quality_check",
              "line": 418
            },
            {
              "function": "len",
              "line": 440
            },
            {
              "function": "append",
              "line": 444
            },
            {
              "function": "append",
              "line": 445
            },
            {
              "function": "create_quality_check",
              "line": 448
            },
            {
              "function": "append",
              "line": 482
            },
            {
              "function": "append",
              "line": 484
            },
            {
              "function": "create_quality_check",
              "line": 487
            },
            {
              "function": "search",
              "line": 505
            },
            {
              "function": "min",
              "line": 512
            },
            {
              "function": "append",
              "line": 517
            },
            {
              "function": "create_quality_check",
              "line": 520
            },
            {
              "function": "search",
              "line": 540
            },
            {
              "function": "min",
              "line": 546
            },
            {
              "function": "append",
              "line": 551
            },
            {
              "function": "create_quality_check",
              "line": 554
            },
            {
              "function": "search",
              "line": 573
            },
            {
              "function": "min",
              "line": 579
            },
            {
              "function": "append",
              "line": 584
            },
            {
              "function": "create_quality_check",
              "line": 587
            },
            {
              "function": "append",
              "line": 617
            },
            {
              "function": "create_quality_check",
              "line": 620
            },
            {
              "function": "_check_sensitive_data_exposure",
              "line": 633
            },
            {
              "function": "append",
              "line": 656
            },
            {
              "function": "append",
              "line": 658
            },
            {
              "function": "create_quality_check",
              "line": 661
            },
            {
              "function": "super",
              "line": 19
            },
            {
              "function": "_check_injection_vulnerabilities",
              "line": 35
            },
            {
              "function": "_check_authentication_security",
              "line": 36
            },
            {
              "function": "_check_sensitive_data_exposure",
              "line": 37
            },
            {
              "function": "_check_xml_external_entities",
              "line": 38
            },
            {
              "function": "_check_broken_access_control",
              "line": 39
            },
            {
              "function": "_check_security_misconfiguration",
              "line": 40
            },
            {
              "function": "_check_xss_vulnerabilities",
              "line": 41
            },
            {
              "function": "_check_insecure_deserialization",
              "line": 42
            },
            {
              "function": "_check_vulnerable_components",
              "line": 43
            },
            {
              "function": "_check_insufficient_logging",
              "line": 44
            },
            {
              "function": "_check_csrf_protection",
              "line": 47
            },
            {
              "function": "_check_input_validation",
              "line": 48
            },
            {
              "function": "_check_output_encoding",
              "line": 49
            },
            {
              "function": "_check_secure_communication",
              "line": 50
            },
            {
              "function": "_check_secrets_management",
              "line": 51
            },
            {
              "function": "get",
              "line": 54
            },
            {
              "function": "time",
              "line": 68
            },
            {
              "function": "generate_summary",
              "line": 79
            },
            {
              "function": "generate_recommendations",
              "line": 80
            },
            {
              "function": "lower",
              "line": 163
            },
            {
              "function": "lower",
              "line": 238
            },
            {
              "function": "lower",
              "line": 238
            },
            {
              "function": "lower",
              "line": 375
            },
            {
              "function": "len",
              "line": 439
            },
            {
              "function": "lower",
              "line": 483
            },
            {
              "function": "lower",
              "line": 583
            },
            {
              "function": "_check_financial_security",
              "line": 55
            },
            {
              "function": "values",
              "line": 63
            },
            {
              "function": "values",
              "line": 65
            },
            {
              "function": "search",
              "line": 103
            },
            {
              "function": "search",
              "line": 104
            },
            {
              "function": "search",
              "line": 112
            },
            {
              "function": "lower",
              "line": 123
            },
            {
              "function": "search",
              "line": 154
            },
            {
              "function": "search",
              "line": 155
            },
            {
              "function": "lower",
              "line": 158
            },
            {
              "function": "search",
              "line": 195
            },
            {
              "function": "search",
              "line": 196
            },
            {
              "function": "lower",
              "line": 205
            },
            {
              "function": "lower",
              "line": 205
            },
            {
              "function": "search",
              "line": 234
            },
            {
              "function": "search",
              "line": 235
            },
            {
              "function": "search",
              "line": 278
            },
            {
              "function": "search",
              "line": 279
            },
            {
              "function": "search",
              "line": 325
            },
            {
              "function": "search",
              "line": 326
            },
            {
              "function": "search",
              "line": 365
            },
            {
              "function": "search",
              "line": 366
            },
            {
              "function": "search",
              "line": 406
            },
            {
              "function": "search",
              "line": 407
            },
            {
              "function": "search",
              "line": 474
            },
            {
              "function": "search",
              "line": 475
            },
            {
              "function": "search",
              "line": 506
            },
            {
              "function": "search",
              "line": 539
            },
            {
              "function": "search",
              "line": 572
            },
            {
              "function": "search",
              "line": 580
            },
            {
              "function": "search",
              "line": 609
            },
            {
              "function": "search",
              "line": 610
            },
            {
              "function": "search",
              "line": 648
            },
            {
              "function": "search",
              "line": 649
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 63,
              "async": false,
              "calls": [
                "get_default_thresholds"
              ],
              "parameters": [
                "self",
                "gate_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "get_default_thresholds",
              "line": 68,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "create_quality_check",
              "line": 86,
              "async": false,
              "calls": [
                "max",
                "min",
                "QualityCheck"
              ],
              "parameters": [
                "self",
                "name",
                "passed",
                "score",
                "details",
                "recommendations",
                "level",
                "category",
                "file_path",
                "line_numbers"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "calculate_overall_score",
              "line": 111,
              "async": false,
              "calls": [
                "get",
                "values"
              ],
              "parameters": [
                "self",
                "checks"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "determine_pass_status",
              "line": 135,
              "async": false,
              "calls": [
                "get",
                "values"
              ],
              "parameters": [
                "self",
                "overall_score",
                "checks"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "generate_summary",
              "line": 151,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "generate_recommendations",
              "line": 162,
              "async": false,
              "calls": [
                "append",
                "sort",
                "values"
              ],
              "parameters": [
                "self",
                "checks"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "find_pattern_matches",
              "line": 182,
              "async": false,
              "calls": [
                "group",
                "split",
                "sub",
                "enumerate",
                "search",
                "append",
                "strip"
              ],
              "parameters": [
                "self",
                "code",
                "patterns",
                "ignore_comments"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "check_imports",
              "line": 209,
              "async": false,
              "calls": [
                "findall",
                "max",
                "join",
                "create_quality_check",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "code",
                "required",
                "forbidden"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "check_function_complexity",
              "line": 242,
              "async": false,
              "calls": [
                "findall",
                "max",
                "split",
                "create_quality_check",
                "len",
                "append",
                "startswith",
                "strip"
              ],
              "parameters": [
                "self",
                "code",
                "max_lines"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            }
          ],
          "classes": [
            {
              "name": "QualityLevel",
              "line": 16,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "QualityCheck",
              "line": 26,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "QualityGateResult",
              "line": 40,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            },
            {
              "name": "BaseQualityGate",
              "line": 55,
              "methods": [
                "__init__",
                "get_default_thresholds",
                "create_quality_check",
                "calculate_overall_score",
                "determine_pass_status",
                "generate_summary",
                "generate_recommendations",
                "find_pattern_matches",
                "check_imports",
                "check_function_complexity"
              ],
              "bases": [
                "ABC"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional",
                "Union"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "get_default_thresholds",
              "line": 65
            },
            {
              "function": "QualityCheck",
              "line": 99
            },
            {
              "function": "values",
              "line": 128
            },
            {
              "function": "get",
              "line": 148
            },
            {
              "function": "sort",
              "line": 168
            },
            {
              "function": "split",
              "line": 195
            },
            {
              "function": "findall",
              "line": 212
            },
            {
              "function": "join",
              "line": 214
            },
            {
              "function": "create_quality_check",
              "line": 233
            },
            {
              "function": "findall",
              "line": 244
            },
            {
              "function": "len",
              "line": 248
            },
            {
              "function": "create_quality_check",
              "line": 258
            },
            {
              "function": "get",
              "line": 129
            },
            {
              "function": "sub",
              "line": 191
            },
            {
              "function": "sub",
              "line": 192
            },
            {
              "function": "enumerate",
              "line": 198
            },
            {
              "function": "len",
              "line": 251
            },
            {
              "function": "max",
              "line": 102
            },
            {
              "function": "values",
              "line": 142
            },
            {
              "function": "values",
              "line": 167
            },
            {
              "function": "search",
              "line": 199
            },
            {
              "function": "append",
              "line": 223
            },
            {
              "function": "append",
              "line": 230
            },
            {
              "function": "max",
              "line": 236
            },
            {
              "function": "append",
              "line": 254
            },
            {
              "function": "min",
              "line": 102
            },
            {
              "function": "append",
              "line": 177
            },
            {
              "function": "append",
              "line": 200
            },
            {
              "function": "len",
              "line": 224
            },
            {
              "function": "len",
              "line": 231
            },
            {
              "function": "len",
              "line": 235
            },
            {
              "function": "len",
              "line": 256
            },
            {
              "function": "max",
              "line": 256
            },
            {
              "function": "len",
              "line": 260
            },
            {
              "function": "split",
              "line": 251
            },
            {
              "function": "len",
              "line": 262
            },
            {
              "function": "strip",
              "line": 203
            },
            {
              "function": "group",
              "line": 204
            },
            {
              "function": "join",
              "line": 237
            },
            {
              "function": "strip",
              "line": 252
            },
            {
              "function": "startswith",
              "line": 252
            },
            {
              "function": "search",
              "line": 204
            },
            {
              "function": "strip",
              "line": 252
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "get_default_thresholds",
              "line": 21,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_vwap_fibonacci_condition",
              "line": 325,
              "async": false,
              "calls": [
                "len",
                "sum",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_ema9_logic",
              "line": 354,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_new_high_logic",
              "line": 374,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_crv_requirement",
              "line": 394,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_space_to_382",
              "line": 414,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            },
            {
              "name": "_analyze_ron_trading_hours",
              "line": 434,
              "async": false,
              "calls": [
                "len",
                "sum",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            }
          ],
          "classes": [
            {
              "name": "RONStrategyQualityGate",
              "line": 12,
              "methods": [
                "__init__",
                "get_default_thresholds",
                "_analyze_vwap_fibonacci_condition",
                "_analyze_ema9_logic",
                "_analyze_new_high_logic",
                "_analyze_crv_requirement",
                "_analyze_space_to_382",
                "_analyze_ron_trading_hours"
              ],
              "bases": [
                "BaseQualityGate"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_quality_gate",
              "names": [
                "BaseQualityGate",
                "QualityCheck",
                "QualityGateResult",
                "QualityLevel"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 19
            },
            {
              "function": "time",
              "line": 31
            },
            {
              "function": "update",
              "line": 35
            },
            {
              "function": "update",
              "line": 36
            },
            {
              "function": "update",
              "line": 37
            },
            {
              "function": "update",
              "line": 38
            },
            {
              "function": "update",
              "line": 39
            },
            {
              "function": "update",
              "line": 40
            },
            {
              "function": "update",
              "line": 43
            },
            {
              "function": "update",
              "line": 44
            },
            {
              "function": "update",
              "line": 45
            },
            {
              "function": "update",
              "line": 48
            },
            {
              "function": "update",
              "line": 49
            },
            {
              "function": "update",
              "line": 50
            },
            {
              "function": "calculate_overall_score",
              "line": 53
            },
            {
              "function": "determine_pass_status",
              "line": 54
            },
            {
              "function": "len",
              "line": 57
            },
            {
              "function": "sum",
              "line": 58
            },
            {
              "function": "sum",
              "line": 60
            },
            {
              "function": "QualityGateResult",
              "line": 65
            },
            {
              "function": "generate_summary",
              "line": 79
            },
            {
              "function": "_analyze_vwap_fibonacci_condition",
              "line": 84
            },
            {
              "function": "_analyze_ema9_logic",
              "line": 100
            },
            {
              "function": "_analyze_new_high_logic",
              "line": 116
            },
            {
              "function": "_analyze_crv_requirement",
              "line": 132
            },
            {
              "function": "_analyze_space_to_382",
              "line": 148
            },
            {
              "function": "_analyze_ron_trading_hours",
              "line": 164
            },
            {
              "function": "sum",
              "line": 187
            },
            {
              "function": "sum",
              "line": 212
            },
            {
              "function": "sum",
              "line": 236
            },
            {
              "function": "sum",
              "line": 260
            },
            {
              "function": "sum",
              "line": 284
            },
            {
              "function": "sum",
              "line": 308
            },
            {
              "function": "sum",
              "line": 334
            },
            {
              "function": "sum",
              "line": 363
            },
            {
              "function": "sum",
              "line": 383
            },
            {
              "function": "sum",
              "line": 403
            },
            {
              "function": "sum",
              "line": 423
            },
            {
              "function": "sum",
              "line": 443
            },
            {
              "function": "create_quality_check",
              "line": 87
            },
            {
              "function": "create_quality_check",
              "line": 103
            },
            {
              "function": "create_quality_check",
              "line": 119
            },
            {
              "function": "create_quality_check",
              "line": 135
            },
            {
              "function": "create_quality_check",
              "line": 151
            },
            {
              "function": "create_quality_check",
              "line": 167
            },
            {
              "function": "len",
              "line": 188
            },
            {
              "function": "create_quality_check",
              "line": 192
            },
            {
              "function": "len",
              "line": 213
            },
            {
              "function": "create_quality_check",
              "line": 217
            },
            {
              "function": "len",
              "line": 237
            },
            {
              "function": "create_quality_check",
              "line": 241
            },
            {
              "function": "len",
              "line": 261
            },
            {
              "function": "create_quality_check",
              "line": 265
            },
            {
              "function": "len",
              "line": 285
            },
            {
              "function": "create_quality_check",
              "line": 289
            },
            {
              "function": "len",
              "line": 309
            },
            {
              "function": "create_quality_check",
              "line": 313
            },
            {
              "function": "len",
              "line": 335
            },
            {
              "function": "len",
              "line": 364
            },
            {
              "function": "len",
              "line": 384
            },
            {
              "function": "len",
              "line": 404
            },
            {
              "function": "len",
              "line": 424
            },
            {
              "function": "len",
              "line": 444
            },
            {
              "function": "super",
              "line": 19
            },
            {
              "function": "_check_vwap_fibonacci_condition",
              "line": 35
            },
            {
              "function": "_check_ema9_logic",
              "line": 36
            },
            {
              "function": "_check_new_high_logic",
              "line": 37
            },
            {
              "function": "_check_crv_requirement",
              "line": 38
            },
            {
              "function": "_check_space_to_382",
              "line": 39
            },
            {
              "function": "_check_ron_trading_hours",
              "line": 40
            },
            {
              "function": "_check_entry_conditions",
              "line": 43
            },
            {
              "function": "_check_exit_conditions",
              "line": 44
            },
            {
              "function": "_check_timing_precision",
              "line": 45
            },
            {
              "function": "_check_fibonacci_calculation",
              "line": 48
            },
            {
              "function": "_check_vwap_calculation",
              "line": 49
            },
            {
              "function": "_check_ema9_calculation",
              "line": 50
            },
            {
              "function": "time",
              "line": 63
            },
            {
              "function": "generate_summary",
              "line": 74
            },
            {
              "function": "generate_recommendations",
              "line": 75
            },
            {
              "function": "search",
              "line": 340
            },
            {
              "function": "append",
              "line": 341
            },
            {
              "function": "search",
              "line": 342
            },
            {
              "function": "append",
              "line": 343
            },
            {
              "function": "search",
              "line": 344
            },
            {
              "function": "append",
              "line": 345
            },
            {
              "function": "search",
              "line": 449
            },
            {
              "function": "append",
              "line": 450
            },
            {
              "function": "search",
              "line": 451
            },
            {
              "function": "append",
              "line": 452
            },
            {
              "function": "search",
              "line": 453
            },
            {
              "function": "append",
              "line": 454
            },
            {
              "function": "values",
              "line": 58
            },
            {
              "function": "values",
              "line": 60
            },
            {
              "function": "search",
              "line": 187
            },
            {
              "function": "search",
              "line": 212
            },
            {
              "function": "search",
              "line": 236
            },
            {
              "function": "search",
              "line": 260
            },
            {
              "function": "search",
              "line": 284
            },
            {
              "function": "search",
              "line": 308
            },
            {
              "function": "search",
              "line": 334
            },
            {
              "function": "len",
              "line": 350
            },
            {
              "function": "search",
              "line": 363
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "search",
              "line": 383
            },
            {
              "function": "len",
              "line": 390
            },
            {
              "function": "search",
              "line": 403
            },
            {
              "function": "len",
              "line": 410
            },
            {
              "function": "search",
              "line": 423
            },
            {
              "function": "len",
              "line": 430
            },
            {
              "function": "search",
              "line": 443
            },
            {
              "function": "len",
              "line": 459
            },
            {
              "function": "len",
              "line": 196
            },
            {
              "function": "len",
              "line": 221
            },
            {
              "function": "len",
              "line": 245
            },
            {
              "function": "len",
              "line": 269
            },
            {
              "function": "len",
              "line": 293
            },
            {
              "function": "len",
              "line": 317
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 18,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "get_default_thresholds",
              "line": 21,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_decimal_precision",
              "line": 296,
              "async": false,
              "calls": [
                "append",
                "len",
                "findall"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_pnl_calculations",
              "line": 317,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_crv_calculations",
              "line": 336,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_position_validation",
              "line": 356,
              "async": false,
              "calls": [
                "search",
                "sum",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_stop_loss_logic",
              "line": 376,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_exposure_limits",
              "line": 395,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_market_hours",
              "line": 414,
              "async": false,
              "calls": [
                "search",
                "sum",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_audit_trail",
              "line": 433,
              "async": false,
              "calls": [
                "len",
                "sum",
                "search",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_type_annotations",
              "line": 452,
              "async": false,
              "calls": [
                "max",
                "len",
                "findall"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_exception_patterns",
              "line": 467,
              "async": false,
              "calls": [
                "append",
                "len",
                "findall"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_graceful_degradation",
              "line": 496,
              "async": false,
              "calls": [
                "search",
                "sum",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_docstring_coverage",
              "line": 515,
              "async": false,
              "calls": [
                "max",
                "len",
                "findall"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_fallback_policy",
              "line": 530,
              "async": false,
              "calls": [
                "search",
                "len",
                "append"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            },
            {
              "name": "_check_live_data_policy",
              "line": 555,
              "async": false,
              "calls": [
                "search",
                "sum",
                "min"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            }
          ],
          "classes": [
            {
              "name": "TradingSystemQualityGate",
              "line": 12,
              "methods": [
                "__init__",
                "get_default_thresholds",
                "_check_decimal_precision",
                "_check_pnl_calculations",
                "_check_crv_calculations",
                "_check_position_validation",
                "_check_stop_loss_logic",
                "_check_exposure_limits",
                "_check_market_hours",
                "_check_audit_trail",
                "_check_type_annotations",
                "_check_exception_patterns",
                "_check_graceful_degradation",
                "_check_docstring_coverage",
                "_check_fallback_policy",
                "_check_live_data_policy"
              ],
              "bases": [
                "BaseQualityGate"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional",
                "Union"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_quality_gate",
              "names": [
                "BaseQualityGate",
                "QualityCheck",
                "QualityGateResult",
                "QualityLevel"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 19
            },
            {
              "function": "time",
              "line": 34
            },
            {
              "function": "update",
              "line": 38
            },
            {
              "function": "update",
              "line": 39
            },
            {
              "function": "update",
              "line": 40
            },
            {
              "function": "update",
              "line": 43
            },
            {
              "function": "update",
              "line": 44
            },
            {
              "function": "update",
              "line": 45
            },
            {
              "function": "calculate_overall_score",
              "line": 52
            },
            {
              "function": "determine_pass_status",
              "line": 53
            },
            {
              "function": "len",
              "line": 56
            },
            {
              "function": "sum",
              "line": 57
            },
            {
              "function": "sum",
              "line": 59
            },
            {
              "function": "QualityGateResult",
              "line": 64
            },
            {
              "function": "generate_summary",
              "line": 78
            },
            {
              "function": "_check_decimal_precision",
              "line": 86
            },
            {
              "function": "create_quality_check",
              "line": 87
            },
            {
              "function": "_check_pnl_calculations",
              "line": 98
            },
            {
              "function": "create_quality_check",
              "line": 99
            },
            {
              "function": "_check_crv_calculations",
              "line": 110
            },
            {
              "function": "create_quality_check",
              "line": 111
            },
            {
              "function": "_check_position_validation",
              "line": 128
            },
            {
              "function": "create_quality_check",
              "line": 129
            },
            {
              "function": "_check_stop_loss_logic",
              "line": 140
            },
            {
              "function": "create_quality_check",
              "line": 141
            },
            {
              "function": "_check_exposure_limits",
              "line": 152
            },
            {
              "function": "create_quality_check",
              "line": 153
            },
            {
              "function": "_check_market_hours",
              "line": 170
            },
            {
              "function": "create_quality_check",
              "line": 171
            },
            {
              "function": "_check_audit_trail",
              "line": 182
            },
            {
              "function": "create_quality_check",
              "line": 183
            },
            {
              "function": "check_function_complexity",
              "line": 200
            },
            {
              "function": "_check_type_annotations",
              "line": 204
            },
            {
              "function": "create_quality_check",
              "line": 205
            },
            {
              "function": "_check_exception_patterns",
              "line": 222
            },
            {
              "function": "create_quality_check",
              "line": 223
            },
            {
              "function": "_check_graceful_degradation",
              "line": 234
            },
            {
              "function": "create_quality_check",
              "line": 235
            },
            {
              "function": "_check_docstring_coverage",
              "line": 252
            },
            {
              "function": "create_quality_check",
              "line": 253
            },
            {
              "function": "_check_fallback_policy",
              "line": 270
            },
            {
              "function": "create_quality_check",
              "line": 271
            },
            {
              "function": "_check_live_data_policy",
              "line": 282
            },
            {
              "function": "create_quality_check",
              "line": 283
            },
            {
              "function": "len",
              "line": 298
            },
            {
              "function": "len",
              "line": 299
            },
            {
              "function": "sum",
              "line": 325
            },
            {
              "function": "min",
              "line": 326
            },
            {
              "function": "sum",
              "line": 345
            },
            {
              "function": "min",
              "line": 346
            },
            {
              "function": "sum",
              "line": 365
            },
            {
              "function": "min",
              "line": 366
            },
            {
              "function": "sum",
              "line": 384
            },
            {
              "function": "min",
              "line": 385
            },
            {
              "function": "sum",
              "line": 403
            },
            {
              "function": "min",
              "line": 404
            },
            {
              "function": "sum",
              "line": 422
            },
            {
              "function": "min",
              "line": 423
            },
            {
              "function": "sum",
              "line": 441
            },
            {
              "function": "min",
              "line": 442
            },
            {
              "function": "len",
              "line": 454
            },
            {
              "function": "len",
              "line": 455
            },
            {
              "function": "len",
              "line": 469
            },
            {
              "function": "len",
              "line": 470
            },
            {
              "function": "len",
              "line": 471
            },
            {
              "function": "sum",
              "line": 504
            },
            {
              "function": "min",
              "line": 505
            },
            {
              "function": "len",
              "line": 517
            },
            {
              "function": "len",
              "line": 518
            },
            {
              "function": "sum",
              "line": 563
            },
            {
              "function": "update",
              "line": 49
            },
            {
              "function": "findall",
              "line": 298
            },
            {
              "function": "findall",
              "line": 299
            },
            {
              "function": "append",
              "line": 306
            },
            {
              "function": "append",
              "line": 308
            },
            {
              "function": "findall",
              "line": 454
            },
            {
              "function": "findall",
              "line": 455
            },
            {
              "function": "findall",
              "line": 469
            },
            {
              "function": "findall",
              "line": 470
            },
            {
              "function": "findall",
              "line": 471
            },
            {
              "function": "append",
              "line": 485
            },
            {
              "function": "append",
              "line": 487
            },
            {
              "function": "findall",
              "line": 517
            },
            {
              "function": "findall",
              "line": 518
            },
            {
              "function": "search",
              "line": 542
            },
            {
              "function": "len",
              "line": 546
            },
            {
              "function": "min",
              "line": 564
            },
            {
              "function": "super",
              "line": 19
            },
            {
              "function": "_check_financial_calculations",
              "line": 38
            },
            {
              "function": "_check_risk_management",
              "line": 39
            },
            {
              "function": "_check_trading_compliance",
              "line": 40
            },
            {
              "function": "_check_code_structure",
              "line": 43
            },
            {
              "function": "_check_error_handling",
              "line": 44
            },
            {
              "function": "_check_documentation",
              "line": 45
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "time",
              "line": 62
            },
            {
              "function": "generate_summary",
              "line": 73
            },
            {
              "function": "generate_recommendations",
              "line": 74
            },
            {
              "function": "len",
              "line": 326
            },
            {
              "function": "len",
              "line": 346
            },
            {
              "function": "len",
              "line": 385
            },
            {
              "function": "len",
              "line": 404
            },
            {
              "function": "len",
              "line": 442
            },
            {
              "function": "max",
              "line": 457
            },
            {
              "function": "max",
              "line": 520
            },
            {
              "function": "append",
              "line": 543
            },
            {
              "function": "len",
              "line": 545
            },
            {
              "function": "len",
              "line": 545
            },
            {
              "function": "_check_stock_analyser_compliance",
              "line": 49
            },
            {
              "function": "values",
              "line": 57
            },
            {
              "function": "values",
              "line": 59
            },
            {
              "function": "search",
              "line": 325
            },
            {
              "function": "search",
              "line": 345
            },
            {
              "function": "search",
              "line": 365
            },
            {
              "function": "search",
              "line": 384
            },
            {
              "function": "search",
              "line": 403
            },
            {
              "function": "search",
              "line": 422
            },
            {
              "function": "search",
              "line": 441
            },
            {
              "function": "search",
              "line": 504
            },
            {
              "function": "search",
              "line": 563
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "base_quality_gate",
              "names": [
                "BaseQualityGate",
                "QualityCheck",
                "QualityGateResult",
                "QualityLevel"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "trading_quality_gate",
              "names": [
                "TradingSystemQualityGate"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "ron_strategy_quality_gate",
              "names": [
                "RONStrategyQualityGate"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "engine_parity_quality_gate",
              "names": [
                "EngineParityQualityGate"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "security_quality_gate",
              "names": [
                "SecurityQualityGate"
              ],
              "line": 17
            }
          ],
          "calls": []
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 22,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "get_workflow_steps",
              "line": 35,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "get_step_agents",
              "line": 39,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "get_step_instructions",
              "line": 53,
              "async": false,
              "calls": [
                "get",
                "getattr"
              ],
              "parameters": [
                "self",
                "step",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "validate_step_completion",
              "line": 319,
              "async": false,
              "calls": [
                "get",
                "lower",
                "sum",
                "len"
              ],
              "parameters": [
                "self",
                "step",
                "step_output"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "get_workflow_description",
              "line": 361,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            },
            {
              "name": "get_success_criteria",
              "line": 381,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "GenericSoftwareWorkflow",
              "line": 16,
              "methods": [
                "__init__",
                "get_workflow_steps",
                "get_step_agents",
                "get_step_instructions",
                "validate_step_completion",
                "get_workflow_description",
                "get_success_criteria"
              ],
              "bases": [
                "BaseWorkflow"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base_workflow",
              "names": [
                "BaseWorkflow"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "shared_context",
              "names": [
                "SharedContext"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "__init__",
              "line": 23
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "get",
              "line": 316
            },
            {
              "function": "lower",
              "line": 325
            },
            {
              "function": "get",
              "line": 355
            },
            {
              "function": "sum",
              "line": 356
            },
            {
              "function": "super",
              "line": 23
            },
            {
              "function": "getattr",
              "line": 57
            },
            {
              "function": "len",
              "line": 359
            },
            {
              "function": "getattr",
              "line": 59
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "get_workflow_steps",
              "line": 38,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "get_step_agents",
              "line": 42,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "get_step_instructions",
              "line": 60,
              "async": false,
              "calls": [
                "get",
                "getattr"
              ],
              "parameters": [
                "self",
                "step",
                "context"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "validate_step_completion",
              "line": 580,
              "async": false,
              "calls": [
                "get",
                "lower",
                "sum",
                "len"
              ],
              "parameters": [
                "self",
                "step",
                "step_output"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "get_workflow_description",
              "line": 634,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            },
            {
              "name": "get_success_criteria",
              "line": 659,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "TradingSystemWorkflow",
              "line": 15,
              "methods": [
                "__init__",
                "get_workflow_steps",
                "get_step_agents",
                "get_step_instructions",
                "validate_step_completion",
                "get_workflow_description",
                "get_success_criteria"
              ],
              "bases": [
                "BaseWorkflow"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_workflow",
              "names": [
                "BaseWorkflow"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "shared_context",
              "names": [
                "SharedContext"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "__init__",
              "line": 22
            },
            {
              "function": "get",
              "line": 58
            },
            {
              "function": "get",
              "line": 577
            },
            {
              "function": "lower",
              "line": 586
            },
            {
              "function": "get",
              "line": 628
            },
            {
              "function": "sum",
              "line": 629
            },
            {
              "function": "super",
              "line": 22
            },
            {
              "function": "getattr",
              "line": 64
            },
            {
              "function": "len",
              "line": 632
            },
            {
              "function": "getattr",
              "line": 66
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py": {
          "functions": [
            {
              "name": "get_workflow_for_project_type",
              "line": 43,
              "async": false,
              "calls": [
                "get",
                "lower",
                "workflow_class"
              ],
              "parameters": [
                "project_type"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
            },
            {
              "name": "get_available_workflows",
              "line": 63,
              "async": false,
              "calls": [
                "items",
                "len",
                "workflow_class",
                "get_workflow_steps",
                "get_workflow_description"
              ],
              "parameters": [],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "base_workflow",
              "names": [
                "BaseWorkflow"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "generic_software_workflow",
              "names": [
                "GenericSoftwareWorkflow"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "trading_system_workflow",
              "names": [
                "TradingSystemWorkflow"
              ],
              "line": 26
            }
          ],
          "calls": [
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "workflow_class",
              "line": 61
            },
            {
              "function": "items",
              "line": 71
            },
            {
              "function": "lower",
              "line": 56
            },
            {
              "function": "workflow_class",
              "line": 72
            },
            {
              "function": "get_workflow_description",
              "line": 75
            },
            {
              "function": "get_workflow_steps",
              "line": 76
            },
            {
              "function": "len",
              "line": 77
            },
            {
              "function": "get_workflow_steps",
              "line": 77
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "now"
              ],
              "parameters": [
                "self",
                "name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_workflow_steps",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_step_agents",
              "line": 37,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_step_instructions",
              "line": 50,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step",
                "context"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "validate_step_completion",
              "line": 64,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step",
                "step_output"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_workflow_description",
              "line": 78,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_success_criteria",
              "line": 88,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_workflow_info",
              "line": 97,
              "async": false,
              "calls": [
                "get_workflow_description",
                "isoformat",
                "len",
                "get_workflow_steps",
                "get_success_criteria"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "log_execution",
              "line": 113,
              "async": false,
              "calls": [
                "now",
                "info",
                "isoformat",
                "get",
                "len",
                "append",
                "str"
              ],
              "parameters": [
                "self",
                "step",
                "agent",
                "result"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_next_step",
              "line": 135,
              "async": false,
              "calls": [
                "len",
                "warning",
                "get_workflow_steps",
                "index"
              ],
              "parameters": [
                "self",
                "current_step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_step_position",
              "line": 159,
              "async": false,
              "calls": [
                "len",
                "get_workflow_steps",
                "index"
              ],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "is_workflow_complete",
              "line": 176,
              "async": false,
              "calls": [
                "get_workflow_steps"
              ],
              "parameters": [
                "self",
                "current_step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_workflow_progress",
              "line": 189,
              "async": false,
              "calls": [
                "get_step_position"
              ],
              "parameters": [
                "self",
                "current_step"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            },
            {
              "name": "get_execution_statistics",
              "line": 202,
              "async": false,
              "calls": [
                "get",
                "sum",
                "len",
                "max"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "BaseWorkflow",
              "line": 13,
              "methods": [
                "__init__",
                "get_workflow_steps",
                "get_step_agents",
                "get_step_instructions",
                "validate_step_completion",
                "get_workflow_description",
                "get_success_criteria",
                "get_workflow_info",
                "log_execution",
                "get_next_step",
                "get_step_position",
                "is_workflow_complete",
                "get_workflow_progress",
                "get_execution_statistics"
              ],
              "bases": [
                "ABC"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "now",
              "line": 23
            },
            {
              "function": "append",
              "line": 131
            },
            {
              "function": "info",
              "line": 133
            },
            {
              "function": "get_workflow_steps",
              "line": 145
            },
            {
              "function": "get_workflow_steps",
              "line": 169
            },
            {
              "function": "get_workflow_steps",
              "line": 186
            },
            {
              "function": "get_step_position",
              "line": 199
            },
            {
              "function": "len",
              "line": 218
            },
            {
              "function": "sum",
              "line": 219
            },
            {
              "function": "get_workflow_description",
              "line": 106
            },
            {
              "function": "get_workflow_steps",
              "line": 107
            },
            {
              "function": "get_success_criteria",
              "line": 108
            },
            {
              "function": "isoformat",
              "line": 109
            },
            {
              "function": "len",
              "line": 110
            },
            {
              "function": "isoformat",
              "line": 123
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "len",
              "line": 128
            },
            {
              "function": "index",
              "line": 151
            },
            {
              "function": "get",
              "line": 222
            },
            {
              "function": "get",
              "line": 230
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "str",
              "line": 128
            },
            {
              "function": "len",
              "line": 152
            },
            {
              "function": "warning",
              "line": 155
            },
            {
              "function": "index",
              "line": 171
            },
            {
              "function": "len",
              "line": 172
            },
            {
              "function": "sum",
              "line": 223
            },
            {
              "function": "len",
              "line": 223
            },
            {
              "function": "get",
              "line": 233
            },
            {
              "function": "get",
              "line": 234
            },
            {
              "function": "max",
              "line": 242
            },
            {
              "function": "max",
              "line": 243
            },
            {
              "function": "now",
              "line": 123
            },
            {
              "function": "get",
              "line": 128
            },
            {
              "function": "len",
              "line": 174
            },
            {
              "function": "get",
              "line": 219
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 180,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "project_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            },
            {
              "name": "get_domain_instructions",
              "line": 183,
              "async": false,
              "calls": [
                "get_agent_enhancement_instructions",
                "dumps"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            },
            {
              "name": "get_quality_gates",
              "line": 214,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            },
            {
              "name": "get_project_specifics",
              "line": 224,
              "async": false,
              "calls": [
                "ProjectSpecification"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            },
            {
              "name": "get_agent_enhancement_instructions",
              "line": 254,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            },
            {
              "name": "get_iteration_limits",
              "line": 334,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            }
          ],
          "classes": [
            {
              "name": "TradingProjectContext",
              "line": 177,
              "methods": [
                "__init__",
                "get_domain_instructions",
                "get_quality_gates",
                "get_project_specifics",
                "get_agent_enhancement_instructions",
                "get_iteration_limits"
              ],
              "bases": [
                "BaseProjectContext"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_project_context",
              "names": [
                "BaseProjectContext",
                "ProjectSpecification"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 181
            },
            {
              "function": "ProjectSpecification",
              "line": 226
            },
            {
              "function": "super",
              "line": 181
            },
            {
              "function": "dumps",
              "line": 191
            },
            {
              "function": "dumps",
              "line": 194
            },
            {
              "function": "dumps",
              "line": 197
            },
            {
              "function": "dumps",
              "line": 211
            },
            {
              "function": "get_agent_enhancement_instructions",
              "line": 211
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "base_project_context",
              "names": [
                "BaseProjectContext",
                "ProjectSpecification"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "trading_project_context",
              "names": [
                "TradingProjectContext"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "web_app_context",
              "names": [
                "WebAppProjectContext"
              ],
              "line": 11
            }
          ],
          "calls": []
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 103,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "project_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            },
            {
              "name": "get_domain_instructions",
              "line": 106,
              "async": false,
              "calls": [
                "get_agent_enhancement_instructions",
                "dumps"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            },
            {
              "name": "get_quality_gates",
              "line": 143,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            },
            {
              "name": "get_project_specifics",
              "line": 153,
              "async": false,
              "calls": [
                "ProjectSpecification"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            },
            {
              "name": "get_agent_enhancement_instructions",
              "line": 193,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            },
            {
              "name": "get_iteration_limits",
              "line": 276,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            }
          ],
          "classes": [
            {
              "name": "WebAppProjectContext",
              "line": 100,
              "methods": [
                "__init__",
                "get_domain_instructions",
                "get_quality_gates",
                "get_project_specifics",
                "get_agent_enhancement_instructions",
                "get_iteration_limits"
              ],
              "bases": [
                "BaseProjectContext"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base_project_context",
              "names": [
                "BaseProjectContext",
                "ProjectSpecification"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "__init__",
              "line": 104
            },
            {
              "function": "ProjectSpecification",
              "line": 155
            },
            {
              "function": "super",
              "line": 104
            },
            {
              "function": "dumps",
              "line": 114
            },
            {
              "function": "dumps",
              "line": 117
            },
            {
              "function": "dumps",
              "line": 140
            },
            {
              "function": "get_agent_enhancement_instructions",
              "line": 140
            }
          ]
        },
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "project_name"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_domain_instructions",
              "line": 38,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_quality_gates",
              "line": 54,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_project_specifics",
              "line": 67,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "abstractmethod"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_agent_enhancement_instructions",
              "line": 76,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_iteration_limits",
              "line": 88,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "get_conflict_resolution_priorities",
              "line": 103,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "validate_context",
              "line": 122,
              "async": false,
              "calls": [
                "get_quality_gates",
                "isinstance",
                "get_project_specifics",
                "get_domain_instructions",
                "len",
                "strip"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            }
          ],
          "classes": [
            {
              "name": "ProjectSpecification",
              "line": 14,
              "methods": [],
              "bases": [],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            },
            {
              "name": "BaseProjectContext",
              "line": 25,
              "methods": [
                "__init__",
                "get_domain_instructions",
                "get_quality_gates",
                "get_project_specifics",
                "get_agent_enhancement_instructions",
                "get_iteration_limits",
                "get_conflict_resolution_priorities",
                "validate_context"
              ],
              "bases": [
                "ABC"
              ],
              "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "get_domain_instructions",
              "line": 130
            },
            {
              "function": "get_quality_gates",
              "line": 131
            },
            {
              "function": "get_project_specifics",
              "line": 132
            },
            {
              "function": "isinstance",
              "line": 136
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "strip",
              "line": 134
            }
          ]
        },
        "tests/test_cache_manager.py": {
          "functions": [],
          "classes": [
            {
              "name": "TestAgent",
              "line": 43,
              "methods": [],
              "bases": [],
              "file": "tests/test_cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "pytest",
              "names": [
                "pytest"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "unittest.mock",
              "names": [
                "Mock",
                "patch",
                "AsyncMock"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "CacheManager",
              "line": 16
            },
            {
              "function": "CacheManager",
              "line": 26
            },
            {
              "function": "AsyncMock",
              "line": 27
            },
            {
              "function": "assert_called_once",
              "line": 32
            },
            {
              "function": "dumps",
              "line": 35
            },
            {
              "function": "TestAgent",
              "line": 51
            },
            {
              "function": "run",
              "line": 70
            },
            {
              "function": "patch",
              "line": 18
            },
            {
              "function": "AsyncMock",
              "line": 19
            },
            {
              "function": "set",
              "line": 31
            },
            {
              "function": "get",
              "line": 36
            },
            {
              "function": "cache_agent_response",
              "line": 46
            },
            {
              "function": "patch",
              "line": 54
            },
            {
              "function": "AsyncMock",
              "line": 55
            },
            {
              "function": "test_cache_manager_connect",
              "line": 70
            },
            {
              "function": "connect",
              "line": 20
            },
            {
              "function": "expensive_operation",
              "line": 60
            },
            {
              "function": "expensive_operation",
              "line": 65
            }
          ]
        },
        "tests/test_server_auto.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "append",
              "line": 101
            },
            {
              "function": "append",
              "line": 104
            },
            {
              "function": "append",
              "line": 107
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "all",
              "line": 116
            },
            {
              "function": "run",
              "line": 125
            },
            {
              "function": "exit",
              "line": 126
            },
            {
              "function": "ClientSession",
              "line": 18
            },
            {
              "function": "ClientSession",
              "line": 33
            },
            {
              "function": "ClientSession",
              "line": 50
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "run_all_tests",
              "line": 125
            },
            {
              "function": "test_health_check",
              "line": 101
            },
            {
              "function": "test_agents_endpoint",
              "line": 104
            },
            {
              "function": "test_websocket_connection",
              "line": 107
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "get",
              "line": 35
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "ws_connect",
              "line": 52
            },
            {
              "function": "loads",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "loads",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "loads",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "loads",
              "line": 81
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "len",
              "line": 112
            },
            {
              "function": "sum",
              "line": 113
            },
            {
              "function": "json",
              "line": 21
            },
            {
              "function": "json",
              "line": 36
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "len",
              "line": 40
            },
            {
              "function": "receive",
              "line": 54
            },
            {
              "function": "send_json",
              "line": 60
            },
            {
              "function": "receive",
              "line": 67
            },
            {
              "function": "receive",
              "line": 72
            },
            {
              "function": "send_json",
              "line": 78
            },
            {
              "function": "receive",
              "line": 80
            },
            {
              "function": "close",
              "line": 85
            },
            {
              "function": "len",
              "line": 114
            },
            {
              "function": "sum",
              "line": 114
            },
            {
              "function": "dumps",
              "line": 22
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "get",
              "line": 69
            }
          ]
        },
        "tests/test_file_capabilities_simple.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "get_capabilities_loader"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 133
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "mkdtemp",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "get_capabilities_loader",
              "line": 84
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "run",
              "line": 138
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "FileSystemTools",
              "line": 28
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "get_audit_log",
              "line": 69
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "rmtree",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "get_agent_capabilities",
              "line": 95
            },
            {
              "function": "get",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "can_agent_write",
              "line": 112
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "main",
              "line": 138
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "write_file",
              "line": 32
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "join",
              "line": 42
            },
            {
              "function": "exists",
              "line": 43
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "write_file",
              "line": 55
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "test_file_tools",
              "line": 124
            },
            {
              "function": "test_capabilities_loader",
              "line": 125
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print_exc",
              "line": 134
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "open",
              "line": 45
            },
            {
              "function": "read",
              "line": 46
            },
            {
              "function": "len",
              "line": 70
            },
            {
              "function": "len",
              "line": 47
            }
          ]
        },
        "tests/test_direct_file_write.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 71
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 9
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "run",
              "line": 75
            },
            {
              "function": "CodeSmithAgent",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "test_direct_file_write",
              "line": 75
            },
            {
              "function": "implement_code_to_file",
              "line": 37
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "exists",
              "line": 49
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print_exc",
              "line": 72
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "remove",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "open",
              "line": 51
            },
            {
              "function": "read",
              "line": 52
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "len",
              "line": 53
            },
            {
              "function": "len",
              "line": 55
            }
          ]
        },
        "tests/test_real_agent.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "run",
              "line": 83
            },
            {
              "function": "exit",
              "line": 84
            },
            {
              "function": "ClientSession",
              "line": 18
            },
            {
              "function": "test_real_agent",
              "line": 83
            },
            {
              "function": "ws_connect",
              "line": 20
            },
            {
              "function": "loads",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "loads",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "loads",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "loads",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "get",
              "line": 64
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "receive",
              "line": 22
            },
            {
              "function": "send_json",
              "line": 28
            },
            {
              "function": "receive",
              "line": 35
            },
            {
              "function": "wait_for",
              "line": 40
            },
            {
              "function": "send_json",
              "line": 48
            },
            {
              "function": "receive",
              "line": 55
            },
            {
              "function": "wait_for",
              "line": 58
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "close",
              "line": 70
            },
            {
              "function": "receive",
              "line": 40
            },
            {
              "function": "receive",
              "line": 58
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "get",
              "line": 37
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 61
            },
            {
              "function": "get",
              "line": 44
            }
          ]
        },
        "tests/test_server.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "append",
              "line": 115
            },
            {
              "function": "append",
              "line": 118
            },
            {
              "function": "append",
              "line": 121
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "all",
              "line": 130
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "input",
              "line": 142
            },
            {
              "function": "run",
              "line": 145
            },
            {
              "function": "exit",
              "line": 146
            },
            {
              "function": "ClientSession",
              "line": 20
            },
            {
              "function": "ClientSession",
              "line": 36
            },
            {
              "function": "ClientSession",
              "line": 53
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "run_all_tests",
              "line": 145
            },
            {
              "function": "test_health_check",
              "line": 115
            },
            {
              "function": "test_agents_endpoint",
              "line": 118
            },
            {
              "function": "test_websocket_connection",
              "line": 121
            },
            {
              "function": "get",
              "line": 22
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "ws_connect",
              "line": 55
            },
            {
              "function": "loads",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "loads",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "loads",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "loads",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "loads",
              "line": 95
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "len",
              "line": 126
            },
            {
              "function": "sum",
              "line": 127
            },
            {
              "function": "json",
              "line": 23
            },
            {
              "function": "json",
              "line": 39
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "len",
              "line": 43
            },
            {
              "function": "receive",
              "line": 57
            },
            {
              "function": "send_json",
              "line": 63
            },
            {
              "function": "receive",
              "line": 70
            },
            {
              "function": "receive",
              "line": 75
            },
            {
              "function": "send_json",
              "line": 81
            },
            {
              "function": "receive",
              "line": 86
            },
            {
              "function": "send_json",
              "line": 92
            },
            {
              "function": "receive",
              "line": 94
            },
            {
              "function": "close",
              "line": 99
            },
            {
              "function": "len",
              "line": 128
            },
            {
              "function": "sum",
              "line": 128
            },
            {
              "function": "dumps",
              "line": 24
            }
          ]
        },
        "tests/test_agent_write_integration.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 127
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 162
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 15
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "mkdtemp",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "mkdtemp",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "run",
              "line": 167
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "ArchitectAgent",
              "line": 32
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "rmtree",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "CodeSmithAgent",
              "line": 82
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "rmtree",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "ClientSession",
              "line": 129
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "main",
              "line": 167
            },
            {
              "function": "abspath",
              "line": 15
            },
            {
              "function": "create_redis_config",
              "line": 42
            },
            {
              "function": "join",
              "line": 51
            },
            {
              "function": "exists",
              "line": 52
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "implement_code_to_file",
              "line": 92
            },
            {
              "function": "join",
              "line": 101
            },
            {
              "function": "exists",
              "line": 102
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "test_architect_creates_redis_config",
              "line": 152
            },
            {
              "function": "test_codesmith_writes_code",
              "line": 153
            },
            {
              "function": "test_agent_via_api",
              "line": 154
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print_exc",
              "line": 163
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "open",
              "line": 56
            },
            {
              "function": "read",
              "line": 57
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "get",
              "line": 97
            },
            {
              "function": "open",
              "line": 106
            },
            {
              "function": "read",
              "line": 107
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "json",
              "line": 133
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "len",
              "line": 109
            }
          ]
        },
        "tests/test_agent_file_capabilities.py": {
          "functions": [
            {
              "name": "main",
              "line": 273,
              "async": false,
              "calls": [
                "print",
                "main"
              ],
              "parameters": [],
              "decorators": [],
              "file": "tests/test_agent_file_capabilities.py"
            },
            {
              "name": "setup_method",
              "line": 28,
              "async": false,
              "calls": [
                "mkdtemp"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "tests/test_agent_file_capabilities.py"
            },
            {
              "name": "teardown_method",
              "line": 33,
              "async": false,
              "calls": [
                "rmtree",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "tests/test_agent_file_capabilities.py"
            }
          ],
          "classes": [
            {
              "name": "TestAgentFileCapabilities",
              "line": 25,
              "methods": [
                "setup_method",
                "teardown_method"
              ],
              "bases": [],
              "file": "tests/test_agent_file_capabilities.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "pytest",
              "names": [
                "pytest"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "BaseAgent",
                "AgentConfig",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "get_capabilities_loader"
              ],
              "line": 22
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 16
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "main",
              "line": 278
            },
            {
              "function": "main",
              "line": 282
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "mkdtemp",
              "line": 30
            },
            {
              "function": "exists",
              "line": 35
            },
            {
              "function": "FileSystemTools",
              "line": 41
            },
            {
              "function": "FileSystemTools",
              "line": 49
            },
            {
              "function": "exists",
              "line": 60
            },
            {
              "function": "FileSystemTools",
              "line": 70
            },
            {
              "function": "FileSystemTools",
              "line": 87
            },
            {
              "function": "FileSystemTools",
              "line": 103
            },
            {
              "function": "exists",
              "line": 124
            },
            {
              "function": "CodeSmithAgent",
              "line": 130
            },
            {
              "function": "FileSystemTools",
              "line": 133
            },
            {
              "function": "ArchitectAgent",
              "line": 151
            },
            {
              "function": "FileSystemTools",
              "line": 154
            },
            {
              "function": "ArchitectAgent",
              "line": 175
            },
            {
              "function": "FileSystemTools",
              "line": 178
            },
            {
              "function": "FileSystemTools",
              "line": 196
            },
            {
              "function": "get_audit_log",
              "line": 210
            },
            {
              "function": "get_capabilities_loader",
              "line": 217
            },
            {
              "function": "get_agent_capabilities",
              "line": 220
            },
            {
              "function": "get_agent_capabilities",
              "line": 224
            },
            {
              "function": "can_agent_write",
              "line": 228
            },
            {
              "function": "can_agent_write",
              "line": 231
            },
            {
              "function": "AgentConfig",
              "line": 238
            },
            {
              "function": "BaseAgent",
              "line": 246
            },
            {
              "function": "FileSystemTools",
              "line": 258
            },
            {
              "function": "join",
              "line": 269
            },
            {
              "function": "exists",
              "line": 270
            },
            {
              "function": "abspath",
              "line": 16
            },
            {
              "function": "rmtree",
              "line": 36
            },
            {
              "function": "len",
              "line": 44
            },
            {
              "function": "write_file",
              "line": 52
            },
            {
              "function": "join",
              "line": 60
            },
            {
              "function": "open",
              "line": 63
            },
            {
              "function": "read",
              "line": 64
            },
            {
              "function": "write_file",
              "line": 73
            },
            {
              "function": "exists",
              "line": 82
            },
            {
              "function": "write_file",
              "line": 90
            },
            {
              "function": "write_file",
              "line": 108
            },
            {
              "function": "write_file",
              "line": 116
            },
            {
              "function": "implement_code_to_file",
              "line": 136
            },
            {
              "function": "exists",
              "line": 142
            },
            {
              "function": "create_redis_config",
              "line": 157
            },
            {
              "function": "join",
              "line": 163
            },
            {
              "function": "exists",
              "line": 164
            },
            {
              "function": "create_docker_compose",
              "line": 181
            },
            {
              "function": "join",
              "line": 184
            },
            {
              "function": "exists",
              "line": 185
            },
            {
              "function": "write_file",
              "line": 199
            },
            {
              "function": "write_file",
              "line": 200
            },
            {
              "function": "write_file",
              "line": 201
            },
            {
              "function": "len",
              "line": 204
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "len",
              "line": 222
            },
            {
              "function": "get",
              "line": 225
            },
            {
              "function": "write_implementation",
              "line": 250
            },
            {
              "function": "lower",
              "line": 253
            },
            {
              "function": "write_file",
              "line": 261
            },
            {
              "function": "join",
              "line": 63
            },
            {
              "function": "join",
              "line": 82
            },
            {
              "function": "join",
              "line": 142
            },
            {
              "function": "open",
              "line": 167
            },
            {
              "function": "read",
              "line": 168
            },
            {
              "function": "open",
              "line": 188
            },
            {
              "function": "read",
              "line": 189
            },
            {
              "function": "get",
              "line": 222
            }
          ]
        },
        "tests/test_integration.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "tests/test_integration.py"
            },
            {
              "name": "record_result",
              "line": 382,
              "async": false,
              "calls": [
                "print",
                "isoformat",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "test_name",
                "success",
                "details"
              ],
              "decorators": [],
              "file": "tests/test_integration.py"
            },
            {
              "name": "print_summary",
              "line": 406,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "tests/test_integration.py"
            }
          ],
          "classes": [
            {
              "name": "IntegrationTestSuite",
              "line": 17,
              "methods": [
                "__init__",
                "record_result",
                "print_summary"
              ],
              "bases": [],
              "file": "tests/test_integration.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 434
            },
            {
              "function": "IntegrationTestSuite",
              "line": 452
            },
            {
              "function": "exit",
              "line": 456
            },
            {
              "function": "run",
              "line": 459
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print_summary",
              "line": 57
            },
            {
              "function": "append",
              "line": 400
            },
            {
              "function": "print",
              "line": 404
            },
            {
              "function": "print",
              "line": 408
            },
            {
              "function": "print",
              "line": 409
            },
            {
              "function": "print",
              "line": 410
            },
            {
              "function": "print",
              "line": 411
            },
            {
              "function": "print",
              "line": 412
            },
            {
              "function": "print",
              "line": 413
            },
            {
              "function": "print",
              "line": 414
            },
            {
              "function": "print",
              "line": 422
            },
            {
              "function": "run_all_tests",
              "line": 453
            },
            {
              "function": "main",
              "line": 459
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "ClientSession",
              "line": 61
            },
            {
              "function": "ClientSession",
              "line": 92
            },
            {
              "function": "ClientSession",
              "line": 124
            },
            {
              "function": "ClientSession",
              "line": 166
            },
            {
              "function": "ClientSession",
              "line": 215
            },
            {
              "function": "ClientSession",
              "line": 263
            },
            {
              "function": "ClientSession",
              "line": 310
            },
            {
              "function": "ClientSession",
              "line": 341
            },
            {
              "function": "isoformat",
              "line": 397
            },
            {
              "function": "print",
              "line": 417
            },
            {
              "function": "print",
              "line": 425
            },
            {
              "function": "print",
              "line": 427
            },
            {
              "function": "ClientSession",
              "line": 437
            },
            {
              "function": "print",
              "line": 445
            },
            {
              "function": "print",
              "line": 446
            },
            {
              "function": "print",
              "line": 447
            },
            {
              "function": "print",
              "line": 448
            },
            {
              "function": "exit",
              "line": 449
            },
            {
              "function": "ws_connect",
              "line": 125
            },
            {
              "function": "ws_connect",
              "line": 167
            },
            {
              "function": "range",
              "line": 219
            },
            {
              "function": "enumerate",
              "line": 227
            },
            {
              "function": "all",
              "line": 249
            },
            {
              "function": "record_result",
              "line": 250
            },
            {
              "function": "ws_connect",
              "line": 264
            },
            {
              "function": "ws_connect",
              "line": 311
            },
            {
              "function": "loads",
              "line": 360
            },
            {
              "function": "loads",
              "line": 372
            },
            {
              "function": "record_result",
              "line": 377
            },
            {
              "function": "get",
              "line": 438
            },
            {
              "function": "isoformat",
              "line": 31
            },
            {
              "function": "test_func",
              "line": 52
            },
            {
              "function": "record_result",
              "line": 54
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "record_result",
              "line": 71
            },
            {
              "function": "record_result",
              "line": 73
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "record_result",
              "line": 84
            },
            {
              "function": "record_result",
              "line": 86
            },
            {
              "function": "ws_connect",
              "line": 94
            },
            {
              "function": "loads",
              "line": 97
            },
            {
              "function": "record_result",
              "line": 100
            },
            {
              "function": "loads",
              "line": 106
            },
            {
              "function": "record_result",
              "line": 109
            },
            {
              "function": "record_result",
              "line": 114
            },
            {
              "function": "receive",
              "line": 127
            },
            {
              "function": "receive",
              "line": 169
            },
            {
              "function": "range",
              "line": 181
            },
            {
              "function": "any",
              "line": 186
            },
            {
              "function": "any",
              "line": 187
            },
            {
              "function": "next",
              "line": 190
            },
            {
              "function": "any",
              "line": 195
            },
            {
              "function": "record_result",
              "line": 201
            },
            {
              "function": "append",
              "line": 221
            },
            {
              "function": "send_json",
              "line": 228
            },
            {
              "function": "append",
              "line": 233
            },
            {
              "function": "gather",
              "line": 235
            },
            {
              "function": "append",
              "line": 241
            },
            {
              "function": "gather",
              "line": 243
            },
            {
              "function": "record_result",
              "line": 257
            },
            {
              "function": "receive",
              "line": 266
            },
            {
              "function": "now",
              "line": 279
            },
            {
              "function": "record_result",
              "line": 293
            },
            {
              "function": "receive",
              "line": 313
            },
            {
              "function": "ws_connect",
              "line": 344
            },
            {
              "function": "receive",
              "line": 345
            },
            {
              "function": "send_json",
              "line": 348
            },
            {
              "function": "close",
              "line": 355
            },
            {
              "function": "ws_connect",
              "line": 358
            },
            {
              "function": "wait_for",
              "line": 359
            },
            {
              "function": "send_json",
              "line": 363
            },
            {
              "function": "receive",
              "line": 370
            },
            {
              "function": "wait_for",
              "line": 371
            },
            {
              "function": "close",
              "line": 374
            },
            {
              "function": "get",
              "line": 376
            },
            {
              "function": "record_result",
              "line": 380
            },
            {
              "function": "now",
              "line": 397
            },
            {
              "function": "print",
              "line": 420
            },
            {
              "function": "print",
              "line": 440
            },
            {
              "function": "print",
              "line": 442
            },
            {
              "function": "exit",
              "line": 443
            },
            {
              "function": "str",
              "line": 54
            },
            {
              "function": "json",
              "line": 66
            },
            {
              "function": "str",
              "line": 73
            },
            {
              "function": "json",
              "line": 79
            },
            {
              "function": "str",
              "line": 86
            },
            {
              "function": "wait_for",
              "line": 96
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "send_json",
              "line": 104
            },
            {
              "function": "wait_for",
              "line": 105
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "close",
              "line": 111
            },
            {
              "function": "str",
              "line": 114
            },
            {
              "function": "loads",
              "line": 142
            },
            {
              "function": "loads",
              "line": 146
            },
            {
              "function": "record_result",
              "line": 153
            },
            {
              "function": "send_json",
              "line": 173
            },
            {
              "function": "append",
              "line": 183
            },
            {
              "function": "record_result",
              "line": 208
            },
            {
              "function": "ws_connect",
              "line": 220
            },
            {
              "function": "receive",
              "line": 223
            },
            {
              "function": "receive",
              "line": 241
            },
            {
              "function": "close",
              "line": 247
            },
            {
              "function": "str",
              "line": 257
            },
            {
              "function": "send_json",
              "line": 270
            },
            {
              "function": "total_seconds",
              "line": 281
            },
            {
              "function": "len",
              "line": 289
            },
            {
              "function": "get",
              "line": 290
            },
            {
              "function": "record_result",
              "line": 300
            },
            {
              "function": "loads",
              "line": 321
            },
            {
              "function": "record_result",
              "line": 325
            },
            {
              "function": "receive",
              "line": 359
            },
            {
              "function": "receive",
              "line": 371
            },
            {
              "function": "str",
              "line": 380
            },
            {
              "function": "now",
              "line": 31
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "len",
              "line": 82
            },
            {
              "function": "receive",
              "line": 96
            },
            {
              "function": "receive",
              "line": 105
            },
            {
              "function": "send_json",
              "line": 134
            },
            {
              "function": "wait_for",
              "line": 141
            },
            {
              "function": "wait_for",
              "line": 145
            },
            {
              "function": "record_result",
              "line": 160
            },
            {
              "function": "wait_for",
              "line": 182
            },
            {
              "function": "loads",
              "line": 183
            },
            {
              "function": "get",
              "line": 191
            },
            {
              "function": "str",
              "line": 208
            },
            {
              "function": "isinstance",
              "line": 249
            },
            {
              "function": "len",
              "line": 253
            },
            {
              "function": "append",
              "line": 284
            },
            {
              "function": "str",
              "line": 300
            },
            {
              "function": "send_json",
              "line": 317
            },
            {
              "function": "wait_for",
              "line": 320
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "record_result",
              "line": 333
            },
            {
              "function": "record_result",
              "line": 335
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "len",
              "line": 84
            },
            {
              "function": "receive",
              "line": 141
            },
            {
              "function": "receive",
              "line": 145
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "get",
              "line": 150
            },
            {
              "function": "str",
              "line": 160
            },
            {
              "function": "receive",
              "line": 182
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "get",
              "line": 187
            },
            {
              "function": "lower",
              "line": 196
            },
            {
              "function": "wait_for",
              "line": 283
            },
            {
              "function": "loads",
              "line": 284
            },
            {
              "function": "len",
              "line": 296
            },
            {
              "function": "receive",
              "line": 320
            },
            {
              "function": "str",
              "line": 335
            },
            {
              "function": "get",
              "line": 84
            },
            {
              "function": "len",
              "line": 156
            },
            {
              "function": "get",
              "line": 191
            },
            {
              "function": "now",
              "line": 281
            },
            {
              "function": "receive",
              "line": 283
            },
            {
              "function": "get",
              "line": 156
            }
          ]
        },
        "agents/agent_registry.py": {
          "functions": [
            {
              "name": "get_agent_registry",
              "line": 317,
              "async": false,
              "calls": [
                "AgentRegistry"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "__new__",
              "line": 56,
              "async": false,
              "calls": [
                "super",
                "__new__"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "__init__",
              "line": 62,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "get_agent",
              "line": 167,
              "async": false,
              "calls": [
                "warning"
              ],
              "parameters": [
                "self",
                "agent_id"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "get_available_agents",
              "line": 177,
              "async": false,
              "calls": [
                "append",
                "items"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "find_agent_by_capability",
              "line": 247,
              "async": false,
              "calls": [
                "items"
              ],
              "parameters": [
                "self",
                "capability"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "get_agents_by_capability",
              "line": 257,
              "async": false,
              "calls": [
                "append",
                "items"
              ],
              "parameters": [
                "self",
                "capability"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "get_status",
              "line": 283,
              "async": false,
              "calls": [
                "sum",
                "len",
                "get_available_agents",
                "values"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/agent_registry.py"
            }
          ],
          "classes": [
            {
              "name": "AgentType",
              "line": 24,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "RegisteredAgent",
              "line": 39,
              "methods": [],
              "bases": [],
              "file": "agents/agent_registry.py"
            },
            {
              "name": "AgentRegistry",
              "line": 48,
              "methods": [
                "__new__",
                "__init__",
                "get_agent",
                "get_available_agents",
                "find_agent_by_capability",
                "get_agents_by_capability",
                "get_status"
              ],
              "bases": [],
              "file": "agents/agent_registry.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "BaseAgent",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 83
            },
            {
              "type": "from_import",
              "module": "specialized.fixer_gpt_agent",
              "names": [
                "FixerGPTAgent"
              ],
              "line": 91
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "warning",
              "line": 20
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "info",
              "line": 76
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "warning",
              "line": 174
            },
            {
              "function": "items",
              "line": 182
            },
            {
              "function": "get_agent",
              "line": 202
            },
            {
              "function": "items",
              "line": 251
            },
            {
              "function": "items",
              "line": 262
            },
            {
              "function": "items",
              "line": 272
            },
            {
              "function": "info",
              "line": 298
            },
            {
              "function": "items",
              "line": 300
            },
            {
              "function": "clear",
              "line": 311
            },
            {
              "function": "info",
              "line": 312
            },
            {
              "function": "AgentRegistry",
              "line": 321
            },
            {
              "function": "__new__",
              "line": 58
            },
            {
              "function": "register_agent",
              "line": 79
            },
            {
              "function": "info",
              "line": 85
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "isinstance",
              "line": 133
            },
            {
              "function": "RegisteredAgent",
              "line": 144
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "append",
              "line": 183
            },
            {
              "function": "warning",
              "line": 206
            },
            {
              "function": "get_agent",
              "line": 207
            },
            {
              "function": "len",
              "line": 288
            },
            {
              "function": "sum",
              "line": 289
            },
            {
              "function": "sum",
              "line": 290
            },
            {
              "function": "get_available_agents",
              "line": 291
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 79
            },
            {
              "function": "register_agent",
              "line": 84
            },
            {
              "function": "warning",
              "line": 87
            },
            {
              "function": "register_agent",
              "line": 92
            },
            {
              "function": "warning",
              "line": 95
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 113
            },
            {
              "function": "isinstance",
              "line": 117
            },
            {
              "function": "warning",
              "line": 129
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "isinstance",
              "line": 138
            },
            {
              "function": "error",
              "line": 164
            },
            {
              "function": "TaskResult",
              "line": 210
            },
            {
              "function": "execute_with_memory",
              "line": 225
            },
            {
              "function": "error",
              "line": 234
            },
            {
              "function": "TaskResult",
              "line": 240
            },
            {
              "function": "append",
              "line": 264
            },
            {
              "function": "hasattr",
              "line": 275
            },
            {
              "function": "hasattr",
              "line": 303
            },
            {
              "function": "info",
              "line": 306
            },
            {
              "function": "super",
              "line": 58
            },
            {
              "function": "ResearchAgent",
              "line": 84
            },
            {
              "function": "FixerGPTAgent",
              "line": 92
            },
            {
              "function": "len",
              "line": 104
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "info",
              "line": 120
            },
            {
              "function": "append",
              "line": 137
            },
            {
              "function": "AgentType",
              "line": 146
            },
            {
              "function": "error",
              "line": 281
            },
            {
              "function": "error",
              "line": 309
            },
            {
              "function": "publish",
              "line": 276
            },
            {
              "function": "values",
              "line": 289
            },
            {
              "function": "values",
              "line": 290
            },
            {
              "function": "cleanup",
              "line": 304
            },
            {
              "function": "hasattr",
              "line": 140
            },
            {
              "function": "str",
              "line": 140
            },
            {
              "function": "str",
              "line": 242
            }
          ]
        },
        "agents/tools/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "file_tools",
              "names": [
                "FileSystemTools",
                "FileOperation"
              ],
              "line": 6
            }
          ],
          "calls": []
        },
        "agents/tools/file_tools.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "join",
                "makedirs",
                "getcwd"
              ],
              "parameters": [
                "self",
                "workspace_path"
              ],
              "decorators": [],
              "file": "agents/tools/file_tools.py"
            },
            {
              "name": "_validate_path",
              "line": 55,
              "async": false,
              "calls": [
                "isabs",
                "join",
                "Path",
                "abspath",
                "lstrip",
                "fnmatch",
                "relative_to",
                "startswith",
                "match",
                "str"
              ],
              "parameters": [
                "self",
                "file_path",
                "agent_name",
                "allowed_paths"
              ],
              "decorators": [],
              "file": "agents/tools/file_tools.py"
            },
            {
              "name": "_create_backup",
              "line": 118,
              "async": false,
              "calls": [
                "exists",
                "now",
                "join",
                "strftime",
                "copy2",
                "basename",
                "info",
                "error"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "agents/tools/file_tools.py"
            },
            {
              "name": "_log_operation",
              "line": 143,
              "async": false,
              "calls": [
                "dirname",
                "asdict",
                "join",
                "open",
                "info",
                "error",
                "dumps",
                "write",
                "append",
                "makedirs"
              ],
              "parameters": [
                "self",
                "operation"
              ],
              "decorators": [],
              "file": "agents/tools/file_tools.py"
            },
            {
              "name": "get_audit_log",
              "line": 449,
              "async": false,
              "calls": [
                "asdict"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "agents/tools/file_tools.py"
            }
          ],
          "classes": [
            {
              "name": "FileOperation",
              "line": 18,
              "methods": [],
              "bases": [],
              "file": "agents/tools/file_tools.py"
            },
            {
              "name": "FileSystemTools",
              "line": 29,
              "methods": [
                "__init__",
                "_validate_path",
                "_create_backup",
                "_log_operation",
                "get_audit_log"
              ],
              "bases": [],
              "file": "agents/tools/file_tools.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Optional",
                "Any"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "asdict"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "fnmatch",
              "names": [
                "fnmatch"
              ],
              "line": 87
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "join",
              "line": 44
            },
            {
              "function": "makedirs",
              "line": 47
            },
            {
              "function": "isabs",
              "line": 69
            },
            {
              "function": "strftime",
              "line": 131
            },
            {
              "function": "join",
              "line": 133
            },
            {
              "function": "append",
              "line": 145
            },
            {
              "function": "join",
              "line": 148
            },
            {
              "function": "makedirs",
              "line": 149
            },
            {
              "function": "_validate_path",
              "line": 182
            },
            {
              "function": "abspath",
              "line": 200
            },
            {
              "function": "exists",
              "line": 208
            },
            {
              "function": "abspath",
              "line": 274
            },
            {
              "function": "abspath",
              "line": 317
            },
            {
              "function": "_validate_path",
              "line": 329
            },
            {
              "function": "_create_backup",
              "line": 339
            },
            {
              "function": "abspath",
              "line": 419
            },
            {
              "function": "getcwd",
              "line": 42
            },
            {
              "function": "abspath",
              "line": 70
            },
            {
              "function": "abspath",
              "line": 72
            },
            {
              "function": "relative_to",
              "line": 76
            },
            {
              "function": "startswith",
              "line": 82
            },
            {
              "function": "exists",
              "line": 128
            },
            {
              "function": "copy2",
              "line": 136
            },
            {
              "function": "info",
              "line": 137
            },
            {
              "function": "dirname",
              "line": 149
            },
            {
              "function": "open",
              "line": 151
            },
            {
              "function": "write",
              "line": 152
            },
            {
              "function": "info",
              "line": 156
            },
            {
              "function": "error",
              "line": 158
            },
            {
              "function": "FileOperation",
              "line": 184
            },
            {
              "function": "_log_operation",
              "line": 192
            },
            {
              "function": "join",
              "line": 200
            },
            {
              "function": "makedirs",
              "line": 204
            },
            {
              "function": "_create_backup",
              "line": 209
            },
            {
              "function": "FileOperation",
              "line": 216
            },
            {
              "function": "_log_operation",
              "line": 224
            },
            {
              "function": "join",
              "line": 274
            },
            {
              "function": "exists",
              "line": 277
            },
            {
              "function": "FileOperation",
              "line": 278
            },
            {
              "function": "_log_operation",
              "line": 286
            },
            {
              "function": "write_file",
              "line": 296
            },
            {
              "function": "join",
              "line": 317
            },
            {
              "function": "exists",
              "line": 320
            },
            {
              "function": "FileOperation",
              "line": 363
            },
            {
              "function": "_log_operation",
              "line": 371
            },
            {
              "function": "join",
              "line": 419
            },
            {
              "function": "exists",
              "line": 421
            },
            {
              "function": "asdict",
              "line": 461
            },
            {
              "function": "join",
              "line": 72
            },
            {
              "function": "relative_to",
              "line": 92
            },
            {
              "function": "str",
              "line": 93
            },
            {
              "function": "lstrip",
              "line": 100
            },
            {
              "function": "fnmatch",
              "line": 103
            },
            {
              "function": "now",
              "line": 131
            },
            {
              "function": "basename",
              "line": 132
            },
            {
              "function": "error",
              "line": 140
            },
            {
              "function": "dirname",
              "line": 204
            },
            {
              "function": "open",
              "line": 213
            },
            {
              "function": "write",
              "line": 214
            },
            {
              "function": "len",
              "line": 232
            },
            {
              "function": "FileOperation",
              "line": 236
            },
            {
              "function": "_log_operation",
              "line": 244
            },
            {
              "function": "open",
              "line": 343
            },
            {
              "function": "readlines",
              "line": 344
            },
            {
              "function": "get",
              "line": 348
            },
            {
              "function": "get",
              "line": 349
            },
            {
              "function": "get",
              "line": 350
            },
            {
              "function": "open",
              "line": 360
            },
            {
              "function": "writelines",
              "line": 361
            },
            {
              "function": "len",
              "line": 378
            },
            {
              "function": "FileOperation",
              "line": 382
            },
            {
              "function": "_log_operation",
              "line": 390
            },
            {
              "function": "open",
              "line": 430
            },
            {
              "function": "read",
              "line": 431
            },
            {
              "function": "len",
              "line": 438
            },
            {
              "function": "asdict",
              "line": 460
            },
            {
              "function": "Path",
              "line": 76
            },
            {
              "function": "match",
              "line": 109
            },
            {
              "function": "dumps",
              "line": 152
            },
            {
              "function": "isoformat",
              "line": 185
            },
            {
              "function": "isoformat",
              "line": 217
            },
            {
              "function": "str",
              "line": 248
            },
            {
              "function": "isoformat",
              "line": 279
            },
            {
              "function": "isoformat",
              "line": 364
            },
            {
              "function": "exists",
              "line": 393
            },
            {
              "function": "copy2",
              "line": 394
            },
            {
              "function": "info",
              "line": 395
            },
            {
              "function": "str",
              "line": 399
            },
            {
              "function": "str",
              "line": 444
            },
            {
              "function": "Path",
              "line": 92
            },
            {
              "function": "asdict",
              "line": 152
            },
            {
              "function": "isoformat",
              "line": 237
            },
            {
              "function": "str",
              "line": 242
            },
            {
              "function": "len",
              "line": 352
            },
            {
              "function": "insert",
              "line": 355
            },
            {
              "function": "isoformat",
              "line": 383
            },
            {
              "function": "str",
              "line": 388
            },
            {
              "function": "Path",
              "line": 109
            },
            {
              "function": "now",
              "line": 185
            },
            {
              "function": "now",
              "line": 217
            },
            {
              "function": "now",
              "line": 279
            },
            {
              "function": "len",
              "line": 354
            },
            {
              "function": "now",
              "line": 364
            },
            {
              "function": "now",
              "line": 237
            },
            {
              "function": "len",
              "line": 356
            },
            {
              "function": "now",
              "line": 383
            }
          ]
        },
        "agents/tools/browser_tester.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [
                "ImportError"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/tools/browser_tester.py"
            }
          ],
          "classes": [
            {
              "name": "BrowserTester",
              "line": 22,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "agents/tools/browser_tester.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "playwright.async_api",
              "names": [
                "async_playwright",
                "Browser",
                "Page",
                "Error"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 358
            },
            {
              "type": "import",
              "module": "socket",
              "names": [
                "socket"
              ],
              "line": 359
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "warning",
              "line": 19
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "info",
              "line": 64
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "get",
              "line": 307
            },
            {
              "function": "get",
              "line": 308
            },
            {
              "function": "dirname",
              "line": 368
            },
            {
              "function": "info",
              "line": 371
            },
            {
              "function": "Popen",
              "line": 374
            },
            {
              "function": "info",
              "line": 384
            },
            {
              "function": "len",
              "line": 411
            },
            {
              "function": "len",
              "line": 412
            },
            {
              "function": "len",
              "line": 413
            },
            {
              "function": "BrowserTester",
              "line": 430
            },
            {
              "function": "print",
              "line": 433
            },
            {
              "function": "print",
              "line": 434
            },
            {
              "function": "print",
              "line": 435
            },
            {
              "function": "print",
              "line": 441
            },
            {
              "function": "print",
              "line": 443
            },
            {
              "function": "ImportError",
              "line": 38
            },
            {
              "function": "start",
              "line": 47
            },
            {
              "function": "stop",
              "line": 52
            },
            {
              "function": "error",
              "line": 57
            },
            {
              "function": "start",
              "line": 61
            },
            {
              "function": "launch",
              "line": 62
            },
            {
              "function": "new_page",
              "line": 63
            },
            {
              "function": "terminate",
              "line": 75
            },
            {
              "function": "basename",
              "line": 119
            },
            {
              "function": "info",
              "line": 123
            },
            {
              "function": "time",
              "line": 124
            },
            {
              "function": "int",
              "line": 128
            },
            {
              "function": "info",
              "line": 129
            },
            {
              "function": "on",
              "line": 133
            },
            {
              "function": "append",
              "line": 138
            },
            {
              "function": "info",
              "line": 139
            },
            {
              "function": "info",
              "line": 173
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "append",
              "line": 187
            },
            {
              "function": "info",
              "line": 200
            },
            {
              "function": "basename",
              "line": 246
            },
            {
              "function": "time",
              "line": 250
            },
            {
              "function": "int",
              "line": 253
            },
            {
              "function": "append",
              "line": 258
            },
            {
              "function": "on",
              "line": 262
            },
            {
              "function": "append",
              "line": 293
            },
            {
              "function": "socket",
              "line": 362
            },
            {
              "function": "bind",
              "line": 363
            },
            {
              "function": "listen",
              "line": 364
            },
            {
              "function": "abspath",
              "line": 368
            },
            {
              "function": "sleep",
              "line": 382
            },
            {
              "function": "title",
              "line": 406
            },
            {
              "function": "test_tetris_app",
              "line": 432
            },
            {
              "function": "close",
              "line": 69
            },
            {
              "function": "close",
              "line": 71
            },
            {
              "function": "stop",
              "line": 73
            },
            {
              "function": "_start_local_server",
              "line": 117
            },
            {
              "function": "goto",
              "line": 125
            },
            {
              "function": "screenshot",
              "line": 137
            },
            {
              "function": "query_selector",
              "line": 142
            },
            {
              "function": "info",
              "line": 145
            },
            {
              "function": "append",
              "line": 147
            },
            {
              "function": "error",
              "line": 149
            },
            {
              "function": "query_selector",
              "line": 152
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "append",
              "line": 157
            },
            {
              "function": "query_selector",
              "line": 161
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 167
            },
            {
              "function": "append",
              "line": 169
            },
            {
              "function": "press",
              "line": 174
            },
            {
              "function": "wait_for_timeout",
              "line": 175
            },
            {
              "function": "press",
              "line": 176
            },
            {
              "function": "wait_for_timeout",
              "line": 177
            },
            {
              "function": "press",
              "line": 178
            },
            {
              "function": "wait_for_timeout",
              "line": 179
            },
            {
              "function": "press",
              "line": 180
            },
            {
              "function": "screenshot",
              "line": 186
            },
            {
              "function": "extend",
              "line": 191
            },
            {
              "function": "error",
              "line": 192
            },
            {
              "function": "info",
              "line": 195
            },
            {
              "function": "get",
              "line": 198
            },
            {
              "function": "append",
              "line": 203
            },
            {
              "function": "error",
              "line": 205
            },
            {
              "function": "_start_local_server",
              "line": 244
            },
            {
              "function": "goto",
              "line": 251
            },
            {
              "function": "screenshot",
              "line": 257
            },
            {
              "function": "query_selector",
              "line": 265
            },
            {
              "function": "enumerate",
              "line": 270
            },
            {
              "function": "extend",
              "line": 285
            },
            {
              "function": "screenshot",
              "line": 292
            },
            {
              "function": "len",
              "line": 296
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "error",
              "line": 301
            },
            {
              "function": "str",
              "line": 347
            },
            {
              "function": "getsockname",
              "line": 365
            },
            {
              "function": "str",
              "line": 375
            },
            {
              "function": "query_selector_all",
              "line": 411
            },
            {
              "function": "query_selector_all",
              "line": 412
            },
            {
              "function": "query_selector_all",
              "line": 413
            },
            {
              "function": "async_playwright",
              "line": 61
            },
            {
              "function": "get_event_loop",
              "line": 124
            },
            {
              "function": "time",
              "line": 126
            },
            {
              "function": "append",
              "line": 133
            },
            {
              "function": "click",
              "line": 164
            },
            {
              "function": "wait_for_timeout",
              "line": 165
            },
            {
              "function": "len",
              "line": 198
            },
            {
              "function": "get_event_loop",
              "line": 250
            },
            {
              "function": "time",
              "line": 252
            },
            {
              "function": "append",
              "line": 262
            },
            {
              "function": "len",
              "line": 281
            },
            {
              "function": "query_selector",
              "line": 314
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "str",
              "line": 133
            },
            {
              "function": "str",
              "line": 262
            },
            {
              "function": "append",
              "line": 273
            },
            {
              "function": "click",
              "line": 316
            },
            {
              "function": "query_selector",
              "line": 322
            },
            {
              "function": "get_event_loop",
              "line": 126
            },
            {
              "function": "str",
              "line": 203
            },
            {
              "function": "get_event_loop",
              "line": 252
            },
            {
              "function": "_execute_scenario",
              "line": 272
            },
            {
              "function": "get",
              "line": 275
            },
            {
              "function": "append",
              "line": 276
            },
            {
              "function": "append",
              "line": 279
            },
            {
              "function": "str",
              "line": 299
            },
            {
              "function": "type",
              "line": 325
            },
            {
              "function": "query_selector",
              "line": 331
            },
            {
              "function": "get",
              "line": 334
            },
            {
              "function": "text_content",
              "line": 333
            },
            {
              "function": "get",
              "line": 276
            },
            {
              "function": "str",
              "line": 279
            }
          ]
        },
        "agents/specialized/fixerbot_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 63,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/fixerbot_agent.py"
            },
            {
              "name": "_match_pattern",
              "line": 187,
              "async": false,
              "calls": [
                "search",
                "items",
                "any"
              ],
              "parameters": [
                "self",
                "error_text",
                "files"
              ],
              "decorators": [],
              "file": "agents/specialized/fixerbot_agent.py"
            }
          ],
          "classes": [
            {
              "name": "FixerBotAgent",
              "line": 20,
              "methods": [
                "__init__",
                "_match_pattern"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/fixerbot_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 275
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "AgentConfig",
              "line": 64
            },
            {
              "function": "__init__",
              "line": 79
            },
            {
              "function": "ClaudeCodeService",
              "line": 81
            },
            {
              "function": "items",
              "line": 198
            },
            {
              "function": "getattr",
              "line": 238
            },
            {
              "function": "search",
              "line": 312
            },
            {
              "function": "TaskRequest",
              "line": 472
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 82
            },
            {
              "function": "is_available",
              "line": 84
            },
            {
              "function": "error",
              "line": 85
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "join",
              "line": 162
            },
            {
              "function": "TaskResult",
              "line": 164
            },
            {
              "function": "any",
              "line": 200
            },
            {
              "function": "error",
              "line": 241
            },
            {
              "function": "run",
              "line": 276
            },
            {
              "function": "strip",
              "line": 281
            },
            {
              "function": "open",
              "line": 293
            },
            {
              "function": "read",
              "line": 294
            },
            {
              "function": "replace",
              "line": 303
            },
            {
              "function": "sub",
              "line": 313
            },
            {
              "function": "info",
              "line": 325
            },
            {
              "function": "is_available",
              "line": 402
            },
            {
              "function": "join",
              "line": 410
            },
            {
              "function": "execute",
              "line": 476
            },
            {
              "function": "super",
              "line": 79
            },
            {
              "function": "isinstance",
              "line": 106
            },
            {
              "function": "lower",
              "line": 119
            },
            {
              "function": "_match_pattern",
              "line": 120
            },
            {
              "function": "info",
              "line": 133
            },
            {
              "function": "append",
              "line": 135
            },
            {
              "function": "len",
              "line": 138
            },
            {
              "function": "len",
              "line": 138
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "append",
              "line": 149
            },
            {
              "function": "enumerate",
              "line": 150
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "error",
              "line": 179
            },
            {
              "function": "TaskResult",
              "line": 181
            },
            {
              "function": "any",
              "line": 207
            },
            {
              "function": "fix_method",
              "line": 250
            },
            {
              "function": "error",
              "line": 253
            },
            {
              "function": "open",
              "line": 322
            },
            {
              "function": "write",
              "line": 323
            },
            {
              "function": "complete",
              "line": 448
            },
            {
              "function": "error",
              "line": 460
            },
            {
              "function": "get",
              "line": 473
            },
            {
              "function": "get",
              "line": 474
            },
            {
              "function": "get",
              "line": 107
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "info",
              "line": 111
            },
            {
              "function": "info",
              "line": 112
            },
            {
              "function": "info",
              "line": 123
            },
            {
              "function": "append",
              "line": 125
            },
            {
              "function": "info",
              "line": 127
            },
            {
              "function": "append",
              "line": 128
            },
            {
              "function": "_ai_powered_fix",
              "line": 134
            },
            {
              "function": "_ai_powered_fix",
              "line": 143
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "append",
              "line": 152
            },
            {
              "function": "append",
              "line": 153
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "str",
              "line": 258
            },
            {
              "function": "split",
              "line": 282
            },
            {
              "function": "join",
              "line": 416
            },
            {
              "function": "join",
              "line": 427
            },
            {
              "function": "str",
              "line": 119
            },
            {
              "function": "_apply_pattern_fix",
              "line": 124
            },
            {
              "function": "append",
              "line": 155
            },
            {
              "function": "len",
              "line": 171
            },
            {
              "function": "len",
              "line": 172
            },
            {
              "function": "isoformat",
              "line": 174
            },
            {
              "function": "search",
              "line": 207
            },
            {
              "function": "len",
              "line": 133
            },
            {
              "function": "len",
              "line": 149
            },
            {
              "function": "len",
              "line": 158
            },
            {
              "function": "strip",
              "line": 282
            },
            {
              "function": "chr",
              "line": 416
            },
            {
              "function": "chr",
              "line": 427
            },
            {
              "function": "str",
              "line": 462
            },
            {
              "function": "len",
              "line": 111
            },
            {
              "function": "now",
              "line": 174
            },
            {
              "function": "str",
              "line": 183
            }
          ]
        },
        "agents/specialized/reviewer_gpt_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 37,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "check_asimov_violations",
              "line": 221,
              "async": false,
              "calls": [
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_calculate_html_app_quality_score",
              "line": 445,
              "async": false,
              "calls": [
                "get",
                "len",
                "min",
                "max"
              ],
              "parameters": [
                "self",
                "test_result"
              ],
              "decorators": [],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_get_recommendation",
              "line": 479,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "quality_score",
                "test_result"
              ],
              "decorators": [],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_format_metrics",
              "line": 494,
              "async": false,
              "calls": [
                "join",
                "items",
                "append",
                "isinstance"
              ],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ReviewerGPTAgent",
              "line": 27,
              "methods": [
                "__init__",
                "check_asimov_violations",
                "_calculate_html_app_quality_score",
                "_get_recommendation",
                "_format_metrics"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/reviewer_gpt_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.prime_directives",
              "names": [
                "PrimeDirectives"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "tools.browser_tester",
              "names": [
                "BrowserTester",
                "PLAYWRIGHT_AVAILABLE"
              ],
              "line": 22
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 246
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 102
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "warning",
              "line": 25
            },
            {
              "function": "AgentConfig",
              "line": 38
            },
            {
              "function": "__init__",
              "line": 53
            },
            {
              "function": "OpenAIService",
              "line": 54
            },
            {
              "function": "lower",
              "line": 247
            },
            {
              "function": "check_asimov_violations",
              "line": 279
            },
            {
              "function": "get",
              "line": 333
            },
            {
              "function": "get",
              "line": 352
            },
            {
              "function": "info",
              "line": 390
            },
            {
              "function": "get",
              "line": 462
            },
            {
              "function": "get",
              "line": 464
            },
            {
              "function": "get",
              "line": 466
            },
            {
              "function": "get",
              "line": 468
            },
            {
              "function": "get",
              "line": 470
            },
            {
              "function": "len",
              "line": 474
            },
            {
              "function": "max",
              "line": 477
            },
            {
              "function": "len",
              "line": 483
            },
            {
              "function": "items",
              "line": 497
            },
            {
              "function": "join",
              "line": 503
            },
            {
              "function": "TaskRequest",
              "line": 507
            },
            {
              "function": "lower",
              "line": 67
            },
            {
              "function": "any",
              "line": 70
            },
            {
              "function": "any",
              "line": 74
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "TaskResult",
              "line": 200
            },
            {
              "function": "search",
              "line": 250
            },
            {
              "function": "search",
              "line": 260
            },
            {
              "function": "lower",
              "line": 309
            },
            {
              "function": "append",
              "line": 310
            },
            {
              "function": "perform_global_error_search",
              "line": 324
            },
            {
              "function": "len",
              "line": 339
            },
            {
              "function": "enforce_global_error_search",
              "line": 347
            },
            {
              "function": "len",
              "line": 363
            },
            {
              "function": "len",
              "line": 364
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "exists",
              "line": 403
            },
            {
              "function": "get",
              "line": 458
            },
            {
              "function": "get",
              "line": 474
            },
            {
              "function": "min",
              "line": 477
            },
            {
              "function": "get",
              "line": 483
            },
            {
              "function": "isinstance",
              "line": 498
            },
            {
              "function": "execute",
              "line": 511
            },
            {
              "function": "super",
              "line": 53
            },
            {
              "function": "info",
              "line": 111
            },
            {
              "function": "get_completion",
              "line": 189
            },
            {
              "function": "Exception",
              "line": 198
            },
            {
              "function": "error",
              "line": 213
            },
            {
              "function": "TaskResult",
              "line": 214
            },
            {
              "function": "append",
              "line": 251
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "append",
              "line": 282
            },
            {
              "function": "append",
              "line": 356
            },
            {
              "function": "get",
              "line": 363
            },
            {
              "function": "BrowserTester",
              "line": 415
            },
            {
              "function": "_calculate_html_app_quality_score",
              "line": 423
            },
            {
              "function": "_get_recommendation",
              "line": 427
            },
            {
              "function": "info",
              "line": 429
            },
            {
              "function": "error",
              "line": 434
            },
            {
              "function": "append",
              "line": 500
            },
            {
              "function": "append",
              "line": 502
            },
            {
              "function": "get",
              "line": 508
            },
            {
              "function": "get",
              "line": 509
            },
            {
              "function": "isinstance",
              "line": 85
            },
            {
              "function": "get",
              "line": 88
            },
            {
              "function": "isinstance",
              "line": 100
            },
            {
              "function": "findall",
              "line": 103
            },
            {
              "function": "test_html_application",
              "line": 117
            },
            {
              "function": "info",
              "line": 120
            },
            {
              "function": "TaskResult",
              "line": 121
            },
            {
              "function": "warning",
              "line": 139
            },
            {
              "function": "TaskResult",
              "line": 140
            },
            {
              "function": "lower",
              "line": 197
            },
            {
              "function": "lower",
              "line": 197
            },
            {
              "function": "fix_function",
              "line": 355
            },
            {
              "function": "append",
              "line": 358
            },
            {
              "function": "endswith",
              "line": 94
            },
            {
              "function": "info",
              "line": 107
            },
            {
              "function": "isoformat",
              "line": 207
            },
            {
              "function": "enforce_global_error_search",
              "line": 293
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "append",
              "line": 298
            },
            {
              "function": "test_tetris_app",
              "line": 418
            },
            {
              "function": "test_generic_html_app",
              "line": 420
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "str",
              "line": 358
            },
            {
              "function": "len",
              "line": 139
            },
            {
              "function": "now",
              "line": 207
            },
            {
              "function": "str",
              "line": 216
            },
            {
              "function": "str",
              "line": 437
            },
            {
              "function": "_format_metrics",
              "line": 129
            },
            {
              "function": "join",
              "line": 132
            },
            {
              "function": "join",
              "line": 148
            },
            {
              "function": "join",
              "line": 151
            },
            {
              "function": "join",
              "line": 154
            },
            {
              "function": "chr",
              "line": 132
            },
            {
              "function": "chr",
              "line": 148
            },
            {
              "function": "chr",
              "line": 151
            },
            {
              "function": "chr",
              "line": 154
            }
          ]
        },
        "agents/specialized/tradestrat_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/tradestrat_agent.py"
            }
          ],
          "classes": [
            {
              "name": "TradeStratAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/tradestrat_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 44
            },
            {
              "function": "ClaudeCodeService",
              "line": 46
            },
            {
              "function": "TaskRequest",
              "line": 108
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 47
            },
            {
              "function": "is_available",
              "line": 49
            },
            {
              "function": "error",
              "line": 50
            },
            {
              "function": "TaskResult",
              "line": 83
            },
            {
              "function": "execute",
              "line": 112
            },
            {
              "function": "super",
              "line": 44
            },
            {
              "function": "is_available",
              "line": 74
            },
            {
              "function": "Exception",
              "line": 75
            },
            {
              "function": "complete",
              "line": 77
            },
            {
              "function": "error",
              "line": 95
            },
            {
              "function": "TaskResult",
              "line": 96
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "isoformat",
              "line": 90
            },
            {
              "function": "now",
              "line": 90
            }
          ]
        },
        "agents/specialized/docubot_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/docubot_agent.py"
            }
          ],
          "classes": [
            {
              "name": "DocuBotAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/docubot_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 43
            },
            {
              "function": "OpenAIService",
              "line": 44
            },
            {
              "function": "TaskRequest",
              "line": 97
            },
            {
              "function": "TaskResult",
              "line": 72
            },
            {
              "function": "execute",
              "line": 101
            },
            {
              "function": "super",
              "line": 43
            },
            {
              "function": "get_completion",
              "line": 62
            },
            {
              "function": "Exception",
              "line": 70
            },
            {
              "function": "error",
              "line": 83
            },
            {
              "function": "TaskResult",
              "line": 85
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "isoformat",
              "line": 78
            },
            {
              "function": "now",
              "line": 78
            },
            {
              "function": "str",
              "line": 87
            }
          ]
        },
        "agents/specialized/architect_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 116,
              "async": false,
              "calls": [
                "AgentConfig",
                "getcwd",
                "_load_architecture_patterns",
                "LayerAnalyzer",
                "__init__",
                "TreeSitterIndexer",
                "info",
                "CodeIndexer",
                "CallGraphAnalyzer",
                "SemgrepAnalyzer",
                "warning",
                "DiagramService",
                "SmartFileWatcher",
                "start",
                "abspath",
                "VultureAnalyzer",
                "ProjectCache",
                "getenv",
                "LightweightCodeSearch",
                "CacheNotAvailableError",
                "dirname",
                "OpenAIService",
                "basename",
                "RadonMetrics",
                "super",
                "_load_tech_stacks",
                "apply_capabilities_to_agent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_parse_architecture_response",
              "line": 484,
              "async": false,
              "calls": [
                "upper",
                "get",
                "lower",
                "append",
                "ArchitectureDesign",
                "capitalize"
              ],
              "parameters": [
                "self",
                "response",
                "requirements"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_extract_features",
              "line": 600,
              "async": false,
              "calls": [
                "lower",
                "append"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_load_architecture_patterns",
              "line": 619,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "__del__",
              "line": 742,
              "async": false,
              "calls": [
                "hasattr",
                "stop",
                "info",
                "error"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_load_tech_stacks",
              "line": 754,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_generate_redis_config",
              "line": 845,
              "async": false,
              "calls": [
                "now",
                "keys",
                "join",
                "isoformat",
                "get"
              ],
              "parameters": [
                "self",
                "params"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_generate_docker_compose",
              "line": 912,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "services"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "_detect_request_type",
              "line": 1391,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/architect_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ArchitectureDesign",
              "line": 94,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/architect_agent.py"
            },
            {
              "name": "ArchitectAgent",
              "line": 106,
              "methods": [
                "__init__",
                "_parse_architecture_response",
                "_extract_features",
                "_load_architecture_patterns",
                "__del__",
                "_load_tech_stacks",
                "_generate_redis_config",
                "_generate_docker_compose",
                "_detect_request_type"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/architect_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "config",
              "names": [
                "settings"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "DependencyError"
              ],
              "line": 31
            },
            {
              "type": "from_import",
              "module": "services.project_cache",
              "names": [
                "ProjectCache"
              ],
              "line": 34
            },
            {
              "type": "from_import",
              "module": "services.smart_file_watcher",
              "names": [
                "SmartFileWatcher"
              ],
              "line": 35
            },
            {
              "type": "from_import",
              "module": "services.code_search",
              "names": [
                "LightweightCodeSearch"
              ],
              "line": 36
            },
            {
              "type": "from_import",
              "module": "core.indexing.tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 50
            },
            {
              "type": "from_import",
              "module": "core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 51
            },
            {
              "type": "from_import",
              "module": "core.analysis.semgrep_analyzer",
              "names": [
                "SemgrepAnalyzer"
              ],
              "line": 65
            },
            {
              "type": "from_import",
              "module": "core.analysis.vulture_analyzer",
              "names": [
                "VultureAnalyzer"
              ],
              "line": 66
            },
            {
              "type": "from_import",
              "module": "core.analysis.radon_metrics",
              "names": [
                "RadonMetrics"
              ],
              "line": 67
            },
            {
              "type": "from_import",
              "module": "core.analysis.call_graph_analyzer",
              "names": [
                "CallGraphAnalyzer"
              ],
              "line": 68
            },
            {
              "type": "from_import",
              "module": "core.analysis.layer_analyzer",
              "names": [
                "LayerAnalyzer"
              ],
              "line": 69
            },
            {
              "type": "from_import",
              "module": "services.diagram_service",
              "names": [
                "DiagramService"
              ],
              "line": 86
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 134
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 1442
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "CacheNotAvailableError"
              ],
              "line": 165
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 376
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "SystemNotReadyError"
              ],
              "line": 434
            },
            {
              "type": "from_import",
              "module": "api.server",
              "names": [
                "manager"
              ],
              "line": 1437
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 21
            },
            {
              "function": "append",
              "line": 26
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "info",
              "line": 71
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "warning",
              "line": 39
            },
            {
              "function": "warning",
              "line": 40
            },
            {
              "function": "warning",
              "line": 55
            },
            {
              "function": "warning",
              "line": 56
            },
            {
              "function": "warning",
              "line": 73
            },
            {
              "function": "warning",
              "line": 74
            },
            {
              "function": "warning",
              "line": 90
            },
            {
              "function": "AgentConfig",
              "line": 117
            },
            {
              "function": "__init__",
              "line": 139
            },
            {
              "function": "OpenAIService",
              "line": 146
            },
            {
              "function": "getenv",
              "line": 152
            },
            {
              "function": "abspath",
              "line": 155
            },
            {
              "function": "info",
              "line": 156
            },
            {
              "function": "TreeSitterIndexer",
              "line": 188
            },
            {
              "function": "CodeIndexer",
              "line": 189
            },
            {
              "function": "info",
              "line": 190
            },
            {
              "function": "_load_architecture_patterns",
              "line": 218
            },
            {
              "function": "_load_tech_stacks",
              "line": 221
            },
            {
              "function": "now",
              "line": 227
            },
            {
              "function": "_parse_architecture_response",
              "line": 482
            },
            {
              "function": "ArchitectureDesign",
              "line": 545
            },
            {
              "function": "append",
              "line": 562
            },
            {
              "function": "append",
              "line": 563
            },
            {
              "function": "append",
              "line": 564
            },
            {
              "function": "append",
              "line": 566
            },
            {
              "function": "append",
              "line": 573
            },
            {
              "function": "append",
              "line": 577
            },
            {
              "function": "append",
              "line": 581
            },
            {
              "function": "append",
              "line": 582
            },
            {
              "function": "append",
              "line": 583
            },
            {
              "function": "append",
              "line": 585
            },
            {
              "function": "append",
              "line": 586
            },
            {
              "function": "append",
              "line": 587
            },
            {
              "function": "append",
              "line": 589
            },
            {
              "function": "append",
              "line": 590
            },
            {
              "function": "append",
              "line": 592
            },
            {
              "function": "append",
              "line": 593
            },
            {
              "function": "append",
              "line": 595
            },
            {
              "function": "append",
              "line": 596
            },
            {
              "function": "join",
              "line": 598
            },
            {
              "function": "lower",
              "line": 612
            },
            {
              "function": "info",
              "line": 673
            },
            {
              "function": "info",
              "line": 692
            },
            {
              "function": "abspath",
              "line": 700
            },
            {
              "function": "info",
              "line": 738
            },
            {
              "function": "get",
              "line": 771
            },
            {
              "function": "info",
              "line": 994
            },
            {
              "function": "_detect_request_type",
              "line": 998
            },
            {
              "function": "info",
              "line": 999
            },
            {
              "function": "info",
              "line": 1002
            },
            {
              "function": "info",
              "line": 1021
            },
            {
              "function": "info",
              "line": 1077
            },
            {
              "function": "info",
              "line": 1119
            },
            {
              "function": "append",
              "line": 1170
            },
            {
              "function": "get",
              "line": 1173
            },
            {
              "function": "append",
              "line": 1174
            },
            {
              "function": "append",
              "line": 1175
            },
            {
              "function": "append",
              "line": 1176
            },
            {
              "function": "append",
              "line": 1177
            },
            {
              "function": "append",
              "line": 1178
            },
            {
              "function": "append",
              "line": 1179
            },
            {
              "function": "get",
              "line": 1182
            },
            {
              "function": "get",
              "line": 1189
            },
            {
              "function": "get",
              "line": 1201
            },
            {
              "function": "append",
              "line": 1202
            },
            {
              "function": "append",
              "line": 1203
            },
            {
              "function": "append",
              "line": 1204
            },
            {
              "function": "append",
              "line": 1205
            },
            {
              "function": "get",
              "line": 1208
            },
            {
              "function": "append",
              "line": 1213
            },
            {
              "function": "enumerate",
              "line": 1216
            },
            {
              "function": "get",
              "line": 1225
            },
            {
              "function": "join",
              "line": 1231
            },
            {
              "function": "get",
              "line": 1241
            },
            {
              "function": "get",
              "line": 1242
            },
            {
              "function": "get",
              "line": 1243
            },
            {
              "function": "get",
              "line": 1244
            },
            {
              "function": "append",
              "line": 1267
            },
            {
              "function": "append",
              "line": 1282
            },
            {
              "function": "append",
              "line": 1297
            },
            {
              "function": "get",
              "line": 1306
            },
            {
              "function": "append",
              "line": 1318
            },
            {
              "function": "get",
              "line": 1327
            },
            {
              "function": "append",
              "line": 1339
            },
            {
              "function": "get",
              "line": 1365
            },
            {
              "function": "get",
              "line": 1366
            },
            {
              "function": "get",
              "line": 1367
            },
            {
              "function": "items",
              "line": 1370
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1384
            },
            {
              "function": "lower",
              "line": 1393
            },
            {
              "function": "any",
              "line": 1396
            },
            {
              "function": "debug",
              "line": 1417
            },
            {
              "function": "get",
              "line": 1423
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 135
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "dirname",
              "line": 151
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "ProjectCache",
              "line": 163
            },
            {
              "function": "LightweightCodeSearch",
              "line": 173
            },
            {
              "function": "SmartFileWatcher",
              "line": 176
            },
            {
              "function": "start",
              "line": 177
            },
            {
              "function": "info",
              "line": 179
            },
            {
              "function": "warning",
              "line": 185
            },
            {
              "function": "SemgrepAnalyzer",
              "line": 193
            },
            {
              "function": "VultureAnalyzer",
              "line": 194
            },
            {
              "function": "RadonMetrics",
              "line": 195
            },
            {
              "function": "CallGraphAnalyzer",
              "line": 196
            },
            {
              "function": "LayerAnalyzer",
              "line": 197
            },
            {
              "function": "info",
              "line": 198
            },
            {
              "function": "warning",
              "line": 205
            },
            {
              "function": "DiagramService",
              "line": 208
            },
            {
              "function": "warning",
              "line": 211
            },
            {
              "function": "hasattr",
              "line": 232
            },
            {
              "function": "isinstance",
              "line": 249
            },
            {
              "function": "get",
              "line": 249
            },
            {
              "function": "isinstance",
              "line": 250
            },
            {
              "function": "get",
              "line": 250
            },
            {
              "function": "get",
              "line": 254
            },
            {
              "function": "abspath",
              "line": 255
            },
            {
              "function": "info",
              "line": 256
            },
            {
              "function": "join",
              "line": 270
            },
            {
              "function": "makedirs",
              "line": 271
            },
            {
              "function": "lower",
              "line": 277
            },
            {
              "function": "info",
              "line": 278
            },
            {
              "function": "info",
              "line": 279
            },
            {
              "function": "any",
              "line": 282
            },
            {
              "function": "total_seconds",
              "line": 360
            },
            {
              "function": "TaskResult",
              "line": 362
            },
            {
              "function": "complete",
              "line": 424
            },
            {
              "function": "loads",
              "line": 431
            },
            {
              "function": "complete",
              "line": 479
            },
            {
              "function": "lower",
              "line": 496
            },
            {
              "function": "lower",
              "line": 503
            },
            {
              "function": "append",
              "line": 504
            },
            {
              "function": "append",
              "line": 512
            },
            {
              "function": "lower",
              "line": 519
            },
            {
              "function": "append",
              "line": 520
            },
            {
              "function": "append",
              "line": 568
            },
            {
              "function": "append",
              "line": 569
            },
            {
              "function": "append",
              "line": 570
            },
            {
              "function": "append",
              "line": 571
            },
            {
              "function": "append",
              "line": 575
            },
            {
              "function": "append",
              "line": 579
            },
            {
              "function": "info",
              "line": 653
            },
            {
              "function": "invalidate",
              "line": 657
            },
            {
              "function": "info",
              "line": 658
            },
            {
              "function": "clear_all",
              "line": 661
            },
            {
              "function": "info",
              "line": 662
            },
            {
              "function": "_send_progress",
              "line": 674
            },
            {
              "function": "invalidate_cache",
              "line": 677
            },
            {
              "function": "understand_system",
              "line": 680
            },
            {
              "function": "_send_progress",
              "line": 693
            },
            {
              "function": "getcwd",
              "line": 700
            },
            {
              "function": "info",
              "line": 703
            },
            {
              "function": "info",
              "line": 715
            },
            {
              "function": "info",
              "line": 721
            },
            {
              "function": "info",
              "line": 727
            },
            {
              "function": "invalidate",
              "line": 734
            },
            {
              "function": "_send_progress",
              "line": 737
            },
            {
              "function": "get",
              "line": 772
            },
            {
              "function": "_generate_redis_config",
              "line": 790
            },
            {
              "function": "_generate_docker_compose",
              "line": 825
            },
            {
              "function": "warning",
              "line": 979
            },
            {
              "function": "get",
              "line": 987
            },
            {
              "function": "_send_progress",
              "line": 995
            },
            {
              "function": "_send_progress",
              "line": 1003
            },
            {
              "function": "get",
              "line": 1012
            },
            {
              "function": "_send_progress",
              "line": 1022
            },
            {
              "function": "get",
              "line": 1030
            },
            {
              "function": "get",
              "line": 1031
            },
            {
              "function": "get",
              "line": 1032
            },
            {
              "function": "get",
              "line": 1055
            },
            {
              "function": "info",
              "line": 1062
            },
            {
              "function": "get",
              "line": 1067
            },
            {
              "function": "info",
              "line": 1074
            },
            {
              "function": "_send_progress",
              "line": 1078
            },
            {
              "function": "get",
              "line": 1082
            },
            {
              "function": "isoformat",
              "line": 1107
            },
            {
              "function": "set",
              "line": 1112
            },
            {
              "function": "info",
              "line": 1113
            },
            {
              "function": "get",
              "line": 1131
            },
            {
              "function": "get",
              "line": 1132
            },
            {
              "function": "items",
              "line": 1134
            },
            {
              "function": "info",
              "line": 1149
            },
            {
              "function": "append",
              "line": 1183
            },
            {
              "function": "append",
              "line": 1184
            },
            {
              "function": "append",
              "line": 1185
            },
            {
              "function": "append",
              "line": 1186
            },
            {
              "function": "append",
              "line": 1191
            },
            {
              "function": "append",
              "line": 1198
            },
            {
              "function": "get",
              "line": 1209
            },
            {
              "function": "append",
              "line": 1210
            },
            {
              "function": "_generate_improvement_suggestions",
              "line": 1215
            },
            {
              "function": "append",
              "line": 1217
            },
            {
              "function": "append",
              "line": 1218
            },
            {
              "function": "append",
              "line": 1219
            },
            {
              "function": "append",
              "line": 1222
            },
            {
              "function": "append",
              "line": 1226
            },
            {
              "function": "append",
              "line": 1227
            },
            {
              "function": "append",
              "line": 1228
            },
            {
              "function": "append",
              "line": 1229
            },
            {
              "function": "_check_for_technology",
              "line": 1247
            },
            {
              "function": "_check_for_technology",
              "line": 1248
            },
            {
              "function": "append",
              "line": 1252
            },
            {
              "function": "get",
              "line": 1307
            },
            {
              "function": "append",
              "line": 1308
            },
            {
              "function": "append",
              "line": 1329
            },
            {
              "function": "any",
              "line": 1398
            },
            {
              "function": "debug",
              "line": 1419
            },
            {
              "function": "debug",
              "line": 1425
            },
            {
              "function": "debug",
              "line": 1443
            },
            {
              "function": "debug",
              "line": 1444
            },
            {
              "function": "abspath",
              "line": 26
            },
            {
              "function": "super",
              "line": 139
            },
            {
              "function": "basename",
              "line": 151
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "CacheNotAvailableError",
              "line": 166
            },
            {
              "function": "isinstance",
              "line": 236
            },
            {
              "function": "getcwd",
              "line": 254
            },
            {
              "function": "hasattr",
              "line": 259
            },
            {
              "function": "getattr",
              "line": 260
            },
            {
              "function": "_send_progress",
              "line": 274
            },
            {
              "function": "info",
              "line": 283
            },
            {
              "function": "info",
              "line": 286
            },
            {
              "function": "error",
              "line": 375
            },
            {
              "function": "error",
              "line": 377
            },
            {
              "function": "TaskResult",
              "line": 385
            },
            {
              "function": "SystemNotReadyError",
              "line": 435
            },
            {
              "function": "dumps",
              "line": 464
            },
            {
              "function": "lower",
              "line": 498
            },
            {
              "function": "lower",
              "line": 511
            },
            {
              "function": "lower",
              "line": 511
            },
            {
              "function": "lower",
              "line": 533
            },
            {
              "function": "append",
              "line": 534
            },
            {
              "function": "lower",
              "line": 542
            },
            {
              "function": "append",
              "line": 543
            },
            {
              "function": "get",
              "line": 546
            },
            {
              "function": "append",
              "line": 615
            },
            {
              "function": "refresh_analysis",
              "line": 697
            },
            {
              "function": "_send_progress",
              "line": 704
            },
            {
              "function": "invalidate",
              "line": 706
            },
            {
              "function": "build_full_index",
              "line": 710
            },
            {
              "function": "set",
              "line": 712
            },
            {
              "function": "_send_progress",
              "line": 716
            },
            {
              "function": "invalidate",
              "line": 718
            },
            {
              "function": "_send_progress",
              "line": 722
            },
            {
              "function": "invalidate",
              "line": 724
            },
            {
              "function": "_send_progress",
              "line": 728
            },
            {
              "function": "invalidate",
              "line": 730
            },
            {
              "function": "hasattr",
              "line": 748
            },
            {
              "function": "stop",
              "line": 749
            },
            {
              "function": "info",
              "line": 750
            },
            {
              "function": "error",
              "line": 752
            },
            {
              "function": "execute",
              "line": 773
            },
            {
              "function": "write_implementation",
              "line": 793
            },
            {
              "function": "get",
              "line": 795
            },
            {
              "function": "info",
              "line": 796
            },
            {
              "function": "error",
              "line": 803
            },
            {
              "function": "write_implementation",
              "line": 828
            },
            {
              "function": "get",
              "line": 830
            },
            {
              "function": "info",
              "line": 831
            },
            {
              "function": "error",
              "line": 838
            },
            {
              "function": "get",
              "line": 853
            },
            {
              "function": "get",
              "line": 854
            },
            {
              "function": "isoformat",
              "line": 907
            },
            {
              "function": "info",
              "line": 989
            },
            {
              "function": "_send_progress",
              "line": 1007
            },
            {
              "function": "build_full_index",
              "line": 1015
            },
            {
              "function": "set",
              "line": 1018
            },
            {
              "function": "_send_progress",
              "line": 1035
            },
            {
              "function": "run_analysis",
              "line": 1036
            },
            {
              "function": "set",
              "line": 1038
            },
            {
              "function": "_send_progress",
              "line": 1041
            },
            {
              "function": "find_dead_code",
              "line": 1042
            },
            {
              "function": "set",
              "line": 1044
            },
            {
              "function": "_send_progress",
              "line": 1047
            },
            {
              "function": "calculate_all_metrics",
              "line": 1048
            },
            {
              "function": "set",
              "line": 1050
            },
            {
              "function": "_send_progress",
              "line": 1058
            },
            {
              "function": "build_call_graph",
              "line": 1059
            },
            {
              "function": "set",
              "line": 1061
            },
            {
              "function": "_send_progress",
              "line": 1070
            },
            {
              "function": "detect_system_layers",
              "line": 1071
            },
            {
              "function": "set",
              "line": 1073
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1086
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1087
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1088
            },
            {
              "function": "generate_dependency_graph",
              "line": 1089
            },
            {
              "function": "generate_sequence_diagram",
              "line": 1092
            },
            {
              "function": "generate_state_diagram",
              "line": 1093
            },
            {
              "function": "set",
              "line": 1096
            },
            {
              "function": "_index_functions_for_search",
              "line": 1117
            },
            {
              "function": "get",
              "line": 1135
            },
            {
              "function": "error",
              "line": 1151
            },
            {
              "function": "understand_system",
              "line": 1160
            },
            {
              "function": "get",
              "line": 1182
            },
            {
              "function": "get",
              "line": 1192
            },
            {
              "function": "append",
              "line": 1193
            },
            {
              "function": "get",
              "line": 1194
            },
            {
              "function": "append",
              "line": 1195
            },
            {
              "function": "get",
              "line": 1196
            },
            {
              "function": "append",
              "line": 1197
            },
            {
              "function": "append",
              "line": 1221
            },
            {
              "function": "get",
              "line": 1225
            },
            {
              "function": "get",
              "line": 1328
            },
            {
              "function": "get",
              "line": 1328
            },
            {
              "function": "hasattr",
              "line": 1358
            },
            {
              "function": "warning",
              "line": 1362
            },
            {
              "function": "lower",
              "line": 1371
            },
            {
              "function": "lower",
              "line": 1371
            },
            {
              "function": "understand_system",
              "line": 1381
            },
            {
              "function": "any",
              "line": 1400
            },
            {
              "function": "debug",
              "line": 1435
            },
            {
              "function": "error",
              "line": 1464
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "info",
              "line": 262
            },
            {
              "function": "stop",
              "line": 263
            },
            {
              "function": "ProjectCache",
              "line": 265
            },
            {
              "function": "SmartFileWatcher",
              "line": 266
            },
            {
              "function": "start",
              "line": 267
            },
            {
              "function": "info",
              "line": 268
            },
            {
              "function": "_send_progress",
              "line": 284
            },
            {
              "function": "info",
              "line": 288
            },
            {
              "function": "join",
              "line": 292
            },
            {
              "function": "append",
              "line": 295
            },
            {
              "function": "info",
              "line": 296
            },
            {
              "function": "warning",
              "line": 299
            },
            {
              "function": "info",
              "line": 304
            },
            {
              "function": "info",
              "line": 324
            },
            {
              "function": "locals",
              "line": 339
            },
            {
              "function": "analyze_requirements",
              "line": 355
            },
            {
              "function": "design_architecture",
              "line": 356
            },
            {
              "function": "generate_documentation",
              "line": 357
            },
            {
              "function": "capitalize",
              "line": 534
            },
            {
              "function": "upper",
              "line": 543
            },
            {
              "function": "get",
              "line": 582
            },
            {
              "function": "get",
              "line": 583
            },
            {
              "function": "get",
              "line": 586
            },
            {
              "function": "get",
              "line": 587
            },
            {
              "function": "_send_progress",
              "line": 709
            },
            {
              "function": "TaskRequest",
              "line": 773
            },
            {
              "function": "str",
              "line": 806
            },
            {
              "function": "str",
              "line": 841
            },
            {
              "function": "join",
              "line": 908
            },
            {
              "function": "_send_progress",
              "line": 990
            },
            {
              "function": "get",
              "line": 1090
            },
            {
              "function": "now",
              "line": 1107
            },
            {
              "function": "len",
              "line": 1119
            },
            {
              "function": "get",
              "line": 1175
            },
            {
              "function": "get",
              "line": 1176
            },
            {
              "function": "get",
              "line": 1177
            },
            {
              "function": "get",
              "line": 1178
            },
            {
              "function": "get",
              "line": 1179
            },
            {
              "function": "get",
              "line": 1203
            },
            {
              "function": "get",
              "line": 1204
            },
            {
              "function": "get",
              "line": 1205
            },
            {
              "function": "search_pattern",
              "line": 1359
            },
            {
              "function": "len",
              "line": 1360
            },
            {
              "function": "any",
              "line": 1402
            },
            {
              "function": "info",
              "line": 1448
            },
            {
              "function": "info",
              "line": 1455
            },
            {
              "function": "warning",
              "line": 1460
            },
            {
              "function": "warning",
              "line": 1462
            },
            {
              "function": "loads",
              "line": 239
            },
            {
              "function": "info",
              "line": 240
            },
            {
              "function": "isinstance",
              "line": 244
            },
            {
              "function": "warning",
              "line": 245
            },
            {
              "function": "understand_system",
              "line": 289
            },
            {
              "function": "open",
              "line": 293
            },
            {
              "function": "dump",
              "line": 294
            },
            {
              "function": "analyze_requirements",
              "line": 300
            },
            {
              "function": "join",
              "line": 314
            },
            {
              "function": "append",
              "line": 317
            },
            {
              "function": "info",
              "line": 318
            },
            {
              "function": "join",
              "line": 330
            },
            {
              "function": "append",
              "line": 333
            },
            {
              "function": "info",
              "line": 334
            },
            {
              "function": "now",
              "line": 360
            },
            {
              "function": "str",
              "line": 380
            },
            {
              "function": "type",
              "line": 381
            },
            {
              "function": "now",
              "line": 907
            },
            {
              "function": "keys",
              "line": 908
            },
            {
              "function": "len",
              "line": 1074
            },
            {
              "function": "get",
              "line": 1119
            },
            {
              "function": "get",
              "line": 1139
            },
            {
              "function": "get",
              "line": 1140
            },
            {
              "function": "get",
              "line": 1141
            },
            {
              "function": "get",
              "line": 1143
            },
            {
              "function": "get",
              "line": 1144
            },
            {
              "function": "get",
              "line": 1145
            },
            {
              "function": "index_function",
              "line": 1147
            },
            {
              "function": "get",
              "line": 1314
            },
            {
              "function": "get",
              "line": 1335
            },
            {
              "function": "str",
              "line": 1371
            },
            {
              "function": "any",
              "line": 1404
            },
            {
              "function": "warning",
              "line": 1439
            },
            {
              "function": "send_json",
              "line": 1449
            },
            {
              "function": "error",
              "line": 1457
            },
            {
              "function": "warning",
              "line": 242
            },
            {
              "function": "analyze_infrastructure_improvements",
              "line": 308
            },
            {
              "function": "open",
              "line": 315
            },
            {
              "function": "write",
              "line": 316
            },
            {
              "function": "generate_architecture_flowchart",
              "line": 327
            },
            {
              "function": "open",
              "line": 331
            },
            {
              "function": "write",
              "line": 332
            },
            {
              "function": "len",
              "line": 340
            },
            {
              "function": "analyze_requirements",
              "line": 346
            },
            {
              "function": "design_architecture",
              "line": 347
            },
            {
              "function": "generate_documentation",
              "line": 348
            },
            {
              "function": "format_exc",
              "line": 377
            },
            {
              "function": "hasattr",
              "line": 382
            },
            {
              "function": "type",
              "line": 382
            },
            {
              "function": "hasattr",
              "line": 383
            },
            {
              "function": "repr",
              "line": 383
            },
            {
              "function": "get",
              "line": 1142
            },
            {
              "function": "get",
              "line": 1309
            },
            {
              "function": "any",
              "line": 1406
            },
            {
              "function": "list",
              "line": 1444
            },
            {
              "function": "basename",
              "line": 342
            },
            {
              "function": "str",
              "line": 437
            },
            {
              "function": "get",
              "line": 1119
            },
            {
              "function": "get",
              "line": 1330
            },
            {
              "function": "get",
              "line": 1330
            },
            {
              "function": "any",
              "line": 1408
            },
            {
              "function": "keys",
              "line": 1444
            },
            {
              "function": "isoformat",
              "line": 1453
            },
            {
              "function": "list",
              "line": 1462
            },
            {
              "function": "type",
              "line": 245
            },
            {
              "function": "any",
              "line": 1410
            },
            {
              "function": "keys",
              "line": 1462
            },
            {
              "function": "now",
              "line": 1453
            }
          ]
        },
        "agents/specialized/codesmith_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 89,
              "async": false,
              "calls": [
                "warning",
                "AgentConfig",
                "_load_language_configs",
                "__init__",
                "TreeSitterIndexer",
                "ClaudeCodeService",
                "error",
                "CodeIndexer",
                "RadonMetrics",
                "super",
                "is_available",
                "VultureAnalyzer",
                "_load_code_patterns",
                "ClaudeCodeConfig",
                "DiagramService",
                "apply_capabilities_to_agent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "format_implementation",
              "line": 890,
              "async": false,
              "calls": [
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "implementation"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_detect_language",
              "line": 926,
              "async": false,
              "calls": [
                "lower",
                "items"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_functionality",
              "line": 953,
              "async": false,
              "calls": [
                "lower",
                "split",
                "strip"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_assess_complexity",
              "line": 965,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_generate_filename",
              "line": 978,
              "async": false,
              "calls": [
                "join",
                "split",
                "get",
                "lower",
                "len"
              ],
              "parameters": [
                "self",
                "prompt",
                "language"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_dependencies",
              "line": 1004,
              "async": false,
              "calls": [
                "findall",
                "set",
                "split",
                "list",
                "startswith"
              ],
              "parameters": [
                "self",
                "code",
                "language"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_get_test_framework",
              "line": 1027,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "language"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_load_code_patterns",
              "line": 1046,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_load_language_configs",
              "line": 1068,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_generate_fix_suggestion",
              "line": 1681,
              "async": false,
              "calls": [
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "issues",
                "line_content"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_check_for_hallucination",
              "line": 1769,
              "async": false,
              "calls": [
                "error",
                "lower"
              ],
              "parameters": [
                "self",
                "content"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_validate_workspace_context",
              "line": 1791,
              "async": false,
              "calls": [
                "getcwd",
                "exists",
                "join",
                "info",
                "warning"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_enforce_asimov_rule_1",
              "line": 1825,
              "async": false,
              "calls": [
                "ValueError",
                "info",
                "any",
                "lower",
                "warning"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_file_path",
              "line": 1978,
              "async": false,
              "calls": [
                "search",
                "group"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_generate_file_path",
              "line": 1995,
              "async": false,
              "calls": [
                "lower",
                "_extract_feature_name"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_feature_name",
              "line": 2028,
              "async": false,
              "calls": [
                "lower",
                "len",
                "replace",
                "findall"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "agents/specialized/codesmith_agent.py"
            }
          ],
          "classes": [
            {
              "name": "CodeImplementation",
              "line": 69,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/codesmith_agent.py"
            },
            {
              "name": "CodeSmithAgent",
              "line": 79,
              "methods": [
                "__init__",
                "format_implementation",
                "_detect_language",
                "_extract_functionality",
                "_assess_complexity",
                "_generate_filename",
                "_extract_dependencies",
                "_get_test_framework",
                "_load_code_patterns",
                "_load_language_configs",
                "_generate_fix_suggestion",
                "_check_for_hallucination",
                "_validate_workspace_context",
                "_enforce_asimov_rule_1",
                "_extract_file_path",
                "_generate_file_path",
                "_extract_feature_name"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/codesmith_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 23
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "DependencyError"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "core.indexing.tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 33
            },
            {
              "type": "from_import",
              "module": "core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 34
            },
            {
              "type": "from_import",
              "module": "core.analysis.vulture_analyzer",
              "names": [
                "VultureAnalyzer"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "core.analysis.radon_metrics",
              "names": [
                "RadonMetrics"
              ],
              "line": 48
            },
            {
              "type": "from_import",
              "module": "services.diagram_service",
              "names": [
                "DiagramService"
              ],
              "line": 61
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1795
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 1980
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 2030
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 108
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "get_agent_registry"
              ],
              "line": 1240
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 1597
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 2109
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "append",
              "line": 25
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "info",
              "line": 36
            },
            {
              "function": "info",
              "line": 50
            },
            {
              "function": "info",
              "line": 63
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "warning",
              "line": 38
            },
            {
              "function": "warning",
              "line": 52
            },
            {
              "function": "warning",
              "line": 65
            },
            {
              "function": "AgentConfig",
              "line": 90
            },
            {
              "function": "__init__",
              "line": 113
            },
            {
              "function": "ClaudeCodeService",
              "line": 116
            },
            {
              "function": "_load_code_patterns",
              "line": 160
            },
            {
              "function": "_load_language_configs",
              "line": 163
            },
            {
              "function": "now",
              "line": 169
            },
            {
              "function": "_detect_language",
              "line": 317
            },
            {
              "function": "get",
              "line": 367
            },
            {
              "function": "_generate_filename",
              "line": 403
            },
            {
              "function": "_extract_dependencies",
              "line": 406
            },
            {
              "function": "CodeImplementation",
              "line": 408
            },
            {
              "function": "_get_test_framework",
              "line": 421
            },
            {
              "function": "join",
              "line": 573
            },
            {
              "function": "join",
              "line": 576
            },
            {
              "function": "exists",
              "line": 578
            },
            {
              "function": "join",
              "line": 614
            },
            {
              "function": "append",
              "line": 617
            },
            {
              "function": "info",
              "line": 618
            },
            {
              "function": "join",
              "line": 660
            },
            {
              "function": "append",
              "line": 663
            },
            {
              "function": "info",
              "line": 664
            },
            {
              "function": "join",
              "line": 801
            },
            {
              "function": "makedirs",
              "line": 802
            },
            {
              "function": "append",
              "line": 805
            },
            {
              "function": "info",
              "line": 806
            },
            {
              "function": "join",
              "line": 881
            },
            {
              "function": "makedirs",
              "line": 882
            },
            {
              "function": "append",
              "line": 885
            },
            {
              "function": "info",
              "line": 886
            },
            {
              "function": "append",
              "line": 895
            },
            {
              "function": "append",
              "line": 896
            },
            {
              "function": "append",
              "line": 897
            },
            {
              "function": "append",
              "line": 898
            },
            {
              "function": "append",
              "line": 906
            },
            {
              "function": "append",
              "line": 907
            },
            {
              "function": "append",
              "line": 908
            },
            {
              "function": "append",
              "line": 909
            },
            {
              "function": "append",
              "line": 921
            },
            {
              "function": "append",
              "line": 922
            },
            {
              "function": "join",
              "line": 924
            },
            {
              "function": "lower",
              "line": 930
            },
            {
              "function": "items",
              "line": 945
            },
            {
              "function": "split",
              "line": 958
            },
            {
              "function": "lower",
              "line": 969
            },
            {
              "function": "any",
              "line": 971
            },
            {
              "function": "list",
              "line": 1023
            },
            {
              "function": "get",
              "line": 1044
            },
            {
              "function": "info",
              "line": 1107
            },
            {
              "function": "get",
              "line": 1113
            },
            {
              "function": "get",
              "line": 1163
            },
            {
              "function": "get",
              "line": 1164
            },
            {
              "function": "get",
              "line": 1167
            },
            {
              "function": "get",
              "line": 1200
            },
            {
              "function": "get",
              "line": 1287
            },
            {
              "function": "get",
              "line": 1288
            },
            {
              "function": "get",
              "line": 1325
            },
            {
              "function": "items",
              "line": 1329
            },
            {
              "function": "get",
              "line": 1358
            },
            {
              "function": "get",
              "line": 1388
            },
            {
              "function": "now",
              "line": 1400
            },
            {
              "function": "info",
              "line": 1401
            },
            {
              "function": "info",
              "line": 1507
            },
            {
              "function": "info",
              "line": 1594
            },
            {
              "function": "info",
              "line": 1700
            },
            {
              "function": "lower",
              "line": 1782
            },
            {
              "function": "getcwd",
              "line": 1804
            },
            {
              "function": "warning",
              "line": 1817
            },
            {
              "function": "any",
              "line": 1840
            },
            {
              "function": "info",
              "line": 1843
            },
            {
              "function": "lower",
              "line": 1997
            },
            {
              "function": "_extract_feature_name",
              "line": 2014
            },
            {
              "function": "findall",
              "line": 2037
            },
            {
              "function": "info",
              "line": 2061
            },
            {
              "function": "info",
              "line": 2062
            },
            {
              "function": "info",
              "line": 2063
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 109
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 117
            },
            {
              "function": "is_available",
              "line": 124
            },
            {
              "function": "error",
              "line": 130
            },
            {
              "function": "TreeSitterIndexer",
              "line": 135
            },
            {
              "function": "CodeIndexer",
              "line": 136
            },
            {
              "function": "warning",
              "line": 140
            },
            {
              "function": "VultureAnalyzer",
              "line": 143
            },
            {
              "function": "RadonMetrics",
              "line": 144
            },
            {
              "function": "warning",
              "line": 148
            },
            {
              "function": "DiagramService",
              "line": 151
            },
            {
              "function": "warning",
              "line": 154
            },
            {
              "function": "_validate_workspace_context",
              "line": 174
            },
            {
              "function": "get",
              "line": 180
            },
            {
              "function": "lower",
              "line": 181
            },
            {
              "function": "any",
              "line": 201
            },
            {
              "function": "any",
              "line": 230
            },
            {
              "function": "total_seconds",
              "line": 291
            },
            {
              "function": "TaskResult",
              "line": 293
            },
            {
              "function": "is_available",
              "line": 345
            },
            {
              "function": "Exception",
              "line": 346
            },
            {
              "function": "complete",
              "line": 348
            },
            {
              "function": "_extract_functionality",
              "line": 353
            },
            {
              "function": "_assess_complexity",
              "line": 356
            },
            {
              "function": "is_available",
              "line": 393
            },
            {
              "function": "Exception",
              "line": 394
            },
            {
              "function": "generate_code",
              "line": 396
            },
            {
              "function": "is_available",
              "line": 447
            },
            {
              "function": "Exception",
              "line": 448
            },
            {
              "function": "complete",
              "line": 450
            },
            {
              "function": "is_available",
              "line": 482
            },
            {
              "function": "Exception",
              "line": 483
            },
            {
              "function": "complete",
              "line": 485
            },
            {
              "function": "is_available",
              "line": 524
            },
            {
              "function": "Exception",
              "line": 525
            },
            {
              "function": "complete",
              "line": 527
            },
            {
              "function": "is_available",
              "line": 561
            },
            {
              "function": "Exception",
              "line": 562
            },
            {
              "function": "complete",
              "line": 564
            },
            {
              "function": "open",
              "line": 615
            },
            {
              "function": "write",
              "line": 616
            },
            {
              "function": "open",
              "line": 661
            },
            {
              "function": "write",
              "line": 662
            },
            {
              "function": "dirname",
              "line": 802
            },
            {
              "function": "open",
              "line": 803
            },
            {
              "function": "write",
              "line": 804
            },
            {
              "function": "dirname",
              "line": 882
            },
            {
              "function": "open",
              "line": 883
            },
            {
              "function": "write",
              "line": 884
            },
            {
              "function": "append",
              "line": 901
            },
            {
              "function": "append",
              "line": 904
            },
            {
              "function": "append",
              "line": 912
            },
            {
              "function": "append",
              "line": 913
            },
            {
              "function": "append",
              "line": 914
            },
            {
              "function": "append",
              "line": 915
            },
            {
              "function": "append",
              "line": 918
            },
            {
              "function": "append",
              "line": 919
            },
            {
              "function": "any",
              "line": 973
            },
            {
              "function": "split",
              "line": 996
            },
            {
              "function": "join",
              "line": 997
            },
            {
              "function": "get",
              "line": 1002
            },
            {
              "function": "findall",
              "line": 1013
            },
            {
              "function": "set",
              "line": 1023
            },
            {
              "function": "warning",
              "line": 1101
            },
            {
              "function": "build_full_index",
              "line": 1110
            },
            {
              "function": "find_dead_code",
              "line": 1116
            },
            {
              "function": "calculate_all_metrics",
              "line": 1119
            },
            {
              "function": "info",
              "line": 1134
            },
            {
              "function": "isinstance",
              "line": 1169
            },
            {
              "function": "complete",
              "line": 1188
            },
            {
              "function": "identify_refactoring_candidates",
              "line": 1203
            },
            {
              "function": "get_agent_registry",
              "line": 1241
            },
            {
              "function": "get_agent",
              "line": 1242
            },
            {
              "function": "any",
              "line": 1258
            },
            {
              "function": "append",
              "line": 1307
            },
            {
              "function": "get",
              "line": 1330
            },
            {
              "function": "process_message",
              "line": 1346
            },
            {
              "function": "get",
              "line": 1360
            },
            {
              "function": "generate_cleanup_script",
              "line": 1364
            },
            {
              "function": "get",
              "line": 1389
            },
            {
              "function": "join",
              "line": 1405
            },
            {
              "function": "find",
              "line": 1422
            },
            {
              "function": "info",
              "line": 1432
            },
            {
              "function": "info",
              "line": 1455
            },
            {
              "function": "find",
              "line": 1538
            },
            {
              "function": "rfind",
              "line": 1547
            },
            {
              "function": "info",
              "line": 1574
            },
            {
              "function": "max",
              "line": 1604
            },
            {
              "function": "min",
              "line": 1605
            },
            {
              "function": "run",
              "line": 1609
            },
            {
              "function": "join",
              "line": 1693
            },
            {
              "function": "append",
              "line": 1710
            },
            {
              "function": "_load_code_patterns",
              "line": 1741
            },
            {
              "function": "append",
              "line": 1742
            },
            {
              "function": "join",
              "line": 1745
            },
            {
              "function": "exists",
              "line": 1746
            },
            {
              "function": "info",
              "line": 1761
            },
            {
              "function": "join",
              "line": 1807
            },
            {
              "function": "exists",
              "line": 1808
            },
            {
              "function": "ValueError",
              "line": 1831
            },
            {
              "function": "warning",
              "line": 1841
            },
            {
              "function": "startswith",
              "line": 1880
            },
            {
              "function": "lower",
              "line": 1899
            },
            {
              "function": "any",
              "line": 1924
            },
            {
              "function": "strip",
              "line": 1956
            },
            {
              "function": "startswith",
              "line": 1965
            },
            {
              "function": "join",
              "line": 1969
            },
            {
              "function": "info",
              "line": 1970
            },
            {
              "function": "search",
              "line": 1989
            },
            {
              "function": "lower",
              "line": 2037
            },
            {
              "function": "replace",
              "line": 2042
            },
            {
              "function": "info",
              "line": 2067
            },
            {
              "function": "info",
              "line": 2078
            },
            {
              "function": "info",
              "line": 2081
            },
            {
              "function": "abspath",
              "line": 25
            },
            {
              "function": "super",
              "line": 113
            },
            {
              "function": "warning",
              "line": 176
            },
            {
              "function": "getcwd",
              "line": 180
            },
            {
              "function": "info",
              "line": 185
            },
            {
              "function": "_check_for_hallucination",
              "line": 189
            },
            {
              "function": "info",
              "line": 202
            },
            {
              "function": "total_seconds",
              "line": 205
            },
            {
              "function": "TaskResult",
              "line": 214
            },
            {
              "function": "_ai_detect_implementation_request",
              "line": 227
            },
            {
              "function": "total_seconds",
              "line": 236
            },
            {
              "function": "TaskResult",
              "line": 238
            },
            {
              "function": "_enforce_asimov_rule_1",
              "line": 256
            },
            {
              "function": "info",
              "line": 259
            },
            {
              "function": "error",
              "line": 305
            },
            {
              "function": "TaskResult",
              "line": 306
            },
            {
              "function": "get",
              "line": 413
            },
            {
              "function": "append",
              "line": 903
            },
            {
              "function": "lower",
              "line": 960
            },
            {
              "function": "strip",
              "line": 961
            },
            {
              "function": "findall",
              "line": 1019
            },
            {
              "function": "str",
              "line": 1173
            },
            {
              "function": "get",
              "line": 1178
            },
            {
              "function": "join",
              "line": 1179
            },
            {
              "function": "analyze_codebase",
              "line": 1198
            },
            {
              "function": "append",
              "line": 1222
            },
            {
              "function": "warning",
              "line": 1245
            },
            {
              "function": "any",
              "line": 1252
            },
            {
              "function": "append",
              "line": 1259
            },
            {
              "function": "info",
              "line": 1267
            },
            {
              "function": "info",
              "line": 1273
            },
            {
              "function": "warning",
              "line": 1275
            },
            {
              "function": "analyze_codebase",
              "line": 1285
            },
            {
              "function": "process_message",
              "line": 1305
            },
            {
              "function": "analyze_codebase",
              "line": 1322
            },
            {
              "function": "get",
              "line": 1325
            },
            {
              "function": "append",
              "line": 1332
            },
            {
              "function": "dumps",
              "line": 1341
            },
            {
              "function": "analyze_codebase",
              "line": 1356
            },
            {
              "function": "execute",
              "line": 1390
            },
            {
              "function": "exists",
              "line": 1408
            },
            {
              "function": "error",
              "line": 1409
            },
            {
              "function": "TaskResult",
              "line": 1410
            },
            {
              "function": "open",
              "line": 1418
            },
            {
              "function": "read",
              "line": 1419
            },
            {
              "function": "error",
              "line": 1424
            },
            {
              "function": "TaskResult",
              "line": 1425
            },
            {
              "function": "_direct_button_implementation",
              "line": 1456
            },
            {
              "function": "info",
              "line": 1460
            },
            {
              "function": "get",
              "line": 1470
            },
            {
              "function": "total_seconds",
              "line": 1471
            },
            {
              "function": "TaskResult",
              "line": 1472
            },
            {
              "function": "TaskResult",
              "line": 1486
            },
            {
              "function": "error",
              "line": 1494
            },
            {
              "function": "TaskResult",
              "line": 1495
            },
            {
              "function": "open",
              "line": 1511
            },
            {
              "function": "read",
              "line": 1512
            },
            {
              "function": "info",
              "line": 1516
            },
            {
              "function": "error",
              "line": 1540
            },
            {
              "function": "open",
              "line": 1571
            },
            {
              "function": "write",
              "line": 1572
            },
            {
              "function": "error",
              "line": 1583
            },
            {
              "function": "open",
              "line": 1600
            },
            {
              "function": "readlines",
              "line": 1601
            },
            {
              "function": "len",
              "line": 1605
            },
            {
              "function": "split",
              "line": 1621
            },
            {
              "function": "len",
              "line": 1626
            },
            {
              "function": "error",
              "line": 1675
            },
            {
              "function": "append",
              "line": 1687
            },
            {
              "function": "error",
              "line": 1765
            },
            {
              "function": "append",
              "line": 1766
            },
            {
              "function": "lower",
              "line": 1784
            },
            {
              "function": "error",
              "line": 1785
            },
            {
              "function": "error",
              "line": 1786
            },
            {
              "function": "info",
              "line": 1809
            },
            {
              "function": "complete",
              "line": 1878
            },
            {
              "function": "info",
              "line": 1882
            },
            {
              "function": "info",
              "line": 1884
            },
            {
              "function": "error",
              "line": 1888
            },
            {
              "function": "Exception",
              "line": 1890
            },
            {
              "function": "info",
              "line": 1903
            },
            {
              "function": "join",
              "line": 1904
            },
            {
              "function": "walk",
              "line": 1909
            },
            {
              "function": "join",
              "line": 1921
            },
            {
              "function": "_extract_feature_name",
              "line": 1930
            },
            {
              "function": "join",
              "line": 1932
            },
            {
              "function": "info",
              "line": 1933
            },
            {
              "function": "complete",
              "line": 1954
            },
            {
              "function": "_extract_feature_name",
              "line": 1961
            },
            {
              "function": "basename",
              "line": 1966
            },
            {
              "function": "error",
              "line": 1974
            },
            {
              "function": "Exception",
              "line": 1976
            },
            {
              "function": "group",
              "line": 1991
            },
            {
              "function": "lower",
              "line": 2044
            },
            {
              "function": "implement_with_patterns",
              "line": 2068
            },
            {
              "function": "error",
              "line": 2071
            },
            {
              "function": "write_implementation",
              "line": 2082
            },
            {
              "function": "get",
              "line": 2084
            },
            {
              "function": "info",
              "line": 2085
            },
            {
              "function": "len",
              "line": 2089
            },
            {
              "function": "format_exc",
              "line": 2110
            },
            {
              "function": "error",
              "line": 2111
            },
            {
              "function": "error",
              "line": 2112
            },
            {
              "function": "error",
              "line": 2113
            },
            {
              "function": "error",
              "line": 2114
            },
            {
              "function": "handle_button_implementation",
              "line": 186
            },
            {
              "function": "error",
              "line": 190
            },
            {
              "function": "TaskResult",
              "line": 191
            },
            {
              "function": "update_caches_for_external_changes",
              "line": 203
            },
            {
              "function": "implement_infrastructure",
              "line": 231
            },
            {
              "function": "_refresh_cache_if_needed",
              "line": 234
            },
            {
              "function": "_ai_determine_file_path",
              "line": 253
            },
            {
              "function": "implement_code_to_file",
              "line": 260
            },
            {
              "function": "get",
              "line": 265
            },
            {
              "function": "total_seconds",
              "line": 266
            },
            {
              "function": "TaskResult",
              "line": 267
            },
            {
              "function": "TaskResult",
              "line": 281
            },
            {
              "function": "lower",
              "line": 354
            },
            {
              "function": "lower",
              "line": 354
            },
            {
              "function": "lower",
              "line": 355
            },
            {
              "function": "lower",
              "line": 355
            },
            {
              "function": "str",
              "line": 399
            },
            {
              "function": "join",
              "line": 512
            },
            {
              "function": "open",
              "line": 580
            },
            {
              "function": "load",
              "line": 581
            },
            {
              "function": "warning",
              "line": 583
            },
            {
              "function": "lower",
              "line": 996
            },
            {
              "function": "split",
              "line": 1014
            },
            {
              "function": "complete",
              "line": 1155
            },
            {
              "function": "error",
              "line": 1158
            },
            {
              "function": "isinstance",
              "line": 1170
            },
            {
              "function": "get",
              "line": 1170
            },
            {
              "function": "str",
              "line": 1170
            },
            {
              "function": "process_message",
              "line": 1220
            },
            {
              "function": "append",
              "line": 1253
            },
            {
              "function": "append",
              "line": 1254
            },
            {
              "function": "isinstance",
              "line": 1264
            },
            {
              "function": "get",
              "line": 1264
            },
            {
              "function": "isinstance",
              "line": 1265
            },
            {
              "function": "get",
              "line": 1265
            },
            {
              "function": "refresh_cache_after_implementation",
              "line": 1268
            },
            {
              "function": "get",
              "line": 1295
            },
            {
              "function": "get",
              "line": 1296
            },
            {
              "function": "get",
              "line": 1297
            },
            {
              "function": "get",
              "line": 1300
            },
            {
              "function": "startswith",
              "line": 1331
            },
            {
              "function": "startswith",
              "line": 1331
            },
            {
              "function": "get",
              "line": 1360
            },
            {
              "function": "TaskRequest",
              "line": 1390
            },
            {
              "function": "get",
              "line": 1459
            },
            {
              "function": "count",
              "line": 1635
            },
            {
              "function": "range",
              "line": 1648
            },
            {
              "function": "strip",
              "line": 1655
            },
            {
              "function": "strip",
              "line": 1662
            },
            {
              "function": "join",
              "line": 1663
            },
            {
              "function": "_generate_fix_suggestion",
              "line": 1666
            },
            {
              "function": "str",
              "line": 1678
            },
            {
              "function": "append",
              "line": 1689
            },
            {
              "function": "hasattr",
              "line": 1716
            },
            {
              "function": "info",
              "line": 1721
            },
            {
              "function": "append",
              "line": 1723
            },
            {
              "function": "hasattr",
              "line": 1732
            },
            {
              "function": "join",
              "line": 1749
            },
            {
              "function": "exists",
              "line": 1750
            },
            {
              "function": "str",
              "line": 1766
            },
            {
              "function": "lower",
              "line": 1840
            },
            {
              "function": "upper",
              "line": 1880
            },
            {
              "function": "len",
              "line": 2063
            },
            {
              "function": "split",
              "line": 2089
            },
            {
              "function": "str",
              "line": 2117
            },
            {
              "function": "now",
              "line": 291
            },
            {
              "function": "get",
              "line": 399
            },
            {
              "function": "str",
              "line": 1170
            },
            {
              "function": "total_seconds",
              "line": 1414
            },
            {
              "function": "total_seconds",
              "line": 1429
            },
            {
              "function": "get",
              "line": 1459
            },
            {
              "function": "implement_code_to_file",
              "line": 1462
            },
            {
              "function": "error",
              "line": 1467
            },
            {
              "function": "total_seconds",
              "line": 1490
            },
            {
              "function": "total_seconds",
              "line": 1499
            },
            {
              "function": "dirname",
              "line": 1613
            },
            {
              "function": "append",
              "line": 1623
            },
            {
              "function": "append",
              "line": 1637
            },
            {
              "function": "append",
              "line": 1641
            },
            {
              "function": "split",
              "line": 1645
            },
            {
              "function": "len",
              "line": 1648
            },
            {
              "function": "endswith",
              "line": 1655
            },
            {
              "function": "any",
              "line": 1656
            },
            {
              "function": "append",
              "line": 1657
            },
            {
              "function": "append",
              "line": 1691
            },
            {
              "function": "clear_cache",
              "line": 1717
            },
            {
              "function": "append",
              "line": 1718
            },
            {
              "function": "index_codebase",
              "line": 1722
            },
            {
              "function": "error",
              "line": 1726
            },
            {
              "function": "append",
              "line": 1727
            },
            {
              "function": "clear_cache",
              "line": 1733
            },
            {
              "function": "append",
              "line": 1734
            },
            {
              "function": "error",
              "line": 1737
            },
            {
              "function": "append",
              "line": 1738
            },
            {
              "function": "len",
              "line": 1761
            },
            {
              "function": "len",
              "line": 1761
            },
            {
              "function": "relpath",
              "line": 1913
            },
            {
              "function": "len",
              "line": 1916
            },
            {
              "function": "len",
              "line": 2038
            },
            {
              "function": "len",
              "line": 2078
            },
            {
              "function": "len",
              "line": 2088
            },
            {
              "function": "update",
              "line": 2096
            },
            {
              "function": "total_seconds",
              "line": 195
            },
            {
              "function": "now",
              "line": 205
            },
            {
              "function": "join",
              "line": 208
            },
            {
              "function": "join",
              "line": 209
            },
            {
              "function": "join",
              "line": 212
            },
            {
              "function": "now",
              "line": 236
            },
            {
              "function": "join",
              "line": 240
            },
            {
              "function": "total_seconds",
              "line": 285
            },
            {
              "function": "chr",
              "line": 512
            },
            {
              "function": "len",
              "line": 997
            },
            {
              "function": "startswith",
              "line": 1023
            },
            {
              "function": "list",
              "line": 1267
            },
            {
              "function": "list",
              "line": 1271
            },
            {
              "function": "now",
              "line": 1471
            },
            {
              "function": "get",
              "line": 1480
            },
            {
              "function": "str",
              "line": 1586
            },
            {
              "function": "strip",
              "line": 1623
            },
            {
              "function": "append",
              "line": 1651
            },
            {
              "function": "rename",
              "line": 1754
            },
            {
              "function": "append",
              "line": 1755
            },
            {
              "function": "strip",
              "line": 1880
            },
            {
              "function": "join",
              "line": 1913
            },
            {
              "function": "startswith",
              "line": 1914
            },
            {
              "function": "append",
              "line": 1915
            },
            {
              "function": "warning",
              "line": 2104
            },
            {
              "function": "now",
              "line": 266
            },
            {
              "function": "get",
              "line": 275
            },
            {
              "function": "str",
              "line": 308
            },
            {
              "function": "set",
              "line": 1267
            },
            {
              "function": "set",
              "line": 1271
            },
            {
              "function": "get",
              "line": 1476
            },
            {
              "function": "get",
              "line": 1488
            },
            {
              "function": "str",
              "line": 1497
            },
            {
              "function": "strip",
              "line": 1645
            },
            {
              "function": "strip",
              "line": 1655
            },
            {
              "function": "error",
              "line": 1758
            },
            {
              "function": "append",
              "line": 1759
            },
            {
              "function": "len",
              "line": 240
            },
            {
              "function": "get",
              "line": 270
            },
            {
              "function": "get",
              "line": 271
            },
            {
              "function": "get",
              "line": 283
            },
            {
              "function": "now",
              "line": 1414
            },
            {
              "function": "now",
              "line": 1429
            },
            {
              "function": "now",
              "line": 1490
            },
            {
              "function": "now",
              "line": 1499
            },
            {
              "function": "isoformat",
              "line": 2100
            },
            {
              "function": "now",
              "line": 195
            },
            {
              "function": "now",
              "line": 285
            },
            {
              "function": "split",
              "line": 1645
            },
            {
              "function": "now",
              "line": 2100
            }
          ]
        },
        "agents/specialized/fixer_gpt_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 38,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "OpenAIService",
                "info",
                "super",
                "getattr"
              ],
              "parameters": [
                "self",
                "model"
              ],
              "decorators": [],
              "file": "agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_create_fresh_perspective_prompt",
              "line": 70,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "issue",
                "previous_attempts",
                "research_results"
              ],
              "decorators": [],
              "file": "agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_format_previous_attempts",
              "line": 110,
              "async": false,
              "calls": [
                "enumerate",
                "get"
              ],
              "parameters": [
                "self",
                "attempts"
              ],
              "decorators": [],
              "file": "agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_format_research_results",
              "line": 124,
              "async": false,
              "calls": [
                "enumerate",
                "get"
              ],
              "parameters": [
                "self",
                "research"
              ],
              "decorators": [],
              "file": "agents/specialized/fixer_gpt_agent.py"
            }
          ],
          "classes": [
            {
              "name": "FixerGPTAgent",
              "line": 20,
              "methods": [
                "__init__",
                "_create_fresh_perspective_prompt",
                "_format_previous_attempts",
                "_format_research_results"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/fixer_gpt_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "backend.config.settings",
              "names": [
                "Settings"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "AgentConfig",
              "line": 49
            },
            {
              "function": "__init__",
              "line": 64
            },
            {
              "function": "OpenAIService",
              "line": 67
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "enumerate",
              "line": 116
            },
            {
              "function": "enumerate",
              "line": 130
            },
            {
              "function": "info",
              "line": 248
            },
            {
              "function": "getattr",
              "line": 47
            },
            {
              "function": "info",
              "line": 152
            },
            {
              "function": "get",
              "line": 158
            },
            {
              "function": "get",
              "line": 159
            },
            {
              "function": "get",
              "line": 160
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "_create_fresh_perspective_prompt",
              "line": 167
            },
            {
              "function": "_format_previous_attempts",
              "line": 174
            },
            {
              "function": "_format_research_results",
              "line": 175
            },
            {
              "function": "info",
              "line": 197
            },
            {
              "function": "get",
              "line": 209
            },
            {
              "function": "info",
              "line": 211
            },
            {
              "function": "TaskResult",
              "line": 213
            },
            {
              "function": "getattr",
              "line": 59
            },
            {
              "function": "getattr",
              "line": 60
            },
            {
              "function": "super",
              "line": 64
            },
            {
              "function": "chat_completion",
              "line": 199
            },
            {
              "function": "error",
              "line": 228
            },
            {
              "function": "TaskResult",
              "line": 229
            },
            {
              "function": "join",
              "line": 256
            },
            {
              "function": "chat_completion",
              "line": 267
            },
            {
              "function": "get",
              "line": 278
            },
            {
              "function": "isoformat",
              "line": 280
            },
            {
              "function": "error",
              "line": 284
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 131
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "get",
              "line": 133
            },
            {
              "function": "len",
              "line": 163
            },
            {
              "function": "len",
              "line": 164
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "len",
              "line": 220
            },
            {
              "function": "len",
              "line": 221
            },
            {
              "function": "isoformat",
              "line": 223
            },
            {
              "function": "chr",
              "line": 256
            },
            {
              "function": "now",
              "line": 280
            },
            {
              "function": "enumerate",
              "line": 256
            },
            {
              "function": "str",
              "line": 286
            },
            {
              "function": "now",
              "line": 223
            },
            {
              "function": "str",
              "line": 231
            },
            {
              "function": "type",
              "line": 233
            }
          ]
        },
        "agents/specialized/performance_bot.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 48,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/performance_bot.py"
            },
            {
              "name": "_extract_bottlenecks",
              "line": 194,
              "async": false,
              "calls": [
                "items",
                "round",
                "sort_stats",
                "list",
                "append"
              ],
              "parameters": [
                "self",
                "stats"
              ],
              "decorators": [],
              "file": "agents/specialized/performance_bot.py"
            },
            {
              "name": "_parse_profile_stats",
              "line": 275,
              "async": false,
              "calls": [
                "join",
                "split",
                "replace",
                "splitlines",
                "len",
                "append",
                "isdigit"
              ],
              "parameters": [
                "self",
                "stats_output"
              ],
              "decorators": [],
              "file": "agents/specialized/performance_bot.py"
            },
            {
              "name": "_format_profile_results",
              "line": 296,
              "async": false,
              "calls": [
                "items",
                "title",
                "join",
                "enumerate",
                "replace",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "profile"
              ],
              "decorators": [],
              "file": "agents/specialized/performance_bot.py"
            },
            {
              "name": "_format_package_analysis",
              "line": 437,
              "async": false,
              "calls": [
                "join",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "package_name",
                "analysis"
              ],
              "decorators": [],
              "file": "agents/specialized/performance_bot.py"
            }
          ],
          "classes": [
            {
              "name": "PerformanceProfile",
              "line": 29,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/performance_bot.py"
            },
            {
              "name": "PerformanceBot",
              "line": 38,
              "methods": [
                "__init__",
                "_extract_bottlenecks",
                "_parse_profile_stats",
                "_format_profile_results",
                "_format_package_analysis"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/performance_bot.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "cProfile",
              "names": [
                "cProfile"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "pstats",
              "names": [
                "pstats"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "io",
              "names": [
                "io"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "tracemalloc",
              "names": [
                "tracemalloc"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 335
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 26
            },
            {
              "function": "AgentConfig",
              "line": 49
            },
            {
              "function": "__init__",
              "line": 64
            },
            {
              "function": "OpenAIService",
              "line": 65
            },
            {
              "function": "now",
              "line": 69
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "_format_profile_results",
              "line": 124
            },
            {
              "function": "sort_stats",
              "line": 199
            },
            {
              "function": "sort_stats",
              "line": 212
            },
            {
              "function": "splitlines",
              "line": 277
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "append",
              "line": 302
            },
            {
              "function": "append",
              "line": 303
            },
            {
              "function": "append",
              "line": 304
            },
            {
              "function": "append",
              "line": 305
            },
            {
              "function": "append",
              "line": 308
            },
            {
              "function": "items",
              "line": 309
            },
            {
              "function": "append",
              "line": 311
            },
            {
              "function": "append",
              "line": 324
            },
            {
              "function": "enumerate",
              "line": 325
            },
            {
              "function": "join",
              "line": 328
            },
            {
              "function": "get",
              "line": 332
            },
            {
              "function": "info",
              "line": 342
            },
            {
              "function": "mkdtemp",
              "line": 345
            },
            {
              "function": "join",
              "line": 382
            },
            {
              "function": "listdir",
              "line": 386
            },
            {
              "function": "walk",
              "line": 405
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "append",
              "line": 445
            },
            {
              "function": "append",
              "line": 446
            },
            {
              "function": "append",
              "line": 447
            },
            {
              "function": "append",
              "line": 448
            },
            {
              "function": "append",
              "line": 449
            },
            {
              "function": "append",
              "line": 463
            },
            {
              "function": "append",
              "line": 464
            },
            {
              "function": "join",
              "line": 467
            },
            {
              "function": "append",
              "line": 477
            },
            {
              "function": "join",
              "line": 479
            },
            {
              "function": "TaskRequest",
              "line": 487
            },
            {
              "function": "get",
              "line": 518
            },
            {
              "function": "append",
              "line": 524
            },
            {
              "function": "enumerate",
              "line": 526
            },
            {
              "function": "append",
              "line": 535
            },
            {
              "function": "append",
              "line": 536
            },
            {
              "function": "join",
              "line": 538
            },
            {
              "function": "get",
              "line": 542
            },
            {
              "function": "lower",
              "line": 72
            },
            {
              "function": "total_seconds",
              "line": 87
            },
            {
              "function": "TaskResult",
              "line": 89
            },
            {
              "function": "NamedTemporaryFile",
              "line": 130
            },
            {
              "function": "write",
              "line": 131
            },
            {
              "function": "Profile",
              "line": 136
            },
            {
              "function": "start",
              "line": 139
            },
            {
              "function": "time",
              "line": 143
            },
            {
              "function": "enable",
              "line": 144
            },
            {
              "function": "disable",
              "line": 154
            },
            {
              "function": "stop",
              "line": 160
            },
            {
              "function": "StringIO",
              "line": 163
            },
            {
              "function": "Stats",
              "line": 164
            },
            {
              "function": "sort_stats",
              "line": 165
            },
            {
              "function": "print_stats",
              "line": 166
            },
            {
              "function": "_extract_bottlenecks",
              "line": 169
            },
            {
              "function": "PerformanceProfile",
              "line": 177
            },
            {
              "function": "unlink",
              "line": 192
            },
            {
              "function": "list",
              "line": 200
            },
            {
              "function": "list",
              "line": 213
            },
            {
              "function": "len",
              "line": 228
            },
            {
              "function": "count",
              "line": 232
            },
            {
              "function": "any",
              "line": 257
            },
            {
              "function": "append",
              "line": 258
            },
            {
              "function": "get",
              "line": 260
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "any",
              "line": 264
            },
            {
              "function": "append",
              "line": 268
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "split",
              "line": 284
            },
            {
              "function": "append",
              "line": 310
            },
            {
              "function": "append",
              "line": 315
            },
            {
              "function": "enumerate",
              "line": 316
            },
            {
              "function": "append",
              "line": 321
            },
            {
              "function": "append",
              "line": 326
            },
            {
              "function": "search",
              "line": 336
            },
            {
              "function": "run",
              "line": 349
            },
            {
              "function": "join",
              "line": 358
            },
            {
              "function": "run",
              "line": 359
            },
            {
              "function": "_format_package_analysis",
              "line": 371
            },
            {
              "function": "rmtree",
              "line": 378
            },
            {
              "function": "set",
              "line": 398
            },
            {
              "function": "list",
              "line": 433
            },
            {
              "function": "append",
              "line": 452
            },
            {
              "function": "append",
              "line": 455
            },
            {
              "function": "append",
              "line": 458
            },
            {
              "function": "append",
              "line": 461
            },
            {
              "function": "append",
              "line": 469
            },
            {
              "function": "execute",
              "line": 495
            },
            {
              "function": "isinstance",
              "line": 496
            },
            {
              "function": "str",
              "line": 496
            },
            {
              "function": "complete",
              "line": 513
            },
            {
              "function": "append",
              "line": 528
            },
            {
              "function": "append",
              "line": 529
            },
            {
              "function": "append",
              "line": 530
            },
            {
              "function": "append",
              "line": 531
            },
            {
              "function": "append",
              "line": 532
            },
            {
              "function": "_profile_python",
              "line": 548
            },
            {
              "function": "complete",
              "line": 564
            },
            {
              "function": "super",
              "line": 64
            },
            {
              "function": "error",
              "line": 97
            },
            {
              "function": "total_seconds",
              "line": 98
            },
            {
              "function": "TaskResult",
              "line": 99
            },
            {
              "function": "_profile_python",
              "line": 117
            },
            {
              "function": "get_traced_memory",
              "line": 140
            },
            {
              "function": "time",
              "line": 155
            },
            {
              "function": "get_traced_memory",
              "line": 158
            },
            {
              "function": "get_traced_memory",
              "line": 159
            },
            {
              "function": "_analyze_complexity",
              "line": 172
            },
            {
              "function": "_generate_suggestions",
              "line": 175
            },
            {
              "function": "items",
              "line": 200
            },
            {
              "function": "append",
              "line": 202
            },
            {
              "function": "items",
              "line": 213
            },
            {
              "function": "append",
              "line": 215
            },
            {
              "function": "splitlines",
              "line": 228
            },
            {
              "function": "count",
              "line": 229
            },
            {
              "function": "count",
              "line": 229
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "count",
              "line": 231
            },
            {
              "function": "count",
              "line": 231
            },
            {
              "function": "append",
              "line": 252
            },
            {
              "function": "append",
              "line": 265
            },
            {
              "function": "isdigit",
              "line": 285
            },
            {
              "function": "append",
              "line": 286
            },
            {
              "function": "append",
              "line": 318
            },
            {
              "function": "append",
              "line": 319
            },
            {
              "function": "append",
              "line": 320
            },
            {
              "function": "lower",
              "line": 336
            },
            {
              "function": "group",
              "line": 338
            },
            {
              "function": "_analyze_package_structure",
              "line": 369
            },
            {
              "function": "error",
              "line": 374
            },
            {
              "function": "replace",
              "line": 387
            },
            {
              "function": "lower",
              "line": 387
            },
            {
              "function": "join",
              "line": 388
            },
            {
              "function": "isdir",
              "line": 391
            },
            {
              "function": "endswith",
              "line": 407
            },
            {
              "function": "append",
              "line": 454
            },
            {
              "function": "append",
              "line": 460
            },
            {
              "function": "append",
              "line": 471
            },
            {
              "function": "_profile_python",
              "line": 527
            },
            {
              "function": "dumps",
              "line": 559
            },
            {
              "function": "_format_profile_results",
              "line": 566
            },
            {
              "function": "analyze_performance",
              "line": 76
            },
            {
              "function": "_profile_javascript",
              "line": 119
            },
            {
              "function": "open",
              "line": 148
            },
            {
              "function": "compile",
              "line": 149
            },
            {
              "function": "exec",
              "line": 150
            },
            {
              "function": "warning",
              "line": 152
            },
            {
              "function": "_parse_profile_stats",
              "line": 185
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "append",
              "line": 254
            },
            {
              "function": "len",
              "line": 285
            },
            {
              "function": "join",
              "line": 408
            },
            {
              "function": "len",
              "line": 448
            },
            {
              "function": "len",
              "line": 449
            },
            {
              "function": "append",
              "line": 473
            },
            {
              "function": "append",
              "line": 475
            },
            {
              "function": "run_benchmarks",
              "line": 78
            },
            {
              "function": "now",
              "line": 87
            },
            {
              "function": "read",
              "line": 149
            },
            {
              "function": "getvalue",
              "line": 185
            },
            {
              "function": "round",
              "line": 205
            },
            {
              "function": "round",
              "line": 207
            },
            {
              "function": "round",
              "line": 219
            },
            {
              "function": "range",
              "line": 264
            },
            {
              "function": "replace",
              "line": 285
            },
            {
              "function": "join",
              "line": 291
            },
            {
              "function": "title",
              "line": 310
            },
            {
              "function": "str",
              "line": 375
            },
            {
              "function": "timestamp",
              "line": 488
            },
            {
              "function": "get",
              "line": 531
            },
            {
              "function": "suggest_optimizations",
              "line": 80
            },
            {
              "function": "now",
              "line": 98
            },
            {
              "function": "index",
              "line": 236
            },
            {
              "function": "len",
              "line": 264
            },
            {
              "function": "get",
              "line": 319
            },
            {
              "function": "get",
              "line": 320
            },
            {
              "function": "open",
              "line": 412
            },
            {
              "function": "read",
              "line": 413
            },
            {
              "function": "splitlines",
              "line": 414
            },
            {
              "function": "len",
              "line": 415
            },
            {
              "function": "extend",
              "line": 423
            },
            {
              "function": "extend",
              "line": 426
            },
            {
              "function": "analyze_external_package",
              "line": 82
            },
            {
              "function": "provide_performance_advice",
              "line": 85
            },
            {
              "function": "str",
              "line": 101
            },
            {
              "function": "replace",
              "line": 310
            },
            {
              "function": "now",
              "line": 488
            },
            {
              "function": "startswith",
              "line": 419
            },
            {
              "function": "startswith",
              "line": 419
            },
            {
              "function": "add",
              "line": 420
            },
            {
              "function": "strip",
              "line": 420
            },
            {
              "function": "strip",
              "line": 424
            },
            {
              "function": "strip",
              "line": 427
            },
            {
              "function": "startswith",
              "line": 424
            },
            {
              "function": "startswith",
              "line": 427
            },
            {
              "function": "strip",
              "line": 424
            },
            {
              "function": "strip",
              "line": 427
            }
          ]
        },
        "agents/specialized/research_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "info",
                "error",
                "super",
                "PerplexityService"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/research_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ResearchAgent",
              "line": 24,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/research_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "utils.perplexity_service",
              "names": [
                "PerplexityService"
              ],
              "line": 20
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 19
            },
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "AgentConfig",
              "line": 35
            },
            {
              "function": "__init__",
              "line": 50
            },
            {
              "function": "info",
              "line": 67
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "info",
              "line": 117
            },
            {
              "function": "info",
              "line": 170
            },
            {
              "function": "lower",
              "line": 189
            },
            {
              "function": "any",
              "line": 190
            },
            {
              "function": "TaskRequest",
              "line": 282
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "PerplexityService",
              "line": 56
            },
            {
              "function": "info",
              "line": 57
            },
            {
              "function": "_perform_web_search",
              "line": 84
            },
            {
              "function": "isoformat",
              "line": 108
            },
            {
              "function": "isoformat",
              "line": 126
            },
            {
              "function": "lower",
              "line": 130
            },
            {
              "function": "isoformat",
              "line": 178
            },
            {
              "function": "info",
              "line": 227
            },
            {
              "function": "TaskResult",
              "line": 256
            },
            {
              "function": "execute",
              "line": 286
            },
            {
              "function": "abspath",
              "line": 19
            },
            {
              "function": "super",
              "line": 50
            },
            {
              "function": "error",
              "line": 59
            },
            {
              "function": "lower",
              "line": 140
            },
            {
              "function": "lower",
              "line": 230
            },
            {
              "function": "get",
              "line": 233
            },
            {
              "function": "enumerate",
              "line": 250
            },
            {
              "function": "error",
              "line": 269
            },
            {
              "function": "TaskResult",
              "line": 270
            },
            {
              "function": "get",
              "line": 283
            },
            {
              "function": "get",
              "line": 284
            },
            {
              "function": "now",
              "line": 108
            },
            {
              "function": "now",
              "line": 126
            },
            {
              "function": "now",
              "line": 178
            },
            {
              "function": "values",
              "line": 190
            },
            {
              "function": "get_latest_best_practices",
              "line": 231
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "isinstance",
              "line": 251
            },
            {
              "function": "lower",
              "line": 234
            },
            {
              "function": "lower",
              "line": 234
            },
            {
              "function": "research_technology",
              "line": 238
            },
            {
              "function": "search_web",
              "line": 243
            },
            {
              "function": "isoformat",
              "line": 264
            },
            {
              "function": "split",
              "line": 236
            },
            {
              "function": "split",
              "line": 237
            },
            {
              "function": "len",
              "line": 263
            },
            {
              "function": "isupper",
              "line": 236
            },
            {
              "function": "get",
              "line": 252
            },
            {
              "function": "get",
              "line": 252
            },
            {
              "function": "now",
              "line": 264
            },
            {
              "function": "str",
              "line": 272
            },
            {
              "function": "len",
              "line": 236
            }
          ]
        },
        "agents/specialized/orchestrator_agent_v2.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 50,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "set_planning_mode",
              "line": 154,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self",
                "mode"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent_v2.py"
            }
          ],
          "classes": [
            {
              "name": "SubTask",
              "line": 23,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "TaskDecomposition",
              "line": 36,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "OrchestratorAgentV2",
              "line": 45,
              "methods": [
                "__init__",
                "set_planning_mode"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/orchestrator_agent_v2.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 559
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 514
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "get_agent_registry"
              ],
              "line": 639
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 950
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 695
            },
            {
              "type": "from_import",
              "module": "api.server",
              "names": [
                "manager"
              ],
              "line": 945
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 707
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "field",
              "line": 29
            },
            {
              "function": "AgentConfig",
              "line": 51
            },
            {
              "function": "__init__",
              "line": 66
            },
            {
              "function": "OpenAIService",
              "line": 73
            },
            {
              "function": "info",
              "line": 172
            },
            {
              "function": "info",
              "line": 199
            },
            {
              "function": "replace",
              "line": 221
            },
            {
              "function": "TaskResult",
              "line": 270
            },
            {
              "function": "TaskResult",
              "line": 305
            },
            {
              "function": "info",
              "line": 331
            },
            {
              "function": "info",
              "line": 350
            },
            {
              "function": "info",
              "line": 355
            },
            {
              "function": "TaskResult",
              "line": 359
            },
            {
              "function": "any",
              "line": 386
            },
            {
              "function": "getenv",
              "line": 393
            },
            {
              "function": "info",
              "line": 506
            },
            {
              "function": "startswith",
              "line": 510
            },
            {
              "function": "getenv",
              "line": 560
            },
            {
              "function": "TaskDecomposition",
              "line": 569
            },
            {
              "function": "info",
              "line": 627
            },
            {
              "function": "info",
              "line": 643
            },
            {
              "function": "info",
              "line": 684
            },
            {
              "function": "error",
              "line": 760
            },
            {
              "function": "Exception",
              "line": 761
            },
            {
              "function": "get",
              "line": 778
            },
            {
              "function": "hasattr",
              "line": 814
            },
            {
              "function": "append",
              "line": 817
            },
            {
              "function": "enumerate",
              "line": 819
            },
            {
              "function": "append",
              "line": 850
            },
            {
              "function": "len",
              "line": 851
            },
            {
              "function": "join",
              "line": 859
            },
            {
              "function": "join",
              "line": 876
            },
            {
              "function": "debug",
              "line": 925
            },
            {
              "function": "get",
              "line": 931
            },
            {
              "function": "TaskRequest",
              "line": 977
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "warning",
              "line": 165
            },
            {
              "function": "_send_progress",
              "line": 173
            },
            {
              "function": "_send_progress",
              "line": 200
            },
            {
              "function": "info",
              "line": 210
            },
            {
              "function": "lower",
              "line": 218
            },
            {
              "function": "Exception",
              "line": 219
            },
            {
              "function": "get_completion",
              "line": 297
            },
            {
              "function": "hasattr",
              "line": 325
            },
            {
              "function": "isinstance",
              "line": 325
            },
            {
              "function": "get",
              "line": 326
            },
            {
              "function": "get",
              "line": 327
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "_send_progress",
              "line": 332
            },
            {
              "function": "_decompose_task_with_ai",
              "line": 333
            },
            {
              "function": "info",
              "line": 339
            },
            {
              "function": "_send_progress",
              "line": 351
            },
            {
              "function": "_execute_workflow",
              "line": 352
            },
            {
              "function": "_send_progress",
              "line": 356
            },
            {
              "function": "_synthesize_results",
              "line": 357
            },
            {
              "function": "any",
              "line": 379
            },
            {
              "function": "any",
              "line": 381
            },
            {
              "function": "info",
              "line": 388
            },
            {
              "function": "getcwd",
              "line": 393
            },
            {
              "function": "any",
              "line": 496
            },
            {
              "function": "get_completion",
              "line": 497
            },
            {
              "function": "findall",
              "line": 516
            },
            {
              "function": "loads",
              "line": 525
            },
            {
              "function": "TaskDecomposition",
              "line": 540
            },
            {
              "function": "getcwd",
              "line": 560
            },
            {
              "function": "any",
              "line": 564
            },
            {
              "function": "_send_progress",
              "line": 628
            },
            {
              "function": "get_agent_registry",
              "line": 640
            },
            {
              "function": "enumerate",
              "line": 668
            },
            {
              "function": "get_completion",
              "line": 798
            },
            {
              "function": "append",
              "line": 815
            },
            {
              "function": "get",
              "line": 820
            },
            {
              "function": "append",
              "line": 833
            },
            {
              "function": "append",
              "line": 834
            },
            {
              "function": "append",
              "line": 835
            },
            {
              "function": "append",
              "line": 840
            },
            {
              "function": "hasattr",
              "line": 842
            },
            {
              "function": "append",
              "line": 843
            },
            {
              "function": "append",
              "line": 844
            },
            {
              "function": "append",
              "line": 845
            },
            {
              "function": "append",
              "line": 847
            },
            {
              "function": "append",
              "line": 848
            },
            {
              "function": "append",
              "line": 853
            },
            {
              "function": "get",
              "line": 873
            },
            {
              "function": "append",
              "line": 874
            },
            {
              "function": "debug",
              "line": 927
            },
            {
              "function": "debug",
              "line": 933
            },
            {
              "function": "debug",
              "line": 951
            },
            {
              "function": "debug",
              "line": 952
            },
            {
              "function": "execute",
              "line": 981
            },
            {
              "function": "super",
              "line": 66
            },
            {
              "function": "hasattr",
              "line": 91
            },
            {
              "function": "hasattr",
              "line": 97
            },
            {
              "function": "isinstance",
              "line": 97
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "info",
              "line": 100
            },
            {
              "function": "debug",
              "line": 101
            },
            {
              "function": "_send_progress",
              "line": 104
            },
            {
              "function": "any",
              "line": 111
            },
            {
              "function": "_send_progress",
              "line": 120
            },
            {
              "function": "hasattr",
              "line": 124
            },
            {
              "function": "isinstance",
              "line": 124
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "_analyze_intent",
              "line": 129
            },
            {
              "function": "_send_progress",
              "line": 131
            },
            {
              "function": "error",
              "line": 147
            },
            {
              "function": "TaskResult",
              "line": 148
            },
            {
              "function": "any",
              "line": 203
            },
            {
              "function": "get_completion",
              "line": 204
            },
            {
              "function": "_send_progress",
              "line": 211
            },
            {
              "function": "error",
              "line": 213
            },
            {
              "function": "replace",
              "line": 221
            },
            {
              "function": "_format_execution_plan",
              "line": 338
            },
            {
              "function": "_send_progress",
              "line": 340
            },
            {
              "function": "_send_progress",
              "line": 344
            },
            {
              "function": "info",
              "line": 382
            },
            {
              "function": "_send_progress",
              "line": 389
            },
            {
              "function": "_create_infrastructure_workflow",
              "line": 390
            },
            {
              "function": "strip",
              "line": 510
            },
            {
              "function": "info",
              "line": 519
            },
            {
              "function": "SubTask",
              "line": 529
            },
            {
              "function": "error",
              "line": 551
            },
            {
              "function": "Exception",
              "line": 552
            },
            {
              "function": "zip",
              "line": 657
            },
            {
              "function": "info",
              "line": 669
            },
            {
              "function": "TaskRequest",
              "line": 714
            },
            {
              "function": "any",
              "line": 724
            },
            {
              "function": "join",
              "line": 838
            },
            {
              "function": "append",
              "line": 839
            },
            {
              "function": "append",
              "line": 855
            },
            {
              "function": "append",
              "line": 857
            },
            {
              "function": "len",
              "line": 898
            },
            {
              "function": "get",
              "line": 903
            },
            {
              "function": "get_completion",
              "line": 910
            },
            {
              "function": "len",
              "line": 919
            },
            {
              "function": "debug",
              "line": 943
            },
            {
              "function": "error",
              "line": 972
            },
            {
              "function": "get",
              "line": 978
            },
            {
              "function": "get",
              "line": 979
            },
            {
              "function": "info",
              "line": 113
            },
            {
              "function": "info",
              "line": 115
            },
            {
              "function": "_describe_system",
              "line": 136
            },
            {
              "function": "_send_progress",
              "line": 214
            },
            {
              "function": "len",
              "line": 350
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "_send_progress",
              "line": 383
            },
            {
              "function": "_create_infrastructure_workflow",
              "line": 384
            },
            {
              "function": "lower",
              "line": 386
            },
            {
              "function": "get",
              "line": 544
            },
            {
              "function": "get",
              "line": 545
            },
            {
              "function": "get",
              "line": 546
            },
            {
              "function": "SubTask",
              "line": 574
            },
            {
              "function": "SubTask",
              "line": 582
            },
            {
              "function": "SubTask",
              "line": 590
            },
            {
              "function": "SubTask",
              "line": 598
            },
            {
              "function": "SubTask",
              "line": 606
            },
            {
              "function": "SubTask",
              "line": 614
            },
            {
              "function": "len",
              "line": 627
            },
            {
              "function": "len",
              "line": 643
            },
            {
              "function": "info",
              "line": 651
            },
            {
              "function": "append",
              "line": 652
            },
            {
              "function": "gather",
              "line": 656
            },
            {
              "function": "isinstance",
              "line": 658
            },
            {
              "function": "info",
              "line": 674
            },
            {
              "function": "len",
              "line": 684
            },
            {
              "function": "hasattr",
              "line": 699
            },
            {
              "function": "isinstance",
              "line": 701
            },
            {
              "function": "any",
              "line": 727
            },
            {
              "function": "wait_for",
              "line": 730
            },
            {
              "function": "hasattr",
              "line": 736
            },
            {
              "function": "error",
              "line": 738
            },
            {
              "function": "Exception",
              "line": 739
            },
            {
              "function": "error",
              "line": 746
            },
            {
              "function": "Exception",
              "line": 747
            },
            {
              "function": "error",
              "line": 751
            },
            {
              "function": "Exception",
              "line": 752
            },
            {
              "function": "error",
              "line": 755
            },
            {
              "function": "Exception",
              "line": 756
            },
            {
              "function": "list",
              "line": 759
            },
            {
              "function": "hasattr",
              "line": 786
            },
            {
              "function": "info",
              "line": 956
            },
            {
              "function": "info",
              "line": 963
            },
            {
              "function": "warning",
              "line": 968
            },
            {
              "function": "warning",
              "line": 970
            },
            {
              "function": "_send_progress",
              "line": 114
            },
            {
              "function": "_handle_complex_task",
              "line": 116
            },
            {
              "function": "_answer_directly",
              "line": 140
            },
            {
              "function": "_handle_complex_task",
              "line": 144
            },
            {
              "function": "lower",
              "line": 221
            },
            {
              "function": "len",
              "line": 351
            },
            {
              "function": "lower",
              "line": 379
            },
            {
              "function": "lower",
              "line": 381
            },
            {
              "function": "lower",
              "line": 387
            },
            {
              "function": "lower",
              "line": 496
            },
            {
              "function": "get",
              "line": 534
            },
            {
              "function": "get",
              "line": 535
            },
            {
              "function": "lower",
              "line": 564
            },
            {
              "function": "len",
              "line": 628
            },
            {
              "function": "_execute_subtask",
              "line": 652
            },
            {
              "function": "error",
              "line": 661
            },
            {
              "function": "info",
              "line": 664
            },
            {
              "function": "_execute_subtask",
              "line": 671
            },
            {
              "function": "error",
              "line": 678
            },
            {
              "function": "update",
              "line": 702
            },
            {
              "function": "isinstance",
              "line": 703
            },
            {
              "function": "dispatch_task",
              "line": 731
            },
            {
              "function": "keys",
              "line": 759
            },
            {
              "function": "warning",
              "line": 947
            },
            {
              "function": "send_json",
              "line": 957
            },
            {
              "function": "error",
              "line": 965
            },
            {
              "function": "lower",
              "line": 111
            },
            {
              "function": "lower",
              "line": 203
            },
            {
              "function": "join",
              "line": 389
            },
            {
              "function": "len",
              "line": 669
            },
            {
              "function": "warning",
              "line": 704
            },
            {
              "function": "warning",
              "line": 712
            },
            {
              "function": "lower",
              "line": 724
            },
            {
              "function": "str",
              "line": 754
            },
            {
              "function": "title",
              "line": 905
            },
            {
              "function": "list",
              "line": 952
            },
            {
              "function": "lower",
              "line": 112
            },
            {
              "function": "str",
              "line": 150
            },
            {
              "function": "str",
              "line": 214
            },
            {
              "function": "strip",
              "line": 221
            },
            {
              "function": "str",
              "line": 659
            },
            {
              "function": "len",
              "line": 674
            },
            {
              "function": "len",
              "line": 677
            },
            {
              "function": "str",
              "line": 677
            },
            {
              "function": "str",
              "line": 679
            },
            {
              "function": "update",
              "line": 708
            },
            {
              "function": "lower",
              "line": 727
            },
            {
              "function": "keys",
              "line": 952
            },
            {
              "function": "isoformat",
              "line": 961
            },
            {
              "function": "list",
              "line": 970
            },
            {
              "function": "join",
              "line": 114
            },
            {
              "function": "loads",
              "line": 708
            },
            {
              "function": "keys",
              "line": 970
            },
            {
              "function": "type",
              "line": 712
            },
            {
              "function": "now",
              "line": 961
            }
          ]
        },
        "agents/specialized/opus_arbitrator_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/opus_arbitrator_agent.py"
            }
          ],
          "classes": [
            {
              "name": "OpusArbitratorAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/opus_arbitrator_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 43
            },
            {
              "function": "ClaudeCodeService",
              "line": 45
            },
            {
              "function": "TaskRequest",
              "line": 150
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 46
            },
            {
              "function": "is_available",
              "line": 48
            },
            {
              "function": "error",
              "line": 49
            },
            {
              "function": "TaskResult",
              "line": 62
            },
            {
              "function": "is_available",
              "line": 109
            },
            {
              "function": "Exception",
              "line": 110
            },
            {
              "function": "complete",
              "line": 112
            },
            {
              "function": "get_completion",
              "line": 131
            },
            {
              "function": "Exception",
              "line": 140
            },
            {
              "function": "execute",
              "line": 154
            },
            {
              "function": "super",
              "line": 43
            },
            {
              "function": "error",
              "line": 75
            },
            {
              "function": "error",
              "line": 78
            },
            {
              "function": "TaskResult",
              "line": 79
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "get",
              "line": 151
            },
            {
              "function": "get",
              "line": 152
            },
            {
              "function": "lower",
              "line": 57
            },
            {
              "function": "lower",
              "line": 57
            },
            {
              "function": "resolve_conflict",
              "line": 58
            },
            {
              "function": "provide_judgment",
              "line": 60
            },
            {
              "function": "isoformat",
              "line": 70
            },
            {
              "function": "str",
              "line": 77
            },
            {
              "function": "now",
              "line": 70
            }
          ]
        },
        "agents/specialized/orchestrator_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 75,
              "async": false,
              "calls": [
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_calculate_critical_path_duration",
              "line": 538,
              "async": false,
              "calls": [
                "max",
                "sum",
                "_get_chain_duration"
              ],
              "parameters": [
                "self",
                "subtasks"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_get_chain_duration",
              "line": 553,
              "async": false,
              "calls": [
                "max",
                "_get_chain_duration"
              ],
              "parameters": [
                "self",
                "start_task",
                "all_tasks"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_group_by_dependency_level",
              "line": 697,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_dependencies_met",
              "line": 718,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step",
                "completed",
                "workflow"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "format_orchestration_result",
              "line": 770,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "str"
              ],
              "parameters": [
                "self",
                "decomposition",
                "results"
              ],
              "decorators": [],
              "file": "agents/specialized/orchestrator_agent.py"
            }
          ],
          "classes": [
            {
              "name": "SubTask",
              "line": 21,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "TaskDependency",
              "line": 34,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "TaskDecomposition",
              "line": 42,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "WorkflowStep",
              "line": 53,
              "methods": [],
              "bases": [],
              "file": "agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "OrchestratorAgent",
              "line": 64,
              "methods": [
                "__init__",
                "_calculate_critical_path_duration",
                "_get_chain_duration",
                "_group_by_dependency_level",
                "_dependencies_met",
                "format_orchestration_result"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "agents/specialized/orchestrator_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent",
                "StreamMessage"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 326
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 740
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 381
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 235
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "field",
              "line": 27
            },
            {
              "function": "AgentConfig",
              "line": 76
            },
            {
              "function": "__init__",
              "line": 90
            },
            {
              "function": "now",
              "line": 103
            },
            {
              "function": "lower",
              "line": 174
            },
            {
              "function": "any",
              "line": 176
            },
            {
              "function": "OpenAIService",
              "line": 328
            },
            {
              "function": "TaskDecomposition",
              "line": 528
            },
            {
              "function": "append",
              "line": 613
            },
            {
              "function": "set",
              "line": 662
            },
            {
              "function": "_group_by_dependency_level",
              "line": 665
            },
            {
              "function": "items",
              "line": 668
            },
            {
              "function": "info",
              "line": 737
            },
            {
              "function": "TaskRequest",
              "line": 742
            },
            {
              "function": "append",
              "line": 779
            },
            {
              "function": "append",
              "line": 780
            },
            {
              "function": "append",
              "line": 781
            },
            {
              "function": "append",
              "line": 782
            },
            {
              "function": "append",
              "line": 783
            },
            {
              "function": "append",
              "line": 784
            },
            {
              "function": "join",
              "line": 799
            },
            {
              "function": "info",
              "line": 809
            },
            {
              "function": "get",
              "line": 820
            },
            {
              "function": "total_seconds",
              "line": 118
            },
            {
              "function": "TaskResult",
              "line": 134
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "info",
              "line": 190
            },
            {
              "function": "_ai_decompose_task",
              "line": 226
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "enumerate",
              "line": 269
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "TaskDecomposition",
              "line": 305
            },
            {
              "function": "info",
              "line": 315
            },
            {
              "function": "loads",
              "line": 382
            },
            {
              "function": "get",
              "line": 386
            },
            {
              "function": "get",
              "line": 396
            },
            {
              "function": "TaskDecomposition",
              "line": 404
            },
            {
              "function": "info",
              "line": 414
            },
            {
              "function": "info",
              "line": 415
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 523
            },
            {
              "function": "sum",
              "line": 526
            },
            {
              "function": "sum",
              "line": 551
            },
            {
              "function": "max",
              "line": 567
            },
            {
              "function": "WorkflowStep",
              "line": 582
            },
            {
              "function": "append",
              "line": 587
            },
            {
              "function": "now",
              "line": 632
            },
            {
              "function": "now",
              "line": 650
            },
            {
              "function": "append",
              "line": 714
            },
            {
              "function": "sleep",
              "line": 754
            },
            {
              "function": "isoformat",
              "line": 761
            },
            {
              "function": "_execute_step",
              "line": 768
            },
            {
              "function": "get",
              "line": 787
            },
            {
              "function": "append",
              "line": 789
            },
            {
              "function": "append",
              "line": 790
            },
            {
              "function": "append",
              "line": 791
            },
            {
              "function": "get",
              "line": 821
            },
            {
              "function": "super",
              "line": 90
            },
            {
              "function": "analyze_task_complexity",
              "line": 107
            },
            {
              "function": "decompose_task",
              "line": 110
            },
            {
              "function": "create_workflow",
              "line": 113
            },
            {
              "function": "execute_workflow",
              "line": 116
            },
            {
              "function": "append",
              "line": 123
            },
            {
              "function": "error",
              "line": 151
            },
            {
              "function": "TaskResult",
              "line": 152
            },
            {
              "function": "search",
              "line": 164
            },
            {
              "function": "max",
              "line": 169
            },
            {
              "function": "search",
              "line": 195
            },
            {
              "function": "info",
              "line": 197
            },
            {
              "function": "store",
              "line": 236
            },
            {
              "function": "get",
              "line": 271
            },
            {
              "function": "get",
              "line": 272
            },
            {
              "function": "append",
              "line": 288
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 301
            },
            {
              "function": "sum",
              "line": 303
            },
            {
              "function": "error",
              "line": 319
            },
            {
              "function": "complete",
              "line": 373
            },
            {
              "function": "append",
              "line": 387
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 400
            },
            {
              "function": "sum",
              "line": 402
            },
            {
              "function": "error",
              "line": 420
            },
            {
              "function": "warning",
              "line": 421
            },
            {
              "function": "SubTask",
              "line": 433
            },
            {
              "function": "list",
              "line": 534
            },
            {
              "function": "_get_chain_duration",
              "line": 548
            },
            {
              "function": "max",
              "line": 549
            },
            {
              "function": "timestamp",
              "line": 590
            },
            {
              "function": "_execute_parallel_workflow",
              "line": 607
            },
            {
              "function": "_execute_sequential_workflow",
              "line": 610
            },
            {
              "function": "isoformat",
              "line": 614
            },
            {
              "function": "_dependencies_met",
              "line": 673
            },
            {
              "function": "enumerate",
              "line": 682
            },
            {
              "function": "execute",
              "line": 822
            },
            {
              "function": "format_orchestration_result",
              "line": 136
            },
            {
              "function": "get",
              "line": 167
            },
            {
              "function": "set",
              "line": 169
            },
            {
              "function": "len",
              "line": 196
            },
            {
              "function": "get",
              "line": 202
            },
            {
              "function": "info",
              "line": 208
            },
            {
              "function": "warning",
              "line": 246
            },
            {
              "function": "SubTask",
              "line": 288
            },
            {
              "function": "list",
              "line": 311
            },
            {
              "function": "SubTask",
              "line": 387
            },
            {
              "function": "list",
              "line": 410
            },
            {
              "function": "_create_sample_decomposition",
              "line": 422
            },
            {
              "function": "SubTask",
              "line": 443
            },
            {
              "function": "SubTask",
              "line": 450
            },
            {
              "function": "SubTask",
              "line": 458
            },
            {
              "function": "SubTask",
              "line": 469
            },
            {
              "function": "SubTask",
              "line": 476
            },
            {
              "function": "SubTask",
              "line": 483
            },
            {
              "function": "SubTask",
              "line": 491
            },
            {
              "function": "SubTask",
              "line": 499
            },
            {
              "function": "SubTask",
              "line": 507
            },
            {
              "function": "set",
              "line": 534
            },
            {
              "function": "_get_chain_duration",
              "line": 568
            },
            {
              "function": "_execute_step",
              "line": 638
            },
            {
              "function": "str",
              "line": 645
            },
            {
              "function": "error",
              "line": 647
            },
            {
              "function": "now",
              "line": 674
            },
            {
              "function": "append",
              "line": 676
            },
            {
              "function": "gather",
              "line": 680
            },
            {
              "function": "isinstance",
              "line": 683
            },
            {
              "function": "now",
              "line": 693
            },
            {
              "function": "capitalize",
              "line": 760
            },
            {
              "function": "now",
              "line": 761
            },
            {
              "function": "append",
              "line": 795
            },
            {
              "function": "append",
              "line": 797
            },
            {
              "function": "TaskRequest",
              "line": 822
            },
            {
              "function": "now",
              "line": 118
            },
            {
              "function": "len",
              "line": 140
            },
            {
              "function": "get",
              "line": 203
            },
            {
              "function": "isoformat",
              "line": 242
            },
            {
              "function": "lower",
              "line": 277
            },
            {
              "function": "lower",
              "line": 277
            },
            {
              "function": "set",
              "line": 311
            },
            {
              "function": "len",
              "line": 315
            },
            {
              "function": "set",
              "line": 410
            },
            {
              "function": "len",
              "line": 414
            },
            {
              "function": "get",
              "line": 415
            },
            {
              "function": "now",
              "line": 590
            },
            {
              "function": "now",
              "line": 614
            },
            {
              "function": "str",
              "line": 648
            },
            {
              "function": "_execute_step_async",
              "line": 676
            },
            {
              "function": "str",
              "line": 684
            },
            {
              "function": "add",
              "line": 691
            },
            {
              "function": "len",
              "line": 197
            },
            {
              "function": "append",
              "line": 205
            },
            {
              "function": "_adapt_decomposition_from_memory",
              "line": 214
            },
            {
              "function": "info",
              "line": 220
            },
            {
              "function": "warning",
              "line": 223
            },
            {
              "function": "lower",
              "line": 279
            },
            {
              "function": "lower",
              "line": 279
            },
            {
              "function": "get",
              "line": 292
            },
            {
              "function": "get",
              "line": 293
            },
            {
              "function": "get",
              "line": 294
            },
            {
              "function": "get",
              "line": 391
            },
            {
              "function": "get",
              "line": 392
            },
            {
              "function": "get",
              "line": 393
            },
            {
              "function": "str",
              "line": 686
            },
            {
              "function": "str",
              "line": 154
            },
            {
              "function": "len",
              "line": 208
            },
            {
              "function": "now",
              "line": 242
            },
            {
              "function": "lower",
              "line": 281
            },
            {
              "function": "lower",
              "line": 281
            },
            {
              "function": "lower",
              "line": 283
            },
            {
              "function": "lower",
              "line": 283
            },
            {
              "function": "lower",
              "line": 285
            },
            {
              "function": "str",
              "line": 797
            }
          ]
        },
        "agents/base/base_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 138,
              "async": false,
              "calls": [
                "getcwd",
                "PauseHandler",
                "get_memory_manager",
                "FileSystemTools",
                "set",
                "cwd",
                "isinstance",
                "_load_instructions",
                "hasattr",
                "info",
                "get_shared_context",
                "GitCheckpointManager",
                "get_conversation_context",
                "get",
                "_get_language_directive",
                "getattr",
                "str"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "_load_instructions",
              "line": 223,
              "async": false,
              "calls": [
                "dirname",
                "exists",
                "getcwd",
                "read",
                "join",
                "open",
                "abspath",
                "info",
                "replace",
                "extend",
                "append",
                "warning",
                "startswith"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "_get_language_directive",
              "line": 256,
              "async": false,
              "calls": [
                "get_language_directive"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "get_system_prompt",
              "line": 268,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "calculate_dynamic_timeout",
              "line": 562,
              "async": false,
              "calls": [
                "items",
                "max",
                "info",
                "get",
                "lower",
                "len",
                "min"
              ],
              "parameters": [
                "self",
                "prompt",
                "context"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "_compile_research_summary",
              "line": 857,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "extend"
              ],
              "parameters": [
                "self",
                "findings"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "set_websocket_callback",
              "line": 1035,
              "async": false,
              "calls": [
                "set_websocket_callback"
              ],
              "parameters": [
                "self",
                "callback"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "get_status",
              "line": 1041,
              "async": false,
              "calls": [
                "isoformat",
                "len",
                "get_pause_state"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "__repr__",
              "line": 1211,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/base_agent.py"
            }
          ],
          "classes": [
            {
              "name": "AgentCapability",
              "line": 64,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "AgentConfig",
              "line": 80,
              "methods": [],
              "bases": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "TaskRequest",
              "line": 94,
              "methods": [],
              "bases": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "TaskResult",
              "line": 107,
              "methods": [],
              "bases": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "AgentMessage",
              "line": 119,
              "methods": [],
              "bases": [],
              "file": "agents/base/base_agent.py"
            },
            {
              "name": "BaseAgent",
              "line": 128,
              "methods": [
                "__init__",
                "_load_instructions",
                "_get_language_directive",
                "get_system_prompt",
                "calculate_dynamic_timeout",
                "_compile_research_summary",
                "set_websocket_callback",
                "get_status",
                "__repr__"
              ],
              "bases": [
                "ABC"
              ],
              "file": "agents/base/base_agent.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional",
                "Callable"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "settings"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "get_memory_manager",
                "MemoryType"
              ],
              "line": 28
            },
            {
              "type": "from_import",
              "module": "core.shared_context_manager",
              "names": [
                "get_shared_context"
              ],
              "line": 29
            },
            {
              "type": "from_import",
              "module": "core.conversation_context_manager",
              "names": [
                "get_conversation_context"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "prime_directives",
              "names": [
                "PrimeDirectives"
              ],
              "line": 38
            },
            {
              "type": "from_import",
              "module": "core.pause_handler",
              "names": [
                "PauseHandler",
                "PauseAction"
              ],
              "line": 46
            },
            {
              "type": "from_import",
              "module": "core.git_checkpoint_manager",
              "names": [
                "GitCheckpointManager"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 55
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 1127
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1128
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 1167
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1168
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "asdict"
              ],
              "line": 1169
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 175
            },
            {
              "type": "from_import",
              "module": "agents.specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 765
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "LearningEntry"
              ],
              "line": 1185
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 488
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 686
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 18
            },
            {
              "function": "getLogger",
              "line": 62
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "field",
              "line": 87
            },
            {
              "function": "field",
              "line": 97
            },
            {
              "function": "field",
              "line": 101
            },
            {
              "function": "field",
              "line": 112
            },
            {
              "function": "field",
              "line": 113
            },
            {
              "function": "field",
              "line": 114
            },
            {
              "function": "field",
              "line": 125
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "warning",
              "line": 24
            },
            {
              "function": "warning",
              "line": 34
            },
            {
              "function": "warning",
              "line": 42
            },
            {
              "function": "warning",
              "line": 51
            },
            {
              "function": "warning",
              "line": 59
            },
            {
              "function": "_load_instructions",
              "line": 143
            },
            {
              "function": "_get_language_directive",
              "line": 146
            },
            {
              "function": "set",
              "line": 170
            },
            {
              "function": "info",
              "line": 221
            },
            {
              "function": "info",
              "line": 307
            },
            {
              "function": "info",
              "line": 317
            },
            {
              "function": "info",
              "line": 325
            },
            {
              "function": "now",
              "line": 342
            },
            {
              "function": "total_seconds",
              "line": 481
            },
            {
              "function": "now",
              "line": 543
            },
            {
              "function": "lower",
              "line": 611
            },
            {
              "function": "items",
              "line": 614
            },
            {
              "function": "max",
              "line": 635
            },
            {
              "function": "info",
              "line": 637
            },
            {
              "function": "AgentMessage",
              "line": 900
            },
            {
              "function": "AgentMessage",
              "line": 929
            },
            {
              "function": "AgentMessage",
              "line": 955
            },
            {
              "function": "info",
              "line": 978
            },
            {
              "function": "info",
              "line": 982
            },
            {
              "function": "store_learning",
              "line": 1090
            },
            {
              "function": "info",
              "line": 1097
            },
            {
              "function": "get_relevant_learnings",
              "line": 1108
            },
            {
              "function": "join",
              "line": 1134
            },
            {
              "function": "makedirs",
              "line": 1135
            },
            {
              "function": "join",
              "line": 1144
            },
            {
              "function": "info",
              "line": 1159
            },
            {
              "function": "join",
              "line": 1171
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "get_memory_manager",
              "line": 158
            },
            {
              "function": "get_shared_context",
              "line": 159
            },
            {
              "function": "get_conversation_context",
              "line": 160
            },
            {
              "function": "str",
              "line": 176
            },
            {
              "function": "PauseHandler",
              "line": 177
            },
            {
              "function": "GitCheckpointManager",
              "line": 178
            },
            {
              "function": "getattr",
              "line": 185
            },
            {
              "function": "FileSystemTools",
              "line": 186
            },
            {
              "function": "hasattr",
              "line": 190
            },
            {
              "function": "PauseHandler",
              "line": 215
            },
            {
              "function": "GitCheckpointManager",
              "line": 216
            },
            {
              "function": "dirname",
              "line": 227
            },
            {
              "function": "startswith",
              "line": 231
            },
            {
              "function": "warning",
              "line": 253
            },
            {
              "function": "get_language_directive",
              "line": 259
            },
            {
              "function": "subscribe",
              "line": 288
            },
            {
              "function": "subscribe",
              "line": 294
            },
            {
              "function": "subscribe",
              "line": 300
            },
            {
              "function": "_process_broadcast",
              "line": 318
            },
            {
              "function": "_can_help_with",
              "line": 328
            },
            {
              "function": "validate_request",
              "line": 347
            },
            {
              "function": "info",
              "line": 387
            },
            {
              "function": "TaskResult",
              "line": 388
            },
            {
              "function": "get_context_for_agent",
              "line": 418
            },
            {
              "function": "info",
              "line": 437
            },
            {
              "function": "TaskResult",
              "line": 438
            },
            {
              "function": "add_entry",
              "line": 517
            },
            {
              "function": "items",
              "line": 620
            },
            {
              "function": "len",
              "line": 625
            },
            {
              "function": "max",
              "line": 626
            },
            {
              "function": "max",
              "line": 632
            },
            {
              "function": "min",
              "line": 635
            },
            {
              "function": "error",
              "line": 654
            },
            {
              "function": "error",
              "line": 663
            },
            {
              "function": "ResearchAgent",
              "line": 766
            },
            {
              "function": "_compile_research_summary",
              "line": 838
            },
            {
              "function": "append",
              "line": 869
            },
            {
              "function": "append",
              "line": 879
            },
            {
              "function": "append",
              "line": 888
            },
            {
              "function": "join",
              "line": 890
            },
            {
              "function": "warning",
              "line": 895
            },
            {
              "function": "publish",
              "line": 909
            },
            {
              "function": "publish",
              "line": 941
            },
            {
              "function": "sleep",
              "line": 944
            },
            {
              "function": "publish",
              "line": 963
            },
            {
              "function": "sleep",
              "line": 968
            },
            {
              "function": "Exception",
              "line": 1002
            },
            {
              "function": "pause_task",
              "line": 1009
            },
            {
              "function": "Exception",
              "line": 1014
            },
            {
              "function": "resume_task",
              "line": 1016
            },
            {
              "function": "Exception",
              "line": 1024
            },
            {
              "function": "stop_and_rollback",
              "line": 1026
            },
            {
              "function": "Exception",
              "line": 1031
            },
            {
              "function": "handle_clarification_response",
              "line": 1033
            },
            {
              "function": "set_websocket_callback",
              "line": 1039
            },
            {
              "function": "len",
              "line": 1051
            },
            {
              "function": "get_pause_state",
              "line": 1057
            },
            {
              "function": "warning",
              "line": 1067
            },
            {
              "function": "info",
              "line": 1114
            },
            {
              "function": "getcwd",
              "line": 1134
            },
            {
              "function": "open",
              "line": 1145
            },
            {
              "function": "dump",
              "line": 1146
            },
            {
              "function": "getcwd",
              "line": 1171
            },
            {
              "function": "exists",
              "line": 1173
            },
            {
              "function": "warning",
              "line": 1177
            },
            {
              "function": "info",
              "line": 1204
            },
            {
              "function": "cwd",
              "line": 176
            },
            {
              "function": "getcwd",
              "line": 185
            },
            {
              "function": "isinstance",
              "line": 191
            },
            {
              "function": "dirname",
              "line": 227
            },
            {
              "function": "append",
              "line": 233
            },
            {
              "function": "extend",
              "line": 237
            },
            {
              "function": "exists",
              "line": 244
            },
            {
              "function": "_register_communication_handlers",
              "line": 280
            },
            {
              "function": "_process_agent_request",
              "line": 310
            },
            {
              "function": "send_response",
              "line": 311
            },
            {
              "function": "send_response",
              "line": 329
            },
            {
              "function": "info",
              "line": 354
            },
            {
              "function": "info",
              "line": 370
            },
            {
              "function": "search",
              "line": 397
            },
            {
              "function": "get_relevant_patterns",
              "line": 409
            },
            {
              "function": "update_context",
              "line": 428
            },
            {
              "function": "execute",
              "line": 447
            },
            {
              "function": "is_paused",
              "line": 450
            },
            {
              "function": "info",
              "line": 472
            },
            {
              "function": "TaskResult",
              "line": 473
            },
            {
              "function": "store",
              "line": 490
            },
            {
              "function": "store_code_pattern",
              "line": 507
            },
            {
              "function": "update_context",
              "line": 529
            },
            {
              "function": "max",
              "line": 616
            },
            {
              "function": "len",
              "line": 627
            },
            {
              "function": "max",
              "line": 628
            },
            {
              "function": "len",
              "line": 631
            },
            {
              "function": "write_file",
              "line": 672
            },
            {
              "function": "get",
              "line": 680
            },
            {
              "function": "info",
              "line": 681
            },
            {
              "function": "error",
              "line": 701
            },
            {
              "function": "error",
              "line": 707
            },
            {
              "function": "create_file",
              "line": 742
            },
            {
              "function": "info",
              "line": 772
            },
            {
              "function": "isoformat",
              "line": 845
            },
            {
              "function": "error",
              "line": 849
            },
            {
              "function": "get",
              "line": 875
            },
            {
              "function": "extend",
              "line": 876
            },
            {
              "function": "extend",
              "line": 885
            },
            {
              "function": "timestamp",
              "line": 898
            },
            {
              "function": "wait_for",
              "line": 913
            },
            {
              "function": "warning",
              "line": 919
            },
            {
              "function": "timestamp",
              "line": 927
            },
            {
              "function": "isoformat",
              "line": 1050
            },
            {
              "function": "len",
              "line": 1072
            },
            {
              "function": "open",
              "line": 1181
            },
            {
              "function": "load",
              "line": 1182
            },
            {
              "function": "LearningEntry",
              "line": 1189
            },
            {
              "function": "error",
              "line": 1208
            },
            {
              "function": "get",
              "line": 192
            },
            {
              "function": "get",
              "line": 193
            },
            {
              "function": "dirname",
              "line": 227
            },
            {
              "function": "replace",
              "line": 233
            },
            {
              "function": "_process_agent_response",
              "line": 313
            },
            {
              "function": "_perform_mandatory_research",
              "line": 357
            },
            {
              "function": "format_challenge_response",
              "line": 374
            },
            {
              "function": "total_seconds",
              "line": 375
            },
            {
              "function": "TaskResult",
              "line": 376
            },
            {
              "function": "total_seconds",
              "line": 442
            },
            {
              "function": "wait_for_user_action",
              "line": 452
            },
            {
              "function": "TaskResult",
              "line": 457
            },
            {
              "function": "now",
              "line": 481
            },
            {
              "function": "warning",
              "line": 502
            },
            {
              "function": "lower",
              "line": 505
            },
            {
              "function": "create_checkpoint",
              "line": 548
            },
            {
              "function": "info",
              "line": 553
            },
            {
              "function": "warning",
              "line": 556
            },
            {
              "function": "min",
              "line": 622
            },
            {
              "function": "get",
              "line": 631
            },
            {
              "function": "len",
              "line": 637
            },
            {
              "function": "str",
              "line": 753
            },
            {
              "function": "append",
              "line": 777
            },
            {
              "function": "str",
              "line": 851
            },
            {
              "function": "isoformat",
              "line": 854
            },
            {
              "function": "get",
              "line": 865
            },
            {
              "function": "append",
              "line": 866
            },
            {
              "function": "_wait_for_response",
              "line": 914
            },
            {
              "function": "len",
              "line": 1159
            },
            {
              "function": "any",
              "line": 1200
            },
            {
              "function": "append",
              "line": 1201
            },
            {
              "function": "abspath",
              "line": 227
            },
            {
              "function": "join",
              "line": 239
            },
            {
              "function": "join",
              "line": 240
            },
            {
              "function": "_provide_help",
              "line": 331
            },
            {
              "function": "get",
              "line": 359
            },
            {
              "function": "get",
              "line": 360
            },
            {
              "function": "stop_and_rollback",
              "line": 456
            },
            {
              "function": "total_seconds",
              "line": 477
            },
            {
              "function": "isoformat",
              "line": 535
            },
            {
              "function": "store",
              "line": 688
            },
            {
              "function": "str",
              "line": 706
            },
            {
              "function": "get_latest_best_practices",
              "line": 776
            },
            {
              "function": "now",
              "line": 845
            },
            {
              "function": "join",
              "line": 869
            },
            {
              "function": "join",
              "line": 879
            },
            {
              "function": "get",
              "line": 885
            },
            {
              "function": "join",
              "line": 888
            },
            {
              "function": "now",
              "line": 898
            },
            {
              "function": "now",
              "line": 927
            },
            {
              "function": "type",
              "line": 1080
            },
            {
              "function": "str",
              "line": 1082
            },
            {
              "function": "len",
              "line": 1114
            },
            {
              "function": "get",
              "line": 1196
            },
            {
              "function": "getcwd",
              "line": 239
            },
            {
              "function": "open",
              "line": 246
            },
            {
              "function": "read",
              "line": 247
            },
            {
              "function": "info",
              "line": 248
            },
            {
              "function": "warning",
              "line": 251
            },
            {
              "function": "get",
              "line": 354
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "isoformat",
              "line": 432
            },
            {
              "function": "total_seconds",
              "line": 461
            },
            {
              "function": "warning",
              "line": 699
            },
            {
              "function": "get",
              "line": 701
            },
            {
              "function": "append",
              "line": 786
            },
            {
              "function": "append",
              "line": 798
            },
            {
              "function": "now",
              "line": 854
            },
            {
              "function": "get",
              "line": 370
            },
            {
              "function": "now",
              "line": 375
            },
            {
              "function": "get",
              "line": 381
            },
            {
              "function": "now",
              "line": 442
            },
            {
              "function": "execute",
              "line": 470
            },
            {
              "function": "now",
              "line": 535
            },
            {
              "function": "get",
              "line": 693
            },
            {
              "function": "isoformat",
              "line": 695
            },
            {
              "function": "verify_technology_exists",
              "line": 785
            },
            {
              "function": "research_for_agent",
              "line": 794
            },
            {
              "function": "append",
              "line": 809
            },
            {
              "function": "now",
              "line": 432
            },
            {
              "function": "now",
              "line": 477
            },
            {
              "function": "research_for_agent",
              "line": 805
            },
            {
              "function": "append",
              "line": 820
            },
            {
              "function": "append",
              "line": 831
            },
            {
              "function": "now",
              "line": 461
            },
            {
              "function": "now",
              "line": 695
            },
            {
              "function": "research_for_agent",
              "line": 816
            },
            {
              "function": "research_for_agent",
              "line": 827
            }
          ]
        },
        "agents/base/prime_directives.py": {
          "functions": [
            {
              "name": "validate_request",
              "line": 126,
              "async": false,
              "calls": [
                "get",
                "check_research_requirements",
                "_check_violations"
              ],
              "parameters": [
                "cls",
                "request"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "_check_violations",
              "line": 173,
              "async": false,
              "calls": [
                "items",
                "len",
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "cls",
                "prompt",
                "context"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "check_research_requirements",
              "line": 247,
              "async": false,
              "calls": [
                "items",
                "len",
                "findall",
                "join",
                "set",
                "list",
                "get",
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "cls",
                "prompt",
                "context"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "format_challenge_response",
              "line": 316,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "enumerate"
              ],
              "parameters": [
                "cls",
                "validation_result"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "get_directive_prompt",
              "line": 344,
              "async": false,
              "calls": [
                "join",
                "append"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "check_global_error_search",
              "line": 365,
              "async": false,
              "calls": [],
              "parameters": [
                "cls",
                "error_found",
                "file_location"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "agents/base/prime_directives.py"
            }
          ],
          "classes": [
            {
              "name": "Directive",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "agents/base/prime_directives.py"
            },
            {
              "name": "PrimeDirectives",
              "line": 22,
              "methods": [
                "validate_request",
                "_check_violations",
                "check_research_requirements",
                "format_challenge_response",
                "get_directive_prompt",
                "check_global_error_search"
              ],
              "bases": [],
              "file": "agents/base/prime_directives.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 384
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 385
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "Directive",
              "line": 30
            },
            {
              "function": "Directive",
              "line": 44
            },
            {
              "function": "Directive",
              "line": 58
            },
            {
              "function": "Directive",
              "line": 73
            },
            {
              "function": "Directive",
              "line": 85
            },
            {
              "function": "Directive",
              "line": 97
            },
            {
              "function": "Directive",
              "line": 109
            },
            {
              "function": "get",
              "line": 135
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "_check_violations",
              "line": 139
            },
            {
              "function": "check_research_requirements",
              "line": 142
            },
            {
              "function": "lower",
              "line": 204
            },
            {
              "function": "items",
              "line": 205
            },
            {
              "function": "lower",
              "line": 252
            },
            {
              "function": "items",
              "line": 286
            },
            {
              "function": "findall",
              "line": 293
            },
            {
              "function": "get",
              "line": 304
            },
            {
              "function": "join",
              "line": 341
            },
            {
              "function": "append",
              "line": 357
            },
            {
              "function": "append",
              "line": 358
            },
            {
              "function": "append",
              "line": 359
            },
            {
              "function": "append",
              "line": 360
            },
            {
              "function": "join",
              "line": 362
            },
            {
              "function": "search",
              "line": 206
            },
            {
              "function": "search",
              "line": 235
            },
            {
              "function": "search",
              "line": 287
            },
            {
              "function": "append",
              "line": 300
            },
            {
              "function": "append",
              "line": 301
            },
            {
              "function": "append",
              "line": 305
            },
            {
              "function": "append",
              "line": 306
            },
            {
              "function": "list",
              "line": 310
            },
            {
              "function": "append",
              "line": 321
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "get",
              "line": 329
            },
            {
              "function": "append",
              "line": 335
            },
            {
              "function": "append",
              "line": 336
            },
            {
              "function": "append",
              "line": 337
            },
            {
              "function": "append",
              "line": 338
            },
            {
              "function": "append",
              "line": 339
            },
            {
              "function": "append",
              "line": 349
            },
            {
              "function": "append",
              "line": 350
            },
            {
              "function": "append",
              "line": 351
            },
            {
              "function": "append",
              "line": 352
            },
            {
              "function": "append",
              "line": 355
            },
            {
              "function": "append",
              "line": 406
            },
            {
              "function": "append",
              "line": 407
            },
            {
              "function": "run",
              "line": 410
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "get",
              "line": 155
            },
            {
              "function": "append",
              "line": 207
            },
            {
              "function": "append",
              "line": 208
            },
            {
              "function": "append",
              "line": 224
            },
            {
              "function": "append",
              "line": 225
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "append",
              "line": 237
            },
            {
              "function": "append",
              "line": 288
            },
            {
              "function": "append",
              "line": 289
            },
            {
              "function": "len",
              "line": 309
            },
            {
              "function": "set",
              "line": 310
            },
            {
              "function": "join",
              "line": 311
            },
            {
              "function": "append",
              "line": 324
            },
            {
              "function": "enumerate",
              "line": 325
            },
            {
              "function": "append",
              "line": 327
            },
            {
              "function": "append",
              "line": 330
            },
            {
              "function": "enumerate",
              "line": 331
            },
            {
              "function": "append",
              "line": 333
            },
            {
              "function": "append",
              "line": 354
            },
            {
              "function": "extend",
              "line": 400
            },
            {
              "function": "extend",
              "line": 403
            },
            {
              "function": "getcwd",
              "line": 407
            },
            {
              "function": "len",
              "line": 415
            },
            {
              "function": "run",
              "line": 419
            },
            {
              "function": "str",
              "line": 431
            },
            {
              "function": "len",
              "line": 240
            },
            {
              "function": "len",
              "line": 240
            },
            {
              "function": "append",
              "line": 326
            },
            {
              "function": "append",
              "line": 332
            },
            {
              "function": "sum",
              "line": 422
            },
            {
              "function": "join",
              "line": 301
            },
            {
              "function": "split",
              "line": 413
            },
            {
              "function": "int",
              "line": 422
            },
            {
              "function": "strip",
              "line": 413
            },
            {
              "function": "split",
              "line": 422
            },
            {
              "function": "split",
              "line": 422
            },
            {
              "function": "strip",
              "line": 422
            }
          ]
        },
        "agents/base/chat_agent.py": {
          "functions": [
            {
              "name": "__post_init__",
              "line": 26,
              "async": false,
              "calls": [
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/chat_agent.py"
            },
            {
              "name": "to_dict",
              "line": 32,
              "async": false,
              "calls": [
                "isoformat"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/chat_agent.py"
            },
            {
              "name": "__init__",
              "line": 47,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "agents/base/chat_agent.py"
            },
            {
              "name": "format_response",
              "line": 193,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "content",
                "status"
              ],
              "decorators": [],
              "file": "agents/base/chat_agent.py"
            },
            {
              "name": "get_chat_status",
              "line": 203,
              "async": false,
              "calls": [
                "update",
                "len",
                "get_status"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agents/base/chat_agent.py"
            }
          ],
          "classes": [
            {
              "name": "StreamMessage",
              "line": 18,
              "methods": [
                "__post_init__",
                "to_dict"
              ],
              "bases": [],
              "file": "agents/base/chat_agent.py"
            },
            {
              "name": "ChatAgent",
              "line": 41,
              "methods": [
                "__init__",
                "format_response",
                "get_chat_status"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "agents/base/chat_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "AsyncGenerator",
                "Dict",
                "Any",
                "Optional",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent",
                "AgentConfig",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "__init__",
              "line": 48
            },
            {
              "function": "info",
              "line": 154
            },
            {
              "function": "items",
              "line": 190
            },
            {
              "function": "get_status",
              "line": 205
            },
            {
              "function": "update",
              "line": 206
            },
            {
              "function": "now",
              "line": 28
            },
            {
              "function": "isoformat",
              "line": 37
            },
            {
              "function": "StreamMessage",
              "line": 65
            },
            {
              "function": "_execute_streaming",
              "line": 95
            },
            {
              "function": "StreamMessage",
              "line": 101
            },
            {
              "function": "execute",
              "line": 131
            },
            {
              "function": "super",
              "line": 48
            },
            {
              "function": "timestamp",
              "line": 61
            },
            {
              "function": "StreamMessage",
              "line": 115
            },
            {
              "function": "error",
              "line": 123
            },
            {
              "function": "StreamMessage",
              "line": 135
            },
            {
              "function": "StreamMessage",
              "line": 142
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "TaskRequest",
              "line": 168
            },
            {
              "function": "handle_chat_stream",
              "line": 177
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "put",
              "line": 191
            },
            {
              "function": "len",
              "line": 207
            },
            {
              "function": "stream_callback",
              "line": 71
            },
            {
              "function": "search",
              "line": 77
            },
            {
              "function": "StreamMessage",
              "line": 84
            },
            {
              "function": "stream_callback",
              "line": 111
            },
            {
              "function": "receive_json",
              "line": 159
            },
            {
              "function": "send_json",
              "line": 182
            },
            {
              "function": "now",
              "line": 61
            },
            {
              "function": "stream_callback",
              "line": 97
            },
            {
              "function": "stream_callback",
              "line": 121
            },
            {
              "function": "send_json",
              "line": 164
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "get",
              "line": 171
            },
            {
              "function": "get",
              "line": 172
            },
            {
              "function": "get",
              "line": 173
            },
            {
              "function": "send_json",
              "line": 178
            },
            {
              "function": "stream_callback",
              "line": 91
            },
            {
              "function": "to_dict",
              "line": 178
            },
            {
              "function": "str",
              "line": 184
            },
            {
              "function": "len",
              "line": 88
            },
            {
              "function": "str",
              "line": 117
            }
          ]
        },
        "utils/perplexity_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "getenv",
                "info",
                "ValueError"
              ],
              "parameters": [
                "self",
                "model"
              ],
              "decorators": [],
              "file": "utils/perplexity_service.py"
            },
            {
              "name": "test_connection",
              "line": 314,
              "async": false,
              "calls": [
                "error",
                "post"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "utils/perplexity_service.py"
            }
          ],
          "classes": [
            {
              "name": "PerplexityService",
              "line": 15,
              "methods": [
                "__init__",
                "test_connection"
              ],
              "bases": [],
              "file": "utils/perplexity_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 322
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "getenv",
              "line": 31
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "ValueError",
              "line": 33
            },
            {
              "function": "send_message",
              "line": 217
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "send_message",
              "line": 264
            },
            {
              "function": "get",
              "line": 274
            },
            {
              "function": "send_message",
              "line": 300
            },
            {
              "function": "get",
              "line": 309
            },
            {
              "function": "post",
              "line": 323
            },
            {
              "function": "ClientSession",
              "line": 94
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "ClientSession",
              "line": 159
            },
            {
              "function": "error",
              "line": 185
            },
            {
              "function": "join",
              "line": 255
            },
            {
              "function": "error",
              "line": 334
            },
            {
              "function": "error",
              "line": 337
            },
            {
              "function": "post",
              "line": 95
            },
            {
              "function": "post",
              "line": 160
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "get",
              "line": 105
            },
            {
              "function": "error",
              "line": 116
            },
            {
              "function": "Exception",
              "line": 117
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "Exception",
              "line": 182
            },
            {
              "function": "chr",
              "line": 255
            },
            {
              "function": "json",
              "line": 101
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "isoformat",
              "line": 112
            },
            {
              "function": "text",
              "line": 115
            },
            {
              "function": "text",
              "line": 180
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "strip",
              "line": 168
            },
            {
              "function": "startswith",
              "line": 169
            },
            {
              "function": "now",
              "line": 112
            },
            {
              "function": "decode",
              "line": 168
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "loads",
              "line": 173
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 174
            }
          ]
        },
        "utils/claude_code_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [
                "ClaudeCodeConfig",
                "_check_cli_availability"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "utils/claude_code_service.py"
            },
            {
              "name": "_check_cli_availability",
              "line": 40,
              "async": false,
              "calls": [
                "error",
                "run",
                "info",
                "strip"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "utils/claude_code_service.py"
            },
            {
              "name": "_parse_json_response",
              "line": 136,
              "async": false,
              "calls": [
                "loads",
                "type",
                "join",
                "isinstance",
                "split",
                "get",
                "append",
                "warning",
                "startswith",
                "strip"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "utils/claude_code_service.py"
            },
            {
              "name": "is_available",
              "line": 252,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "utils/claude_code_service.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeCodeConfig",
              "line": 18,
              "methods": [],
              "bases": [],
              "file": "utils/claude_code_service.py"
            },
            {
              "name": "ClaudeCodeService",
              "line": 25,
              "methods": [
                "__init__",
                "_check_cli_availability",
                "_parse_json_response",
                "is_available"
              ],
              "bases": [],
              "file": "utils/claude_code_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "_check_cli_availability",
              "line": 38
            },
            {
              "function": "split",
              "line": 138
            },
            {
              "function": "join",
              "line": 183
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 34
            },
            {
              "function": "run",
              "line": 43
            },
            {
              "function": "error",
              "line": 77
            },
            {
              "function": "Exception",
              "line": 78
            },
            {
              "function": "extend",
              "line": 95
            },
            {
              "function": "info",
              "line": 108
            },
            {
              "function": "isinstance",
              "line": 178
            },
            {
              "function": "complete",
              "line": 210
            },
            {
              "function": "complete",
              "line": 245
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "error",
              "line": 54
            },
            {
              "function": "create_subprocess_exec",
              "line": 99
            },
            {
              "function": "wait_for",
              "line": 110
            },
            {
              "function": "error",
              "line": 117
            },
            {
              "function": "Exception",
              "line": 118
            },
            {
              "function": "_parse_json_response",
              "line": 122
            },
            {
              "function": "strip",
              "line": 124
            },
            {
              "function": "error",
              "line": 128
            },
            {
              "function": "error",
              "line": 129
            },
            {
              "function": "Exception",
              "line": 130
            },
            {
              "function": "error",
              "line": 133
            },
            {
              "function": "Exception",
              "line": 134
            },
            {
              "function": "strip",
              "line": 138
            },
            {
              "function": "strip",
              "line": 142
            },
            {
              "function": "loads",
              "line": 146
            },
            {
              "function": "append",
              "line": 179
            },
            {
              "function": "warning",
              "line": 181
            },
            {
              "function": "complete",
              "line": 267
            },
            {
              "function": "communicate",
              "line": 111
            },
            {
              "function": "decode",
              "line": 122
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "lower",
              "line": 249
            },
            {
              "function": "lower",
              "line": 249
            },
            {
              "function": "str",
              "line": 276
            },
            {
              "function": "decode",
              "line": 116
            },
            {
              "function": "decode",
              "line": 124
            },
            {
              "function": "str",
              "line": 132
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "get",
              "line": 153
            },
            {
              "function": "append",
              "line": 173
            },
            {
              "function": "strip",
              "line": 51
            },
            {
              "function": "encode",
              "line": 111
            },
            {
              "function": "append",
              "line": 155
            },
            {
              "function": "get",
              "line": 157
            },
            {
              "function": "startswith",
              "line": 172
            },
            {
              "function": "type",
              "line": 181
            },
            {
              "function": "isinstance",
              "line": 159
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "isinstance",
              "line": 161
            },
            {
              "function": "isinstance",
              "line": 163
            },
            {
              "function": "get",
              "line": 164
            },
            {
              "function": "isinstance",
              "line": 165
            },
            {
              "function": "isinstance",
              "line": 167
            },
            {
              "function": "get",
              "line": 163
            },
            {
              "function": "append",
              "line": 166
            },
            {
              "function": "append",
              "line": 168
            }
          ]
        },
        "utils/openai_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "getenv",
                "OpenAIConfig",
                "info",
                "AsyncOpenAI",
                "warning"
              ],
              "parameters": [
                "self",
                "config",
                "model"
              ],
              "decorators": [],
              "file": "utils/openai_service.py"
            },
            {
              "name": "is_available",
              "line": 266,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "utils/openai_service.py"
            }
          ],
          "classes": [
            {
              "name": "OpenAIConfig",
              "line": 20,
              "methods": [],
              "bases": [],
              "file": "utils/openai_service.py"
            },
            {
              "name": "OpenAIService",
              "line": 28,
              "methods": [
                "__init__",
                "is_available"
              ],
              "bases": [],
              "file": "utils/openai_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "openai",
              "names": [
                "AsyncOpenAI"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 81
            }
          ],
          "calls": [
            {
              "function": "load_dotenv",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 17
            },
            {
              "function": "append",
              "line": 71
            },
            {
              "function": "OpenAIConfig",
              "line": 36
            },
            {
              "function": "warning",
              "line": 46
            },
            {
              "function": "AsyncOpenAI",
              "line": 49
            },
            {
              "function": "info",
              "line": 50
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "complete",
              "line": 201
            },
            {
              "function": "loads",
              "line": 205
            },
            {
              "function": "complete",
              "line": 243
            },
            {
              "function": "complete",
              "line": 257
            },
            {
              "function": "range",
              "line": 89
            },
            {
              "function": "error",
              "line": 140
            },
            {
              "function": "create",
              "line": 153
            },
            {
              "function": "error",
              "line": 166
            },
            {
              "function": "getenv",
              "line": 37
            },
            {
              "function": "_stream_completion",
              "line": 75
            },
            {
              "function": "str",
              "line": 137
            },
            {
              "function": "str",
              "line": 141
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "min",
              "line": 96
            },
            {
              "function": "wait_for",
              "line": 107
            },
            {
              "function": "warning",
              "line": 113
            },
            {
              "function": "debug",
              "line": 114
            },
            {
              "function": "error",
              "line": 127
            },
            {
              "function": "str",
              "line": 167
            },
            {
              "function": "sleep",
              "line": 94
            },
            {
              "function": "create",
              "line": 108
            },
            {
              "function": "warning",
              "line": 120
            },
            {
              "function": "error",
              "line": 123
            },
            {
              "function": "lower",
              "line": 128
            },
            {
              "function": "sleep",
              "line": 130
            },
            {
              "function": "str",
              "line": 128
            }
          ]
        },
        "utils/anthropic_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "getenv",
                "info",
                "AnthropicConfig",
                "AsyncAnthropic",
                "warning"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "utils/anthropic_service.py"
            },
            {
              "name": "_format_outputs",
              "line": 241,
              "async": false,
              "calls": [
                "enumerate",
                "join",
                "append",
                "get"
              ],
              "parameters": [
                "self",
                "outputs"
              ],
              "decorators": [],
              "file": "utils/anthropic_service.py"
            },
            {
              "name": "is_available",
              "line": 251,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "utils/anthropic_service.py"
            }
          ],
          "classes": [
            {
              "name": "AnthropicConfig",
              "line": 20,
              "methods": [],
              "bases": [],
              "file": "utils/anthropic_service.py"
            },
            {
              "name": "AnthropicService",
              "line": 28,
              "methods": [
                "__init__",
                "_format_outputs",
                "is_available"
              ],
              "bases": [],
              "file": "utils/anthropic_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "anthropic",
              "names": [
                "AsyncAnthropic"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "load_dotenv",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 17
            },
            {
              "function": "enumerate",
              "line": 244
            },
            {
              "function": "join",
              "line": 249
            },
            {
              "function": "AnthropicConfig",
              "line": 36
            },
            {
              "function": "warning",
              "line": 43
            },
            {
              "function": "AsyncAnthropic",
              "line": 46
            },
            {
              "function": "info",
              "line": 47
            },
            {
              "function": "complete",
              "line": 150
            },
            {
              "function": "complete",
              "line": 187
            },
            {
              "function": "complete",
              "line": 229
            },
            {
              "function": "append",
              "line": 245
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "create",
              "line": 105
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "_format_outputs",
              "line": 217
            },
            {
              "function": "getenv",
              "line": 37
            },
            {
              "function": "_stream_completion",
              "line": 67
            },
            {
              "function": "create",
              "line": 74
            },
            {
              "function": "isinstance",
              "line": 84
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "str",
              "line": 92
            },
            {
              "function": "hasattr",
              "line": 116
            },
            {
              "function": "hasattr",
              "line": 116
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 247
            },
            {
              "function": "str",
              "line": 121
            }
          ]
        },
        "backend/test_system_understanding.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 63
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 131
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 15
            },
            {
              "function": "basicConfig",
              "line": 21
            },
            {
              "function": "getLogger",
              "line": 25
            },
            {
              "function": "str",
              "line": 15
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "ArchitectAgent",
              "line": 33
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "CodeSmithAgent",
              "line": 104
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "run",
              "line": 200
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "get",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "test_architect_understanding",
              "line": 182
            },
            {
              "function": "test_codesmith_understanding",
              "line": 185
            },
            {
              "function": "main",
              "line": 200
            },
            {
              "function": "Path",
              "line": 15
            },
            {
              "function": "understand_system",
              "line": 38
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print_exc",
              "line": 64
            },
            {
              "function": "analyze_infrastructure_improvements",
              "line": 69
            },
            {
              "function": "open",
              "line": 76
            },
            {
              "function": "write",
              "line": 77
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "generate_architecture_flowchart",
              "line": 86
            },
            {
              "function": "open",
              "line": 91
            },
            {
              "function": "write",
              "line": 92
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "analyze_codebase",
              "line": 109
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print_exc",
              "line": 132
            },
            {
              "function": "cleanup_dead_code",
              "line": 137
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "refactor_complex_code",
              "line": 155
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "enumerate",
              "line": 159
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "get",
              "line": 122
            },
            {
              "function": "open",
              "line": 145
            },
            {
              "function": "write",
              "line": 146
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "len",
              "line": 41
            },
            {
              "function": "len",
              "line": 42
            },
            {
              "function": "len",
              "line": 43
            },
            {
              "function": "len",
              "line": 44
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "get",
              "line": 57
            },
            {
              "function": "get",
              "line": 58
            },
            {
              "function": "get",
              "line": 59
            },
            {
              "function": "len",
              "line": 116
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "len",
              "line": 118
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "get",
              "line": 124
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "get",
              "line": 117
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "len",
              "line": 158
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            }
          ]
        },
        "backend/__version__.py": {
          "functions": [
            {
              "name": "get_version",
              "line": 18,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "backend/__version__.py"
            },
            {
              "name": "get_version_tuple",
              "line": 22,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "backend/__version__.py"
            },
            {
              "name": "is_compatible",
              "line": 26,
              "async": false,
              "calls": [
                "isinstance",
                "split",
                "map",
                "tuple"
              ],
              "parameters": [
                "required_version"
              ],
              "decorators": [],
              "file": "backend/__version__.py"
            }
          ],
          "classes": [],
          "imports": [],
          "calls": [
            {
              "function": "isinstance",
              "line": 28
            },
            {
              "function": "tuple",
              "line": 29
            },
            {
              "function": "map",
              "line": 29
            },
            {
              "function": "split",
              "line": 29
            }
          ]
        },
        "backend/test_infrastructure_comprehensive.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 17
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 12
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "exit",
              "line": 14
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "ArchitectAgent",
              "line": 31
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "TaskRequest",
              "line": 37
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "TaskRequest",
              "line": 54
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "run",
              "line": 173
            },
            {
              "function": "execute_with_memory",
              "line": 42
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "execute_with_memory",
              "line": 59
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "TaskRequest",
              "line": 97
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "TaskRequest",
              "line": 122
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "test_infrastructure_analysis_comprehensive",
              "line": 170
            },
            {
              "function": "main",
              "line": 173
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "append",
              "line": 72
            },
            {
              "function": "append",
              "line": 74
            },
            {
              "function": "lower",
              "line": 75
            },
            {
              "function": "append",
              "line": 76
            },
            {
              "function": "append",
              "line": 78
            },
            {
              "function": "append",
              "line": 80
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "execute_with_memory",
              "line": 102
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "execute_with_memory",
              "line": 127
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "dirname",
              "line": 39
            },
            {
              "function": "dirname",
              "line": 56
            },
            {
              "function": "lower",
              "line": 71
            },
            {
              "function": "lower",
              "line": 71
            },
            {
              "function": "lower",
              "line": 73
            },
            {
              "function": "lower",
              "line": 73
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "lower",
              "line": 106
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "dirname",
              "line": 39
            },
            {
              "function": "dirname",
              "line": 56
            },
            {
              "function": "len",
              "line": 82
            },
            {
              "function": "dirname",
              "line": 99
            },
            {
              "function": "dirname",
              "line": 124
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "append",
              "line": 138
            },
            {
              "function": "dirname",
              "line": 99
            },
            {
              "function": "dirname",
              "line": 124
            },
            {
              "function": "capitalize",
              "line": 138
            },
            {
              "function": "join",
              "line": 141
            }
          ]
        },
        "backend/test_api_keys.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService",
                "OpenAIConfig"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "utils.anthropic_service",
              "names": [
                "AnthropicService"
              ],
              "line": 59
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 101
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "load_dotenv",
              "line": 16
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "getenv",
              "line": 89
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "getenv",
              "line": 25
            },
            {
              "function": "getenv",
              "line": 61
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "getenv",
              "line": 103
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "OpenAIConfig",
              "line": 33
            },
            {
              "function": "OpenAIService",
              "line": 34
            },
            {
              "function": "run",
              "line": 49
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "AnthropicService",
              "line": 66
            },
            {
              "function": "run",
              "line": 80
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "test_openai",
              "line": 49
            },
            {
              "function": "test_anthropic",
              "line": 80
            },
            {
              "function": "json",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "len",
              "line": 30
            },
            {
              "function": "complete",
              "line": 39
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "get_completion",
              "line": 70
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "join",
              "line": 123
            }
          ]
        },
        "backend/test_websocket_debug.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/test_websocket_debug.py"
            }
          ],
          "classes": [
            {
              "name": "WebSocketTestClient",
              "line": 32,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/test_websocket_debug.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 21
            },
            {
              "function": "getLogger",
              "line": 30
            },
            {
              "function": "info",
              "line": 134
            },
            {
              "function": "info",
              "line": 135
            },
            {
              "function": "info",
              "line": 136
            },
            {
              "function": "WebSocketTestClient",
              "line": 138
            },
            {
              "function": "info",
              "line": 141
            },
            {
              "function": "info",
              "line": 148
            },
            {
              "function": "info",
              "line": 153
            },
            {
              "function": "info",
              "line": 161
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 164
            },
            {
              "function": "info",
              "line": 172
            },
            {
              "function": "items",
              "line": 173
            },
            {
              "function": "any",
              "line": 177
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "any",
              "line": 179
            },
            {
              "function": "info",
              "line": 181
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "info",
              "line": 183
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "info",
              "line": 189
            },
            {
              "function": "info",
              "line": 190
            },
            {
              "function": "info",
              "line": 193
            },
            {
              "function": "info",
              "line": 202
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "debug",
              "line": 71
            },
            {
              "function": "time",
              "line": 77
            },
            {
              "function": "connect",
              "line": 142
            },
            {
              "function": "error",
              "line": 144
            },
            {
              "function": "send_task",
              "line": 149
            },
            {
              "function": "receive_messages",
              "line": 150
            },
            {
              "function": "send_task",
              "line": 154
            },
            {
              "function": "receive_messages",
              "line": 155
            },
            {
              "function": "close",
              "line": 158
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "info",
              "line": 174
            },
            {
              "function": "open",
              "line": 187
            },
            {
              "function": "dump",
              "line": 188
            },
            {
              "function": "run",
              "line": 196
            },
            {
              "function": "FileHandler",
              "line": 25
            },
            {
              "function": "StreamHandler",
              "line": 26
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "loads",
              "line": 47
            },
            {
              "function": "send",
              "line": 73
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "run_test",
              "line": 196
            },
            {
              "function": "info",
              "line": 198
            },
            {
              "function": "error",
              "line": 200
            },
            {
              "function": "connect",
              "line": 43
            },
            {
              "function": "recv",
              "line": 46
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "error",
              "line": 54
            },
            {
              "function": "error",
              "line": 58
            },
            {
              "function": "dumps",
              "line": 73
            },
            {
              "function": "loads",
              "line": 87
            },
            {
              "function": "append",
              "line": 88
            },
            {
              "function": "get",
              "line": 90
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "error",
              "line": 124
            },
            {
              "function": "close",
              "line": 129
            },
            {
              "function": "len",
              "line": 164
            },
            {
              "function": "get",
              "line": 177
            },
            {
              "function": "get",
              "line": 178
            },
            {
              "function": "get",
              "line": 179
            },
            {
              "function": "strftime",
              "line": 193
            },
            {
              "function": "strftime",
              "line": 202
            },
            {
              "function": "dumps",
              "line": 71
            },
            {
              "function": "time",
              "line": 80
            },
            {
              "function": "wait_for",
              "line": 82
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "recv",
              "line": 83
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "info",
              "line": 99
            },
            {
              "function": "now",
              "line": 193
            },
            {
              "function": "now",
              "line": 202
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "get",
              "line": 103
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 109
            },
            {
              "function": "get",
              "line": 113
            },
            {
              "function": "error",
              "line": 114
            },
            {
              "function": "debug",
              "line": 118
            }
          ]
        },
        "backend/test_quick_infra.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 67
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 22
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "exit",
              "line": 13
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "ArchitectAgent",
              "line": 38
            },
            {
              "function": "hasattr",
              "line": 41
            },
            {
              "function": "hasattr",
              "line": 42
            },
            {
              "function": "hasattr",
              "line": 43
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "TaskRequest",
              "line": 69
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "run",
              "line": 117
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "quick_test",
              "line": 107
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "main",
              "line": 117
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "isinstance",
              "line": 58
            },
            {
              "function": "wait_for",
              "line": 75
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "wait_for",
              "line": 53
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "execute_with_memory",
              "line": 76
            },
            {
              "function": "understand_system",
              "line": 54
            },
            {
              "function": "hasattr",
              "line": 81
            },
            {
              "function": "type",
              "line": 57
            },
            {
              "function": "list",
              "line": 59
            },
            {
              "function": "keys",
              "line": 59
            }
          ]
        },
        "backend/quick_test_key.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "openai",
              "names": [
                "openai"
              ],
              "line": 28
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 31
            },
            {
              "type": "import",
              "module": "openai",
              "names": [
                "openai"
              ],
              "line": 33
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 7
            },
            {
              "function": "print",
              "line": 8
            },
            {
              "function": "strip",
              "line": 10
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "OpenAI",
              "line": 36
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "exit",
              "line": 14
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "len",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "create",
              "line": 40
            },
            {
              "function": "input",
              "line": 10
            },
            {
              "function": "startswith",
              "line": 16
            },
            {
              "function": "startswith",
              "line": 16
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "check_call",
              "line": 32
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "len",
              "line": 20
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "lower",
              "line": 90
            },
            {
              "function": "lower",
              "line": 90
            },
            {
              "function": "type",
              "line": 87
            },
            {
              "function": "str",
              "line": 90
            },
            {
              "function": "str",
              "line": 90
            }
          ]
        },
        "backend/test_v4_features.py": {
          "functions": [
            {
              "name": "test_v4_features",
              "line": 14,
              "async": false,
              "calls": [
                "read",
                "open",
                "join",
                "split",
                "print",
                "append",
                "all"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/test_v4_features.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent",
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 102
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "exit",
              "line": 12
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "test_v4_features",
              "line": 156
            },
            {
              "function": "exit",
              "line": 157
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "open",
              "line": 25
            },
            {
              "function": "read",
              "line": 26
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "open",
              "line": 40
            },
            {
              "function": "read",
              "line": 41
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "open",
              "line": 55
            },
            {
              "function": "read",
              "line": 56
            },
            {
              "function": "all",
              "line": 57
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "open",
              "line": 76
            },
            {
              "function": "read",
              "line": 77
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "open",
              "line": 120
            },
            {
              "function": "read",
              "line": 121
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "append",
              "line": 87
            },
            {
              "function": "split",
              "line": 87
            },
            {
              "function": "join",
              "line": 93
            }
          ]
        },
        "backend/test_execution_time_fix.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "AgentRegistry",
                "TaskRequest"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "agents.specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 27
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 36
            }
          ],
          "calls": [
            {
              "function": "exists",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "exit",
              "line": 13
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "AgentRegistry",
              "line": 23
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "TaskRequest",
              "line": 65
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "hasattr",
              "line": 73
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "run",
              "line": 108
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 28
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "ArchitectAgent",
              "line": 37
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "TaskRequest",
              "line": 49
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "hasattr",
              "line": 57
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "dispatch_task",
              "line": 70
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "TaskRequest",
              "line": 80
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "hasattr",
              "line": 88
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "test_execution_time",
              "line": 108
            },
            {
              "function": "register_agent",
              "line": 29
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "register_agent",
              "line": 38
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "dispatch_task",
              "line": 54
            },
            {
              "function": "dispatch_task",
              "line": 85
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "list",
              "line": 43
            },
            {
              "function": "keys",
              "line": 43
            },
            {
              "function": "dirname",
              "line": 82
            },
            {
              "function": "dirname",
              "line": 82
            }
          ]
        },
        "backend/test_langgraph_system.py": {
          "functions": [
            {
              "name": "print_test_header",
              "line": 40,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "title"
              ],
              "decorators": [],
              "file": "backend/test_langgraph_system.py"
            },
            {
              "name": "print_success",
              "line": 47,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "backend/test_langgraph_system.py"
            },
            {
              "name": "print_error",
              "line": 52,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "backend/test_langgraph_system.py"
            },
            {
              "name": "print_info",
              "line": 57,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "message"
              ],
              "decorators": [],
              "file": "backend/test_langgraph_system.py"
            },
            {
              "name": "test_node",
              "line": 188,
              "async": false,
              "calls": [],
              "parameters": [
                "state"
              ],
              "decorators": [],
              "file": "backend/test_langgraph_system.py"
            }
          ],
          "classes": [
            {
              "name": "Colors",
              "line": 29,
              "methods": [],
              "bases": [],
              "file": "backend/test_langgraph_system.py"
            },
            {
              "name": "TestAgent",
              "line": 67,
              "methods": [],
              "bases": [],
              "file": "backend/test_langgraph_system.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "langgraph_system",
              "names": [
                "create_agent_workflow",
                "ExtendedAgentState",
                "create_initial_state"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "langgraph_system.extensions",
              "names": [
                "ToolRegistry",
                "tool",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 20
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print_test_header",
              "line": 64
            },
            {
              "function": "ToolRegistry",
              "line": 77
            },
            {
              "function": "TestAgent",
              "line": 78
            },
            {
              "function": "auto_discover_tools",
              "line": 80
            },
            {
              "function": "print_info",
              "line": 81
            },
            {
              "function": "print_test_header",
              "line": 99
            },
            {
              "function": "ApprovalManager",
              "line": 101
            },
            {
              "function": "create_task",
              "line": 105
            },
            {
              "function": "print_info",
              "line": 119
            },
            {
              "function": "print_test_header",
              "line": 137
            },
            {
              "function": "PersistentAgentMemory",
              "line": 139
            },
            {
              "function": "store_memory",
              "line": 145
            },
            {
              "function": "print_info",
              "line": 153
            },
            {
              "function": "recall_similar",
              "line": 156
            },
            {
              "function": "print_info",
              "line": 157
            },
            {
              "function": "learn_pattern",
              "line": 160
            },
            {
              "function": "get_learned_solution",
              "line": 170
            },
            {
              "function": "get_memory_stats",
              "line": 175
            },
            {
              "function": "print_info",
              "line": 176
            },
            {
              "function": "print_test_header",
              "line": 183
            },
            {
              "function": "DynamicWorkflowManager",
              "line": 185
            },
            {
              "function": "add_node",
              "line": 192
            },
            {
              "function": "add_edge",
              "line": 203
            },
            {
              "function": "get_graph_info",
              "line": 208
            },
            {
              "function": "print_info",
              "line": 209
            },
            {
              "function": "visualize_graph",
              "line": 212
            },
            {
              "function": "print_info",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print_test_header",
              "line": 221
            },
            {
              "function": "create_agent_workflow",
              "line": 224
            },
            {
              "function": "print_info",
              "line": 229
            },
            {
              "function": "print_test_header",
              "line": 258
            },
            {
              "function": "create_initial_state",
              "line": 260
            },
            {
              "function": "print_info",
              "line": 268
            },
            {
              "function": "print_info",
              "line": 269
            },
            {
              "function": "print_info",
              "line": 270
            },
            {
              "function": "print_info",
              "line": 271
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print_test_header",
              "line": 310
            },
            {
              "function": "sum",
              "line": 312
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "run",
              "line": 332
            },
            {
              "function": "exit",
              "line": 333
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "tool",
              "line": 68
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "len",
              "line": 94
            },
            {
              "function": "request_approval",
              "line": 113
            },
            {
              "function": "print_success",
              "line": 122
            },
            {
              "function": "print_error",
              "line": 125
            },
            {
              "function": "sleep",
              "line": 131
            },
            {
              "function": "auto_approve",
              "line": 132
            },
            {
              "function": "print_success",
              "line": 167
            },
            {
              "function": "print_success",
              "line": 172
            },
            {
              "function": "print_success",
              "line": 200
            },
            {
              "function": "print_success",
              "line": 205
            },
            {
              "function": "print_info",
              "line": 241
            },
            {
              "function": "print_info",
              "line": 242
            },
            {
              "function": "print_success",
              "line": 274
            },
            {
              "function": "print_error",
              "line": 277
            },
            {
              "function": "len",
              "line": 313
            },
            {
              "function": "print",
              "line": 324
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "main",
              "line": 332
            },
            {
              "function": "print_success",
              "line": 90
            },
            {
              "function": "hasattr",
              "line": 108
            },
            {
              "function": "then",
              "line": 106
            },
            {
              "function": "auto_approve_after_delay",
              "line": 109
            },
            {
              "function": "execute",
              "line": 233
            },
            {
              "function": "print_success",
              "line": 245
            },
            {
              "function": "print_error",
              "line": 248
            },
            {
              "function": "print_error",
              "line": 252
            },
            {
              "function": "append",
              "line": 304
            },
            {
              "function": "print",
              "line": 317
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "len",
              "line": 81
            },
            {
              "function": "call_tool",
              "line": 89
            },
            {
              "function": "print_error",
              "line": 92
            },
            {
              "function": "sleep",
              "line": 108
            },
            {
              "function": "len",
              "line": 157
            },
            {
              "function": "test_func",
              "line": 303
            },
            {
              "function": "print_error",
              "line": 306
            },
            {
              "function": "append",
              "line": 307
            },
            {
              "function": "len",
              "line": 321
            },
            {
              "function": "sleep",
              "line": 106
            },
            {
              "function": "auto_approve",
              "line": 107
            },
            {
              "function": "len",
              "line": 242
            },
            {
              "function": "get",
              "line": 242
            }
          ]
        },
        "backend/fixes/orchestrator_file_write_fix.py": {
          "functions": [
            {
              "name": "_extract_file_path",
              "line": 64,
              "async": false,
              "calls": [
                "search",
                "group"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "backend/fixes/orchestrator_file_write_fix.py"
            },
            {
              "name": "_determine_file_path",
              "line": 84,
              "async": false,
              "calls": [
                "lower",
                "_extract_feature_name"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "backend/fixes/orchestrator_file_write_fix.py"
            },
            {
              "name": "_extract_feature_name",
              "line": 123,
              "async": false,
              "calls": [
                "lower",
                "len",
                "replace",
                "split"
              ],
              "parameters": [
                "self",
                "description"
              ],
              "decorators": [],
              "file": "backend/fixes/orchestrator_file_write_fix.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 68
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 127
            }
          ],
          "calls": [
            {
              "function": "lower",
              "line": 18
            },
            {
              "function": "any",
              "line": 19
            },
            {
              "function": "_extract_file_path",
              "line": 22
            },
            {
              "function": "lower",
              "line": 88
            },
            {
              "function": "_extract_feature_name",
              "line": 107
            },
            {
              "function": "split",
              "line": 133
            },
            {
              "function": "get_agent",
              "line": 26
            },
            {
              "function": "_execute_subtask_original",
              "line": 62
            },
            {
              "function": "search",
              "line": 78
            },
            {
              "function": "replace",
              "line": 138
            },
            {
              "function": "hasattr",
              "line": 27
            },
            {
              "function": "get_agent",
              "line": 51
            },
            {
              "function": "group",
              "line": 80
            },
            {
              "function": "lower",
              "line": 133
            },
            {
              "function": "info",
              "line": 33
            },
            {
              "function": "_determine_file_path",
              "line": 31
            },
            {
              "function": "implement_code_to_file",
              "line": 35
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "error",
              "line": 46
            },
            {
              "function": "hasattr",
              "line": 53
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "create_redis_config",
              "line": 54
            },
            {
              "function": "hasattr",
              "line": 57
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "create_docker_compose",
              "line": 58
            },
            {
              "function": "get",
              "line": 59
            }
          ]
        },
        "backend/fixes/task_request_enhancement.py": {
          "functions": [
            {
              "name": "enhance_subtask_for_file_writing",
              "line": 27,
              "async": false,
              "calls": [
                "get",
                "lower",
                "any"
              ],
              "parameters": [
                "subtask"
              ],
              "decorators": [],
              "file": "backend/fixes/task_request_enhancement.py"
            },
            {
              "name": "to_file_task",
              "line": 17,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/fixes/task_request_enhancement.py"
            }
          ],
          "classes": [
            {
              "name": "EnhancedTaskRequest",
              "line": 9,
              "methods": [
                "to_file_task"
              ],
              "bases": [],
              "file": "backend/fixes/task_request_enhancement.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 6
            }
          ],
          "calls": [
            {
              "function": "field",
              "line": 14
            },
            {
              "function": "lower",
              "line": 31
            },
            {
              "function": "any",
              "line": 34
            },
            {
              "function": "_original_decompose",
              "line": 57
            },
            {
              "function": "enhance_subtask_for_file_writing",
              "line": 62
            },
            {
              "function": "append",
              "line": 63
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "append",
              "line": 22
            },
            {
              "function": "get",
              "line": 31
            },
            {
              "function": "lower",
              "line": 43
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "lower",
              "line": 45
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "len",
              "line": 68
            },
            {
              "function": "get",
              "line": 45
            }
          ]
        },
        "backend/core/memory_manager.py": {
          "functions": [
            {
              "name": "get_memory_manager",
              "line": 171,
              "async": false,
              "calls": [
                "MemoryManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "__init__",
              "line": 31,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "store",
              "line": 39,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "memory_type",
                "data"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "retrieve",
              "line": 43,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "memory_type",
                "query"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "clear",
              "line": 47,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "memory_type"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "store_code_pattern",
              "line": 98,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "name",
                "description",
                "language",
                "code",
                "use_cases"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "store_learning",
              "line": 121,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "description",
                "lesson",
                "context",
                "impact"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "get_relevant_learnings",
              "line": 145,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "context",
                "limit"
              ],
              "decorators": [],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "learning_entries",
              "line": 163,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [
                "property"
              ],
              "file": "backend/core/memory_manager.py"
            }
          ],
          "classes": [
            {
              "name": "MemoryType",
              "line": 13,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/core/memory_manager.py"
            },
            {
              "name": "MemoryManager",
              "line": 20,
              "methods": [
                "__init__",
                "store",
                "retrieve",
                "clear",
                "store_code_pattern",
                "store_learning",
                "get_relevant_learnings",
                "learning_entries"
              ],
              "bases": [],
              "file": "backend/core/memory_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "debug",
              "line": 37
            },
            {
              "function": "append",
              "line": 41
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "debug",
              "line": 79
            },
            {
              "function": "debug",
              "line": 95
            },
            {
              "function": "debug",
              "line": 118
            },
            {
              "function": "debug",
              "line": 142
            },
            {
              "function": "debug",
              "line": 158
            },
            {
              "function": "MemoryManager",
              "line": 175
            }
          ]
        },
        "backend/core/pause_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 31,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "file": "backend/core/pause_handler.py"
            },
            {
              "name": "pause",
              "line": 42,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "task_id",
                "state",
                "reason"
              ],
              "decorators": [],
              "file": "backend/core/pause_handler.py"
            },
            {
              "name": "resume",
              "line": 50,
              "async": false,
              "calls": [
                "get",
                "info",
                "pop"
              ],
              "parameters": [
                "self",
                "task_id"
              ],
              "decorators": [],
              "file": "backend/core/pause_handler.py"
            },
            {
              "name": "is_paused",
              "line": 58,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "task_id"
              ],
              "decorators": [],
              "file": "backend/core/pause_handler.py"
            }
          ],
          "classes": [
            {
              "name": "PauseAction",
              "line": 13,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/core/pause_handler.py"
            },
            {
              "name": "PauseHandler",
              "line": 20,
              "methods": [
                "__init__",
                "pause",
                "resume",
                "is_paused"
              ],
              "bases": [],
              "file": "backend/core/pause_handler.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "debug",
              "line": 40
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "pop",
              "line": 53
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "get",
              "line": 55
            }
          ]
        },
        "backend/core/cache_manager.py": {
          "functions": [
            {
              "name": "cache_agent_response",
              "line": 83,
              "async": false,
              "calls": [
                "wraps",
                "set",
                "hasattr",
                "info",
                "encode",
                "hexdigest",
                "md5",
                "get",
                "connect",
                "func",
                "CacheManager"
              ],
              "parameters": [
                "ttl"
              ],
              "decorators": [],
              "file": "backend/core/cache_manager.py"
            },
            {
              "name": "__init__",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "redis_url"
              ],
              "decorators": [],
              "file": "backend/core/cache_manager.py"
            },
            {
              "name": "decorator",
              "line": 93,
              "async": false,
              "calls": [
                "wraps",
                "set",
                "hasattr",
                "info",
                "encode",
                "hexdigest",
                "md5",
                "get",
                "connect",
                "func",
                "CacheManager"
              ],
              "parameters": [
                "func"
              ],
              "decorators": [],
              "file": "backend/core/cache_manager.py"
            }
          ],
          "classes": [
            {
              "name": "CacheManager",
              "line": 24,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/core/cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Any",
                "Callable"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "functools",
              "names": [
                "wraps"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "aioredis",
              "names": [
                "aioredis"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "warning",
              "line": 21
            },
            {
              "function": "wraps",
              "line": 94
            },
            {
              "function": "CacheManager",
              "line": 130
            },
            {
              "function": "info",
              "line": 40
            },
            {
              "function": "debug",
              "line": 66
            },
            {
              "function": "hexdigest",
              "line": 98
            },
            {
              "function": "info",
              "line": 112
            },
            {
              "function": "connect",
              "line": 131
            },
            {
              "function": "from_url",
              "line": 38
            },
            {
              "function": "ping",
              "line": 39
            },
            {
              "function": "error",
              "line": 42
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "loads",
              "line": 53
            },
            {
              "function": "error",
              "line": 55
            },
            {
              "function": "set",
              "line": 65
            },
            {
              "function": "error",
              "line": 68
            },
            {
              "function": "keys",
              "line": 76
            },
            {
              "function": "debug",
              "line": 79
            },
            {
              "function": "error",
              "line": 81
            },
            {
              "function": "hasattr",
              "line": 101
            },
            {
              "function": "CacheManager",
              "line": 102
            },
            {
              "function": "get",
              "line": 106
            },
            {
              "function": "info",
              "line": 108
            },
            {
              "function": "func",
              "line": 113
            },
            {
              "function": "set",
              "line": 116
            },
            {
              "function": "dumps",
              "line": 65
            },
            {
              "function": "delete",
              "line": 78
            },
            {
              "function": "md5",
              "line": 98
            },
            {
              "function": "connect",
              "line": 103
            },
            {
              "function": "encode",
              "line": 98
            },
            {
              "function": "len",
              "line": 79
            }
          ]
        },
        "backend/core/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "memory_manager",
              "names": [
                "MemoryManager",
                "MemoryType",
                "get_memory_manager"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "shared_context_manager",
              "names": [
                "SharedContextManager",
                "get_shared_context"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "conversation_context_manager",
              "names": [
                "ConversationContextManager",
                "get_conversation_context"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pause_handler",
              "names": [
                "PauseHandler",
                "PauseAction"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "git_checkpoint_manager",
              "names": [
                "GitCheckpointManager"
              ],
              "line": 9
            }
          ],
          "calls": []
        },
        "backend/core/shared_context_manager.py": {
          "functions": [
            {
              "name": "get_shared_context",
              "line": 51,
              "async": false,
              "calls": [
                "SharedContextManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "set",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "key",
                "value"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "get",
              "line": 31,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "key",
                "default"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "update",
              "line": 35,
              "async": false,
              "calls": [
                "update"
              ],
              "parameters": [
                "self",
                "context"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "clear",
              "line": 39,
              "async": false,
              "calls": [
                "clear"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            },
            {
              "name": "get_all",
              "line": 43,
              "async": false,
              "calls": [
                "copy"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/shared_context_manager.py"
            }
          ],
          "classes": [
            {
              "name": "SharedContextManager",
              "line": 12,
              "methods": [
                "__init__",
                "set",
                "get",
                "update",
                "clear",
                "get_all"
              ],
              "bases": [],
              "file": "backend/core/shared_context_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 25
            },
            {
              "function": "get",
              "line": 33
            },
            {
              "function": "update",
              "line": 37
            },
            {
              "function": "clear",
              "line": 41
            },
            {
              "function": "copy",
              "line": 45
            },
            {
              "function": "SharedContextManager",
              "line": 55
            }
          ]
        },
        "backend/core/conversation_context_manager.py": {
          "functions": [
            {
              "name": "get_conversation_context",
              "line": 50,
              "async": false,
              "calls": [
                "ConversationContextManager"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/core/conversation_context_manager.py"
            },
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/conversation_context_manager.py"
            },
            {
              "name": "add_message",
              "line": 27,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "conversation_id",
                "role",
                "content"
              ],
              "decorators": [],
              "file": "backend/core/conversation_context_manager.py"
            },
            {
              "name": "get_conversation",
              "line": 37,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "conversation_id"
              ],
              "decorators": [],
              "file": "backend/core/conversation_context_manager.py"
            },
            {
              "name": "clear_conversation",
              "line": 41,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "conversation_id"
              ],
              "decorators": [],
              "file": "backend/core/conversation_context_manager.py"
            }
          ],
          "classes": [
            {
              "name": "ConversationContextManager",
              "line": 12,
              "methods": [
                "__init__",
                "add_message",
                "get_conversation",
                "clear_conversation"
              ],
              "bases": [],
              "file": "backend/core/conversation_context_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 25
            },
            {
              "function": "append",
              "line": 32
            },
            {
              "function": "get",
              "line": 39
            },
            {
              "function": "ConversationContextManager",
              "line": 54
            }
          ]
        },
        "backend/core/git_checkpoint_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 23,
              "async": false,
              "calls": [
                "debug"
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "file": "backend/core/git_checkpoint_manager.py"
            },
            {
              "name": "create_checkpoint",
              "line": 34,
              "async": false,
              "calls": [
                "info",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "name",
                "message"
              ],
              "decorators": [],
              "file": "backend/core/git_checkpoint_manager.py"
            },
            {
              "name": "list_checkpoints",
              "line": 45,
              "async": false,
              "calls": [
                "copy"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/git_checkpoint_manager.py"
            },
            {
              "name": "rollback_to",
              "line": 49,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "checkpoint_id"
              ],
              "decorators": [],
              "file": "backend/core/git_checkpoint_manager.py"
            }
          ],
          "classes": [
            {
              "name": "GitCheckpointManager",
              "line": 12,
              "methods": [
                "__init__",
                "create_checkpoint",
                "list_checkpoints",
                "rollback_to"
              ],
              "bases": [],
              "file": "backend/core/git_checkpoint_manager.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "List",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 9
            },
            {
              "function": "debug",
              "line": 32
            },
            {
              "function": "append",
              "line": 37
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "copy",
              "line": 47
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "len",
              "line": 36
            }
          ]
        },
        "backend/core/exceptions.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 13,
              "async": false,
              "calls": [
                "join",
                "__init__",
                "super",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "dependencies"
              ],
              "decorators": [],
              "file": "backend/core/exceptions.py"
            },
            {
              "name": "__init__",
              "line": 40,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "component",
                "file",
                "line"
              ],
              "decorators": [],
              "file": "backend/core/exceptions.py"
            },
            {
              "name": "__init__",
              "line": 65,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "component",
                "reason",
                "solution",
                "file",
                "line"
              ],
              "decorators": [],
              "file": "backend/core/exceptions.py"
            }
          ],
          "classes": [
            {
              "name": "DependencyError",
              "line": 6,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "backend/core/exceptions.py"
            },
            {
              "name": "CacheNotAvailableError",
              "line": 33,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "backend/core/exceptions.py"
            },
            {
              "name": "SystemNotReadyError",
              "line": 58,
              "methods": [
                "__init__"
              ],
              "bases": [
                "Exception"
              ],
              "file": "backend/core/exceptions.py"
            }
          ],
          "imports": [],
          "calls": [
            {
              "function": "join",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 30
            },
            {
              "function": "__init__",
              "line": 55
            },
            {
              "function": "__init__",
              "line": 77
            },
            {
              "function": "get",
              "line": 19
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "get",
              "line": 21
            },
            {
              "function": "append",
              "line": 23
            },
            {
              "function": "super",
              "line": 30
            },
            {
              "function": "super",
              "line": 55
            },
            {
              "function": "super",
              "line": 77
            }
          ]
        },
        "backend/core/analysis/semgrep_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 22,
              "async": false,
              "calls": [
                "which",
                "info",
                "warning"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/semgrep_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "SemgrepAnalyzer",
              "line": 16,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/core/analysis/semgrep_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "which",
              "line": 23
            },
            {
              "function": "info",
              "line": 25
            },
            {
              "function": "warning",
              "line": 27
            },
            {
              "function": "warning",
              "line": 65
            },
            {
              "function": "info",
              "line": 85
            },
            {
              "function": "run",
              "line": 87
            },
            {
              "function": "loads",
              "line": 104
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "info",
              "line": 140
            },
            {
              "function": "progress_callback",
              "line": 62
            },
            {
              "function": "error",
              "line": 96
            },
            {
              "function": "upper",
              "line": 109
            },
            {
              "function": "append",
              "line": 134
            },
            {
              "function": "sum",
              "line": 137
            },
            {
              "function": "len",
              "line": 145
            },
            {
              "function": "error",
              "line": 149
            },
            {
              "function": "error",
              "line": 156
            },
            {
              "function": "error",
              "line": 163
            },
            {
              "function": "get",
              "line": 124
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "get",
              "line": 129
            },
            {
              "function": "get",
              "line": 130
            },
            {
              "function": "get",
              "line": 131
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "values",
              "line": 137
            },
            {
              "function": "progress_callback",
              "line": 138
            },
            {
              "function": "str",
              "line": 167
            },
            {
              "function": "join",
              "line": 85
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "len",
              "line": 140
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "get",
              "line": 129
            },
            {
              "function": "get",
              "line": 130
            },
            {
              "function": "get",
              "line": 131
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "str",
              "line": 160
            },
            {
              "function": "get",
              "line": 109
            }
          ]
        },
        "backend/core/analysis/vulture_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 26,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/vulture_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "VultureAnalyzer",
              "line": 20,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/core/analysis/vulture_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "vulture",
              "names": [
                "Vulture"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "warning",
              "line": 17
            },
            {
              "function": "info",
              "line": 29
            },
            {
              "function": "warning",
              "line": 31
            },
            {
              "function": "warning",
              "line": 77
            },
            {
              "function": "Vulture",
              "line": 93
            },
            {
              "function": "Path",
              "line": 97
            },
            {
              "function": "list",
              "line": 98
            },
            {
              "function": "info",
              "line": 107
            },
            {
              "function": "scavenge",
              "line": 110
            },
            {
              "function": "get_unused_code",
              "line": 123
            },
            {
              "function": "list",
              "line": 144
            },
            {
              "function": "sum",
              "line": 147
            },
            {
              "function": "info",
              "line": 160
            },
            {
              "function": "progress_callback",
              "line": 74
            },
            {
              "function": "rglob",
              "line": 98
            },
            {
              "function": "str",
              "line": 124
            },
            {
              "function": "append",
              "line": 135
            },
            {
              "function": "values",
              "line": 144
            },
            {
              "function": "values",
              "line": 147
            },
            {
              "function": "get",
              "line": 150
            },
            {
              "function": "get",
              "line": 151
            },
            {
              "function": "get",
              "line": 152
            },
            {
              "function": "get",
              "line": 153
            },
            {
              "function": "error",
              "line": 169
            },
            {
              "function": "str",
              "line": 110
            },
            {
              "function": "get",
              "line": 133
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "progress_callback",
              "line": 158
            },
            {
              "function": "str",
              "line": 180
            },
            {
              "function": "any",
              "line": 104
            },
            {
              "function": "len",
              "line": 107
            },
            {
              "function": "str",
              "line": 140
            }
          ]
        },
        "backend/core/analysis/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "backend/core/analysis/radon_metrics.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/radon_metrics.py"
            },
            {
              "name": "_complexity_rank",
              "line": 215,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "complexity"
              ],
              "decorators": [],
              "file": "backend/core/analysis/radon_metrics.py"
            },
            {
              "name": "_calculate_quality_score",
              "line": 230,
              "async": false,
              "calls": [
                "max",
                "min"
              ],
              "parameters": [
                "self",
                "avg_complexity",
                "avg_maintainability"
              ],
              "decorators": [],
              "file": "backend/core/analysis/radon_metrics.py"
            }
          ],
          "classes": [
            {
              "name": "RadonMetrics",
              "line": 22,
              "methods": [
                "__init__",
                "_complexity_rank",
                "_calculate_quality_score"
              ],
              "bases": [],
              "file": "backend/core/analysis/radon_metrics.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Callable",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "radon.complexity",
              "names": [
                "cc_visit"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "radon.metrics",
              "names": [
                "mi_visit",
                "h_visit"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "radon.raw",
              "names": [
                "analyze"
              ],
              "line": 15
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 10
            },
            {
              "function": "warning",
              "line": 19
            },
            {
              "function": "max",
              "line": 239
            },
            {
              "function": "max",
              "line": 244
            },
            {
              "function": "info",
              "line": 36
            },
            {
              "function": "warning",
              "line": 38
            },
            {
              "function": "warning",
              "line": 78
            },
            {
              "function": "Path",
              "line": 91
            },
            {
              "function": "list",
              "line": 92
            },
            {
              "function": "info",
              "line": 101
            },
            {
              "function": "_calculate_quality_score",
              "line": 174
            },
            {
              "function": "info",
              "line": 191
            },
            {
              "function": "min",
              "line": 244
            },
            {
              "function": "progress_callback",
              "line": 75
            },
            {
              "function": "rglob",
              "line": 92
            },
            {
              "function": "round",
              "line": 177
            },
            {
              "function": "round",
              "line": 178
            },
            {
              "function": "round",
              "line": 179
            },
            {
              "function": "len",
              "line": 182
            },
            {
              "function": "len",
              "line": 200
            },
            {
              "function": "error",
              "line": 204
            },
            {
              "function": "cc_visit",
              "line": 120
            },
            {
              "function": "mi_visit",
              "line": 124
            },
            {
              "function": "analyze",
              "line": 128
            },
            {
              "function": "append",
              "line": 155
            },
            {
              "function": "progress_callback",
              "line": 186
            },
            {
              "function": "str",
              "line": 212
            },
            {
              "function": "any",
              "line": 98
            },
            {
              "function": "len",
              "line": 101
            },
            {
              "function": "open",
              "line": 112
            },
            {
              "function": "read",
              "line": 113
            },
            {
              "function": "strip",
              "line": 116
            },
            {
              "function": "isinstance",
              "line": 125
            },
            {
              "function": "str",
              "line": 134
            },
            {
              "function": "round",
              "line": 135
            },
            {
              "function": "round",
              "line": 136
            },
            {
              "function": "warning",
              "line": 165
            },
            {
              "function": "sum",
              "line": 121
            },
            {
              "function": "len",
              "line": 121
            },
            {
              "function": "_complexity_rank",
              "line": 149
            }
          ]
        },
        "backend/core/analysis/layer_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 56,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_classify_files_into_layers",
              "line": 139,
              "async": false,
              "calls": [
                "keys",
                "_detect_file_layer"
              ],
              "parameters": [
                "self",
                "ast_data"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_detect_file_layer",
              "line": 154,
              "async": false,
              "calls": [
                "items",
                "max",
                "basename",
                "lower",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_build_layer_structure",
              "line": 193,
              "async": false,
              "calls": [
                "items",
                "sort",
                "get",
                "len",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_detect_layer_violations",
              "line": 221,
              "async": false,
              "calls": [
                "items",
                "_check_layer_violation",
                "_resolve_import_to_file",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "file_layers",
                "import_graph"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_resolve_import_to_file",
              "line": 254,
              "async": false,
              "calls": [
                "keys",
                "replace"
              ],
              "parameters": [
                "self",
                "import_name",
                "file_layers"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_check_layer_violation",
              "line": 274,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "from_file",
                "from_layer",
                "to_file",
                "to_layer"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_calculate_quality_score",
              "line": 331,
              "async": false,
              "calls": [
                "values",
                "max",
                "round",
                "len",
                "min",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers",
                "violations",
                "ast_data"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_calculate_metrics",
              "line": 373,
              "async": false,
              "calls": [
                "len",
                "dict",
                "values",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "file_layers",
                "violations",
                "ast_data"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            },
            {
              "name": "_empty_layer_analysis",
              "line": 405,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "LayerAnalyzer",
              "line": 15,
              "methods": [
                "__init__",
                "_classify_files_into_layers",
                "_detect_file_layer",
                "_build_layer_structure",
                "_detect_layer_violations",
                "_resolve_import_to_file",
                "_check_layer_violation",
                "_calculate_quality_score",
                "_calculate_metrics",
                "_empty_layer_analysis"
              ],
              "bases": [],
              "file": "backend/core/analysis/layer_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Set",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "info",
              "line": 99
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "_classify_files_into_layers",
              "line": 109
            },
            {
              "function": "info",
              "line": 110
            },
            {
              "function": "_build_layer_structure",
              "line": 113
            },
            {
              "function": "_detect_layer_violations",
              "line": 117
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "_calculate_quality_score",
              "line": 122
            },
            {
              "function": "_calculate_metrics",
              "line": 126
            },
            {
              "function": "info",
              "line": 136
            },
            {
              "function": "keys",
              "line": 148
            },
            {
              "function": "lower",
              "line": 163
            },
            {
              "function": "defaultdict",
              "line": 166
            },
            {
              "function": "items",
              "line": 168
            },
            {
              "function": "defaultdict",
              "line": 198
            },
            {
              "function": "items",
              "line": 199
            },
            {
              "function": "items",
              "line": 204
            },
            {
              "function": "sort",
              "line": 217
            },
            {
              "function": "items",
              "line": 236
            },
            {
              "function": "keys",
              "line": 265
            },
            {
              "function": "get",
              "line": 293
            },
            {
              "function": "get",
              "line": 294
            },
            {
              "function": "get",
              "line": 296
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "get",
              "line": 298
            },
            {
              "function": "len",
              "line": 345
            },
            {
              "function": "len",
              "line": 350
            },
            {
              "function": "len",
              "line": 354
            },
            {
              "function": "len",
              "line": 355
            },
            {
              "function": "min",
              "line": 358
            },
            {
              "function": "defaultdict",
              "line": 361
            },
            {
              "function": "values",
              "line": 362
            },
            {
              "function": "max",
              "line": 369
            },
            {
              "function": "round",
              "line": 371
            },
            {
              "function": "len",
              "line": 382
            },
            {
              "function": "len",
              "line": 383
            },
            {
              "function": "len",
              "line": 387
            },
            {
              "function": "len",
              "line": 388
            },
            {
              "function": "defaultdict",
              "line": 391
            },
            {
              "function": "values",
              "line": 392
            },
            {
              "function": "warning",
              "line": 105
            },
            {
              "function": "_empty_layer_analysis",
              "line": 106
            },
            {
              "function": "_detect_file_layer",
              "line": 149
            },
            {
              "function": "max",
              "line": 187
            },
            {
              "function": "append",
              "line": 200
            },
            {
              "function": "get",
              "line": 205
            },
            {
              "function": "append",
              "line": 207
            },
            {
              "function": "get",
              "line": 237
            },
            {
              "function": "replace",
              "line": 267
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "min",
              "line": 369
            },
            {
              "function": "len",
              "line": 399
            },
            {
              "function": "dict",
              "line": 402
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "basename",
              "line": 181
            },
            {
              "function": "_resolve_import_to_file",
              "line": 241
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "_check_layer_violation",
              "line": 248
            },
            {
              "function": "len",
              "line": 110
            },
            {
              "function": "len",
              "line": 119
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "append",
              "line": 250
            },
            {
              "function": "replace",
              "line": 267
            }
          ]
        },
        "backend/core/analysis/call_graph_analyzer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_function_registry",
              "line": 120,
              "async": false,
              "calls": [
                "get",
                "items"
              ],
              "parameters": [
                "self",
                "ast_data"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_call_relationships",
              "line": 144,
              "async": false,
              "calls": [
                "_resolve_function_id",
                "items",
                "dict",
                "get",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "ast_data",
                "function_registry"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_resolve_function_id",
              "line": 179,
              "async": false,
              "calls": [
                "endswith"
              ],
              "parameters": [
                "self",
                "func_name",
                "current_file",
                "function_registry"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_detect_entry_points",
              "line": 206,
              "async": false,
              "calls": [
                "append",
                "items",
                "len",
                "any"
              ],
              "parameters": [
                "self",
                "function_registry",
                "reverse_call_graph"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_find_unused_functions",
              "line": 240,
              "async": false,
              "calls": [
                "items",
                "endswith",
                "len",
                "append",
                "startswith"
              ],
              "parameters": [
                "self",
                "function_registry",
                "reverse_call_graph",
                "entry_points"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_detect_hot_paths",
              "line": 275,
              "async": false,
              "calls": [
                "append",
                "len",
                "sort",
                "_bfs_paths"
              ],
              "parameters": [
                "self",
                "call_graph",
                "entry_points"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_bfs_paths",
              "line": 304,
              "async": false,
              "calls": [
                "get",
                "deque",
                "set",
                "popleft",
                "len",
                "append",
                "add"
              ],
              "parameters": [
                "self",
                "start",
                "call_graph",
                "max_depth"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_nodes",
              "line": 336,
              "async": false,
              "calls": [
                "get",
                "len",
                "items",
                "append"
              ],
              "parameters": [
                "self",
                "function_registry",
                "call_graph",
                "reverse_call_graph"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_build_edges",
              "line": 367,
              "async": false,
              "calls": [
                "get",
                "append",
                "items",
                "split"
              ],
              "parameters": [
                "self",
                "call_graph",
                "ast_data"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_analyze_clusters",
              "line": 399,
              "async": false,
              "calls": [
                "items",
                "sort",
                "split",
                "round",
                "enumerate",
                "get",
                "len",
                "append",
                "defaultdict"
              ],
              "parameters": [
                "self",
                "call_graph",
                "function_registry"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_calculate_metrics",
              "line": 446,
              "async": false,
              "calls": [
                "max",
                "len",
                "_calculate_call_depth",
                "round"
              ],
              "parameters": [
                "self",
                "nodes",
                "edges",
                "call_graph"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_calculate_call_depth",
              "line": 477,
              "async": false,
              "calls": [
                "max",
                "set",
                "copy",
                "get",
                "_calculate_call_depth",
                "add"
              ],
              "parameters": [
                "self",
                "func_id",
                "call_graph",
                "visited"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            },
            {
              "name": "_empty_call_graph",
              "line": 505,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            }
          ],
          "classes": [
            {
              "name": "CallGraphAnalyzer",
              "line": 14,
              "methods": [
                "__init__",
                "_build_function_registry",
                "_build_call_relationships",
                "_resolve_function_id",
                "_detect_entry_points",
                "_find_unused_functions",
                "_detect_hot_paths",
                "_bfs_paths",
                "_build_nodes",
                "_build_edges",
                "_analyze_clusters",
                "_calculate_metrics",
                "_calculate_call_depth",
                "_empty_call_graph"
              ],
              "bases": [],
              "file": "backend/core/analysis/call_graph_analyzer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Set",
                "Tuple"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict",
                "deque"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 65
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "_build_function_registry",
              "line": 73
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "_build_call_relationships",
              "line": 77
            },
            {
              "function": "_detect_entry_points",
              "line": 82
            },
            {
              "function": "info",
              "line": 84
            },
            {
              "function": "_find_unused_functions",
              "line": 87
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "_detect_hot_paths",
              "line": 92
            },
            {
              "function": "_build_nodes",
              "line": 95
            },
            {
              "function": "_build_edges",
              "line": 98
            },
            {
              "function": "_analyze_clusters",
              "line": 101
            },
            {
              "function": "_calculate_metrics",
              "line": 104
            },
            {
              "function": "info",
              "line": 117
            },
            {
              "function": "items",
              "line": 129
            },
            {
              "function": "defaultdict",
              "line": 157
            },
            {
              "function": "defaultdict",
              "line": 158
            },
            {
              "function": "items",
              "line": 160
            },
            {
              "function": "items",
              "line": 223
            },
            {
              "function": "items",
              "line": 258
            },
            {
              "function": "sort",
              "line": 300
            },
            {
              "function": "deque",
              "line": 314
            },
            {
              "function": "set",
              "line": 315
            },
            {
              "function": "items",
              "line": 347
            },
            {
              "function": "items",
              "line": 377
            },
            {
              "function": "defaultdict",
              "line": 408
            },
            {
              "function": "enumerate",
              "line": 415
            },
            {
              "function": "sort",
              "line": 442
            },
            {
              "function": "len",
              "line": 455
            },
            {
              "function": "len",
              "line": 456
            },
            {
              "function": "add",
              "line": 492
            },
            {
              "function": "get",
              "line": 494
            },
            {
              "function": "max",
              "line": 498
            },
            {
              "function": "warning",
              "line": 69
            },
            {
              "function": "_empty_call_graph",
              "line": 70
            },
            {
              "function": "get",
              "line": 130
            },
            {
              "function": "get",
              "line": 165
            },
            {
              "function": "dict",
              "line": 177
            },
            {
              "function": "dict",
              "line": 177
            },
            {
              "function": "endswith",
              "line": 200
            },
            {
              "function": "_bfs_paths",
              "line": 289
            },
            {
              "function": "popleft",
              "line": 318
            },
            {
              "function": "add",
              "line": 325
            },
            {
              "function": "append",
              "line": 327
            },
            {
              "function": "get",
              "line": 330
            },
            {
              "function": "len",
              "line": 348
            },
            {
              "function": "len",
              "line": 349
            },
            {
              "function": "append",
              "line": 354
            },
            {
              "function": "append",
              "line": 412
            },
            {
              "function": "items",
              "line": 415
            },
            {
              "function": "_calculate_call_depth",
              "line": 462
            },
            {
              "function": "max",
              "line": 463
            },
            {
              "function": "round",
              "line": 472
            },
            {
              "function": "len",
              "line": 473
            },
            {
              "function": "len",
              "line": 474
            },
            {
              "function": "set",
              "line": 487
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "_resolve_function_id",
              "line": 169
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "any",
              "line": 235
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "len",
              "line": 320
            },
            {
              "function": "get",
              "line": 348
            },
            {
              "function": "get",
              "line": 349
            },
            {
              "function": "get",
              "line": 352
            },
            {
              "function": "get",
              "line": 384
            },
            {
              "function": "get",
              "line": 385
            },
            {
              "function": "append",
              "line": 390
            },
            {
              "function": "split",
              "line": 411
            },
            {
              "function": "len",
              "line": 416
            },
            {
              "function": "append",
              "line": 431
            },
            {
              "function": "_calculate_call_depth",
              "line": 499
            },
            {
              "function": "len",
              "line": 74
            },
            {
              "function": "len",
              "line": 84
            },
            {
              "function": "len",
              "line": 89
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "get",
              "line": 137
            },
            {
              "function": "get",
              "line": 138
            },
            {
              "function": "get",
              "line": 139
            },
            {
              "function": "append",
              "line": 174
            },
            {
              "function": "append",
              "line": 175
            },
            {
              "function": "len",
              "line": 232
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "startswith",
              "line": 262
            },
            {
              "function": "endswith",
              "line": 262
            },
            {
              "function": "len",
              "line": 270
            },
            {
              "function": "len",
              "line": 292
            },
            {
              "function": "append",
              "line": 293
            },
            {
              "function": "append",
              "line": 332
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "split",
              "line": 380
            },
            {
              "function": "split",
              "line": 381
            },
            {
              "function": "get",
              "line": 422
            },
            {
              "function": "copy",
              "line": 499
            },
            {
              "function": "get",
              "line": 387
            },
            {
              "function": "len",
              "line": 435
            },
            {
              "function": "round",
              "line": 436
            },
            {
              "function": "len",
              "line": 296
            }
          ]
        },
        "backend/core/indexing/tree_sitter_indexer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_extract_function_calls",
              "line": 94,
              "async": false,
              "calls": [
                "isinstance",
                "walk",
                "set",
                "_get_call_name",
                "list",
                "append"
              ],
              "parameters": [
                "self",
                "func_node"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_call_name",
              "line": 104,
              "async": false,
              "calls": [
                "isinstance"
              ],
              "parameters": [
                "self",
                "call_node"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_name",
              "line": 113,
              "async": false,
              "calls": [
                "isinstance",
                "_get_attribute_path",
                "str"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_attribute_path",
              "line": 121,
              "async": false,
              "calls": [
                "isinstance",
                "append",
                "join",
                "reversed"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_get_decorator_name",
              "line": 132,
              "async": false,
              "calls": [
                "isinstance",
                "_get_call_name",
                "str"
              ],
              "parameters": [
                "self",
                "decorator"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            },
            {
              "name": "_extract_import",
              "line": 140,
              "async": false,
              "calls": [
                "isinstance"
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            }
          ],
          "classes": [
            {
              "name": "TreeSitterIndexer",
              "line": 14,
              "methods": [
                "__init__",
                "_extract_function_calls",
                "_get_call_name",
                "_get_name",
                "_get_attribute_path",
                "_get_decorator_name",
                "_extract_import"
              ],
              "bases": [],
              "file": "backend/core/indexing/tree_sitter_indexer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "ast",
              "names": [
                "ast"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 22
            },
            {
              "function": "walk",
              "line": 97
            },
            {
              "function": "list",
              "line": 102
            },
            {
              "function": "isinstance",
              "line": 107
            },
            {
              "function": "isinstance",
              "line": 115
            },
            {
              "function": "str",
              "line": 119
            },
            {
              "function": "isinstance",
              "line": 125
            },
            {
              "function": "isinstance",
              "line": 128
            },
            {
              "function": "join",
              "line": 130
            },
            {
              "function": "isinstance",
              "line": 134
            },
            {
              "function": "str",
              "line": 138
            },
            {
              "function": "isinstance",
              "line": 142
            },
            {
              "function": "endswith",
              "line": 36
            },
            {
              "function": "parse",
              "line": 43
            },
            {
              "function": "walk",
              "line": 51
            },
            {
              "function": "isinstance",
              "line": 98
            },
            {
              "function": "set",
              "line": 102
            },
            {
              "function": "isinstance",
              "line": 109
            },
            {
              "function": "isinstance",
              "line": 117
            },
            {
              "function": "append",
              "line": 126
            },
            {
              "function": "append",
              "line": 129
            },
            {
              "function": "reversed",
              "line": 130
            },
            {
              "function": "isinstance",
              "line": 136
            },
            {
              "function": "isinstance",
              "line": 149
            },
            {
              "function": "open",
              "line": 40
            },
            {
              "function": "read",
              "line": 41
            },
            {
              "function": "isinstance",
              "line": 52
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "_get_call_name",
              "line": 99
            },
            {
              "function": "_get_attribute_path",
              "line": 118
            },
            {
              "function": "_get_call_name",
              "line": 137
            },
            {
              "function": "_extract_function_calls",
              "line": 53
            },
            {
              "function": "append",
              "line": 54
            },
            {
              "function": "isinstance",
              "line": 63
            },
            {
              "function": "append",
              "line": 101
            },
            {
              "function": "append",
              "line": 65
            },
            {
              "function": "isinstance",
              "line": 72
            },
            {
              "function": "isinstance",
              "line": 57
            },
            {
              "function": "append",
              "line": 73
            },
            {
              "function": "isinstance",
              "line": 75
            },
            {
              "function": "_get_decorator_name",
              "line": 60
            },
            {
              "function": "walk",
              "line": 64
            },
            {
              "function": "isinstance",
              "line": 64
            },
            {
              "function": "_extract_import",
              "line": 73
            },
            {
              "function": "_get_call_name",
              "line": 76
            },
            {
              "function": "_get_name",
              "line": 69
            },
            {
              "function": "append",
              "line": 78
            }
          ]
        },
        "backend/core/indexing/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "backend/core/indexing/code_indexer.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 22,
              "async": false,
              "calls": [
                "TreeSitterIndexer"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/core/indexing/code_indexer.py"
            },
            {
              "name": "_find_python_files",
              "line": 108,
              "async": false,
              "calls": [
                "join",
                "walk",
                "append",
                "endswith"
              ],
              "parameters": [
                "self",
                "root_path"
              ],
              "decorators": [],
              "file": "backend/core/indexing/code_indexer.py"
            },
            {
              "name": "_count_total_lines",
              "line": 123,
              "async": false,
              "calls": [
                "open",
                "len",
                "readlines"
              ],
              "parameters": [
                "self",
                "files"
              ],
              "decorators": [],
              "file": "backend/core/indexing/code_indexer.py"
            }
          ],
          "classes": [
            {
              "name": "CodeIndexer",
              "line": 16,
              "methods": [
                "__init__",
                "_find_python_files",
                "_count_total_lines"
              ],
              "bases": [],
              "file": "backend/core/indexing/code_indexer.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Callable",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "TreeSitterIndexer",
              "line": 23
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "_find_python_files",
              "line": 56
            },
            {
              "function": "len",
              "line": 57
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "enumerate",
              "line": 67
            },
            {
              "function": "info",
              "line": 98
            },
            {
              "function": "walk",
              "line": 112
            },
            {
              "function": "relpath",
              "line": 72
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "len",
              "line": 92
            },
            {
              "function": "len",
              "line": 93
            },
            {
              "function": "sum",
              "line": 94
            },
            {
              "function": "_count_total_lines",
              "line": 95
            },
            {
              "function": "progress_callback",
              "line": 53
            },
            {
              "function": "index_file",
              "line": 71
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "append",
              "line": 83
            },
            {
              "function": "append",
              "line": 87
            },
            {
              "function": "endswith",
              "line": 117
            },
            {
              "function": "progress_callback",
              "line": 69
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "len",
              "line": 94
            },
            {
              "function": "join",
              "line": 118
            },
            {
              "function": "append",
              "line": 119
            },
            {
              "function": "open",
              "line": 128
            },
            {
              "function": "len",
              "line": 129
            },
            {
              "function": "values",
              "line": 94
            },
            {
              "function": "readlines",
              "line": 129
            },
            {
              "function": "basename",
              "line": 69
            }
          ]
        },
        "backend/config/capabilities_loader.py": {
          "functions": [
            {
              "name": "get_capabilities_loader",
              "line": 187,
              "async": false,
              "calls": [
                "CapabilitiesLoader"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "apply_capabilities_to_agent",
              "line": 194,
              "async": false,
              "calls": [
                "get_capabilities_loader",
                "apply_to_config"
              ],
              "parameters": [
                "agent_config"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [
                "_load_capabilities",
                "join",
                "dirname"
              ],
              "parameters": [
                "self",
                "config_path"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "_load_capabilities",
              "line": 32,
              "async": false,
              "calls": [
                "warning",
                "exists",
                "open",
                "info",
                "error",
                "get",
                "len",
                "safe_load"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "get_agent_capabilities",
              "line": 49,
              "async": false,
              "calls": [
                "get",
                "info",
                "replace"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "apply_to_config",
              "line": 83,
              "async": false,
              "calls": [
                "debug",
                "isinstance",
                "get_agent_capabilities",
                "get",
                "getattr"
              ],
              "parameters": [
                "self",
                "agent_config"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "can_agent_write",
              "line": 113,
              "async": false,
              "calls": [
                "split",
                "abspath",
                "get_agent_capabilities",
                "lstrip",
                "fnmatch",
                "rstrip",
                "get",
                "len",
                "startswith"
              ],
              "parameters": [
                "self",
                "agent_name",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            },
            {
              "name": "get_all_capabilities",
              "line": 180,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/config/capabilities_loader.py"
            }
          ],
          "classes": [
            {
              "name": "CapabilitiesLoader",
              "line": 14,
              "methods": [
                "__init__",
                "_load_capabilities",
                "get_agent_capabilities",
                "apply_to_config",
                "can_agent_write",
                "get_all_capabilities"
              ],
              "bases": [],
              "file": "backend/config/capabilities_loader.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 146
            },
            {
              "type": "import",
              "module": "fnmatch",
              "names": [
                "fnmatch"
              ],
              "line": 147
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "get_capabilities_loader",
              "line": 204
            },
            {
              "function": "apply_to_config",
              "line": 205
            },
            {
              "function": "_load_capabilities",
              "line": 30
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "replace",
              "line": 72
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "getattr",
              "line": 93
            },
            {
              "function": "get_agent_capabilities",
              "line": 97
            },
            {
              "function": "getattr",
              "line": 101
            },
            {
              "function": "debug",
              "line": 110
            },
            {
              "function": "get_agent_capabilities",
              "line": 124
            },
            {
              "function": "get",
              "line": 135
            },
            {
              "function": "abspath",
              "line": 140
            },
            {
              "function": "get",
              "line": 182
            },
            {
              "function": "CapabilitiesLoader",
              "line": 191
            },
            {
              "function": "join",
              "line": 25
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "isinstance",
              "line": 107
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "exists",
              "line": 35
            },
            {
              "function": "warning",
              "line": 36
            },
            {
              "function": "open",
              "line": 39
            },
            {
              "function": "safe_load",
              "line": 40
            },
            {
              "function": "error",
              "line": 46
            },
            {
              "function": "startswith",
              "line": 151
            },
            {
              "function": "abspath",
              "line": 174
            },
            {
              "function": "startswith",
              "line": 175
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "split",
              "line": 158
            },
            {
              "function": "fnmatch",
              "line": 170
            },
            {
              "function": "len",
              "line": 42
            },
            {
              "function": "len",
              "line": 159
            },
            {
              "function": "rstrip",
              "line": 160
            },
            {
              "function": "lstrip",
              "line": 161
            },
            {
              "function": "startswith",
              "line": 164
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "lstrip",
              "line": 165
            },
            {
              "function": "fnmatch",
              "line": 166
            },
            {
              "function": "lstrip",
              "line": 166
            },
            {
              "function": "len",
              "line": 165
            }
          ]
        },
        "backend/config/settings.py": {
          "functions": [
            {
              "name": "get_language_directive",
              "line": 137,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/config/settings.py"
            },
            {
              "name": "get_timeout",
              "line": 142,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "cls",
                "task_type"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/config/settings.py"
            },
            {
              "name": "update_from_vscode",
              "line": 152,
              "async": false,
              "calls": [
                "_auto_detect_provider"
              ],
              "parameters": [
                "cls",
                "vscode_settings"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/config/settings.py"
            },
            {
              "name": "_auto_detect_provider",
              "line": 258,
              "async": false,
              "calls": [
                "lower",
                "startswith"
              ],
              "parameters": [
                "cls",
                "model"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/config/settings.py"
            },
            {
              "name": "to_dict",
              "line": 280,
              "async": false,
              "calls": [],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/config/settings.py"
            }
          ],
          "classes": [
            {
              "name": "Settings",
              "line": 9,
              "methods": [
                "get_language_directive",
                "get_timeout",
                "update_from_vscode",
                "_auto_detect_provider",
                "to_dict"
              ],
              "bases": [],
              "file": "backend/config/settings.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            }
          ],
          "calls": [
            {
              "function": "Settings",
              "line": 361
            },
            {
              "function": "getenv",
              "line": 14
            },
            {
              "function": "getenv",
              "line": 55
            },
            {
              "function": "lower",
              "line": 54
            },
            {
              "function": "get",
              "line": 139
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "lower",
              "line": 268
            },
            {
              "function": "startswith",
              "line": 269
            },
            {
              "function": "_auto_detect_provider",
              "line": 189
            },
            {
              "function": "startswith",
              "line": 271
            },
            {
              "function": "getenv",
              "line": 54
            },
            {
              "function": "startswith",
              "line": 273
            }
          ]
        },
        "backend/tests/test_cache_manager.py": {
          "functions": [],
          "classes": [
            {
              "name": "TestAgent",
              "line": 43,
              "methods": [],
              "bases": [],
              "file": "backend/tests/test_cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "pytest",
              "names": [
                "pytest"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "unittest.mock",
              "names": [
                "Mock",
                "patch",
                "AsyncMock"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "CacheManager",
              "line": 16
            },
            {
              "function": "CacheManager",
              "line": 26
            },
            {
              "function": "AsyncMock",
              "line": 27
            },
            {
              "function": "assert_called_once",
              "line": 32
            },
            {
              "function": "dumps",
              "line": 35
            },
            {
              "function": "TestAgent",
              "line": 51
            },
            {
              "function": "run",
              "line": 70
            },
            {
              "function": "patch",
              "line": 18
            },
            {
              "function": "AsyncMock",
              "line": 19
            },
            {
              "function": "set",
              "line": 31
            },
            {
              "function": "get",
              "line": 36
            },
            {
              "function": "cache_agent_response",
              "line": 46
            },
            {
              "function": "patch",
              "line": 54
            },
            {
              "function": "AsyncMock",
              "line": 55
            },
            {
              "function": "test_cache_manager_connect",
              "line": 70
            },
            {
              "function": "connect",
              "line": 20
            },
            {
              "function": "expensive_operation",
              "line": 60
            },
            {
              "function": "expensive_operation",
              "line": 65
            }
          ]
        },
        "backend/tests/test_server_auto.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "append",
              "line": 101
            },
            {
              "function": "append",
              "line": 104
            },
            {
              "function": "append",
              "line": 107
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "all",
              "line": 116
            },
            {
              "function": "run",
              "line": 125
            },
            {
              "function": "exit",
              "line": 126
            },
            {
              "function": "ClientSession",
              "line": 18
            },
            {
              "function": "ClientSession",
              "line": 33
            },
            {
              "function": "ClientSession",
              "line": 50
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "run_all_tests",
              "line": 125
            },
            {
              "function": "test_health_check",
              "line": 101
            },
            {
              "function": "test_agents_endpoint",
              "line": 104
            },
            {
              "function": "test_websocket_connection",
              "line": 107
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "get",
              "line": 35
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "ws_connect",
              "line": 52
            },
            {
              "function": "loads",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "loads",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "loads",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "loads",
              "line": 81
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "len",
              "line": 112
            },
            {
              "function": "sum",
              "line": 113
            },
            {
              "function": "json",
              "line": 21
            },
            {
              "function": "json",
              "line": 36
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "len",
              "line": 40
            },
            {
              "function": "receive",
              "line": 54
            },
            {
              "function": "send_json",
              "line": 60
            },
            {
              "function": "receive",
              "line": 67
            },
            {
              "function": "receive",
              "line": 72
            },
            {
              "function": "send_json",
              "line": 78
            },
            {
              "function": "receive",
              "line": 80
            },
            {
              "function": "close",
              "line": 85
            },
            {
              "function": "len",
              "line": 114
            },
            {
              "function": "sum",
              "line": 114
            },
            {
              "function": "dumps",
              "line": 22
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "get",
              "line": 69
            }
          ]
        },
        "backend/tests/test_file_capabilities_simple.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "get_capabilities_loader"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 133
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "mkdtemp",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "get_capabilities_loader",
              "line": 84
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "run",
              "line": 138
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "FileSystemTools",
              "line": 28
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "get_audit_log",
              "line": 69
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "rmtree",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "get_agent_capabilities",
              "line": 95
            },
            {
              "function": "get",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "can_agent_write",
              "line": 112
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "main",
              "line": 138
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "write_file",
              "line": 32
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "join",
              "line": 42
            },
            {
              "function": "exists",
              "line": 43
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "write_file",
              "line": 55
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "test_file_tools",
              "line": 124
            },
            {
              "function": "test_capabilities_loader",
              "line": 125
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print_exc",
              "line": 134
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "open",
              "line": 45
            },
            {
              "function": "read",
              "line": 46
            },
            {
              "function": "len",
              "line": 70
            },
            {
              "function": "len",
              "line": 47
            }
          ]
        },
        "backend/tests/test_direct_file_write.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 71
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 9
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "run",
              "line": 75
            },
            {
              "function": "CodeSmithAgent",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "test_direct_file_write",
              "line": 75
            },
            {
              "function": "implement_code_to_file",
              "line": 37
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "exists",
              "line": 49
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print_exc",
              "line": 72
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "remove",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "open",
              "line": 51
            },
            {
              "function": "read",
              "line": 52
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "len",
              "line": 53
            },
            {
              "function": "len",
              "line": 55
            }
          ]
        },
        "backend/tests/test_real_agent.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "run",
              "line": 83
            },
            {
              "function": "exit",
              "line": 84
            },
            {
              "function": "ClientSession",
              "line": 18
            },
            {
              "function": "test_real_agent",
              "line": 83
            },
            {
              "function": "ws_connect",
              "line": 20
            },
            {
              "function": "loads",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "loads",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "loads",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "loads",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "get",
              "line": 64
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "receive",
              "line": 22
            },
            {
              "function": "send_json",
              "line": 28
            },
            {
              "function": "receive",
              "line": 35
            },
            {
              "function": "wait_for",
              "line": 40
            },
            {
              "function": "send_json",
              "line": 48
            },
            {
              "function": "receive",
              "line": 55
            },
            {
              "function": "wait_for",
              "line": 58
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "close",
              "line": 70
            },
            {
              "function": "receive",
              "line": 40
            },
            {
              "function": "receive",
              "line": 58
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "get",
              "line": 37
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 61
            },
            {
              "function": "get",
              "line": 44
            }
          ]
        },
        "backend/tests/test_server.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "append",
              "line": 115
            },
            {
              "function": "append",
              "line": 118
            },
            {
              "function": "append",
              "line": 121
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "all",
              "line": 130
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "input",
              "line": 142
            },
            {
              "function": "run",
              "line": 145
            },
            {
              "function": "exit",
              "line": 146
            },
            {
              "function": "ClientSession",
              "line": 20
            },
            {
              "function": "ClientSession",
              "line": 36
            },
            {
              "function": "ClientSession",
              "line": 53
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "run_all_tests",
              "line": 145
            },
            {
              "function": "test_health_check",
              "line": 115
            },
            {
              "function": "test_agents_endpoint",
              "line": 118
            },
            {
              "function": "test_websocket_connection",
              "line": 121
            },
            {
              "function": "get",
              "line": 22
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "ws_connect",
              "line": 55
            },
            {
              "function": "loads",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "loads",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "loads",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "loads",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "loads",
              "line": 95
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "len",
              "line": 126
            },
            {
              "function": "sum",
              "line": 127
            },
            {
              "function": "json",
              "line": 23
            },
            {
              "function": "json",
              "line": 39
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "len",
              "line": 43
            },
            {
              "function": "receive",
              "line": 57
            },
            {
              "function": "send_json",
              "line": 63
            },
            {
              "function": "receive",
              "line": 70
            },
            {
              "function": "receive",
              "line": 75
            },
            {
              "function": "send_json",
              "line": 81
            },
            {
              "function": "receive",
              "line": 86
            },
            {
              "function": "send_json",
              "line": 92
            },
            {
              "function": "receive",
              "line": 94
            },
            {
              "function": "close",
              "line": 99
            },
            {
              "function": "len",
              "line": 128
            },
            {
              "function": "sum",
              "line": 128
            },
            {
              "function": "dumps",
              "line": 24
            }
          ]
        },
        "backend/tests/test_agent_write_integration.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 127
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 162
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 15
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "mkdtemp",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "mkdtemp",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "run",
              "line": 167
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "ArchitectAgent",
              "line": 32
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "rmtree",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "CodeSmithAgent",
              "line": 82
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "rmtree",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "ClientSession",
              "line": 129
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "main",
              "line": 167
            },
            {
              "function": "abspath",
              "line": 15
            },
            {
              "function": "create_redis_config",
              "line": 42
            },
            {
              "function": "join",
              "line": 51
            },
            {
              "function": "exists",
              "line": 52
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "implement_code_to_file",
              "line": 92
            },
            {
              "function": "join",
              "line": 101
            },
            {
              "function": "exists",
              "line": 102
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "test_architect_creates_redis_config",
              "line": 152
            },
            {
              "function": "test_codesmith_writes_code",
              "line": 153
            },
            {
              "function": "test_agent_via_api",
              "line": 154
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print_exc",
              "line": 163
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "open",
              "line": 56
            },
            {
              "function": "read",
              "line": 57
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "get",
              "line": 97
            },
            {
              "function": "open",
              "line": 106
            },
            {
              "function": "read",
              "line": 107
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "json",
              "line": 133
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "len",
              "line": 109
            }
          ]
        },
        "backend/tests/test_agent_file_capabilities.py": {
          "functions": [
            {
              "name": "main",
              "line": 273,
              "async": false,
              "calls": [
                "print",
                "main"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/tests/test_agent_file_capabilities.py"
            },
            {
              "name": "setup_method",
              "line": 28,
              "async": false,
              "calls": [
                "mkdtemp"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/tests/test_agent_file_capabilities.py"
            },
            {
              "name": "teardown_method",
              "line": 33,
              "async": false,
              "calls": [
                "rmtree",
                "exists"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/tests/test_agent_file_capabilities.py"
            }
          ],
          "classes": [
            {
              "name": "TestAgentFileCapabilities",
              "line": 25,
              "methods": [
                "setup_method",
                "teardown_method"
              ],
              "bases": [],
              "file": "backend/tests/test_agent_file_capabilities.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "pytest",
              "names": [
                "pytest"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "BaseAgent",
                "AgentConfig",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "get_capabilities_loader"
              ],
              "line": 22
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 16
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "main",
              "line": 278
            },
            {
              "function": "main",
              "line": 282
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "mkdtemp",
              "line": 30
            },
            {
              "function": "exists",
              "line": 35
            },
            {
              "function": "FileSystemTools",
              "line": 41
            },
            {
              "function": "FileSystemTools",
              "line": 49
            },
            {
              "function": "exists",
              "line": 60
            },
            {
              "function": "FileSystemTools",
              "line": 70
            },
            {
              "function": "FileSystemTools",
              "line": 87
            },
            {
              "function": "FileSystemTools",
              "line": 103
            },
            {
              "function": "exists",
              "line": 124
            },
            {
              "function": "CodeSmithAgent",
              "line": 130
            },
            {
              "function": "FileSystemTools",
              "line": 133
            },
            {
              "function": "ArchitectAgent",
              "line": 151
            },
            {
              "function": "FileSystemTools",
              "line": 154
            },
            {
              "function": "ArchitectAgent",
              "line": 175
            },
            {
              "function": "FileSystemTools",
              "line": 178
            },
            {
              "function": "FileSystemTools",
              "line": 196
            },
            {
              "function": "get_audit_log",
              "line": 210
            },
            {
              "function": "get_capabilities_loader",
              "line": 217
            },
            {
              "function": "get_agent_capabilities",
              "line": 220
            },
            {
              "function": "get_agent_capabilities",
              "line": 224
            },
            {
              "function": "can_agent_write",
              "line": 228
            },
            {
              "function": "can_agent_write",
              "line": 231
            },
            {
              "function": "AgentConfig",
              "line": 238
            },
            {
              "function": "BaseAgent",
              "line": 246
            },
            {
              "function": "FileSystemTools",
              "line": 258
            },
            {
              "function": "join",
              "line": 269
            },
            {
              "function": "exists",
              "line": 270
            },
            {
              "function": "abspath",
              "line": 16
            },
            {
              "function": "rmtree",
              "line": 36
            },
            {
              "function": "len",
              "line": 44
            },
            {
              "function": "write_file",
              "line": 52
            },
            {
              "function": "join",
              "line": 60
            },
            {
              "function": "open",
              "line": 63
            },
            {
              "function": "read",
              "line": 64
            },
            {
              "function": "write_file",
              "line": 73
            },
            {
              "function": "exists",
              "line": 82
            },
            {
              "function": "write_file",
              "line": 90
            },
            {
              "function": "write_file",
              "line": 108
            },
            {
              "function": "write_file",
              "line": 116
            },
            {
              "function": "implement_code_to_file",
              "line": 136
            },
            {
              "function": "exists",
              "line": 142
            },
            {
              "function": "create_redis_config",
              "line": 157
            },
            {
              "function": "join",
              "line": 163
            },
            {
              "function": "exists",
              "line": 164
            },
            {
              "function": "create_docker_compose",
              "line": 181
            },
            {
              "function": "join",
              "line": 184
            },
            {
              "function": "exists",
              "line": 185
            },
            {
              "function": "write_file",
              "line": 199
            },
            {
              "function": "write_file",
              "line": 200
            },
            {
              "function": "write_file",
              "line": 201
            },
            {
              "function": "len",
              "line": 204
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "len",
              "line": 222
            },
            {
              "function": "get",
              "line": 225
            },
            {
              "function": "write_implementation",
              "line": 250
            },
            {
              "function": "lower",
              "line": 253
            },
            {
              "function": "write_file",
              "line": 261
            },
            {
              "function": "join",
              "line": 63
            },
            {
              "function": "join",
              "line": 82
            },
            {
              "function": "join",
              "line": 142
            },
            {
              "function": "open",
              "line": 167
            },
            {
              "function": "read",
              "line": 168
            },
            {
              "function": "open",
              "line": 188
            },
            {
              "function": "read",
              "line": 189
            },
            {
              "function": "get",
              "line": 222
            }
          ]
        },
        "backend/tests/test_integration.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/tests/test_integration.py"
            },
            {
              "name": "record_result",
              "line": 382,
              "async": false,
              "calls": [
                "print",
                "isoformat",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "test_name",
                "success",
                "details"
              ],
              "decorators": [],
              "file": "backend/tests/test_integration.py"
            },
            {
              "name": "print_summary",
              "line": 406,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/tests/test_integration.py"
            }
          ],
          "classes": [
            {
              "name": "IntegrationTestSuite",
              "line": 17,
              "methods": [
                "__init__",
                "record_result",
                "print_summary"
              ],
              "bases": [],
              "file": "backend/tests/test_integration.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 434
            },
            {
              "function": "IntegrationTestSuite",
              "line": 452
            },
            {
              "function": "exit",
              "line": 456
            },
            {
              "function": "run",
              "line": 459
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print_summary",
              "line": 57
            },
            {
              "function": "append",
              "line": 400
            },
            {
              "function": "print",
              "line": 404
            },
            {
              "function": "print",
              "line": 408
            },
            {
              "function": "print",
              "line": 409
            },
            {
              "function": "print",
              "line": 410
            },
            {
              "function": "print",
              "line": 411
            },
            {
              "function": "print",
              "line": 412
            },
            {
              "function": "print",
              "line": 413
            },
            {
              "function": "print",
              "line": 414
            },
            {
              "function": "print",
              "line": 422
            },
            {
              "function": "run_all_tests",
              "line": 453
            },
            {
              "function": "main",
              "line": 459
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "ClientSession",
              "line": 61
            },
            {
              "function": "ClientSession",
              "line": 92
            },
            {
              "function": "ClientSession",
              "line": 124
            },
            {
              "function": "ClientSession",
              "line": 166
            },
            {
              "function": "ClientSession",
              "line": 215
            },
            {
              "function": "ClientSession",
              "line": 263
            },
            {
              "function": "ClientSession",
              "line": 310
            },
            {
              "function": "ClientSession",
              "line": 341
            },
            {
              "function": "isoformat",
              "line": 397
            },
            {
              "function": "print",
              "line": 417
            },
            {
              "function": "print",
              "line": 425
            },
            {
              "function": "print",
              "line": 427
            },
            {
              "function": "ClientSession",
              "line": 437
            },
            {
              "function": "print",
              "line": 445
            },
            {
              "function": "print",
              "line": 446
            },
            {
              "function": "print",
              "line": 447
            },
            {
              "function": "print",
              "line": 448
            },
            {
              "function": "exit",
              "line": 449
            },
            {
              "function": "ws_connect",
              "line": 125
            },
            {
              "function": "ws_connect",
              "line": 167
            },
            {
              "function": "range",
              "line": 219
            },
            {
              "function": "enumerate",
              "line": 227
            },
            {
              "function": "all",
              "line": 249
            },
            {
              "function": "record_result",
              "line": 250
            },
            {
              "function": "ws_connect",
              "line": 264
            },
            {
              "function": "ws_connect",
              "line": 311
            },
            {
              "function": "loads",
              "line": 360
            },
            {
              "function": "loads",
              "line": 372
            },
            {
              "function": "record_result",
              "line": 377
            },
            {
              "function": "get",
              "line": 438
            },
            {
              "function": "isoformat",
              "line": 31
            },
            {
              "function": "test_func",
              "line": 52
            },
            {
              "function": "record_result",
              "line": 54
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "record_result",
              "line": 71
            },
            {
              "function": "record_result",
              "line": 73
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "record_result",
              "line": 84
            },
            {
              "function": "record_result",
              "line": 86
            },
            {
              "function": "ws_connect",
              "line": 94
            },
            {
              "function": "loads",
              "line": 97
            },
            {
              "function": "record_result",
              "line": 100
            },
            {
              "function": "loads",
              "line": 106
            },
            {
              "function": "record_result",
              "line": 109
            },
            {
              "function": "record_result",
              "line": 114
            },
            {
              "function": "receive",
              "line": 127
            },
            {
              "function": "receive",
              "line": 169
            },
            {
              "function": "range",
              "line": 181
            },
            {
              "function": "any",
              "line": 186
            },
            {
              "function": "any",
              "line": 187
            },
            {
              "function": "next",
              "line": 190
            },
            {
              "function": "any",
              "line": 195
            },
            {
              "function": "record_result",
              "line": 201
            },
            {
              "function": "append",
              "line": 221
            },
            {
              "function": "send_json",
              "line": 228
            },
            {
              "function": "append",
              "line": 233
            },
            {
              "function": "gather",
              "line": 235
            },
            {
              "function": "append",
              "line": 241
            },
            {
              "function": "gather",
              "line": 243
            },
            {
              "function": "record_result",
              "line": 257
            },
            {
              "function": "receive",
              "line": 266
            },
            {
              "function": "now",
              "line": 279
            },
            {
              "function": "record_result",
              "line": 293
            },
            {
              "function": "receive",
              "line": 313
            },
            {
              "function": "ws_connect",
              "line": 344
            },
            {
              "function": "receive",
              "line": 345
            },
            {
              "function": "send_json",
              "line": 348
            },
            {
              "function": "close",
              "line": 355
            },
            {
              "function": "ws_connect",
              "line": 358
            },
            {
              "function": "wait_for",
              "line": 359
            },
            {
              "function": "send_json",
              "line": 363
            },
            {
              "function": "receive",
              "line": 370
            },
            {
              "function": "wait_for",
              "line": 371
            },
            {
              "function": "close",
              "line": 374
            },
            {
              "function": "get",
              "line": 376
            },
            {
              "function": "record_result",
              "line": 380
            },
            {
              "function": "now",
              "line": 397
            },
            {
              "function": "print",
              "line": 420
            },
            {
              "function": "print",
              "line": 440
            },
            {
              "function": "print",
              "line": 442
            },
            {
              "function": "exit",
              "line": 443
            },
            {
              "function": "str",
              "line": 54
            },
            {
              "function": "json",
              "line": 66
            },
            {
              "function": "str",
              "line": 73
            },
            {
              "function": "json",
              "line": 79
            },
            {
              "function": "str",
              "line": 86
            },
            {
              "function": "wait_for",
              "line": 96
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "send_json",
              "line": 104
            },
            {
              "function": "wait_for",
              "line": 105
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "close",
              "line": 111
            },
            {
              "function": "str",
              "line": 114
            },
            {
              "function": "loads",
              "line": 142
            },
            {
              "function": "loads",
              "line": 146
            },
            {
              "function": "record_result",
              "line": 153
            },
            {
              "function": "send_json",
              "line": 173
            },
            {
              "function": "append",
              "line": 183
            },
            {
              "function": "record_result",
              "line": 208
            },
            {
              "function": "ws_connect",
              "line": 220
            },
            {
              "function": "receive",
              "line": 223
            },
            {
              "function": "receive",
              "line": 241
            },
            {
              "function": "close",
              "line": 247
            },
            {
              "function": "str",
              "line": 257
            },
            {
              "function": "send_json",
              "line": 270
            },
            {
              "function": "total_seconds",
              "line": 281
            },
            {
              "function": "len",
              "line": 289
            },
            {
              "function": "get",
              "line": 290
            },
            {
              "function": "record_result",
              "line": 300
            },
            {
              "function": "loads",
              "line": 321
            },
            {
              "function": "record_result",
              "line": 325
            },
            {
              "function": "receive",
              "line": 359
            },
            {
              "function": "receive",
              "line": 371
            },
            {
              "function": "str",
              "line": 380
            },
            {
              "function": "now",
              "line": 31
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "len",
              "line": 82
            },
            {
              "function": "receive",
              "line": 96
            },
            {
              "function": "receive",
              "line": 105
            },
            {
              "function": "send_json",
              "line": 134
            },
            {
              "function": "wait_for",
              "line": 141
            },
            {
              "function": "wait_for",
              "line": 145
            },
            {
              "function": "record_result",
              "line": 160
            },
            {
              "function": "wait_for",
              "line": 182
            },
            {
              "function": "loads",
              "line": 183
            },
            {
              "function": "get",
              "line": 191
            },
            {
              "function": "str",
              "line": 208
            },
            {
              "function": "isinstance",
              "line": 249
            },
            {
              "function": "len",
              "line": 253
            },
            {
              "function": "append",
              "line": 284
            },
            {
              "function": "str",
              "line": 300
            },
            {
              "function": "send_json",
              "line": 317
            },
            {
              "function": "wait_for",
              "line": 320
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "record_result",
              "line": 333
            },
            {
              "function": "record_result",
              "line": 335
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "len",
              "line": 84
            },
            {
              "function": "receive",
              "line": 141
            },
            {
              "function": "receive",
              "line": 145
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "get",
              "line": 150
            },
            {
              "function": "str",
              "line": 160
            },
            {
              "function": "receive",
              "line": 182
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "get",
              "line": 187
            },
            {
              "function": "lower",
              "line": 196
            },
            {
              "function": "wait_for",
              "line": 283
            },
            {
              "function": "loads",
              "line": 284
            },
            {
              "function": "len",
              "line": 296
            },
            {
              "function": "receive",
              "line": 320
            },
            {
              "function": "str",
              "line": 335
            },
            {
              "function": "get",
              "line": 84
            },
            {
              "function": "len",
              "line": 156
            },
            {
              "function": "get",
              "line": 191
            },
            {
              "function": "now",
              "line": 281
            },
            {
              "function": "receive",
              "line": 283
            },
            {
              "function": "get",
              "line": 156
            }
          ]
        },
        "backend/agents/agent_registry.py": {
          "functions": [
            {
              "name": "get_agent_registry",
              "line": 317,
              "async": false,
              "calls": [
                "AgentRegistry"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "__new__",
              "line": 56,
              "async": false,
              "calls": [
                "super",
                "__new__"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "__init__",
              "line": 62,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "get_agent",
              "line": 167,
              "async": false,
              "calls": [
                "warning"
              ],
              "parameters": [
                "self",
                "agent_id"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "get_available_agents",
              "line": 177,
              "async": false,
              "calls": [
                "append",
                "items"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "find_agent_by_capability",
              "line": 247,
              "async": false,
              "calls": [
                "items"
              ],
              "parameters": [
                "self",
                "capability"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "get_agents_by_capability",
              "line": 257,
              "async": false,
              "calls": [
                "append",
                "items"
              ],
              "parameters": [
                "self",
                "capability"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "get_status",
              "line": 283,
              "async": false,
              "calls": [
                "sum",
                "len",
                "get_available_agents",
                "values"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/agent_registry.py"
            }
          ],
          "classes": [
            {
              "name": "AgentType",
              "line": 24,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "RegisteredAgent",
              "line": 39,
              "methods": [],
              "bases": [],
              "file": "backend/agents/agent_registry.py"
            },
            {
              "name": "AgentRegistry",
              "line": 48,
              "methods": [
                "__new__",
                "__init__",
                "get_agent",
                "get_available_agents",
                "find_agent_by_capability",
                "get_agents_by_capability",
                "get_status"
              ],
              "bases": [],
              "file": "backend/agents/agent_registry.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "BaseAgent",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 83
            },
            {
              "type": "from_import",
              "module": "specialized.fixer_gpt_agent",
              "names": [
                "FixerGPTAgent"
              ],
              "line": 91
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "warning",
              "line": 20
            },
            {
              "function": "info",
              "line": 70
            },
            {
              "function": "info",
              "line": 76
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "warning",
              "line": 174
            },
            {
              "function": "items",
              "line": 182
            },
            {
              "function": "get_agent",
              "line": 202
            },
            {
              "function": "items",
              "line": 251
            },
            {
              "function": "items",
              "line": 262
            },
            {
              "function": "items",
              "line": 272
            },
            {
              "function": "info",
              "line": 298
            },
            {
              "function": "items",
              "line": 300
            },
            {
              "function": "clear",
              "line": 311
            },
            {
              "function": "info",
              "line": 312
            },
            {
              "function": "AgentRegistry",
              "line": 321
            },
            {
              "function": "__new__",
              "line": 58
            },
            {
              "function": "register_agent",
              "line": 79
            },
            {
              "function": "info",
              "line": 85
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "isinstance",
              "line": 133
            },
            {
              "function": "RegisteredAgent",
              "line": 144
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "append",
              "line": 183
            },
            {
              "function": "warning",
              "line": 206
            },
            {
              "function": "get_agent",
              "line": 207
            },
            {
              "function": "len",
              "line": 288
            },
            {
              "function": "sum",
              "line": 289
            },
            {
              "function": "sum",
              "line": 290
            },
            {
              "function": "get_available_agents",
              "line": 291
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 79
            },
            {
              "function": "register_agent",
              "line": 84
            },
            {
              "function": "warning",
              "line": 87
            },
            {
              "function": "register_agent",
              "line": 92
            },
            {
              "function": "warning",
              "line": 95
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 113
            },
            {
              "function": "isinstance",
              "line": 117
            },
            {
              "function": "warning",
              "line": 129
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "isinstance",
              "line": 138
            },
            {
              "function": "error",
              "line": 164
            },
            {
              "function": "TaskResult",
              "line": 210
            },
            {
              "function": "execute_with_memory",
              "line": 225
            },
            {
              "function": "error",
              "line": 234
            },
            {
              "function": "TaskResult",
              "line": 240
            },
            {
              "function": "append",
              "line": 264
            },
            {
              "function": "hasattr",
              "line": 275
            },
            {
              "function": "hasattr",
              "line": 303
            },
            {
              "function": "info",
              "line": 306
            },
            {
              "function": "super",
              "line": 58
            },
            {
              "function": "ResearchAgent",
              "line": 84
            },
            {
              "function": "FixerGPTAgent",
              "line": 92
            },
            {
              "function": "len",
              "line": 104
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "info",
              "line": 120
            },
            {
              "function": "append",
              "line": 137
            },
            {
              "function": "AgentType",
              "line": 146
            },
            {
              "function": "error",
              "line": 281
            },
            {
              "function": "error",
              "line": 309
            },
            {
              "function": "publish",
              "line": 276
            },
            {
              "function": "values",
              "line": 289
            },
            {
              "function": "values",
              "line": 290
            },
            {
              "function": "cleanup",
              "line": 304
            },
            {
              "function": "hasattr",
              "line": 140
            },
            {
              "function": "str",
              "line": 140
            },
            {
              "function": "str",
              "line": 242
            }
          ]
        },
        "backend/agents/tools/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "file_tools",
              "names": [
                "FileSystemTools",
                "FileOperation"
              ],
              "line": 6
            }
          ],
          "calls": []
        },
        "backend/agents/tools/file_tools.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "getcwd",
                "Path",
                "join",
                "resolve",
                "makedirs",
                "str"
              ],
              "parameters": [
                "self",
                "workspace_path"
              ],
              "decorators": [],
              "file": "backend/agents/tools/file_tools.py"
            },
            {
              "name": "_validate_path",
              "line": 56,
              "async": false,
              "calls": [
                "isabs",
                "Path",
                "resolve",
                "lstrip",
                "fnmatch",
                "relative_to",
                "startswith",
                "match",
                "str"
              ],
              "parameters": [
                "self",
                "file_path",
                "agent_name",
                "allowed_paths"
              ],
              "decorators": [],
              "file": "backend/agents/tools/file_tools.py"
            },
            {
              "name": "_create_backup",
              "line": 120,
              "async": false,
              "calls": [
                "exists",
                "now",
                "join",
                "strftime",
                "copy2",
                "basename",
                "info",
                "error"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/agents/tools/file_tools.py"
            },
            {
              "name": "_log_operation",
              "line": 145,
              "async": false,
              "calls": [
                "dirname",
                "asdict",
                "join",
                "open",
                "info",
                "error",
                "dumps",
                "write",
                "append",
                "makedirs"
              ],
              "parameters": [
                "self",
                "operation"
              ],
              "decorators": [],
              "file": "backend/agents/tools/file_tools.py"
            },
            {
              "name": "get_audit_log",
              "line": 467,
              "async": false,
              "calls": [
                "asdict"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "backend/agents/tools/file_tools.py"
            }
          ],
          "classes": [
            {
              "name": "FileOperation",
              "line": 18,
              "methods": [],
              "bases": [],
              "file": "backend/agents/tools/file_tools.py"
            },
            {
              "name": "FileSystemTools",
              "line": 29,
              "methods": [
                "__init__",
                "_validate_path",
                "_create_backup",
                "_log_operation",
                "get_audit_log"
              ],
              "bases": [],
              "file": "backend/agents/tools/file_tools.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Optional",
                "Any"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "asdict"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "fnmatch",
              "names": [
                "fnmatch"
              ],
              "line": 89
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "str",
              "line": 43
            },
            {
              "function": "join",
              "line": 45
            },
            {
              "function": "makedirs",
              "line": 48
            },
            {
              "function": "resolve",
              "line": 69
            },
            {
              "function": "isabs",
              "line": 71
            },
            {
              "function": "strftime",
              "line": 133
            },
            {
              "function": "join",
              "line": 135
            },
            {
              "function": "append",
              "line": 147
            },
            {
              "function": "join",
              "line": 150
            },
            {
              "function": "makedirs",
              "line": 151
            },
            {
              "function": "_validate_path",
              "line": 184
            },
            {
              "function": "isabs",
              "line": 203
            },
            {
              "function": "exists",
              "line": 214
            },
            {
              "function": "isabs",
              "line": 281
            },
            {
              "function": "isabs",
              "line": 328
            },
            {
              "function": "_validate_path",
              "line": 343
            },
            {
              "function": "_create_backup",
              "line": 353
            },
            {
              "function": "isabs",
              "line": 434
            },
            {
              "function": "resolve",
              "line": 43
            },
            {
              "function": "resolve",
              "line": 72
            },
            {
              "function": "resolve",
              "line": 74
            },
            {
              "function": "relative_to",
              "line": 78
            },
            {
              "function": "startswith",
              "line": 84
            },
            {
              "function": "exists",
              "line": 130
            },
            {
              "function": "copy2",
              "line": 138
            },
            {
              "function": "info",
              "line": 139
            },
            {
              "function": "dirname",
              "line": 151
            },
            {
              "function": "open",
              "line": 153
            },
            {
              "function": "write",
              "line": 154
            },
            {
              "function": "info",
              "line": 158
            },
            {
              "function": "error",
              "line": 160
            },
            {
              "function": "FileOperation",
              "line": 186
            },
            {
              "function": "_log_operation",
              "line": 194
            },
            {
              "function": "str",
              "line": 204
            },
            {
              "function": "str",
              "line": 206
            },
            {
              "function": "makedirs",
              "line": 210
            },
            {
              "function": "_create_backup",
              "line": 215
            },
            {
              "function": "FileOperation",
              "line": 222
            },
            {
              "function": "_log_operation",
              "line": 230
            },
            {
              "function": "str",
              "line": 282
            },
            {
              "function": "str",
              "line": 284
            },
            {
              "function": "exists",
              "line": 287
            },
            {
              "function": "FileOperation",
              "line": 288
            },
            {
              "function": "_log_operation",
              "line": 296
            },
            {
              "function": "write_file",
              "line": 306
            },
            {
              "function": "str",
              "line": 329
            },
            {
              "function": "str",
              "line": 331
            },
            {
              "function": "exists",
              "line": 334
            },
            {
              "function": "FileOperation",
              "line": 377
            },
            {
              "function": "_log_operation",
              "line": 385
            },
            {
              "function": "str",
              "line": 435
            },
            {
              "function": "str",
              "line": 437
            },
            {
              "function": "exists",
              "line": 439
            },
            {
              "function": "asdict",
              "line": 479
            },
            {
              "function": "Path",
              "line": 69
            },
            {
              "function": "relative_to",
              "line": 94
            },
            {
              "function": "str",
              "line": 95
            },
            {
              "function": "lstrip",
              "line": 102
            },
            {
              "function": "fnmatch",
              "line": 105
            },
            {
              "function": "now",
              "line": 133
            },
            {
              "function": "basename",
              "line": 134
            },
            {
              "function": "error",
              "line": 142
            },
            {
              "function": "resolve",
              "line": 204
            },
            {
              "function": "resolve",
              "line": 206
            },
            {
              "function": "dirname",
              "line": 210
            },
            {
              "function": "open",
              "line": 219
            },
            {
              "function": "write",
              "line": 220
            },
            {
              "function": "len",
              "line": 238
            },
            {
              "function": "FileOperation",
              "line": 242
            },
            {
              "function": "_log_operation",
              "line": 250
            },
            {
              "function": "resolve",
              "line": 282
            },
            {
              "function": "resolve",
              "line": 284
            },
            {
              "function": "resolve",
              "line": 329
            },
            {
              "function": "resolve",
              "line": 331
            },
            {
              "function": "open",
              "line": 357
            },
            {
              "function": "readlines",
              "line": 358
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "get",
              "line": 363
            },
            {
              "function": "get",
              "line": 364
            },
            {
              "function": "open",
              "line": 374
            },
            {
              "function": "writelines",
              "line": 375
            },
            {
              "function": "len",
              "line": 392
            },
            {
              "function": "FileOperation",
              "line": 396
            },
            {
              "function": "_log_operation",
              "line": 404
            },
            {
              "function": "resolve",
              "line": 435
            },
            {
              "function": "resolve",
              "line": 437
            },
            {
              "function": "open",
              "line": 448
            },
            {
              "function": "read",
              "line": 449
            },
            {
              "function": "len",
              "line": 456
            },
            {
              "function": "asdict",
              "line": 478
            },
            {
              "function": "Path",
              "line": 43
            },
            {
              "function": "Path",
              "line": 72
            },
            {
              "function": "str",
              "line": 84
            },
            {
              "function": "match",
              "line": 111
            },
            {
              "function": "dumps",
              "line": 154
            },
            {
              "function": "isoformat",
              "line": 187
            },
            {
              "function": "isoformat",
              "line": 223
            },
            {
              "function": "str",
              "line": 254
            },
            {
              "function": "isoformat",
              "line": 289
            },
            {
              "function": "isoformat",
              "line": 378
            },
            {
              "function": "exists",
              "line": 407
            },
            {
              "function": "copy2",
              "line": 408
            },
            {
              "function": "info",
              "line": 409
            },
            {
              "function": "str",
              "line": 413
            },
            {
              "function": "str",
              "line": 462
            },
            {
              "function": "Path",
              "line": 74
            },
            {
              "function": "asdict",
              "line": 154
            },
            {
              "function": "Path",
              "line": 204
            },
            {
              "function": "isoformat",
              "line": 243
            },
            {
              "function": "str",
              "line": 248
            },
            {
              "function": "Path",
              "line": 282
            },
            {
              "function": "Path",
              "line": 329
            },
            {
              "function": "len",
              "line": 366
            },
            {
              "function": "insert",
              "line": 369
            },
            {
              "function": "isoformat",
              "line": 397
            },
            {
              "function": "str",
              "line": 402
            },
            {
              "function": "Path",
              "line": 435
            },
            {
              "function": "getcwd",
              "line": 43
            },
            {
              "function": "Path",
              "line": 111
            },
            {
              "function": "now",
              "line": 187
            },
            {
              "function": "Path",
              "line": 206
            },
            {
              "function": "now",
              "line": 223
            },
            {
              "function": "Path",
              "line": 284
            },
            {
              "function": "now",
              "line": 289
            },
            {
              "function": "Path",
              "line": 331
            },
            {
              "function": "len",
              "line": 368
            },
            {
              "function": "now",
              "line": 378
            },
            {
              "function": "Path",
              "line": 437
            },
            {
              "function": "now",
              "line": 243
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "now",
              "line": 397
            }
          ]
        },
        "backend/agents/tools/browser_tester.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [
                "ImportError"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/tools/browser_tester.py"
            }
          ],
          "classes": [
            {
              "name": "BrowserTester",
              "line": 22,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/agents/tools/browser_tester.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "playwright.async_api",
              "names": [
                "async_playwright",
                "Browser",
                "Page",
                "Error"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 358
            },
            {
              "type": "import",
              "module": "socket",
              "names": [
                "socket"
              ],
              "line": 359
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "warning",
              "line": 19
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "info",
              "line": 64
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "get",
              "line": 307
            },
            {
              "function": "get",
              "line": 308
            },
            {
              "function": "dirname",
              "line": 368
            },
            {
              "function": "info",
              "line": 371
            },
            {
              "function": "Popen",
              "line": 374
            },
            {
              "function": "info",
              "line": 384
            },
            {
              "function": "len",
              "line": 411
            },
            {
              "function": "len",
              "line": 412
            },
            {
              "function": "len",
              "line": 413
            },
            {
              "function": "BrowserTester",
              "line": 430
            },
            {
              "function": "print",
              "line": 433
            },
            {
              "function": "print",
              "line": 434
            },
            {
              "function": "print",
              "line": 435
            },
            {
              "function": "print",
              "line": 441
            },
            {
              "function": "print",
              "line": 443
            },
            {
              "function": "ImportError",
              "line": 38
            },
            {
              "function": "start",
              "line": 47
            },
            {
              "function": "stop",
              "line": 52
            },
            {
              "function": "error",
              "line": 57
            },
            {
              "function": "start",
              "line": 61
            },
            {
              "function": "launch",
              "line": 62
            },
            {
              "function": "new_page",
              "line": 63
            },
            {
              "function": "terminate",
              "line": 75
            },
            {
              "function": "basename",
              "line": 119
            },
            {
              "function": "info",
              "line": 123
            },
            {
              "function": "time",
              "line": 124
            },
            {
              "function": "int",
              "line": 128
            },
            {
              "function": "info",
              "line": 129
            },
            {
              "function": "on",
              "line": 133
            },
            {
              "function": "append",
              "line": 138
            },
            {
              "function": "info",
              "line": 139
            },
            {
              "function": "info",
              "line": 173
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "append",
              "line": 187
            },
            {
              "function": "info",
              "line": 200
            },
            {
              "function": "basename",
              "line": 246
            },
            {
              "function": "time",
              "line": 250
            },
            {
              "function": "int",
              "line": 253
            },
            {
              "function": "append",
              "line": 258
            },
            {
              "function": "on",
              "line": 262
            },
            {
              "function": "append",
              "line": 293
            },
            {
              "function": "socket",
              "line": 362
            },
            {
              "function": "bind",
              "line": 363
            },
            {
              "function": "listen",
              "line": 364
            },
            {
              "function": "abspath",
              "line": 368
            },
            {
              "function": "sleep",
              "line": 382
            },
            {
              "function": "title",
              "line": 406
            },
            {
              "function": "test_tetris_app",
              "line": 432
            },
            {
              "function": "close",
              "line": 69
            },
            {
              "function": "close",
              "line": 71
            },
            {
              "function": "stop",
              "line": 73
            },
            {
              "function": "_start_local_server",
              "line": 117
            },
            {
              "function": "goto",
              "line": 125
            },
            {
              "function": "screenshot",
              "line": 137
            },
            {
              "function": "query_selector",
              "line": 142
            },
            {
              "function": "info",
              "line": 145
            },
            {
              "function": "append",
              "line": 147
            },
            {
              "function": "error",
              "line": 149
            },
            {
              "function": "query_selector",
              "line": 152
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "append",
              "line": 157
            },
            {
              "function": "query_selector",
              "line": 161
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 167
            },
            {
              "function": "append",
              "line": 169
            },
            {
              "function": "press",
              "line": 174
            },
            {
              "function": "wait_for_timeout",
              "line": 175
            },
            {
              "function": "press",
              "line": 176
            },
            {
              "function": "wait_for_timeout",
              "line": 177
            },
            {
              "function": "press",
              "line": 178
            },
            {
              "function": "wait_for_timeout",
              "line": 179
            },
            {
              "function": "press",
              "line": 180
            },
            {
              "function": "screenshot",
              "line": 186
            },
            {
              "function": "extend",
              "line": 191
            },
            {
              "function": "error",
              "line": 192
            },
            {
              "function": "info",
              "line": 195
            },
            {
              "function": "get",
              "line": 198
            },
            {
              "function": "append",
              "line": 203
            },
            {
              "function": "error",
              "line": 205
            },
            {
              "function": "_start_local_server",
              "line": 244
            },
            {
              "function": "goto",
              "line": 251
            },
            {
              "function": "screenshot",
              "line": 257
            },
            {
              "function": "query_selector",
              "line": 265
            },
            {
              "function": "enumerate",
              "line": 270
            },
            {
              "function": "extend",
              "line": 285
            },
            {
              "function": "screenshot",
              "line": 292
            },
            {
              "function": "len",
              "line": 296
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "error",
              "line": 301
            },
            {
              "function": "str",
              "line": 347
            },
            {
              "function": "getsockname",
              "line": 365
            },
            {
              "function": "str",
              "line": 375
            },
            {
              "function": "query_selector_all",
              "line": 411
            },
            {
              "function": "query_selector_all",
              "line": 412
            },
            {
              "function": "query_selector_all",
              "line": 413
            },
            {
              "function": "async_playwright",
              "line": 61
            },
            {
              "function": "get_event_loop",
              "line": 124
            },
            {
              "function": "time",
              "line": 126
            },
            {
              "function": "append",
              "line": 133
            },
            {
              "function": "click",
              "line": 164
            },
            {
              "function": "wait_for_timeout",
              "line": 165
            },
            {
              "function": "len",
              "line": 198
            },
            {
              "function": "get_event_loop",
              "line": 250
            },
            {
              "function": "time",
              "line": 252
            },
            {
              "function": "append",
              "line": 262
            },
            {
              "function": "len",
              "line": 281
            },
            {
              "function": "query_selector",
              "line": 314
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "str",
              "line": 133
            },
            {
              "function": "str",
              "line": 262
            },
            {
              "function": "append",
              "line": 273
            },
            {
              "function": "click",
              "line": 316
            },
            {
              "function": "query_selector",
              "line": 322
            },
            {
              "function": "get_event_loop",
              "line": 126
            },
            {
              "function": "str",
              "line": 203
            },
            {
              "function": "get_event_loop",
              "line": 252
            },
            {
              "function": "_execute_scenario",
              "line": 272
            },
            {
              "function": "get",
              "line": 275
            },
            {
              "function": "append",
              "line": 276
            },
            {
              "function": "append",
              "line": 279
            },
            {
              "function": "str",
              "line": 299
            },
            {
              "function": "type",
              "line": 325
            },
            {
              "function": "query_selector",
              "line": 331
            },
            {
              "function": "get",
              "line": 334
            },
            {
              "function": "text_content",
              "line": 333
            },
            {
              "function": "get",
              "line": 276
            },
            {
              "function": "str",
              "line": 279
            }
          ]
        },
        "backend/agents/specialized/video_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 62,
              "async": false,
              "calls": [
                "AgentConfig",
                "getcwd",
                "mkdir",
                "Path",
                "__init__",
                "home",
                "OpenAIService",
                "info",
                "error",
                "GeminiVideoService",
                "replace",
                "super",
                "warning",
                "str"
              ],
              "parameters": [
                "self",
                "workspace_path"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/video_agent.py"
            },
            {
              "name": "_format_analysis_result",
              "line": 581,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "video_data"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/video_agent.py"
            },
            {
              "name": "_detect_language",
              "line": 594,
              "async": false,
              "calls": [
                "lower",
                "sum"
              ],
              "parameters": [
                "self",
                "text"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/video_agent.py"
            }
          ],
          "classes": [
            {
              "name": "VideoAgent",
              "line": 43,
              "methods": [
                "__init__",
                "_format_analysis_result",
                "_detect_language"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/video_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "agents.base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "services.gemini_video_service",
              "names": [
                "GeminiVideoService"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "settings"
              ],
              "line": 26
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 34
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "AgentMessage"
              ],
              "line": 621
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 16
            },
            {
              "function": "getLogger",
              "line": 40
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "warning",
              "line": 30
            },
            {
              "function": "warning",
              "line": 38
            },
            {
              "function": "AgentConfig",
              "line": 84
            },
            {
              "function": "__init__",
              "line": 99
            },
            {
              "function": "mkdir",
              "line": 122
            },
            {
              "function": "now",
              "line": 146
            },
            {
              "function": "info",
              "line": 149
            },
            {
              "function": "get",
              "line": 188
            },
            {
              "function": "get",
              "line": 189
            },
            {
              "function": "get",
              "line": 190
            },
            {
              "function": "info",
              "line": 195
            },
            {
              "function": "total_seconds",
              "line": 217
            },
            {
              "function": "TaskResult",
              "line": 219
            },
            {
              "function": "get",
              "line": 242
            },
            {
              "function": "get",
              "line": 244
            },
            {
              "function": "info",
              "line": 249
            },
            {
              "function": "info",
              "line": 250
            },
            {
              "function": "total_seconds",
              "line": 267
            },
            {
              "function": "TaskResult",
              "line": 269
            },
            {
              "function": "info",
              "line": 301
            },
            {
              "function": "enumerate",
              "line": 306
            },
            {
              "function": "total_seconds",
              "line": 342
            },
            {
              "function": "TaskResult",
              "line": 354
            },
            {
              "function": "info",
              "line": 386
            },
            {
              "function": "info",
              "line": 446
            },
            {
              "function": "info",
              "line": 466
            },
            {
              "function": "_detect_language",
              "line": 469
            },
            {
              "function": "info",
              "line": 491
            },
            {
              "function": "info",
              "line": 512
            },
            {
              "function": "info",
              "line": 534
            },
            {
              "function": "info",
              "line": 579
            },
            {
              "function": "sum",
              "line": 601
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "Path",
              "line": 74
            },
            {
              "function": "info",
              "line": 75
            },
            {
              "function": "warning",
              "line": 82
            },
            {
              "function": "GeminiVideoService",
              "line": 103
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "getcwd",
              "line": 125
            },
            {
              "function": "ValueError",
              "line": 193
            },
            {
              "function": "_analyze_video_basic",
              "line": 198
            },
            {
              "function": "_generate_dual_output",
              "line": 209
            },
            {
              "function": "ValueError",
              "line": 247
            },
            {
              "function": "_analyze_video_basic",
              "line": 253
            },
            {
              "function": "_apply_custom_instruction",
              "line": 256
            },
            {
              "function": "_generate_dual_output",
              "line": 259
            },
            {
              "function": "analyze_complete",
              "line": 398
            },
            {
              "function": "analyze_complete",
              "line": 415
            },
            {
              "function": "analyze_complete",
              "line": 432
            },
            {
              "function": "isoformat",
              "line": 443
            },
            {
              "function": "open",
              "line": 532
            },
            {
              "function": "dump",
              "line": 533
            },
            {
              "function": "open",
              "line": 577
            },
            {
              "function": "write",
              "line": 578
            },
            {
              "function": "isinstance",
              "line": 623
            },
            {
              "function": "warning",
              "line": 624
            },
            {
              "function": "isinstance",
              "line": 632
            },
            {
              "function": "abspath",
              "line": 16
            },
            {
              "function": "replace",
              "line": 74
            },
            {
              "function": "super",
              "line": 99
            },
            {
              "function": "error",
              "line": 106
            },
            {
              "function": "OpenAIService",
              "line": 112
            },
            {
              "function": "info",
              "line": 113
            },
            {
              "function": "error",
              "line": 169
            },
            {
              "function": "total_seconds",
              "line": 170
            },
            {
              "function": "TaskResult",
              "line": 172
            },
            {
              "function": "get",
              "line": 204
            },
            {
              "function": "_format_analysis_result",
              "line": 206
            },
            {
              "function": "info",
              "line": 308
            },
            {
              "function": "append",
              "line": 329
            },
            {
              "function": "len",
              "line": 346
            },
            {
              "function": "len",
              "line": 347
            },
            {
              "function": "dumps",
              "line": 475
            },
            {
              "function": "complete",
              "line": 486
            },
            {
              "function": "generate_text",
              "line": 489
            },
            {
              "function": "get",
              "line": 520
            },
            {
              "function": "get",
              "line": 521
            },
            {
              "function": "get",
              "line": 522
            },
            {
              "function": "get",
              "line": 525
            },
            {
              "function": "isoformat",
              "line": 526
            },
            {
              "function": "get",
              "line": 540
            },
            {
              "function": "isoformat",
              "line": 541
            },
            {
              "function": "get",
              "line": 561
            },
            {
              "function": "get",
              "line": 565
            },
            {
              "function": "get",
              "line": 569
            },
            {
              "function": "get",
              "line": 586
            },
            {
              "function": "len",
              "line": 588
            },
            {
              "function": "len",
              "line": 589
            },
            {
              "function": "TaskRequest",
              "line": 633
            },
            {
              "function": "TaskRequest",
              "line": 638
            },
            {
              "function": "execute",
              "line": 644
            },
            {
              "function": "error",
              "line": 656
            },
            {
              "function": "str",
              "line": 74
            },
            {
              "function": "warning",
              "line": 115
            },
            {
              "function": "_execute_batch",
              "line": 154
            },
            {
              "function": "now",
              "line": 217
            },
            {
              "function": "now",
              "line": 267
            },
            {
              "function": "len",
              "line": 301
            },
            {
              "function": "_analyze_video_basic",
              "line": 311
            },
            {
              "function": "_apply_custom_instruction",
              "line": 314
            },
            {
              "function": "_generate_dual_output",
              "line": 321
            },
            {
              "function": "error",
              "line": 336
            },
            {
              "function": "append",
              "line": 337
            },
            {
              "function": "now",
              "line": 342
            },
            {
              "function": "len",
              "line": 359
            },
            {
              "function": "len",
              "line": 360
            },
            {
              "function": "len",
              "line": 361
            },
            {
              "function": "str",
              "line": 364
            },
            {
              "function": "utcnow",
              "line": 443
            },
            {
              "function": "get",
              "line": 588
            },
            {
              "function": "get",
              "line": 589
            },
            {
              "function": "str",
              "line": 658
            },
            {
              "function": "home",
              "line": 74
            },
            {
              "function": "home",
              "line": 81
            },
            {
              "function": "_execute_custom",
              "line": 158
            },
            {
              "function": "str",
              "line": 227
            },
            {
              "function": "str",
              "line": 228
            },
            {
              "function": "str",
              "line": 277
            },
            {
              "function": "str",
              "line": 278
            },
            {
              "function": "len",
              "line": 355
            },
            {
              "function": "utcnow",
              "line": 526
            },
            {
              "function": "utcnow",
              "line": 541
            },
            {
              "function": "lower",
              "line": 601
            },
            {
              "function": "type",
              "line": 624
            },
            {
              "function": "get",
              "line": 634
            },
            {
              "function": "get",
              "line": 635
            },
            {
              "function": "str",
              "line": 639
            },
            {
              "function": "_execute_predefined",
              "line": 162
            },
            {
              "function": "_execute_predefined",
              "line": 166
            },
            {
              "function": "now",
              "line": 170
            },
            {
              "function": "str",
              "line": 177
            },
            {
              "function": "len",
              "line": 308
            },
            {
              "function": "str",
              "line": 339
            },
            {
              "function": "str",
              "line": 174
            }
          ]
        },
        "backend/agents/specialized/fixerbot_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 63,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixerbot_agent.py"
            },
            {
              "name": "_match_pattern",
              "line": 187,
              "async": false,
              "calls": [
                "search",
                "items",
                "any"
              ],
              "parameters": [
                "self",
                "error_text",
                "files"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixerbot_agent.py"
            }
          ],
          "classes": [
            {
              "name": "FixerBotAgent",
              "line": 20,
              "methods": [
                "__init__",
                "_match_pattern"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/fixerbot_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 275
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "AgentConfig",
              "line": 64
            },
            {
              "function": "__init__",
              "line": 79
            },
            {
              "function": "ClaudeCodeService",
              "line": 81
            },
            {
              "function": "items",
              "line": 198
            },
            {
              "function": "getattr",
              "line": 238
            },
            {
              "function": "search",
              "line": 312
            },
            {
              "function": "TaskRequest",
              "line": 472
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 82
            },
            {
              "function": "is_available",
              "line": 84
            },
            {
              "function": "error",
              "line": 85
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "join",
              "line": 162
            },
            {
              "function": "TaskResult",
              "line": 164
            },
            {
              "function": "any",
              "line": 200
            },
            {
              "function": "error",
              "line": 241
            },
            {
              "function": "run",
              "line": 276
            },
            {
              "function": "strip",
              "line": 281
            },
            {
              "function": "open",
              "line": 293
            },
            {
              "function": "read",
              "line": 294
            },
            {
              "function": "replace",
              "line": 303
            },
            {
              "function": "sub",
              "line": 313
            },
            {
              "function": "info",
              "line": 325
            },
            {
              "function": "is_available",
              "line": 402
            },
            {
              "function": "join",
              "line": 410
            },
            {
              "function": "execute",
              "line": 476
            },
            {
              "function": "super",
              "line": 79
            },
            {
              "function": "isinstance",
              "line": 106
            },
            {
              "function": "lower",
              "line": 119
            },
            {
              "function": "_match_pattern",
              "line": 120
            },
            {
              "function": "info",
              "line": 133
            },
            {
              "function": "append",
              "line": 135
            },
            {
              "function": "len",
              "line": 138
            },
            {
              "function": "len",
              "line": 138
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "append",
              "line": 149
            },
            {
              "function": "enumerate",
              "line": 150
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "error",
              "line": 179
            },
            {
              "function": "TaskResult",
              "line": 181
            },
            {
              "function": "any",
              "line": 207
            },
            {
              "function": "fix_method",
              "line": 250
            },
            {
              "function": "error",
              "line": 253
            },
            {
              "function": "open",
              "line": 322
            },
            {
              "function": "write",
              "line": 323
            },
            {
              "function": "complete",
              "line": 448
            },
            {
              "function": "error",
              "line": 460
            },
            {
              "function": "get",
              "line": 473
            },
            {
              "function": "get",
              "line": 474
            },
            {
              "function": "get",
              "line": 107
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "info",
              "line": 111
            },
            {
              "function": "info",
              "line": 112
            },
            {
              "function": "info",
              "line": 123
            },
            {
              "function": "append",
              "line": 125
            },
            {
              "function": "info",
              "line": 127
            },
            {
              "function": "append",
              "line": 128
            },
            {
              "function": "_ai_powered_fix",
              "line": 134
            },
            {
              "function": "_ai_powered_fix",
              "line": 143
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "append",
              "line": 152
            },
            {
              "function": "append",
              "line": 153
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "str",
              "line": 258
            },
            {
              "function": "split",
              "line": 282
            },
            {
              "function": "join",
              "line": 416
            },
            {
              "function": "join",
              "line": 427
            },
            {
              "function": "str",
              "line": 119
            },
            {
              "function": "_apply_pattern_fix",
              "line": 124
            },
            {
              "function": "append",
              "line": 155
            },
            {
              "function": "len",
              "line": 171
            },
            {
              "function": "len",
              "line": 172
            },
            {
              "function": "isoformat",
              "line": 174
            },
            {
              "function": "search",
              "line": 207
            },
            {
              "function": "len",
              "line": 133
            },
            {
              "function": "len",
              "line": 149
            },
            {
              "function": "len",
              "line": 158
            },
            {
              "function": "strip",
              "line": 282
            },
            {
              "function": "chr",
              "line": 416
            },
            {
              "function": "chr",
              "line": 427
            },
            {
              "function": "str",
              "line": 462
            },
            {
              "function": "len",
              "line": 111
            },
            {
              "function": "now",
              "line": 174
            },
            {
              "function": "str",
              "line": 183
            }
          ]
        },
        "backend/agents/specialized/reviewer_gpt_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 37,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "check_asimov_violations",
              "line": 221,
              "async": false,
              "calls": [
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "self",
                "code"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_calculate_html_app_quality_score",
              "line": 445,
              "async": false,
              "calls": [
                "get",
                "len",
                "min",
                "max"
              ],
              "parameters": [
                "self",
                "test_result"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_get_recommendation",
              "line": 479,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "quality_score",
                "test_result"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            },
            {
              "name": "_format_metrics",
              "line": 494,
              "async": false,
              "calls": [
                "join",
                "items",
                "append",
                "isinstance"
              ],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ReviewerGPTAgent",
              "line": 27,
              "methods": [
                "__init__",
                "check_asimov_violations",
                "_calculate_html_app_quality_score",
                "_get_recommendation",
                "_format_metrics"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/reviewer_gpt_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.prime_directives",
              "names": [
                "PrimeDirectives"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "tools.browser_tester",
              "names": [
                "BrowserTester",
                "PLAYWRIGHT_AVAILABLE"
              ],
              "line": 22
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 246
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 102
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "warning",
              "line": 25
            },
            {
              "function": "AgentConfig",
              "line": 38
            },
            {
              "function": "__init__",
              "line": 53
            },
            {
              "function": "OpenAIService",
              "line": 54
            },
            {
              "function": "lower",
              "line": 247
            },
            {
              "function": "check_asimov_violations",
              "line": 279
            },
            {
              "function": "get",
              "line": 333
            },
            {
              "function": "get",
              "line": 352
            },
            {
              "function": "info",
              "line": 390
            },
            {
              "function": "get",
              "line": 462
            },
            {
              "function": "get",
              "line": 464
            },
            {
              "function": "get",
              "line": 466
            },
            {
              "function": "get",
              "line": 468
            },
            {
              "function": "get",
              "line": 470
            },
            {
              "function": "len",
              "line": 474
            },
            {
              "function": "max",
              "line": 477
            },
            {
              "function": "len",
              "line": 483
            },
            {
              "function": "items",
              "line": 497
            },
            {
              "function": "join",
              "line": 503
            },
            {
              "function": "TaskRequest",
              "line": 507
            },
            {
              "function": "lower",
              "line": 67
            },
            {
              "function": "any",
              "line": 70
            },
            {
              "function": "any",
              "line": 74
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "TaskResult",
              "line": 200
            },
            {
              "function": "search",
              "line": 250
            },
            {
              "function": "search",
              "line": 260
            },
            {
              "function": "lower",
              "line": 309
            },
            {
              "function": "append",
              "line": 310
            },
            {
              "function": "perform_global_error_search",
              "line": 324
            },
            {
              "function": "len",
              "line": 339
            },
            {
              "function": "enforce_global_error_search",
              "line": 347
            },
            {
              "function": "len",
              "line": 363
            },
            {
              "function": "len",
              "line": 364
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "exists",
              "line": 403
            },
            {
              "function": "get",
              "line": 458
            },
            {
              "function": "get",
              "line": 474
            },
            {
              "function": "min",
              "line": 477
            },
            {
              "function": "get",
              "line": 483
            },
            {
              "function": "isinstance",
              "line": 498
            },
            {
              "function": "execute",
              "line": 511
            },
            {
              "function": "super",
              "line": 53
            },
            {
              "function": "info",
              "line": 111
            },
            {
              "function": "get_completion",
              "line": 189
            },
            {
              "function": "Exception",
              "line": 198
            },
            {
              "function": "error",
              "line": 213
            },
            {
              "function": "TaskResult",
              "line": 214
            },
            {
              "function": "append",
              "line": 251
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "append",
              "line": 282
            },
            {
              "function": "append",
              "line": 356
            },
            {
              "function": "get",
              "line": 363
            },
            {
              "function": "BrowserTester",
              "line": 415
            },
            {
              "function": "_calculate_html_app_quality_score",
              "line": 423
            },
            {
              "function": "_get_recommendation",
              "line": 427
            },
            {
              "function": "info",
              "line": 429
            },
            {
              "function": "error",
              "line": 434
            },
            {
              "function": "append",
              "line": 500
            },
            {
              "function": "append",
              "line": 502
            },
            {
              "function": "get",
              "line": 508
            },
            {
              "function": "get",
              "line": 509
            },
            {
              "function": "isinstance",
              "line": 85
            },
            {
              "function": "get",
              "line": 88
            },
            {
              "function": "isinstance",
              "line": 100
            },
            {
              "function": "findall",
              "line": 103
            },
            {
              "function": "test_html_application",
              "line": 117
            },
            {
              "function": "info",
              "line": 120
            },
            {
              "function": "TaskResult",
              "line": 121
            },
            {
              "function": "warning",
              "line": 139
            },
            {
              "function": "TaskResult",
              "line": 140
            },
            {
              "function": "lower",
              "line": 197
            },
            {
              "function": "lower",
              "line": 197
            },
            {
              "function": "fix_function",
              "line": 355
            },
            {
              "function": "append",
              "line": 358
            },
            {
              "function": "endswith",
              "line": 94
            },
            {
              "function": "info",
              "line": 107
            },
            {
              "function": "isoformat",
              "line": 207
            },
            {
              "function": "enforce_global_error_search",
              "line": 293
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "append",
              "line": 298
            },
            {
              "function": "test_tetris_app",
              "line": 418
            },
            {
              "function": "test_generic_html_app",
              "line": 420
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "str",
              "line": 358
            },
            {
              "function": "len",
              "line": 139
            },
            {
              "function": "now",
              "line": 207
            },
            {
              "function": "str",
              "line": 216
            },
            {
              "function": "str",
              "line": 437
            },
            {
              "function": "_format_metrics",
              "line": 129
            },
            {
              "function": "join",
              "line": 132
            },
            {
              "function": "join",
              "line": 148
            },
            {
              "function": "join",
              "line": 151
            },
            {
              "function": "join",
              "line": 154
            },
            {
              "function": "chr",
              "line": 132
            },
            {
              "function": "chr",
              "line": 148
            },
            {
              "function": "chr",
              "line": 151
            },
            {
              "function": "chr",
              "line": 154
            }
          ]
        },
        "backend/agents/specialized/tradestrat_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/tradestrat_agent.py"
            }
          ],
          "classes": [
            {
              "name": "TradeStratAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/tradestrat_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 44
            },
            {
              "function": "ClaudeCodeService",
              "line": 46
            },
            {
              "function": "TaskRequest",
              "line": 108
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 47
            },
            {
              "function": "is_available",
              "line": 49
            },
            {
              "function": "error",
              "line": 50
            },
            {
              "function": "TaskResult",
              "line": 83
            },
            {
              "function": "execute",
              "line": 112
            },
            {
              "function": "super",
              "line": 44
            },
            {
              "function": "is_available",
              "line": 74
            },
            {
              "function": "Exception",
              "line": 75
            },
            {
              "function": "complete",
              "line": 77
            },
            {
              "function": "error",
              "line": 95
            },
            {
              "function": "TaskResult",
              "line": 96
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 110
            },
            {
              "function": "isoformat",
              "line": 90
            },
            {
              "function": "now",
              "line": 90
            }
          ]
        },
        "backend/agents/specialized/docubot_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/docubot_agent.py"
            }
          ],
          "classes": [
            {
              "name": "DocuBotAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/docubot_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 43
            },
            {
              "function": "OpenAIService",
              "line": 44
            },
            {
              "function": "TaskRequest",
              "line": 97
            },
            {
              "function": "TaskResult",
              "line": 72
            },
            {
              "function": "execute",
              "line": 101
            },
            {
              "function": "super",
              "line": 43
            },
            {
              "function": "get_completion",
              "line": 62
            },
            {
              "function": "Exception",
              "line": 70
            },
            {
              "function": "error",
              "line": 83
            },
            {
              "function": "TaskResult",
              "line": 85
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "lower",
              "line": 69
            },
            {
              "function": "isoformat",
              "line": 78
            },
            {
              "function": "now",
              "line": 78
            },
            {
              "function": "str",
              "line": 87
            }
          ]
        },
        "backend/agents/specialized/architect_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 116,
              "async": false,
              "calls": [
                "AgentConfig",
                "getcwd",
                "_load_architecture_patterns",
                "LayerAnalyzer",
                "__init__",
                "TreeSitterIndexer",
                "info",
                "CodeIndexer",
                "CallGraphAnalyzer",
                "SemgrepAnalyzer",
                "warning",
                "DiagramService",
                "SmartFileWatcher",
                "start",
                "join",
                "abspath",
                "VultureAnalyzer",
                "ProjectCache",
                "getenv",
                "LightweightCodeSearch",
                "CacheNotAvailableError",
                "makedirs",
                "dirname",
                "OpenAIService",
                "basename",
                "RadonMetrics",
                "super",
                "_load_tech_stacks",
                "apply_capabilities_to_agent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_parse_architecture_response",
              "line": 496,
              "async": false,
              "calls": [
                "upper",
                "get",
                "lower",
                "append",
                "ArchitectureDesign",
                "capitalize"
              ],
              "parameters": [
                "self",
                "response",
                "requirements"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_extract_features",
              "line": 612,
              "async": false,
              "calls": [
                "lower",
                "append"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_load_architecture_patterns",
              "line": 631,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "__del__",
              "line": 754,
              "async": false,
              "calls": [
                "hasattr",
                "stop",
                "info",
                "error"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_load_tech_stacks",
              "line": 766,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_generate_redis_config",
              "line": 857,
              "async": false,
              "calls": [
                "now",
                "keys",
                "join",
                "isoformat",
                "get"
              ],
              "parameters": [
                "self",
                "params"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_generate_docker_compose",
              "line": 924,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "services"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "_detect_request_type",
              "line": 1403,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/architect_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ArchitectureDesign",
              "line": 94,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/architect_agent.py"
            },
            {
              "name": "ArchitectAgent",
              "line": 106,
              "methods": [
                "__init__",
                "_parse_architecture_response",
                "_extract_features",
                "_load_architecture_patterns",
                "__del__",
                "_load_tech_stacks",
                "_generate_redis_config",
                "_generate_docker_compose",
                "_detect_request_type"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/architect_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "config",
              "names": [
                "settings"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "DependencyError"
              ],
              "line": 31
            },
            {
              "type": "from_import",
              "module": "services.project_cache",
              "names": [
                "ProjectCache"
              ],
              "line": 34
            },
            {
              "type": "from_import",
              "module": "services.smart_file_watcher",
              "names": [
                "SmartFileWatcher"
              ],
              "line": 35
            },
            {
              "type": "from_import",
              "module": "services.code_search",
              "names": [
                "LightweightCodeSearch"
              ],
              "line": 36
            },
            {
              "type": "from_import",
              "module": "core.indexing.tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 50
            },
            {
              "type": "from_import",
              "module": "core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 51
            },
            {
              "type": "from_import",
              "module": "core.analysis.semgrep_analyzer",
              "names": [
                "SemgrepAnalyzer"
              ],
              "line": 65
            },
            {
              "type": "from_import",
              "module": "core.analysis.vulture_analyzer",
              "names": [
                "VultureAnalyzer"
              ],
              "line": 66
            },
            {
              "type": "from_import",
              "module": "core.analysis.radon_metrics",
              "names": [
                "RadonMetrics"
              ],
              "line": 67
            },
            {
              "type": "from_import",
              "module": "core.analysis.call_graph_analyzer",
              "names": [
                "CallGraphAnalyzer"
              ],
              "line": 68
            },
            {
              "type": "from_import",
              "module": "core.analysis.layer_analyzer",
              "names": [
                "LayerAnalyzer"
              ],
              "line": 69
            },
            {
              "type": "from_import",
              "module": "services.diagram_service",
              "names": [
                "DiagramService"
              ],
              "line": 86
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 134
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 1454
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "CacheNotAvailableError"
              ],
              "line": 174
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 388
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "SystemNotReadyError"
              ],
              "line": 446
            },
            {
              "type": "from_import",
              "module": "api.server",
              "names": [
                "manager"
              ],
              "line": 1449
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 21
            },
            {
              "function": "append",
              "line": 26
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "info",
              "line": 71
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "warning",
              "line": 39
            },
            {
              "function": "warning",
              "line": 40
            },
            {
              "function": "warning",
              "line": 55
            },
            {
              "function": "warning",
              "line": 56
            },
            {
              "function": "warning",
              "line": 73
            },
            {
              "function": "warning",
              "line": 74
            },
            {
              "function": "warning",
              "line": 90
            },
            {
              "function": "AgentConfig",
              "line": 117
            },
            {
              "function": "__init__",
              "line": 139
            },
            {
              "function": "OpenAIService",
              "line": 146
            },
            {
              "function": "abspath",
              "line": 155
            },
            {
              "function": "info",
              "line": 156
            },
            {
              "function": "join",
              "line": 160
            },
            {
              "function": "makedirs",
              "line": 161
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "TreeSitterIndexer",
              "line": 197
            },
            {
              "function": "CodeIndexer",
              "line": 198
            },
            {
              "function": "info",
              "line": 199
            },
            {
              "function": "_load_architecture_patterns",
              "line": 227
            },
            {
              "function": "_load_tech_stacks",
              "line": 230
            },
            {
              "function": "now",
              "line": 236
            },
            {
              "function": "_parse_architecture_response",
              "line": 494
            },
            {
              "function": "ArchitectureDesign",
              "line": 557
            },
            {
              "function": "append",
              "line": 574
            },
            {
              "function": "append",
              "line": 575
            },
            {
              "function": "append",
              "line": 576
            },
            {
              "function": "append",
              "line": 578
            },
            {
              "function": "append",
              "line": 585
            },
            {
              "function": "append",
              "line": 589
            },
            {
              "function": "append",
              "line": 593
            },
            {
              "function": "append",
              "line": 594
            },
            {
              "function": "append",
              "line": 595
            },
            {
              "function": "append",
              "line": 597
            },
            {
              "function": "append",
              "line": 598
            },
            {
              "function": "append",
              "line": 599
            },
            {
              "function": "append",
              "line": 601
            },
            {
              "function": "append",
              "line": 602
            },
            {
              "function": "append",
              "line": 604
            },
            {
              "function": "append",
              "line": 605
            },
            {
              "function": "append",
              "line": 607
            },
            {
              "function": "append",
              "line": 608
            },
            {
              "function": "join",
              "line": 610
            },
            {
              "function": "lower",
              "line": 624
            },
            {
              "function": "info",
              "line": 685
            },
            {
              "function": "info",
              "line": 704
            },
            {
              "function": "abspath",
              "line": 712
            },
            {
              "function": "info",
              "line": 750
            },
            {
              "function": "get",
              "line": 783
            },
            {
              "function": "info",
              "line": 1006
            },
            {
              "function": "_detect_request_type",
              "line": 1010
            },
            {
              "function": "info",
              "line": 1011
            },
            {
              "function": "info",
              "line": 1014
            },
            {
              "function": "info",
              "line": 1033
            },
            {
              "function": "info",
              "line": 1089
            },
            {
              "function": "info",
              "line": 1131
            },
            {
              "function": "append",
              "line": 1182
            },
            {
              "function": "get",
              "line": 1185
            },
            {
              "function": "append",
              "line": 1186
            },
            {
              "function": "append",
              "line": 1187
            },
            {
              "function": "append",
              "line": 1188
            },
            {
              "function": "append",
              "line": 1189
            },
            {
              "function": "append",
              "line": 1190
            },
            {
              "function": "append",
              "line": 1191
            },
            {
              "function": "get",
              "line": 1194
            },
            {
              "function": "get",
              "line": 1201
            },
            {
              "function": "get",
              "line": 1213
            },
            {
              "function": "append",
              "line": 1214
            },
            {
              "function": "append",
              "line": 1215
            },
            {
              "function": "append",
              "line": 1216
            },
            {
              "function": "append",
              "line": 1217
            },
            {
              "function": "get",
              "line": 1220
            },
            {
              "function": "append",
              "line": 1225
            },
            {
              "function": "enumerate",
              "line": 1228
            },
            {
              "function": "get",
              "line": 1237
            },
            {
              "function": "join",
              "line": 1243
            },
            {
              "function": "get",
              "line": 1253
            },
            {
              "function": "get",
              "line": 1254
            },
            {
              "function": "get",
              "line": 1255
            },
            {
              "function": "get",
              "line": 1256
            },
            {
              "function": "append",
              "line": 1279
            },
            {
              "function": "append",
              "line": 1294
            },
            {
              "function": "append",
              "line": 1309
            },
            {
              "function": "get",
              "line": 1318
            },
            {
              "function": "append",
              "line": 1330
            },
            {
              "function": "get",
              "line": 1339
            },
            {
              "function": "append",
              "line": 1351
            },
            {
              "function": "get",
              "line": 1377
            },
            {
              "function": "get",
              "line": 1378
            },
            {
              "function": "get",
              "line": 1379
            },
            {
              "function": "items",
              "line": 1382
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1396
            },
            {
              "function": "lower",
              "line": 1405
            },
            {
              "function": "any",
              "line": 1408
            },
            {
              "function": "debug",
              "line": 1429
            },
            {
              "function": "get",
              "line": 1435
            },
            {
              "function": "dirname",
              "line": 26
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 135
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "dirname",
              "line": 151
            },
            {
              "function": "getenv",
              "line": 152
            },
            {
              "function": "getenv",
              "line": 152
            },
            {
              "function": "ProjectCache",
              "line": 172
            },
            {
              "function": "LightweightCodeSearch",
              "line": 182
            },
            {
              "function": "SmartFileWatcher",
              "line": 185
            },
            {
              "function": "start",
              "line": 186
            },
            {
              "function": "info",
              "line": 188
            },
            {
              "function": "warning",
              "line": 194
            },
            {
              "function": "SemgrepAnalyzer",
              "line": 202
            },
            {
              "function": "VultureAnalyzer",
              "line": 203
            },
            {
              "function": "RadonMetrics",
              "line": 204
            },
            {
              "function": "CallGraphAnalyzer",
              "line": 205
            },
            {
              "function": "LayerAnalyzer",
              "line": 206
            },
            {
              "function": "info",
              "line": 207
            },
            {
              "function": "warning",
              "line": 214
            },
            {
              "function": "DiagramService",
              "line": 217
            },
            {
              "function": "warning",
              "line": 220
            },
            {
              "function": "hasattr",
              "line": 244
            },
            {
              "function": "isinstance",
              "line": 261
            },
            {
              "function": "get",
              "line": 261
            },
            {
              "function": "isinstance",
              "line": 262
            },
            {
              "function": "get",
              "line": 262
            },
            {
              "function": "get",
              "line": 266
            },
            {
              "function": "abspath",
              "line": 267
            },
            {
              "function": "info",
              "line": 268
            },
            {
              "function": "join",
              "line": 282
            },
            {
              "function": "makedirs",
              "line": 283
            },
            {
              "function": "lower",
              "line": 289
            },
            {
              "function": "info",
              "line": 290
            },
            {
              "function": "info",
              "line": 291
            },
            {
              "function": "any",
              "line": 294
            },
            {
              "function": "total_seconds",
              "line": 372
            },
            {
              "function": "TaskResult",
              "line": 374
            },
            {
              "function": "complete",
              "line": 436
            },
            {
              "function": "loads",
              "line": 443
            },
            {
              "function": "complete",
              "line": 491
            },
            {
              "function": "lower",
              "line": 508
            },
            {
              "function": "lower",
              "line": 515
            },
            {
              "function": "append",
              "line": 516
            },
            {
              "function": "append",
              "line": 524
            },
            {
              "function": "lower",
              "line": 531
            },
            {
              "function": "append",
              "line": 532
            },
            {
              "function": "append",
              "line": 580
            },
            {
              "function": "append",
              "line": 581
            },
            {
              "function": "append",
              "line": 582
            },
            {
              "function": "append",
              "line": 583
            },
            {
              "function": "append",
              "line": 587
            },
            {
              "function": "append",
              "line": 591
            },
            {
              "function": "info",
              "line": 665
            },
            {
              "function": "invalidate",
              "line": 669
            },
            {
              "function": "info",
              "line": 670
            },
            {
              "function": "clear_all",
              "line": 673
            },
            {
              "function": "info",
              "line": 674
            },
            {
              "function": "_send_progress",
              "line": 686
            },
            {
              "function": "invalidate_cache",
              "line": 689
            },
            {
              "function": "understand_system",
              "line": 692
            },
            {
              "function": "_send_progress",
              "line": 705
            },
            {
              "function": "getcwd",
              "line": 712
            },
            {
              "function": "info",
              "line": 715
            },
            {
              "function": "info",
              "line": 727
            },
            {
              "function": "info",
              "line": 733
            },
            {
              "function": "info",
              "line": 739
            },
            {
              "function": "invalidate",
              "line": 746
            },
            {
              "function": "_send_progress",
              "line": 749
            },
            {
              "function": "get",
              "line": 784
            },
            {
              "function": "_generate_redis_config",
              "line": 802
            },
            {
              "function": "_generate_docker_compose",
              "line": 837
            },
            {
              "function": "warning",
              "line": 991
            },
            {
              "function": "get",
              "line": 999
            },
            {
              "function": "_send_progress",
              "line": 1007
            },
            {
              "function": "_send_progress",
              "line": 1015
            },
            {
              "function": "get",
              "line": 1024
            },
            {
              "function": "_send_progress",
              "line": 1034
            },
            {
              "function": "get",
              "line": 1042
            },
            {
              "function": "get",
              "line": 1043
            },
            {
              "function": "get",
              "line": 1044
            },
            {
              "function": "get",
              "line": 1067
            },
            {
              "function": "info",
              "line": 1074
            },
            {
              "function": "get",
              "line": 1079
            },
            {
              "function": "info",
              "line": 1086
            },
            {
              "function": "_send_progress",
              "line": 1090
            },
            {
              "function": "get",
              "line": 1094
            },
            {
              "function": "isoformat",
              "line": 1119
            },
            {
              "function": "set",
              "line": 1124
            },
            {
              "function": "info",
              "line": 1125
            },
            {
              "function": "get",
              "line": 1143
            },
            {
              "function": "get",
              "line": 1144
            },
            {
              "function": "items",
              "line": 1146
            },
            {
              "function": "info",
              "line": 1161
            },
            {
              "function": "append",
              "line": 1195
            },
            {
              "function": "append",
              "line": 1196
            },
            {
              "function": "append",
              "line": 1197
            },
            {
              "function": "append",
              "line": 1198
            },
            {
              "function": "append",
              "line": 1203
            },
            {
              "function": "append",
              "line": 1210
            },
            {
              "function": "get",
              "line": 1221
            },
            {
              "function": "append",
              "line": 1222
            },
            {
              "function": "_generate_improvement_suggestions",
              "line": 1227
            },
            {
              "function": "append",
              "line": 1229
            },
            {
              "function": "append",
              "line": 1230
            },
            {
              "function": "append",
              "line": 1231
            },
            {
              "function": "append",
              "line": 1234
            },
            {
              "function": "append",
              "line": 1238
            },
            {
              "function": "append",
              "line": 1239
            },
            {
              "function": "append",
              "line": 1240
            },
            {
              "function": "append",
              "line": 1241
            },
            {
              "function": "_check_for_technology",
              "line": 1259
            },
            {
              "function": "_check_for_technology",
              "line": 1260
            },
            {
              "function": "append",
              "line": 1264
            },
            {
              "function": "get",
              "line": 1319
            },
            {
              "function": "append",
              "line": 1320
            },
            {
              "function": "append",
              "line": 1341
            },
            {
              "function": "any",
              "line": 1410
            },
            {
              "function": "debug",
              "line": 1431
            },
            {
              "function": "debug",
              "line": 1437
            },
            {
              "function": "debug",
              "line": 1455
            },
            {
              "function": "debug",
              "line": 1456
            },
            {
              "function": "abspath",
              "line": 26
            },
            {
              "function": "super",
              "line": 139
            },
            {
              "function": "basename",
              "line": 151
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "CacheNotAvailableError",
              "line": 175
            },
            {
              "function": "isinstance",
              "line": 248
            },
            {
              "function": "getcwd",
              "line": 266
            },
            {
              "function": "hasattr",
              "line": 271
            },
            {
              "function": "getattr",
              "line": 272
            },
            {
              "function": "_send_progress",
              "line": 286
            },
            {
              "function": "info",
              "line": 295
            },
            {
              "function": "info",
              "line": 298
            },
            {
              "function": "error",
              "line": 387
            },
            {
              "function": "error",
              "line": 389
            },
            {
              "function": "TaskResult",
              "line": 397
            },
            {
              "function": "SystemNotReadyError",
              "line": 447
            },
            {
              "function": "dumps",
              "line": 476
            },
            {
              "function": "lower",
              "line": 510
            },
            {
              "function": "lower",
              "line": 523
            },
            {
              "function": "lower",
              "line": 523
            },
            {
              "function": "lower",
              "line": 545
            },
            {
              "function": "append",
              "line": 546
            },
            {
              "function": "lower",
              "line": 554
            },
            {
              "function": "append",
              "line": 555
            },
            {
              "function": "get",
              "line": 558
            },
            {
              "function": "append",
              "line": 627
            },
            {
              "function": "refresh_analysis",
              "line": 709
            },
            {
              "function": "_send_progress",
              "line": 716
            },
            {
              "function": "invalidate",
              "line": 718
            },
            {
              "function": "build_full_index",
              "line": 722
            },
            {
              "function": "set",
              "line": 724
            },
            {
              "function": "_send_progress",
              "line": 728
            },
            {
              "function": "invalidate",
              "line": 730
            },
            {
              "function": "_send_progress",
              "line": 734
            },
            {
              "function": "invalidate",
              "line": 736
            },
            {
              "function": "_send_progress",
              "line": 740
            },
            {
              "function": "invalidate",
              "line": 742
            },
            {
              "function": "hasattr",
              "line": 760
            },
            {
              "function": "stop",
              "line": 761
            },
            {
              "function": "info",
              "line": 762
            },
            {
              "function": "error",
              "line": 764
            },
            {
              "function": "execute",
              "line": 785
            },
            {
              "function": "write_implementation",
              "line": 805
            },
            {
              "function": "get",
              "line": 807
            },
            {
              "function": "info",
              "line": 808
            },
            {
              "function": "error",
              "line": 815
            },
            {
              "function": "write_implementation",
              "line": 840
            },
            {
              "function": "get",
              "line": 842
            },
            {
              "function": "info",
              "line": 843
            },
            {
              "function": "error",
              "line": 850
            },
            {
              "function": "get",
              "line": 865
            },
            {
              "function": "get",
              "line": 866
            },
            {
              "function": "isoformat",
              "line": 919
            },
            {
              "function": "info",
              "line": 1001
            },
            {
              "function": "_send_progress",
              "line": 1019
            },
            {
              "function": "build_full_index",
              "line": 1027
            },
            {
              "function": "set",
              "line": 1030
            },
            {
              "function": "_send_progress",
              "line": 1047
            },
            {
              "function": "run_analysis",
              "line": 1048
            },
            {
              "function": "set",
              "line": 1050
            },
            {
              "function": "_send_progress",
              "line": 1053
            },
            {
              "function": "find_dead_code",
              "line": 1054
            },
            {
              "function": "set",
              "line": 1056
            },
            {
              "function": "_send_progress",
              "line": 1059
            },
            {
              "function": "calculate_all_metrics",
              "line": 1060
            },
            {
              "function": "set",
              "line": 1062
            },
            {
              "function": "_send_progress",
              "line": 1070
            },
            {
              "function": "build_call_graph",
              "line": 1071
            },
            {
              "function": "set",
              "line": 1073
            },
            {
              "function": "_send_progress",
              "line": 1082
            },
            {
              "function": "detect_system_layers",
              "line": 1083
            },
            {
              "function": "set",
              "line": 1085
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1098
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1099
            },
            {
              "function": "generate_architecture_diagram",
              "line": 1100
            },
            {
              "function": "generate_dependency_graph",
              "line": 1101
            },
            {
              "function": "generate_sequence_diagram",
              "line": 1104
            },
            {
              "function": "generate_state_diagram",
              "line": 1105
            },
            {
              "function": "set",
              "line": 1108
            },
            {
              "function": "_index_functions_for_search",
              "line": 1129
            },
            {
              "function": "get",
              "line": 1147
            },
            {
              "function": "error",
              "line": 1163
            },
            {
              "function": "understand_system",
              "line": 1172
            },
            {
              "function": "get",
              "line": 1194
            },
            {
              "function": "get",
              "line": 1204
            },
            {
              "function": "append",
              "line": 1205
            },
            {
              "function": "get",
              "line": 1206
            },
            {
              "function": "append",
              "line": 1207
            },
            {
              "function": "get",
              "line": 1208
            },
            {
              "function": "append",
              "line": 1209
            },
            {
              "function": "append",
              "line": 1233
            },
            {
              "function": "get",
              "line": 1237
            },
            {
              "function": "get",
              "line": 1340
            },
            {
              "function": "get",
              "line": 1340
            },
            {
              "function": "hasattr",
              "line": 1370
            },
            {
              "function": "warning",
              "line": 1374
            },
            {
              "function": "lower",
              "line": 1383
            },
            {
              "function": "lower",
              "line": 1383
            },
            {
              "function": "understand_system",
              "line": 1393
            },
            {
              "function": "any",
              "line": 1412
            },
            {
              "function": "debug",
              "line": 1447
            },
            {
              "function": "error",
              "line": 1476
            },
            {
              "function": "getcwd",
              "line": 151
            },
            {
              "function": "info",
              "line": 274
            },
            {
              "function": "stop",
              "line": 275
            },
            {
              "function": "ProjectCache",
              "line": 277
            },
            {
              "function": "SmartFileWatcher",
              "line": 278
            },
            {
              "function": "start",
              "line": 279
            },
            {
              "function": "info",
              "line": 280
            },
            {
              "function": "_send_progress",
              "line": 296
            },
            {
              "function": "info",
              "line": 300
            },
            {
              "function": "join",
              "line": 304
            },
            {
              "function": "append",
              "line": 307
            },
            {
              "function": "info",
              "line": 308
            },
            {
              "function": "warning",
              "line": 311
            },
            {
              "function": "info",
              "line": 316
            },
            {
              "function": "info",
              "line": 336
            },
            {
              "function": "locals",
              "line": 351
            },
            {
              "function": "analyze_requirements",
              "line": 367
            },
            {
              "function": "design_architecture",
              "line": 368
            },
            {
              "function": "generate_documentation",
              "line": 369
            },
            {
              "function": "capitalize",
              "line": 546
            },
            {
              "function": "upper",
              "line": 555
            },
            {
              "function": "get",
              "line": 594
            },
            {
              "function": "get",
              "line": 595
            },
            {
              "function": "get",
              "line": 598
            },
            {
              "function": "get",
              "line": 599
            },
            {
              "function": "_send_progress",
              "line": 721
            },
            {
              "function": "TaskRequest",
              "line": 785
            },
            {
              "function": "str",
              "line": 818
            },
            {
              "function": "str",
              "line": 853
            },
            {
              "function": "join",
              "line": 920
            },
            {
              "function": "_send_progress",
              "line": 1002
            },
            {
              "function": "get",
              "line": 1102
            },
            {
              "function": "now",
              "line": 1119
            },
            {
              "function": "len",
              "line": 1131
            },
            {
              "function": "get",
              "line": 1187
            },
            {
              "function": "get",
              "line": 1188
            },
            {
              "function": "get",
              "line": 1189
            },
            {
              "function": "get",
              "line": 1190
            },
            {
              "function": "get",
              "line": 1191
            },
            {
              "function": "get",
              "line": 1215
            },
            {
              "function": "get",
              "line": 1216
            },
            {
              "function": "get",
              "line": 1217
            },
            {
              "function": "search_pattern",
              "line": 1371
            },
            {
              "function": "len",
              "line": 1372
            },
            {
              "function": "any",
              "line": 1414
            },
            {
              "function": "info",
              "line": 1460
            },
            {
              "function": "info",
              "line": 1467
            },
            {
              "function": "warning",
              "line": 1472
            },
            {
              "function": "warning",
              "line": 1474
            },
            {
              "function": "loads",
              "line": 251
            },
            {
              "function": "info",
              "line": 252
            },
            {
              "function": "isinstance",
              "line": 256
            },
            {
              "function": "warning",
              "line": 257
            },
            {
              "function": "understand_system",
              "line": 301
            },
            {
              "function": "open",
              "line": 305
            },
            {
              "function": "dump",
              "line": 306
            },
            {
              "function": "analyze_requirements",
              "line": 312
            },
            {
              "function": "join",
              "line": 326
            },
            {
              "function": "append",
              "line": 329
            },
            {
              "function": "info",
              "line": 330
            },
            {
              "function": "join",
              "line": 342
            },
            {
              "function": "append",
              "line": 345
            },
            {
              "function": "info",
              "line": 346
            },
            {
              "function": "now",
              "line": 372
            },
            {
              "function": "str",
              "line": 392
            },
            {
              "function": "type",
              "line": 393
            },
            {
              "function": "now",
              "line": 919
            },
            {
              "function": "keys",
              "line": 920
            },
            {
              "function": "len",
              "line": 1086
            },
            {
              "function": "get",
              "line": 1131
            },
            {
              "function": "get",
              "line": 1151
            },
            {
              "function": "get",
              "line": 1152
            },
            {
              "function": "get",
              "line": 1153
            },
            {
              "function": "get",
              "line": 1155
            },
            {
              "function": "get",
              "line": 1156
            },
            {
              "function": "get",
              "line": 1157
            },
            {
              "function": "index_function",
              "line": 1159
            },
            {
              "function": "get",
              "line": 1326
            },
            {
              "function": "get",
              "line": 1347
            },
            {
              "function": "str",
              "line": 1383
            },
            {
              "function": "any",
              "line": 1416
            },
            {
              "function": "warning",
              "line": 1451
            },
            {
              "function": "send_json",
              "line": 1461
            },
            {
              "function": "error",
              "line": 1469
            },
            {
              "function": "warning",
              "line": 254
            },
            {
              "function": "analyze_infrastructure_improvements",
              "line": 320
            },
            {
              "function": "open",
              "line": 327
            },
            {
              "function": "write",
              "line": 328
            },
            {
              "function": "generate_architecture_flowchart",
              "line": 339
            },
            {
              "function": "open",
              "line": 343
            },
            {
              "function": "write",
              "line": 344
            },
            {
              "function": "len",
              "line": 352
            },
            {
              "function": "analyze_requirements",
              "line": 358
            },
            {
              "function": "design_architecture",
              "line": 359
            },
            {
              "function": "generate_documentation",
              "line": 360
            },
            {
              "function": "format_exc",
              "line": 389
            },
            {
              "function": "hasattr",
              "line": 394
            },
            {
              "function": "type",
              "line": 394
            },
            {
              "function": "hasattr",
              "line": 395
            },
            {
              "function": "repr",
              "line": 395
            },
            {
              "function": "get",
              "line": 1154
            },
            {
              "function": "get",
              "line": 1321
            },
            {
              "function": "any",
              "line": 1418
            },
            {
              "function": "list",
              "line": 1456
            },
            {
              "function": "basename",
              "line": 354
            },
            {
              "function": "str",
              "line": 449
            },
            {
              "function": "get",
              "line": 1131
            },
            {
              "function": "get",
              "line": 1342
            },
            {
              "function": "get",
              "line": 1342
            },
            {
              "function": "any",
              "line": 1420
            },
            {
              "function": "keys",
              "line": 1456
            },
            {
              "function": "isoformat",
              "line": 1465
            },
            {
              "function": "list",
              "line": 1474
            },
            {
              "function": "type",
              "line": 257
            },
            {
              "function": "any",
              "line": 1422
            },
            {
              "function": "keys",
              "line": 1474
            },
            {
              "function": "now",
              "line": 1465
            }
          ]
        },
        "backend/agents/specialized/codesmith_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 89,
              "async": false,
              "calls": [
                "warning",
                "AgentConfig",
                "_load_language_configs",
                "__init__",
                "TreeSitterIndexer",
                "ClaudeCodeService",
                "error",
                "CodeIndexer",
                "RadonMetrics",
                "super",
                "is_available",
                "VultureAnalyzer",
                "_load_code_patterns",
                "ClaudeCodeConfig",
                "DiagramService",
                "apply_capabilities_to_agent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "format_implementation",
              "line": 784,
              "async": false,
              "calls": [
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "implementation"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_detect_language",
              "line": 820,
              "async": false,
              "calls": [
                "lower",
                "items"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_functionality",
              "line": 847,
              "async": false,
              "calls": [
                "lower",
                "split",
                "strip"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_assess_complexity",
              "line": 859,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_generate_filename",
              "line": 872,
              "async": false,
              "calls": [
                "join",
                "split",
                "get",
                "lower",
                "len"
              ],
              "parameters": [
                "self",
                "prompt",
                "language"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_dependencies",
              "line": 898,
              "async": false,
              "calls": [
                "findall",
                "set",
                "split",
                "list",
                "startswith"
              ],
              "parameters": [
                "self",
                "code",
                "language"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_get_test_framework",
              "line": 921,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "language"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_load_code_patterns",
              "line": 940,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_load_language_configs",
              "line": 962,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_check_for_hallucination",
              "line": 1289,
              "async": false,
              "calls": [
                "error",
                "lower"
              ],
              "parameters": [
                "self",
                "content"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_enforce_asimov_rule_1",
              "line": 1312,
              "async": false,
              "calls": [
                "ValueError",
                "info",
                "any",
                "lower",
                "warning"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_file_path",
              "line": 1465,
              "async": false,
              "calls": [
                "search",
                "group"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_generate_file_path",
              "line": 1482,
              "async": false,
              "calls": [
                "lower",
                "_extract_feature_name"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "_extract_feature_name",
              "line": 1515,
              "async": false,
              "calls": [
                "lower",
                "len",
                "replace",
                "findall"
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            }
          ],
          "classes": [
            {
              "name": "CodeImplementation",
              "line": 69,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/codesmith_agent.py"
            },
            {
              "name": "CodeSmithAgent",
              "line": 79,
              "methods": [
                "__init__",
                "format_implementation",
                "_detect_language",
                "_extract_functionality",
                "_assess_complexity",
                "_generate_filename",
                "_extract_dependencies",
                "_get_test_framework",
                "_load_code_patterns",
                "_load_language_configs",
                "_check_for_hallucination",
                "_enforce_asimov_rule_1",
                "_extract_file_path",
                "_generate_file_path",
                "_extract_feature_name"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/codesmith_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 23
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "core.exceptions",
              "names": [
                "DependencyError"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "core.indexing.tree_sitter_indexer",
              "names": [
                "TreeSitterIndexer"
              ],
              "line": 33
            },
            {
              "type": "from_import",
              "module": "core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 34
            },
            {
              "type": "from_import",
              "module": "core.analysis.vulture_analyzer",
              "names": [
                "VultureAnalyzer"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "core.analysis.radon_metrics",
              "names": [
                "RadonMetrics"
              ],
              "line": 48
            },
            {
              "type": "from_import",
              "module": "services.diagram_service",
              "names": [
                "DiagramService"
              ],
              "line": 61
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 1467
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 1517
            },
            {
              "type": "from_import",
              "module": "config.capabilities_loader",
              "names": [
                "apply_capabilities_to_agent"
              ],
              "line": 108
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "get_agent_registry"
              ],
              "line": 1134
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 312
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 1596
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "append",
              "line": 25
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "info",
              "line": 36
            },
            {
              "function": "info",
              "line": 50
            },
            {
              "function": "info",
              "line": 63
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "warning",
              "line": 38
            },
            {
              "function": "warning",
              "line": 52
            },
            {
              "function": "warning",
              "line": 65
            },
            {
              "function": "AgentConfig",
              "line": 90
            },
            {
              "function": "__init__",
              "line": 113
            },
            {
              "function": "ClaudeCodeService",
              "line": 116
            },
            {
              "function": "_load_code_patterns",
              "line": 160
            },
            {
              "function": "_load_language_configs",
              "line": 163
            },
            {
              "function": "now",
              "line": 172
            },
            {
              "function": "_detect_language",
              "line": 328
            },
            {
              "function": "get",
              "line": 378
            },
            {
              "function": "_generate_filename",
              "line": 414
            },
            {
              "function": "_extract_dependencies",
              "line": 417
            },
            {
              "function": "CodeImplementation",
              "line": 419
            },
            {
              "function": "_get_test_framework",
              "line": 432
            },
            {
              "function": "info",
              "line": 587
            },
            {
              "function": "info",
              "line": 662
            },
            {
              "function": "info",
              "line": 736
            },
            {
              "function": "append",
              "line": 789
            },
            {
              "function": "append",
              "line": 790
            },
            {
              "function": "append",
              "line": 791
            },
            {
              "function": "append",
              "line": 792
            },
            {
              "function": "append",
              "line": 800
            },
            {
              "function": "append",
              "line": 801
            },
            {
              "function": "append",
              "line": 802
            },
            {
              "function": "append",
              "line": 803
            },
            {
              "function": "append",
              "line": 815
            },
            {
              "function": "append",
              "line": 816
            },
            {
              "function": "join",
              "line": 818
            },
            {
              "function": "lower",
              "line": 824
            },
            {
              "function": "items",
              "line": 839
            },
            {
              "function": "split",
              "line": 852
            },
            {
              "function": "lower",
              "line": 863
            },
            {
              "function": "any",
              "line": 865
            },
            {
              "function": "list",
              "line": 917
            },
            {
              "function": "get",
              "line": 938
            },
            {
              "function": "info",
              "line": 1001
            },
            {
              "function": "get",
              "line": 1007
            },
            {
              "function": "get",
              "line": 1057
            },
            {
              "function": "get",
              "line": 1058
            },
            {
              "function": "get",
              "line": 1061
            },
            {
              "function": "get",
              "line": 1094
            },
            {
              "function": "get",
              "line": 1181
            },
            {
              "function": "get",
              "line": 1182
            },
            {
              "function": "get",
              "line": 1219
            },
            {
              "function": "items",
              "line": 1223
            },
            {
              "function": "get",
              "line": 1252
            },
            {
              "function": "get",
              "line": 1282
            },
            {
              "function": "lower",
              "line": 1302
            },
            {
              "function": "any",
              "line": 1327
            },
            {
              "function": "info",
              "line": 1330
            },
            {
              "function": "lower",
              "line": 1484
            },
            {
              "function": "_extract_feature_name",
              "line": 1501
            },
            {
              "function": "findall",
              "line": 1524
            },
            {
              "function": "info",
              "line": 1548
            },
            {
              "function": "info",
              "line": 1549
            },
            {
              "function": "info",
              "line": 1550
            },
            {
              "function": "dirname",
              "line": 25
            },
            {
              "function": "apply_capabilities_to_agent",
              "line": 109
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 117
            },
            {
              "function": "is_available",
              "line": 124
            },
            {
              "function": "error",
              "line": 130
            },
            {
              "function": "TreeSitterIndexer",
              "line": 135
            },
            {
              "function": "CodeIndexer",
              "line": 136
            },
            {
              "function": "warning",
              "line": 140
            },
            {
              "function": "VultureAnalyzer",
              "line": 143
            },
            {
              "function": "RadonMetrics",
              "line": 144
            },
            {
              "function": "warning",
              "line": 148
            },
            {
              "function": "DiagramService",
              "line": 151
            },
            {
              "function": "warning",
              "line": 154
            },
            {
              "function": "get",
              "line": 179
            },
            {
              "function": "info",
              "line": 181
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "total_seconds",
              "line": 239
            },
            {
              "function": "sorted",
              "line": 272
            },
            {
              "function": "TaskResult",
              "line": 284
            },
            {
              "function": "is_available",
              "line": 356
            },
            {
              "function": "Exception",
              "line": 357
            },
            {
              "function": "complete",
              "line": 359
            },
            {
              "function": "_extract_functionality",
              "line": 364
            },
            {
              "function": "_assess_complexity",
              "line": 367
            },
            {
              "function": "is_available",
              "line": 404
            },
            {
              "function": "Exception",
              "line": 405
            },
            {
              "function": "generate_code",
              "line": 407
            },
            {
              "function": "is_available",
              "line": 458
            },
            {
              "function": "Exception",
              "line": 459
            },
            {
              "function": "complete",
              "line": 461
            },
            {
              "function": "is_available",
              "line": 493
            },
            {
              "function": "Exception",
              "line": 494
            },
            {
              "function": "complete",
              "line": 496
            },
            {
              "function": "is_available",
              "line": 535
            },
            {
              "function": "Exception",
              "line": 536
            },
            {
              "function": "complete",
              "line": 538
            },
            {
              "function": "is_available",
              "line": 572
            },
            {
              "function": "Exception",
              "line": 573
            },
            {
              "function": "complete",
              "line": 575
            },
            {
              "function": "strip",
              "line": 620
            },
            {
              "function": "startswith",
              "line": 621
            },
            {
              "function": "loads",
              "line": 627
            },
            {
              "function": "get",
              "line": 630
            },
            {
              "function": "info",
              "line": 640
            },
            {
              "function": "strip",
              "line": 697
            },
            {
              "function": "startswith",
              "line": 698
            },
            {
              "function": "loads",
              "line": 703
            },
            {
              "function": "sort",
              "line": 706
            },
            {
              "function": "info",
              "line": 708
            },
            {
              "function": "strip",
              "line": 769
            },
            {
              "function": "startswith",
              "line": 770
            },
            {
              "function": "info",
              "line": 776
            },
            {
              "function": "append",
              "line": 795
            },
            {
              "function": "append",
              "line": 798
            },
            {
              "function": "append",
              "line": 806
            },
            {
              "function": "append",
              "line": 807
            },
            {
              "function": "append",
              "line": 808
            },
            {
              "function": "append",
              "line": 809
            },
            {
              "function": "append",
              "line": 812
            },
            {
              "function": "append",
              "line": 813
            },
            {
              "function": "any",
              "line": 867
            },
            {
              "function": "split",
              "line": 890
            },
            {
              "function": "join",
              "line": 891
            },
            {
              "function": "get",
              "line": 896
            },
            {
              "function": "findall",
              "line": 907
            },
            {
              "function": "set",
              "line": 917
            },
            {
              "function": "warning",
              "line": 995
            },
            {
              "function": "build_full_index",
              "line": 1004
            },
            {
              "function": "find_dead_code",
              "line": 1010
            },
            {
              "function": "calculate_all_metrics",
              "line": 1013
            },
            {
              "function": "info",
              "line": 1028
            },
            {
              "function": "isinstance",
              "line": 1063
            },
            {
              "function": "complete",
              "line": 1082
            },
            {
              "function": "identify_refactoring_candidates",
              "line": 1097
            },
            {
              "function": "get_agent_registry",
              "line": 1135
            },
            {
              "function": "get_agent",
              "line": 1136
            },
            {
              "function": "any",
              "line": 1152
            },
            {
              "function": "append",
              "line": 1201
            },
            {
              "function": "get",
              "line": 1224
            },
            {
              "function": "process_message",
              "line": 1240
            },
            {
              "function": "get",
              "line": 1254
            },
            {
              "function": "generate_cleanup_script",
              "line": 1258
            },
            {
              "function": "get",
              "line": 1283
            },
            {
              "function": "ValueError",
              "line": 1318
            },
            {
              "function": "warning",
              "line": 1328
            },
            {
              "function": "startswith",
              "line": 1367
            },
            {
              "function": "lower",
              "line": 1386
            },
            {
              "function": "any",
              "line": 1411
            },
            {
              "function": "strip",
              "line": 1443
            },
            {
              "function": "startswith",
              "line": 1452
            },
            {
              "function": "join",
              "line": 1456
            },
            {
              "function": "info",
              "line": 1457
            },
            {
              "function": "search",
              "line": 1476
            },
            {
              "function": "lower",
              "line": 1524
            },
            {
              "function": "replace",
              "line": 1529
            },
            {
              "function": "info",
              "line": 1554
            },
            {
              "function": "info",
              "line": 1565
            },
            {
              "function": "info",
              "line": 1568
            },
            {
              "function": "abspath",
              "line": 25
            },
            {
              "function": "super",
              "line": 113
            },
            {
              "function": "getcwd",
              "line": 179
            },
            {
              "function": "_analyze_user_request",
              "line": 186
            },
            {
              "function": "_plan_project_files",
              "line": 189
            },
            {
              "function": "join",
              "line": 243
            },
            {
              "function": "TaskResult",
              "line": 246
            },
            {
              "function": "next",
              "line": 264
            },
            {
              "function": "append",
              "line": 270
            },
            {
              "function": "items",
              "line": 272
            },
            {
              "function": "total_seconds",
              "line": 301
            },
            {
              "function": "TaskResult",
              "line": 302
            },
            {
              "function": "error",
              "line": 311
            },
            {
              "function": "print_exc",
              "line": 313
            },
            {
              "function": "total_seconds",
              "line": 315
            },
            {
              "function": "TaskResult",
              "line": 316
            },
            {
              "function": "get",
              "line": 424
            },
            {
              "function": "complete",
              "line": 616
            },
            {
              "function": "split",
              "line": 623
            },
            {
              "function": "strip",
              "line": 625
            },
            {
              "function": "get",
              "line": 636
            },
            {
              "function": "ValueError",
              "line": 638
            },
            {
              "function": "error",
              "line": 644
            },
            {
              "function": "ValueError",
              "line": 645
            },
            {
              "function": "error",
              "line": 647
            },
            {
              "function": "join",
              "line": 670
            },
            {
              "function": "join",
              "line": 671
            },
            {
              "function": "join",
              "line": 672
            },
            {
              "function": "join",
              "line": 673
            },
            {
              "function": "complete",
              "line": 694
            },
            {
              "function": "split",
              "line": 699
            },
            {
              "function": "strip",
              "line": 701
            },
            {
              "function": "info",
              "line": 710
            },
            {
              "function": "len",
              "line": 711
            },
            {
              "function": "info",
              "line": 712
            },
            {
              "function": "error",
              "line": 717
            },
            {
              "function": "ValueError",
              "line": 718
            },
            {
              "function": "error",
              "line": 720
            },
            {
              "function": "join",
              "line": 746
            },
            {
              "function": "join",
              "line": 747
            },
            {
              "function": "complete",
              "line": 766
            },
            {
              "function": "split",
              "line": 771
            },
            {
              "function": "error",
              "line": 780
            },
            {
              "function": "append",
              "line": 797
            },
            {
              "function": "lower",
              "line": 854
            },
            {
              "function": "strip",
              "line": 855
            },
            {
              "function": "findall",
              "line": 913
            },
            {
              "function": "str",
              "line": 1067
            },
            {
              "function": "get",
              "line": 1072
            },
            {
              "function": "join",
              "line": 1073
            },
            {
              "function": "analyze_codebase",
              "line": 1092
            },
            {
              "function": "append",
              "line": 1116
            },
            {
              "function": "warning",
              "line": 1139
            },
            {
              "function": "any",
              "line": 1146
            },
            {
              "function": "append",
              "line": 1153
            },
            {
              "function": "info",
              "line": 1161
            },
            {
              "function": "info",
              "line": 1167
            },
            {
              "function": "warning",
              "line": 1169
            },
            {
              "function": "analyze_codebase",
              "line": 1179
            },
            {
              "function": "process_message",
              "line": 1199
            },
            {
              "function": "analyze_codebase",
              "line": 1216
            },
            {
              "function": "get",
              "line": 1219
            },
            {
              "function": "append",
              "line": 1226
            },
            {
              "function": "dumps",
              "line": 1235
            },
            {
              "function": "analyze_codebase",
              "line": 1250
            },
            {
              "function": "execute",
              "line": 1284
            },
            {
              "function": "lower",
              "line": 1304
            },
            {
              "function": "error",
              "line": 1305
            },
            {
              "function": "error",
              "line": 1306
            },
            {
              "function": "complete",
              "line": 1365
            },
            {
              "function": "info",
              "line": 1369
            },
            {
              "function": "info",
              "line": 1371
            },
            {
              "function": "error",
              "line": 1375
            },
            {
              "function": "Exception",
              "line": 1377
            },
            {
              "function": "info",
              "line": 1390
            },
            {
              "function": "join",
              "line": 1391
            },
            {
              "function": "walk",
              "line": 1396
            },
            {
              "function": "join",
              "line": 1408
            },
            {
              "function": "_extract_feature_name",
              "line": 1417
            },
            {
              "function": "join",
              "line": 1419
            },
            {
              "function": "info",
              "line": 1420
            },
            {
              "function": "complete",
              "line": 1441
            },
            {
              "function": "_extract_feature_name",
              "line": 1448
            },
            {
              "function": "basename",
              "line": 1453
            },
            {
              "function": "error",
              "line": 1461
            },
            {
              "function": "Exception",
              "line": 1463
            },
            {
              "function": "group",
              "line": 1478
            },
            {
              "function": "lower",
              "line": 1531
            },
            {
              "function": "implement_with_patterns",
              "line": 1555
            },
            {
              "function": "error",
              "line": 1558
            },
            {
              "function": "write_implementation",
              "line": 1569
            },
            {
              "function": "get",
              "line": 1571
            },
            {
              "function": "info",
              "line": 1572
            },
            {
              "function": "len",
              "line": 1576
            },
            {
              "function": "format_exc",
              "line": 1597
            },
            {
              "function": "error",
              "line": 1598
            },
            {
              "function": "error",
              "line": 1599
            },
            {
              "function": "error",
              "line": 1600
            },
            {
              "function": "error",
              "line": 1601
            },
            {
              "function": "join",
              "line": 211
            },
            {
              "function": "makedirs",
              "line": 212
            },
            {
              "function": "len",
              "line": 259
            },
            {
              "function": "len",
              "line": 281
            },
            {
              "function": "lower",
              "line": 365
            },
            {
              "function": "lower",
              "line": 365
            },
            {
              "function": "lower",
              "line": 366
            },
            {
              "function": "lower",
              "line": 366
            },
            {
              "function": "str",
              "line": 410
            },
            {
              "function": "join",
              "line": 523
            },
            {
              "function": "join",
              "line": 624
            },
            {
              "function": "get",
              "line": 672
            },
            {
              "function": "get",
              "line": 673
            },
            {
              "function": "join",
              "line": 700
            },
            {
              "function": "startswith",
              "line": 773
            },
            {
              "function": "join",
              "line": 774
            },
            {
              "function": "lower",
              "line": 890
            },
            {
              "function": "split",
              "line": 908
            },
            {
              "function": "complete",
              "line": 1049
            },
            {
              "function": "error",
              "line": 1052
            },
            {
              "function": "isinstance",
              "line": 1064
            },
            {
              "function": "get",
              "line": 1064
            },
            {
              "function": "str",
              "line": 1064
            },
            {
              "function": "process_message",
              "line": 1114
            },
            {
              "function": "append",
              "line": 1147
            },
            {
              "function": "append",
              "line": 1148
            },
            {
              "function": "isinstance",
              "line": 1158
            },
            {
              "function": "get",
              "line": 1158
            },
            {
              "function": "isinstance",
              "line": 1159
            },
            {
              "function": "get",
              "line": 1159
            },
            {
              "function": "refresh_cache_after_implementation",
              "line": 1162
            },
            {
              "function": "get",
              "line": 1189
            },
            {
              "function": "get",
              "line": 1190
            },
            {
              "function": "get",
              "line": 1191
            },
            {
              "function": "get",
              "line": 1194
            },
            {
              "function": "startswith",
              "line": 1225
            },
            {
              "function": "startswith",
              "line": 1225
            },
            {
              "function": "get",
              "line": 1254
            },
            {
              "function": "TaskRequest",
              "line": 1284
            },
            {
              "function": "lower",
              "line": 1327
            },
            {
              "function": "upper",
              "line": 1367
            },
            {
              "function": "len",
              "line": 1550
            },
            {
              "function": "split",
              "line": 1576
            },
            {
              "function": "str",
              "line": 1604
            },
            {
              "function": "_generate_file_content",
              "line": 204
            },
            {
              "function": "dirname",
              "line": 212
            },
            {
              "function": "write_implementation",
              "line": 215
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "append",
              "line": 222
            },
            {
              "function": "info",
              "line": 223
            },
            {
              "function": "append",
              "line": 225
            },
            {
              "function": "error",
              "line": 229
            },
            {
              "function": "append",
              "line": 232
            },
            {
              "function": "error",
              "line": 236
            },
            {
              "function": "now",
              "line": 239
            },
            {
              "function": "capitalize",
              "line": 273
            },
            {
              "function": "len",
              "line": 278
            },
            {
              "function": "len",
              "line": 295
            },
            {
              "function": "str",
              "line": 304
            },
            {
              "function": "get",
              "line": 410
            },
            {
              "function": "len",
              "line": 624
            },
            {
              "function": "replace",
              "line": 625
            },
            {
              "function": "len",
              "line": 700
            },
            {
              "function": "replace",
              "line": 701
            },
            {
              "function": "get",
              "line": 706
            },
            {
              "function": "len",
              "line": 708
            },
            {
              "function": "strip",
              "line": 773
            },
            {
              "function": "len",
              "line": 776
            },
            {
              "function": "str",
              "line": 1064
            },
            {
              "function": "relpath",
              "line": 1400
            },
            {
              "function": "len",
              "line": 1403
            },
            {
              "function": "len",
              "line": 1525
            },
            {
              "function": "len",
              "line": 1565
            },
            {
              "function": "len",
              "line": 1575
            },
            {
              "function": "update",
              "line": 1583
            },
            {
              "function": "now",
              "line": 301
            },
            {
              "function": "now",
              "line": 315
            },
            {
              "function": "chr",
              "line": 523
            },
            {
              "function": "len",
              "line": 891
            },
            {
              "function": "startswith",
              "line": 917
            },
            {
              "function": "list",
              "line": 1161
            },
            {
              "function": "list",
              "line": 1165
            },
            {
              "function": "strip",
              "line": 1367
            },
            {
              "function": "join",
              "line": 1400
            },
            {
              "function": "startswith",
              "line": 1401
            },
            {
              "function": "append",
              "line": 1402
            },
            {
              "function": "warning",
              "line": 1591
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "str",
              "line": 234
            },
            {
              "function": "len",
              "line": 282
            },
            {
              "function": "str",
              "line": 318
            },
            {
              "function": "replace",
              "line": 625
            },
            {
              "function": "replace",
              "line": 701
            },
            {
              "function": "len",
              "line": 712
            },
            {
              "function": "set",
              "line": 1161
            },
            {
              "function": "set",
              "line": 1165
            },
            {
              "function": "get",
              "line": 229
            },
            {
              "function": "isoformat",
              "line": 1587
            },
            {
              "function": "now",
              "line": 1587
            }
          ]
        },
        "backend/agents/specialized/fixer_gpt_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 38,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "OpenAIService",
                "info",
                "super",
                "getattr"
              ],
              "parameters": [
                "self",
                "model"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_create_fresh_perspective_prompt",
              "line": 70,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "issue",
                "previous_attempts",
                "research_results"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_format_previous_attempts",
              "line": 110,
              "async": false,
              "calls": [
                "enumerate",
                "get"
              ],
              "parameters": [
                "self",
                "attempts"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixer_gpt_agent.py"
            },
            {
              "name": "_format_research_results",
              "line": 124,
              "async": false,
              "calls": [
                "enumerate",
                "get"
              ],
              "parameters": [
                "self",
                "research"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/fixer_gpt_agent.py"
            }
          ],
          "classes": [
            {
              "name": "FixerGPTAgent",
              "line": 20,
              "methods": [
                "__init__",
                "_create_fresh_perspective_prompt",
                "_format_previous_attempts",
                "_format_research_results"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/fixer_gpt_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "backend.config.settings",
              "names": [
                "Settings"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "AgentConfig",
              "line": 49
            },
            {
              "function": "__init__",
              "line": 64
            },
            {
              "function": "OpenAIService",
              "line": 67
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "enumerate",
              "line": 116
            },
            {
              "function": "enumerate",
              "line": 130
            },
            {
              "function": "info",
              "line": 248
            },
            {
              "function": "getattr",
              "line": 47
            },
            {
              "function": "info",
              "line": 152
            },
            {
              "function": "get",
              "line": 158
            },
            {
              "function": "get",
              "line": 159
            },
            {
              "function": "get",
              "line": 160
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "_create_fresh_perspective_prompt",
              "line": 167
            },
            {
              "function": "_format_previous_attempts",
              "line": 174
            },
            {
              "function": "_format_research_results",
              "line": 175
            },
            {
              "function": "info",
              "line": 197
            },
            {
              "function": "get",
              "line": 209
            },
            {
              "function": "info",
              "line": 211
            },
            {
              "function": "TaskResult",
              "line": 213
            },
            {
              "function": "getattr",
              "line": 59
            },
            {
              "function": "getattr",
              "line": 60
            },
            {
              "function": "super",
              "line": 64
            },
            {
              "function": "chat_completion",
              "line": 199
            },
            {
              "function": "error",
              "line": 228
            },
            {
              "function": "TaskResult",
              "line": 229
            },
            {
              "function": "join",
              "line": 256
            },
            {
              "function": "chat_completion",
              "line": 267
            },
            {
              "function": "get",
              "line": 278
            },
            {
              "function": "isoformat",
              "line": 280
            },
            {
              "function": "error",
              "line": 284
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 131
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "get",
              "line": 132
            },
            {
              "function": "get",
              "line": 133
            },
            {
              "function": "len",
              "line": 163
            },
            {
              "function": "len",
              "line": 164
            },
            {
              "function": "len",
              "line": 211
            },
            {
              "function": "len",
              "line": 220
            },
            {
              "function": "len",
              "line": 221
            },
            {
              "function": "isoformat",
              "line": 223
            },
            {
              "function": "chr",
              "line": 256
            },
            {
              "function": "now",
              "line": 280
            },
            {
              "function": "enumerate",
              "line": 256
            },
            {
              "function": "str",
              "line": 286
            },
            {
              "function": "now",
              "line": 223
            },
            {
              "function": "str",
              "line": 231
            },
            {
              "function": "type",
              "line": 233
            }
          ]
        },
        "backend/agents/specialized/performance_bot.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 48,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/performance_bot.py"
            },
            {
              "name": "_extract_bottlenecks",
              "line": 194,
              "async": false,
              "calls": [
                "items",
                "round",
                "sort_stats",
                "list",
                "append"
              ],
              "parameters": [
                "self",
                "stats"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/performance_bot.py"
            },
            {
              "name": "_parse_profile_stats",
              "line": 275,
              "async": false,
              "calls": [
                "join",
                "split",
                "replace",
                "splitlines",
                "len",
                "append",
                "isdigit"
              ],
              "parameters": [
                "self",
                "stats_output"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/performance_bot.py"
            },
            {
              "name": "_format_profile_results",
              "line": 296,
              "async": false,
              "calls": [
                "items",
                "title",
                "join",
                "enumerate",
                "replace",
                "get",
                "append"
              ],
              "parameters": [
                "self",
                "profile"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/performance_bot.py"
            },
            {
              "name": "_format_package_analysis",
              "line": 437,
              "async": false,
              "calls": [
                "join",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "package_name",
                "analysis"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/performance_bot.py"
            }
          ],
          "classes": [
            {
              "name": "PerformanceProfile",
              "line": 29,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/performance_bot.py"
            },
            {
              "name": "PerformanceBot",
              "line": 38,
              "methods": [
                "__init__",
                "_extract_bottlenecks",
                "_parse_profile_stats",
                "_format_profile_results",
                "_format_package_analysis"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/performance_bot.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "cProfile",
              "names": [
                "cProfile"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "pstats",
              "names": [
                "pstats"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "io",
              "names": [
                "io"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "tracemalloc",
              "names": [
                "tracemalloc"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "tempfile",
              "names": [
                "tempfile"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 335
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 26
            },
            {
              "function": "AgentConfig",
              "line": 49
            },
            {
              "function": "__init__",
              "line": 64
            },
            {
              "function": "OpenAIService",
              "line": 65
            },
            {
              "function": "now",
              "line": 69
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 114
            },
            {
              "function": "_format_profile_results",
              "line": 124
            },
            {
              "function": "sort_stats",
              "line": 199
            },
            {
              "function": "sort_stats",
              "line": 212
            },
            {
              "function": "splitlines",
              "line": 277
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "append",
              "line": 302
            },
            {
              "function": "append",
              "line": 303
            },
            {
              "function": "append",
              "line": 304
            },
            {
              "function": "append",
              "line": 305
            },
            {
              "function": "append",
              "line": 308
            },
            {
              "function": "items",
              "line": 309
            },
            {
              "function": "append",
              "line": 311
            },
            {
              "function": "append",
              "line": 324
            },
            {
              "function": "enumerate",
              "line": 325
            },
            {
              "function": "join",
              "line": 328
            },
            {
              "function": "get",
              "line": 332
            },
            {
              "function": "info",
              "line": 342
            },
            {
              "function": "mkdtemp",
              "line": 345
            },
            {
              "function": "join",
              "line": 382
            },
            {
              "function": "listdir",
              "line": 386
            },
            {
              "function": "walk",
              "line": 405
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "append",
              "line": 445
            },
            {
              "function": "append",
              "line": 446
            },
            {
              "function": "append",
              "line": 447
            },
            {
              "function": "append",
              "line": 448
            },
            {
              "function": "append",
              "line": 449
            },
            {
              "function": "append",
              "line": 463
            },
            {
              "function": "append",
              "line": 464
            },
            {
              "function": "join",
              "line": 467
            },
            {
              "function": "append",
              "line": 477
            },
            {
              "function": "join",
              "line": 479
            },
            {
              "function": "TaskRequest",
              "line": 487
            },
            {
              "function": "get",
              "line": 518
            },
            {
              "function": "append",
              "line": 524
            },
            {
              "function": "enumerate",
              "line": 526
            },
            {
              "function": "append",
              "line": 535
            },
            {
              "function": "append",
              "line": 536
            },
            {
              "function": "join",
              "line": 538
            },
            {
              "function": "get",
              "line": 542
            },
            {
              "function": "lower",
              "line": 72
            },
            {
              "function": "total_seconds",
              "line": 87
            },
            {
              "function": "TaskResult",
              "line": 89
            },
            {
              "function": "NamedTemporaryFile",
              "line": 130
            },
            {
              "function": "write",
              "line": 131
            },
            {
              "function": "Profile",
              "line": 136
            },
            {
              "function": "start",
              "line": 139
            },
            {
              "function": "time",
              "line": 143
            },
            {
              "function": "enable",
              "line": 144
            },
            {
              "function": "disable",
              "line": 154
            },
            {
              "function": "stop",
              "line": 160
            },
            {
              "function": "StringIO",
              "line": 163
            },
            {
              "function": "Stats",
              "line": 164
            },
            {
              "function": "sort_stats",
              "line": 165
            },
            {
              "function": "print_stats",
              "line": 166
            },
            {
              "function": "_extract_bottlenecks",
              "line": 169
            },
            {
              "function": "PerformanceProfile",
              "line": 177
            },
            {
              "function": "unlink",
              "line": 192
            },
            {
              "function": "list",
              "line": 200
            },
            {
              "function": "list",
              "line": 213
            },
            {
              "function": "len",
              "line": 228
            },
            {
              "function": "count",
              "line": 232
            },
            {
              "function": "any",
              "line": 257
            },
            {
              "function": "append",
              "line": 258
            },
            {
              "function": "get",
              "line": 260
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "any",
              "line": 264
            },
            {
              "function": "append",
              "line": 268
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "split",
              "line": 284
            },
            {
              "function": "append",
              "line": 310
            },
            {
              "function": "append",
              "line": 315
            },
            {
              "function": "enumerate",
              "line": 316
            },
            {
              "function": "append",
              "line": 321
            },
            {
              "function": "append",
              "line": 326
            },
            {
              "function": "search",
              "line": 336
            },
            {
              "function": "run",
              "line": 349
            },
            {
              "function": "join",
              "line": 358
            },
            {
              "function": "run",
              "line": 359
            },
            {
              "function": "_format_package_analysis",
              "line": 371
            },
            {
              "function": "rmtree",
              "line": 378
            },
            {
              "function": "set",
              "line": 398
            },
            {
              "function": "list",
              "line": 433
            },
            {
              "function": "append",
              "line": 452
            },
            {
              "function": "append",
              "line": 455
            },
            {
              "function": "append",
              "line": 458
            },
            {
              "function": "append",
              "line": 461
            },
            {
              "function": "append",
              "line": 469
            },
            {
              "function": "execute",
              "line": 495
            },
            {
              "function": "isinstance",
              "line": 496
            },
            {
              "function": "str",
              "line": 496
            },
            {
              "function": "complete",
              "line": 513
            },
            {
              "function": "append",
              "line": 528
            },
            {
              "function": "append",
              "line": 529
            },
            {
              "function": "append",
              "line": 530
            },
            {
              "function": "append",
              "line": 531
            },
            {
              "function": "append",
              "line": 532
            },
            {
              "function": "_profile_python",
              "line": 548
            },
            {
              "function": "complete",
              "line": 564
            },
            {
              "function": "super",
              "line": 64
            },
            {
              "function": "error",
              "line": 97
            },
            {
              "function": "total_seconds",
              "line": 98
            },
            {
              "function": "TaskResult",
              "line": 99
            },
            {
              "function": "_profile_python",
              "line": 117
            },
            {
              "function": "get_traced_memory",
              "line": 140
            },
            {
              "function": "time",
              "line": 155
            },
            {
              "function": "get_traced_memory",
              "line": 158
            },
            {
              "function": "get_traced_memory",
              "line": 159
            },
            {
              "function": "_analyze_complexity",
              "line": 172
            },
            {
              "function": "_generate_suggestions",
              "line": 175
            },
            {
              "function": "items",
              "line": 200
            },
            {
              "function": "append",
              "line": 202
            },
            {
              "function": "items",
              "line": 213
            },
            {
              "function": "append",
              "line": 215
            },
            {
              "function": "splitlines",
              "line": 228
            },
            {
              "function": "count",
              "line": 229
            },
            {
              "function": "count",
              "line": 229
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "count",
              "line": 231
            },
            {
              "function": "count",
              "line": 231
            },
            {
              "function": "append",
              "line": 252
            },
            {
              "function": "append",
              "line": 265
            },
            {
              "function": "isdigit",
              "line": 285
            },
            {
              "function": "append",
              "line": 286
            },
            {
              "function": "append",
              "line": 318
            },
            {
              "function": "append",
              "line": 319
            },
            {
              "function": "append",
              "line": 320
            },
            {
              "function": "lower",
              "line": 336
            },
            {
              "function": "group",
              "line": 338
            },
            {
              "function": "_analyze_package_structure",
              "line": 369
            },
            {
              "function": "error",
              "line": 374
            },
            {
              "function": "replace",
              "line": 387
            },
            {
              "function": "lower",
              "line": 387
            },
            {
              "function": "join",
              "line": 388
            },
            {
              "function": "isdir",
              "line": 391
            },
            {
              "function": "endswith",
              "line": 407
            },
            {
              "function": "append",
              "line": 454
            },
            {
              "function": "append",
              "line": 460
            },
            {
              "function": "append",
              "line": 471
            },
            {
              "function": "_profile_python",
              "line": 527
            },
            {
              "function": "dumps",
              "line": 559
            },
            {
              "function": "_format_profile_results",
              "line": 566
            },
            {
              "function": "analyze_performance",
              "line": 76
            },
            {
              "function": "_profile_javascript",
              "line": 119
            },
            {
              "function": "open",
              "line": 148
            },
            {
              "function": "compile",
              "line": 149
            },
            {
              "function": "exec",
              "line": 150
            },
            {
              "function": "warning",
              "line": 152
            },
            {
              "function": "_parse_profile_stats",
              "line": 185
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "count",
              "line": 230
            },
            {
              "function": "append",
              "line": 254
            },
            {
              "function": "len",
              "line": 285
            },
            {
              "function": "join",
              "line": 408
            },
            {
              "function": "len",
              "line": 448
            },
            {
              "function": "len",
              "line": 449
            },
            {
              "function": "append",
              "line": 473
            },
            {
              "function": "append",
              "line": 475
            },
            {
              "function": "run_benchmarks",
              "line": 78
            },
            {
              "function": "now",
              "line": 87
            },
            {
              "function": "read",
              "line": 149
            },
            {
              "function": "getvalue",
              "line": 185
            },
            {
              "function": "round",
              "line": 205
            },
            {
              "function": "round",
              "line": 207
            },
            {
              "function": "round",
              "line": 219
            },
            {
              "function": "range",
              "line": 264
            },
            {
              "function": "replace",
              "line": 285
            },
            {
              "function": "join",
              "line": 291
            },
            {
              "function": "title",
              "line": 310
            },
            {
              "function": "str",
              "line": 375
            },
            {
              "function": "timestamp",
              "line": 488
            },
            {
              "function": "get",
              "line": 531
            },
            {
              "function": "suggest_optimizations",
              "line": 80
            },
            {
              "function": "now",
              "line": 98
            },
            {
              "function": "index",
              "line": 236
            },
            {
              "function": "len",
              "line": 264
            },
            {
              "function": "get",
              "line": 319
            },
            {
              "function": "get",
              "line": 320
            },
            {
              "function": "open",
              "line": 412
            },
            {
              "function": "read",
              "line": 413
            },
            {
              "function": "splitlines",
              "line": 414
            },
            {
              "function": "len",
              "line": 415
            },
            {
              "function": "extend",
              "line": 423
            },
            {
              "function": "extend",
              "line": 426
            },
            {
              "function": "analyze_external_package",
              "line": 82
            },
            {
              "function": "provide_performance_advice",
              "line": 85
            },
            {
              "function": "str",
              "line": 101
            },
            {
              "function": "replace",
              "line": 310
            },
            {
              "function": "now",
              "line": 488
            },
            {
              "function": "startswith",
              "line": 419
            },
            {
              "function": "startswith",
              "line": 419
            },
            {
              "function": "add",
              "line": 420
            },
            {
              "function": "strip",
              "line": 420
            },
            {
              "function": "strip",
              "line": 424
            },
            {
              "function": "strip",
              "line": 427
            },
            {
              "function": "startswith",
              "line": 424
            },
            {
              "function": "startswith",
              "line": 427
            },
            {
              "function": "strip",
              "line": 424
            },
            {
              "function": "strip",
              "line": 427
            }
          ]
        },
        "backend/agents/specialized/research_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "info",
                "error",
                "super",
                "PerplexityService"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/research_agent.py"
            }
          ],
          "classes": [
            {
              "name": "ResearchAgent",
              "line": 24,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/research_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "utils.perplexity_service",
              "names": [
                "PerplexityService"
              ],
              "line": 20
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 19
            },
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "AgentConfig",
              "line": 35
            },
            {
              "function": "__init__",
              "line": 50
            },
            {
              "function": "info",
              "line": 67
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "info",
              "line": 117
            },
            {
              "function": "info",
              "line": 170
            },
            {
              "function": "lower",
              "line": 189
            },
            {
              "function": "any",
              "line": 190
            },
            {
              "function": "TaskRequest",
              "line": 282
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "PerplexityService",
              "line": 56
            },
            {
              "function": "info",
              "line": 57
            },
            {
              "function": "_perform_web_search",
              "line": 84
            },
            {
              "function": "isoformat",
              "line": 108
            },
            {
              "function": "isoformat",
              "line": 126
            },
            {
              "function": "lower",
              "line": 130
            },
            {
              "function": "isoformat",
              "line": 178
            },
            {
              "function": "info",
              "line": 227
            },
            {
              "function": "TaskResult",
              "line": 256
            },
            {
              "function": "execute",
              "line": 286
            },
            {
              "function": "abspath",
              "line": 19
            },
            {
              "function": "super",
              "line": 50
            },
            {
              "function": "error",
              "line": 59
            },
            {
              "function": "lower",
              "line": 140
            },
            {
              "function": "lower",
              "line": 230
            },
            {
              "function": "get",
              "line": 233
            },
            {
              "function": "enumerate",
              "line": 250
            },
            {
              "function": "error",
              "line": 269
            },
            {
              "function": "TaskResult",
              "line": 270
            },
            {
              "function": "get",
              "line": 283
            },
            {
              "function": "get",
              "line": 284
            },
            {
              "function": "now",
              "line": 108
            },
            {
              "function": "now",
              "line": 126
            },
            {
              "function": "now",
              "line": 178
            },
            {
              "function": "values",
              "line": 190
            },
            {
              "function": "get_latest_best_practices",
              "line": 231
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "isinstance",
              "line": 251
            },
            {
              "function": "lower",
              "line": 234
            },
            {
              "function": "lower",
              "line": 234
            },
            {
              "function": "research_technology",
              "line": 238
            },
            {
              "function": "search_web",
              "line": 243
            },
            {
              "function": "isoformat",
              "line": 264
            },
            {
              "function": "split",
              "line": 236
            },
            {
              "function": "split",
              "line": 237
            },
            {
              "function": "len",
              "line": 263
            },
            {
              "function": "isupper",
              "line": 236
            },
            {
              "function": "get",
              "line": 252
            },
            {
              "function": "get",
              "line": 252
            },
            {
              "function": "now",
              "line": 264
            },
            {
              "function": "str",
              "line": 272
            },
            {
              "function": "len",
              "line": 236
            }
          ]
        },
        "backend/agents/specialized/orchestrator_agent_v2.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 50,
              "async": false,
              "calls": [
                "OpenAIService",
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "set_planning_mode",
              "line": 154,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self",
                "mode"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent_v2.py"
            }
          ],
          "classes": [
            {
              "name": "SubTask",
              "line": 23,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "TaskDecomposition",
              "line": 36,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent_v2.py"
            },
            {
              "name": "OrchestratorAgentV2",
              "line": 45,
              "methods": [
                "__init__",
                "set_planning_mode"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/orchestrator_agent_v2.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 559
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 514
            },
            {
              "type": "from_import",
              "module": "agents.agent_registry",
              "names": [
                "get_agent_registry"
              ],
              "line": 639
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 950
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 695
            },
            {
              "type": "from_import",
              "module": "api.server",
              "names": [
                "manager"
              ],
              "line": 945
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 707
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "field",
              "line": 29
            },
            {
              "function": "AgentConfig",
              "line": 51
            },
            {
              "function": "__init__",
              "line": 66
            },
            {
              "function": "OpenAIService",
              "line": 73
            },
            {
              "function": "info",
              "line": 172
            },
            {
              "function": "info",
              "line": 199
            },
            {
              "function": "replace",
              "line": 221
            },
            {
              "function": "TaskResult",
              "line": 270
            },
            {
              "function": "TaskResult",
              "line": 305
            },
            {
              "function": "info",
              "line": 331
            },
            {
              "function": "info",
              "line": 350
            },
            {
              "function": "info",
              "line": 355
            },
            {
              "function": "TaskResult",
              "line": 359
            },
            {
              "function": "any",
              "line": 386
            },
            {
              "function": "getenv",
              "line": 393
            },
            {
              "function": "info",
              "line": 506
            },
            {
              "function": "startswith",
              "line": 510
            },
            {
              "function": "getenv",
              "line": 560
            },
            {
              "function": "TaskDecomposition",
              "line": 569
            },
            {
              "function": "info",
              "line": 627
            },
            {
              "function": "info",
              "line": 643
            },
            {
              "function": "info",
              "line": 684
            },
            {
              "function": "error",
              "line": 760
            },
            {
              "function": "Exception",
              "line": 761
            },
            {
              "function": "get",
              "line": 778
            },
            {
              "function": "hasattr",
              "line": 814
            },
            {
              "function": "append",
              "line": 817
            },
            {
              "function": "enumerate",
              "line": 819
            },
            {
              "function": "append",
              "line": 850
            },
            {
              "function": "len",
              "line": 851
            },
            {
              "function": "join",
              "line": 859
            },
            {
              "function": "join",
              "line": 876
            },
            {
              "function": "debug",
              "line": 925
            },
            {
              "function": "get",
              "line": 931
            },
            {
              "function": "TaskRequest",
              "line": 977
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "warning",
              "line": 165
            },
            {
              "function": "_send_progress",
              "line": 173
            },
            {
              "function": "_send_progress",
              "line": 200
            },
            {
              "function": "info",
              "line": 210
            },
            {
              "function": "lower",
              "line": 218
            },
            {
              "function": "Exception",
              "line": 219
            },
            {
              "function": "get_completion",
              "line": 297
            },
            {
              "function": "hasattr",
              "line": 325
            },
            {
              "function": "isinstance",
              "line": 325
            },
            {
              "function": "get",
              "line": 326
            },
            {
              "function": "get",
              "line": 327
            },
            {
              "function": "get",
              "line": 328
            },
            {
              "function": "_send_progress",
              "line": 332
            },
            {
              "function": "_decompose_task_with_ai",
              "line": 333
            },
            {
              "function": "info",
              "line": 339
            },
            {
              "function": "_send_progress",
              "line": 351
            },
            {
              "function": "_execute_workflow",
              "line": 352
            },
            {
              "function": "_send_progress",
              "line": 356
            },
            {
              "function": "_synthesize_results",
              "line": 357
            },
            {
              "function": "any",
              "line": 379
            },
            {
              "function": "any",
              "line": 381
            },
            {
              "function": "info",
              "line": 388
            },
            {
              "function": "getcwd",
              "line": 393
            },
            {
              "function": "any",
              "line": 496
            },
            {
              "function": "get_completion",
              "line": 497
            },
            {
              "function": "findall",
              "line": 516
            },
            {
              "function": "loads",
              "line": 525
            },
            {
              "function": "TaskDecomposition",
              "line": 540
            },
            {
              "function": "getcwd",
              "line": 560
            },
            {
              "function": "any",
              "line": 564
            },
            {
              "function": "_send_progress",
              "line": 628
            },
            {
              "function": "get_agent_registry",
              "line": 640
            },
            {
              "function": "enumerate",
              "line": 668
            },
            {
              "function": "get_completion",
              "line": 798
            },
            {
              "function": "append",
              "line": 815
            },
            {
              "function": "get",
              "line": 820
            },
            {
              "function": "append",
              "line": 833
            },
            {
              "function": "append",
              "line": 834
            },
            {
              "function": "append",
              "line": 835
            },
            {
              "function": "append",
              "line": 840
            },
            {
              "function": "hasattr",
              "line": 842
            },
            {
              "function": "append",
              "line": 843
            },
            {
              "function": "append",
              "line": 844
            },
            {
              "function": "append",
              "line": 845
            },
            {
              "function": "append",
              "line": 847
            },
            {
              "function": "append",
              "line": 848
            },
            {
              "function": "append",
              "line": 853
            },
            {
              "function": "get",
              "line": 873
            },
            {
              "function": "append",
              "line": 874
            },
            {
              "function": "debug",
              "line": 927
            },
            {
              "function": "debug",
              "line": 933
            },
            {
              "function": "debug",
              "line": 951
            },
            {
              "function": "debug",
              "line": 952
            },
            {
              "function": "execute",
              "line": 981
            },
            {
              "function": "super",
              "line": 66
            },
            {
              "function": "hasattr",
              "line": 91
            },
            {
              "function": "hasattr",
              "line": 97
            },
            {
              "function": "isinstance",
              "line": 97
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "info",
              "line": 100
            },
            {
              "function": "debug",
              "line": 101
            },
            {
              "function": "_send_progress",
              "line": 104
            },
            {
              "function": "any",
              "line": 111
            },
            {
              "function": "_send_progress",
              "line": 120
            },
            {
              "function": "hasattr",
              "line": 124
            },
            {
              "function": "isinstance",
              "line": 124
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "_analyze_intent",
              "line": 129
            },
            {
              "function": "_send_progress",
              "line": 131
            },
            {
              "function": "error",
              "line": 147
            },
            {
              "function": "TaskResult",
              "line": 148
            },
            {
              "function": "any",
              "line": 203
            },
            {
              "function": "get_completion",
              "line": 204
            },
            {
              "function": "_send_progress",
              "line": 211
            },
            {
              "function": "error",
              "line": 213
            },
            {
              "function": "replace",
              "line": 221
            },
            {
              "function": "_format_execution_plan",
              "line": 338
            },
            {
              "function": "_send_progress",
              "line": 340
            },
            {
              "function": "_send_progress",
              "line": 344
            },
            {
              "function": "info",
              "line": 382
            },
            {
              "function": "_send_progress",
              "line": 389
            },
            {
              "function": "_create_infrastructure_workflow",
              "line": 390
            },
            {
              "function": "strip",
              "line": 510
            },
            {
              "function": "info",
              "line": 519
            },
            {
              "function": "SubTask",
              "line": 529
            },
            {
              "function": "error",
              "line": 551
            },
            {
              "function": "Exception",
              "line": 552
            },
            {
              "function": "zip",
              "line": 657
            },
            {
              "function": "info",
              "line": 669
            },
            {
              "function": "TaskRequest",
              "line": 714
            },
            {
              "function": "any",
              "line": 724
            },
            {
              "function": "join",
              "line": 838
            },
            {
              "function": "append",
              "line": 839
            },
            {
              "function": "append",
              "line": 855
            },
            {
              "function": "append",
              "line": 857
            },
            {
              "function": "len",
              "line": 898
            },
            {
              "function": "get",
              "line": 903
            },
            {
              "function": "get_completion",
              "line": 910
            },
            {
              "function": "len",
              "line": 919
            },
            {
              "function": "debug",
              "line": 943
            },
            {
              "function": "error",
              "line": 972
            },
            {
              "function": "get",
              "line": 978
            },
            {
              "function": "get",
              "line": 979
            },
            {
              "function": "info",
              "line": 113
            },
            {
              "function": "info",
              "line": 115
            },
            {
              "function": "_describe_system",
              "line": 136
            },
            {
              "function": "_send_progress",
              "line": 214
            },
            {
              "function": "len",
              "line": 350
            },
            {
              "function": "len",
              "line": 365
            },
            {
              "function": "_send_progress",
              "line": 383
            },
            {
              "function": "_create_infrastructure_workflow",
              "line": 384
            },
            {
              "function": "lower",
              "line": 386
            },
            {
              "function": "get",
              "line": 544
            },
            {
              "function": "get",
              "line": 545
            },
            {
              "function": "get",
              "line": 546
            },
            {
              "function": "SubTask",
              "line": 574
            },
            {
              "function": "SubTask",
              "line": 582
            },
            {
              "function": "SubTask",
              "line": 590
            },
            {
              "function": "SubTask",
              "line": 598
            },
            {
              "function": "SubTask",
              "line": 606
            },
            {
              "function": "SubTask",
              "line": 614
            },
            {
              "function": "len",
              "line": 627
            },
            {
              "function": "len",
              "line": 643
            },
            {
              "function": "info",
              "line": 651
            },
            {
              "function": "append",
              "line": 652
            },
            {
              "function": "gather",
              "line": 656
            },
            {
              "function": "isinstance",
              "line": 658
            },
            {
              "function": "info",
              "line": 674
            },
            {
              "function": "len",
              "line": 684
            },
            {
              "function": "hasattr",
              "line": 699
            },
            {
              "function": "isinstance",
              "line": 701
            },
            {
              "function": "any",
              "line": 727
            },
            {
              "function": "wait_for",
              "line": 730
            },
            {
              "function": "hasattr",
              "line": 736
            },
            {
              "function": "error",
              "line": 738
            },
            {
              "function": "Exception",
              "line": 739
            },
            {
              "function": "error",
              "line": 746
            },
            {
              "function": "Exception",
              "line": 747
            },
            {
              "function": "error",
              "line": 751
            },
            {
              "function": "Exception",
              "line": 752
            },
            {
              "function": "error",
              "line": 755
            },
            {
              "function": "Exception",
              "line": 756
            },
            {
              "function": "list",
              "line": 759
            },
            {
              "function": "hasattr",
              "line": 786
            },
            {
              "function": "info",
              "line": 956
            },
            {
              "function": "info",
              "line": 963
            },
            {
              "function": "warning",
              "line": 968
            },
            {
              "function": "warning",
              "line": 970
            },
            {
              "function": "_send_progress",
              "line": 114
            },
            {
              "function": "_handle_complex_task",
              "line": 116
            },
            {
              "function": "_answer_directly",
              "line": 140
            },
            {
              "function": "_handle_complex_task",
              "line": 144
            },
            {
              "function": "lower",
              "line": 221
            },
            {
              "function": "len",
              "line": 351
            },
            {
              "function": "lower",
              "line": 379
            },
            {
              "function": "lower",
              "line": 381
            },
            {
              "function": "lower",
              "line": 387
            },
            {
              "function": "lower",
              "line": 496
            },
            {
              "function": "get",
              "line": 534
            },
            {
              "function": "get",
              "line": 535
            },
            {
              "function": "lower",
              "line": 564
            },
            {
              "function": "len",
              "line": 628
            },
            {
              "function": "_execute_subtask",
              "line": 652
            },
            {
              "function": "error",
              "line": 661
            },
            {
              "function": "info",
              "line": 664
            },
            {
              "function": "_execute_subtask",
              "line": 671
            },
            {
              "function": "error",
              "line": 678
            },
            {
              "function": "update",
              "line": 702
            },
            {
              "function": "isinstance",
              "line": 703
            },
            {
              "function": "dispatch_task",
              "line": 731
            },
            {
              "function": "keys",
              "line": 759
            },
            {
              "function": "warning",
              "line": 947
            },
            {
              "function": "send_json",
              "line": 957
            },
            {
              "function": "error",
              "line": 965
            },
            {
              "function": "lower",
              "line": 111
            },
            {
              "function": "lower",
              "line": 203
            },
            {
              "function": "join",
              "line": 389
            },
            {
              "function": "len",
              "line": 669
            },
            {
              "function": "warning",
              "line": 704
            },
            {
              "function": "warning",
              "line": 712
            },
            {
              "function": "lower",
              "line": 724
            },
            {
              "function": "str",
              "line": 754
            },
            {
              "function": "title",
              "line": 905
            },
            {
              "function": "list",
              "line": 952
            },
            {
              "function": "lower",
              "line": 112
            },
            {
              "function": "str",
              "line": 150
            },
            {
              "function": "str",
              "line": 214
            },
            {
              "function": "strip",
              "line": 221
            },
            {
              "function": "str",
              "line": 659
            },
            {
              "function": "len",
              "line": 674
            },
            {
              "function": "len",
              "line": 677
            },
            {
              "function": "str",
              "line": 677
            },
            {
              "function": "str",
              "line": 679
            },
            {
              "function": "update",
              "line": 708
            },
            {
              "function": "lower",
              "line": 727
            },
            {
              "function": "keys",
              "line": 952
            },
            {
              "function": "isoformat",
              "line": 961
            },
            {
              "function": "list",
              "line": 970
            },
            {
              "function": "join",
              "line": 114
            },
            {
              "function": "loads",
              "line": 708
            },
            {
              "function": "keys",
              "line": 970
            },
            {
              "function": "type",
              "line": 712
            },
            {
              "function": "now",
              "line": 961
            }
          ]
        },
        "backend/agents/specialized/opus_arbitrator_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "AgentConfig",
                "__init__",
                "ClaudeCodeService",
                "error",
                "super",
                "ClaudeCodeConfig",
                "is_available"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/opus_arbitrator_agent.py"
            }
          ],
          "classes": [
            {
              "name": "OpusArbitratorAgent",
              "line": 18,
              "methods": [
                "__init__"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/opus_arbitrator_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "utils.claude_code_service",
              "names": [
                "ClaudeCodeService",
                "ClaudeCodeConfig"
              ],
              "line": 14
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 16
            },
            {
              "function": "AgentConfig",
              "line": 29
            },
            {
              "function": "__init__",
              "line": 43
            },
            {
              "function": "ClaudeCodeService",
              "line": 45
            },
            {
              "function": "TaskRequest",
              "line": 150
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 46
            },
            {
              "function": "is_available",
              "line": 48
            },
            {
              "function": "error",
              "line": 49
            },
            {
              "function": "TaskResult",
              "line": 62
            },
            {
              "function": "is_available",
              "line": 109
            },
            {
              "function": "Exception",
              "line": 110
            },
            {
              "function": "complete",
              "line": 112
            },
            {
              "function": "get_completion",
              "line": 131
            },
            {
              "function": "Exception",
              "line": 140
            },
            {
              "function": "execute",
              "line": 154
            },
            {
              "function": "super",
              "line": 43
            },
            {
              "function": "error",
              "line": 75
            },
            {
              "function": "error",
              "line": 78
            },
            {
              "function": "TaskResult",
              "line": 79
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "get",
              "line": 151
            },
            {
              "function": "get",
              "line": 152
            },
            {
              "function": "lower",
              "line": 57
            },
            {
              "function": "lower",
              "line": 57
            },
            {
              "function": "resolve_conflict",
              "line": 58
            },
            {
              "function": "provide_judgment",
              "line": 60
            },
            {
              "function": "isoformat",
              "line": 70
            },
            {
              "function": "str",
              "line": 77
            },
            {
              "function": "now",
              "line": 70
            }
          ]
        },
        "backend/agents/specialized/orchestrator_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 75,
              "async": false,
              "calls": [
                "super",
                "__init__",
                "AgentConfig"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_calculate_critical_path_duration",
              "line": 538,
              "async": false,
              "calls": [
                "max",
                "sum",
                "_get_chain_duration"
              ],
              "parameters": [
                "self",
                "subtasks"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_get_chain_duration",
              "line": 553,
              "async": false,
              "calls": [
                "max",
                "_get_chain_duration"
              ],
              "parameters": [
                "self",
                "start_task",
                "all_tasks"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_group_by_dependency_level",
              "line": 697,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "workflow"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "_dependencies_met",
              "line": 718,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step",
                "completed",
                "workflow"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "format_orchestration_result",
              "line": 770,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "str"
              ],
              "parameters": [
                "self",
                "decomposition",
                "results"
              ],
              "decorators": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            }
          ],
          "classes": [
            {
              "name": "SubTask",
              "line": 21,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "TaskDependency",
              "line": 34,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "TaskDecomposition",
              "line": 42,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "WorkflowStep",
              "line": 53,
              "methods": [],
              "bases": [],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            },
            {
              "name": "OrchestratorAgent",
              "line": 64,
              "methods": [
                "__init__",
                "_calculate_critical_path_duration",
                "_get_chain_duration",
                "_group_by_dependency_level",
                "_dependencies_met",
                "format_orchestration_result"
              ],
              "bases": [
                "ChatAgent"
              ],
              "file": "backend/agents/specialized/orchestrator_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base.chat_agent",
              "names": [
                "ChatAgent",
                "StreamMessage"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "AgentConfig",
                "TaskRequest",
                "TaskResult",
                "AgentCapability"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "utils.openai_service",
              "names": [
                "OpenAIService"
              ],
              "line": 326
            },
            {
              "type": "from_import",
              "module": "base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 740
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 381
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 235
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "field",
              "line": 27
            },
            {
              "function": "AgentConfig",
              "line": 76
            },
            {
              "function": "__init__",
              "line": 90
            },
            {
              "function": "now",
              "line": 103
            },
            {
              "function": "lower",
              "line": 174
            },
            {
              "function": "any",
              "line": 176
            },
            {
              "function": "OpenAIService",
              "line": 328
            },
            {
              "function": "TaskDecomposition",
              "line": 528
            },
            {
              "function": "append",
              "line": 613
            },
            {
              "function": "set",
              "line": 662
            },
            {
              "function": "_group_by_dependency_level",
              "line": 665
            },
            {
              "function": "items",
              "line": 668
            },
            {
              "function": "info",
              "line": 737
            },
            {
              "function": "TaskRequest",
              "line": 742
            },
            {
              "function": "append",
              "line": 779
            },
            {
              "function": "append",
              "line": 780
            },
            {
              "function": "append",
              "line": 781
            },
            {
              "function": "append",
              "line": 782
            },
            {
              "function": "append",
              "line": 783
            },
            {
              "function": "append",
              "line": 784
            },
            {
              "function": "join",
              "line": 799
            },
            {
              "function": "info",
              "line": 809
            },
            {
              "function": "get",
              "line": 820
            },
            {
              "function": "total_seconds",
              "line": 118
            },
            {
              "function": "TaskResult",
              "line": 134
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "info",
              "line": 190
            },
            {
              "function": "_ai_decompose_task",
              "line": 226
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "enumerate",
              "line": 269
            },
            {
              "function": "get",
              "line": 297
            },
            {
              "function": "TaskDecomposition",
              "line": 305
            },
            {
              "function": "info",
              "line": 315
            },
            {
              "function": "loads",
              "line": 382
            },
            {
              "function": "get",
              "line": 386
            },
            {
              "function": "get",
              "line": 396
            },
            {
              "function": "TaskDecomposition",
              "line": 404
            },
            {
              "function": "info",
              "line": 414
            },
            {
              "function": "info",
              "line": 415
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 523
            },
            {
              "function": "sum",
              "line": 526
            },
            {
              "function": "sum",
              "line": 551
            },
            {
              "function": "max",
              "line": 567
            },
            {
              "function": "WorkflowStep",
              "line": 582
            },
            {
              "function": "append",
              "line": 587
            },
            {
              "function": "now",
              "line": 632
            },
            {
              "function": "now",
              "line": 650
            },
            {
              "function": "append",
              "line": 714
            },
            {
              "function": "sleep",
              "line": 754
            },
            {
              "function": "isoformat",
              "line": 761
            },
            {
              "function": "_execute_step",
              "line": 768
            },
            {
              "function": "get",
              "line": 787
            },
            {
              "function": "append",
              "line": 789
            },
            {
              "function": "append",
              "line": 790
            },
            {
              "function": "append",
              "line": 791
            },
            {
              "function": "get",
              "line": 821
            },
            {
              "function": "super",
              "line": 90
            },
            {
              "function": "analyze_task_complexity",
              "line": 107
            },
            {
              "function": "decompose_task",
              "line": 110
            },
            {
              "function": "create_workflow",
              "line": 113
            },
            {
              "function": "execute_workflow",
              "line": 116
            },
            {
              "function": "append",
              "line": 123
            },
            {
              "function": "error",
              "line": 151
            },
            {
              "function": "TaskResult",
              "line": 152
            },
            {
              "function": "search",
              "line": 164
            },
            {
              "function": "max",
              "line": 169
            },
            {
              "function": "search",
              "line": 195
            },
            {
              "function": "info",
              "line": 197
            },
            {
              "function": "store",
              "line": 236
            },
            {
              "function": "get",
              "line": 271
            },
            {
              "function": "get",
              "line": 272
            },
            {
              "function": "append",
              "line": 288
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 301
            },
            {
              "function": "sum",
              "line": 303
            },
            {
              "function": "error",
              "line": 319
            },
            {
              "function": "complete",
              "line": 373
            },
            {
              "function": "append",
              "line": 387
            },
            {
              "function": "_calculate_critical_path_duration",
              "line": 400
            },
            {
              "function": "sum",
              "line": 402
            },
            {
              "function": "error",
              "line": 420
            },
            {
              "function": "warning",
              "line": 421
            },
            {
              "function": "SubTask",
              "line": 433
            },
            {
              "function": "list",
              "line": 534
            },
            {
              "function": "_get_chain_duration",
              "line": 548
            },
            {
              "function": "max",
              "line": 549
            },
            {
              "function": "timestamp",
              "line": 590
            },
            {
              "function": "_execute_parallel_workflow",
              "line": 607
            },
            {
              "function": "_execute_sequential_workflow",
              "line": 610
            },
            {
              "function": "isoformat",
              "line": 614
            },
            {
              "function": "_dependencies_met",
              "line": 673
            },
            {
              "function": "enumerate",
              "line": 682
            },
            {
              "function": "execute",
              "line": 822
            },
            {
              "function": "format_orchestration_result",
              "line": 136
            },
            {
              "function": "get",
              "line": 167
            },
            {
              "function": "set",
              "line": 169
            },
            {
              "function": "len",
              "line": 196
            },
            {
              "function": "get",
              "line": 202
            },
            {
              "function": "info",
              "line": 208
            },
            {
              "function": "warning",
              "line": 246
            },
            {
              "function": "SubTask",
              "line": 288
            },
            {
              "function": "list",
              "line": 311
            },
            {
              "function": "SubTask",
              "line": 387
            },
            {
              "function": "list",
              "line": 410
            },
            {
              "function": "_create_sample_decomposition",
              "line": 422
            },
            {
              "function": "SubTask",
              "line": 443
            },
            {
              "function": "SubTask",
              "line": 450
            },
            {
              "function": "SubTask",
              "line": 458
            },
            {
              "function": "SubTask",
              "line": 469
            },
            {
              "function": "SubTask",
              "line": 476
            },
            {
              "function": "SubTask",
              "line": 483
            },
            {
              "function": "SubTask",
              "line": 491
            },
            {
              "function": "SubTask",
              "line": 499
            },
            {
              "function": "SubTask",
              "line": 507
            },
            {
              "function": "set",
              "line": 534
            },
            {
              "function": "_get_chain_duration",
              "line": 568
            },
            {
              "function": "_execute_step",
              "line": 638
            },
            {
              "function": "str",
              "line": 645
            },
            {
              "function": "error",
              "line": 647
            },
            {
              "function": "now",
              "line": 674
            },
            {
              "function": "append",
              "line": 676
            },
            {
              "function": "gather",
              "line": 680
            },
            {
              "function": "isinstance",
              "line": 683
            },
            {
              "function": "now",
              "line": 693
            },
            {
              "function": "capitalize",
              "line": 760
            },
            {
              "function": "now",
              "line": 761
            },
            {
              "function": "append",
              "line": 795
            },
            {
              "function": "append",
              "line": 797
            },
            {
              "function": "TaskRequest",
              "line": 822
            },
            {
              "function": "now",
              "line": 118
            },
            {
              "function": "len",
              "line": 140
            },
            {
              "function": "get",
              "line": 203
            },
            {
              "function": "isoformat",
              "line": 242
            },
            {
              "function": "lower",
              "line": 277
            },
            {
              "function": "lower",
              "line": 277
            },
            {
              "function": "set",
              "line": 311
            },
            {
              "function": "len",
              "line": 315
            },
            {
              "function": "set",
              "line": 410
            },
            {
              "function": "len",
              "line": 414
            },
            {
              "function": "get",
              "line": 415
            },
            {
              "function": "now",
              "line": 590
            },
            {
              "function": "now",
              "line": 614
            },
            {
              "function": "str",
              "line": 648
            },
            {
              "function": "_execute_step_async",
              "line": 676
            },
            {
              "function": "str",
              "line": 684
            },
            {
              "function": "add",
              "line": 691
            },
            {
              "function": "len",
              "line": 197
            },
            {
              "function": "append",
              "line": 205
            },
            {
              "function": "_adapt_decomposition_from_memory",
              "line": 214
            },
            {
              "function": "info",
              "line": 220
            },
            {
              "function": "warning",
              "line": 223
            },
            {
              "function": "lower",
              "line": 279
            },
            {
              "function": "lower",
              "line": 279
            },
            {
              "function": "get",
              "line": 292
            },
            {
              "function": "get",
              "line": 293
            },
            {
              "function": "get",
              "line": 294
            },
            {
              "function": "get",
              "line": 391
            },
            {
              "function": "get",
              "line": 392
            },
            {
              "function": "get",
              "line": 393
            },
            {
              "function": "str",
              "line": 686
            },
            {
              "function": "str",
              "line": 154
            },
            {
              "function": "len",
              "line": 208
            },
            {
              "function": "now",
              "line": 242
            },
            {
              "function": "lower",
              "line": 281
            },
            {
              "function": "lower",
              "line": 281
            },
            {
              "function": "lower",
              "line": 283
            },
            {
              "function": "lower",
              "line": 283
            },
            {
              "function": "lower",
              "line": 285
            },
            {
              "function": "str",
              "line": 797
            }
          ]
        },
        "backend/agents/base/base_agent.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 138,
              "async": false,
              "calls": [
                "getcwd",
                "PauseHandler",
                "get_memory_manager",
                "FileSystemTools",
                "set",
                "cwd",
                "isinstance",
                "_load_instructions",
                "hasattr",
                "info",
                "get_shared_context",
                "GitCheckpointManager",
                "get_conversation_context",
                "get",
                "_get_language_directive",
                "getattr",
                "str"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "_load_instructions",
              "line": 226,
              "async": false,
              "calls": [
                "getenv",
                "read",
                "exists",
                "join",
                "open",
                "split",
                "basename",
                "info",
                "expanduser",
                "warning"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "_get_language_directive",
              "line": 308,
              "async": false,
              "calls": [
                "get_language_directive"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "get_system_prompt",
              "line": 320,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "calculate_dynamic_timeout",
              "line": 617,
              "async": false,
              "calls": [
                "items",
                "max",
                "info",
                "get",
                "lower",
                "len",
                "min"
              ],
              "parameters": [
                "self",
                "prompt",
                "context"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "_get_workspace_from_request",
              "line": 695,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "_get_file_tools_for_current_workspace",
              "line": 706,
              "async": false,
              "calls": [
                "FileSystemTools",
                "info",
                "_get_workspace_from_request"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "_compile_research_summary",
              "line": 944,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "extend"
              ],
              "parameters": [
                "self",
                "findings"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "set_websocket_callback",
              "line": 1122,
              "async": false,
              "calls": [
                "set_websocket_callback"
              ],
              "parameters": [
                "self",
                "callback"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "get_status",
              "line": 1128,
              "async": false,
              "calls": [
                "isoformat",
                "len",
                "get_pause_state"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "__repr__",
              "line": 1382,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "load_from_file",
              "line": 1330,
              "async": false,
              "calls": [
                "LearningEntry",
                "load",
                "exists",
                "open",
                "info",
                "error",
                "any",
                "get",
                "append"
              ],
              "parameters": [
                "file_path",
                "source_name"
              ],
              "decorators": [],
              "file": "backend/agents/base/base_agent.py"
            }
          ],
          "classes": [
            {
              "name": "AgentCapability",
              "line": 64,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "AgentConfig",
              "line": 80,
              "methods": [],
              "bases": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "TaskRequest",
              "line": 94,
              "methods": [],
              "bases": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "TaskResult",
              "line": 107,
              "methods": [],
              "bases": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "AgentMessage",
              "line": 119,
              "methods": [],
              "bases": [],
              "file": "backend/agents/base/base_agent.py"
            },
            {
              "name": "BaseAgent",
              "line": 128,
              "methods": [
                "__init__",
                "_load_instructions",
                "_get_language_directive",
                "get_system_prompt",
                "calculate_dynamic_timeout",
                "_get_workspace_from_request",
                "_get_file_tools_for_current_workspace",
                "_compile_research_summary",
                "set_websocket_callback",
                "get_status",
                "__repr__",
                "load_from_file"
              ],
              "bases": [
                "ABC"
              ],
              "file": "backend/agents/base/base_agent.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "abc",
              "names": [
                "ABC",
                "abstractmethod"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List",
                "Optional",
                "Callable"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "settings"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "get_memory_manager",
                "MemoryType"
              ],
              "line": 28
            },
            {
              "type": "from_import",
              "module": "core.shared_context_manager",
              "names": [
                "get_shared_context"
              ],
              "line": 29
            },
            {
              "type": "from_import",
              "module": "core.conversation_context_manager",
              "names": [
                "get_conversation_context"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "prime_directives",
              "names": [
                "PrimeDirectives"
              ],
              "line": 38
            },
            {
              "type": "from_import",
              "module": "core.pause_handler",
              "names": [
                "PauseHandler",
                "PauseAction"
              ],
              "line": 46
            },
            {
              "type": "from_import",
              "module": "core.git_checkpoint_manager",
              "names": [
                "GitCheckpointManager"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 55
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 1221
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1222
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 1318
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1319
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 178
            },
            {
              "type": "from_import",
              "module": "agents.tools.file_tools",
              "names": [
                "FileSystemTools"
              ],
              "line": 715
            },
            {
              "type": "from_import",
              "module": "agents.specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 852
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 543
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "LearningEntry"
              ],
              "line": 1339
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryType"
              ],
              "line": 769
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 18
            },
            {
              "function": "getLogger",
              "line": 62
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "field",
              "line": 87
            },
            {
              "function": "field",
              "line": 97
            },
            {
              "function": "field",
              "line": 101
            },
            {
              "function": "field",
              "line": 112
            },
            {
              "function": "field",
              "line": 113
            },
            {
              "function": "field",
              "line": 114
            },
            {
              "function": "field",
              "line": 125
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "warning",
              "line": 24
            },
            {
              "function": "warning",
              "line": 34
            },
            {
              "function": "warning",
              "line": 42
            },
            {
              "function": "warning",
              "line": 51
            },
            {
              "function": "warning",
              "line": 59
            },
            {
              "function": "_load_instructions",
              "line": 143
            },
            {
              "function": "_get_language_directive",
              "line": 146
            },
            {
              "function": "set",
              "line": 173
            },
            {
              "function": "info",
              "line": 224
            },
            {
              "function": "basename",
              "line": 242
            },
            {
              "function": "expanduser",
              "line": 245
            },
            {
              "function": "getenv",
              "line": 275
            },
            {
              "function": "info",
              "line": 359
            },
            {
              "function": "info",
              "line": 369
            },
            {
              "function": "info",
              "line": 377
            },
            {
              "function": "now",
              "line": 394
            },
            {
              "function": "total_seconds",
              "line": 536
            },
            {
              "function": "now",
              "line": 598
            },
            {
              "function": "lower",
              "line": 666
            },
            {
              "function": "items",
              "line": 669
            },
            {
              "function": "max",
              "line": 690
            },
            {
              "function": "info",
              "line": 692
            },
            {
              "function": "_get_workspace_from_request",
              "line": 713
            },
            {
              "function": "_get_file_tools_for_current_workspace",
              "line": 733
            },
            {
              "function": "_get_file_tools_for_current_workspace",
              "line": 811
            },
            {
              "function": "AgentMessage",
              "line": 987
            },
            {
              "function": "AgentMessage",
              "line": 1016
            },
            {
              "function": "AgentMessage",
              "line": 1042
            },
            {
              "function": "info",
              "line": 1065
            },
            {
              "function": "info",
              "line": 1069
            },
            {
              "function": "store_learning",
              "line": 1177
            },
            {
              "function": "info",
              "line": 1184
            },
            {
              "function": "get_relevant_learnings",
              "line": 1195
            },
            {
              "function": "getenv",
              "line": 1227
            },
            {
              "function": "expanduser",
              "line": 1228
            },
            {
              "function": "getenv",
              "line": 1325
            },
            {
              "function": "expanduser",
              "line": 1326
            },
            {
              "function": "join",
              "line": 1367
            },
            {
              "function": "join",
              "line": 1368
            },
            {
              "function": "load_from_file",
              "line": 1369
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "get_memory_manager",
              "line": 161
            },
            {
              "function": "get_shared_context",
              "line": 162
            },
            {
              "function": "get_conversation_context",
              "line": 163
            },
            {
              "function": "str",
              "line": 179
            },
            {
              "function": "PauseHandler",
              "line": 180
            },
            {
              "function": "GitCheckpointManager",
              "line": 181
            },
            {
              "function": "getattr",
              "line": 188
            },
            {
              "function": "FileSystemTools",
              "line": 189
            },
            {
              "function": "hasattr",
              "line": 193
            },
            {
              "function": "PauseHandler",
              "line": 218
            },
            {
              "function": "GitCheckpointManager",
              "line": 219
            },
            {
              "function": "join",
              "line": 249
            },
            {
              "function": "join",
              "line": 250
            },
            {
              "function": "exists",
              "line": 257
            },
            {
              "function": "warning",
              "line": 268
            },
            {
              "function": "get_language_directive",
              "line": 311
            },
            {
              "function": "subscribe",
              "line": 340
            },
            {
              "function": "subscribe",
              "line": 346
            },
            {
              "function": "subscribe",
              "line": 352
            },
            {
              "function": "_process_broadcast",
              "line": 370
            },
            {
              "function": "_can_help_with",
              "line": 380
            },
            {
              "function": "validate_request",
              "line": 402
            },
            {
              "function": "info",
              "line": 442
            },
            {
              "function": "TaskResult",
              "line": 443
            },
            {
              "function": "get_context_for_agent",
              "line": 473
            },
            {
              "function": "info",
              "line": 492
            },
            {
              "function": "TaskResult",
              "line": 493
            },
            {
              "function": "add_entry",
              "line": 572
            },
            {
              "function": "items",
              "line": 675
            },
            {
              "function": "len",
              "line": 680
            },
            {
              "function": "max",
              "line": 681
            },
            {
              "function": "max",
              "line": 687
            },
            {
              "function": "min",
              "line": 690
            },
            {
              "function": "get",
              "line": 703
            },
            {
              "function": "info",
              "line": 716
            },
            {
              "function": "FileSystemTools",
              "line": 717
            },
            {
              "function": "error",
              "line": 737
            },
            {
              "function": "error",
              "line": 746
            },
            {
              "function": "ResearchAgent",
              "line": 853
            },
            {
              "function": "_compile_research_summary",
              "line": 925
            },
            {
              "function": "append",
              "line": 956
            },
            {
              "function": "append",
              "line": 966
            },
            {
              "function": "append",
              "line": 975
            },
            {
              "function": "join",
              "line": 977
            },
            {
              "function": "warning",
              "line": 982
            },
            {
              "function": "publish",
              "line": 996
            },
            {
              "function": "publish",
              "line": 1028
            },
            {
              "function": "sleep",
              "line": 1031
            },
            {
              "function": "publish",
              "line": 1050
            },
            {
              "function": "sleep",
              "line": 1055
            },
            {
              "function": "Exception",
              "line": 1089
            },
            {
              "function": "pause_task",
              "line": 1096
            },
            {
              "function": "Exception",
              "line": 1101
            },
            {
              "function": "resume_task",
              "line": 1103
            },
            {
              "function": "Exception",
              "line": 1111
            },
            {
              "function": "stop_and_rollback",
              "line": 1113
            },
            {
              "function": "Exception",
              "line": 1118
            },
            {
              "function": "handle_clarification_response",
              "line": 1120
            },
            {
              "function": "set_websocket_callback",
              "line": 1126
            },
            {
              "function": "len",
              "line": 1138
            },
            {
              "function": "get_pause_state",
              "line": 1144
            },
            {
              "function": "warning",
              "line": 1154
            },
            {
              "function": "info",
              "line": 1201
            },
            {
              "function": "join",
              "line": 1263
            },
            {
              "function": "makedirs",
              "line": 1264
            },
            {
              "function": "join",
              "line": 1265
            },
            {
              "function": "info",
              "line": 1281
            },
            {
              "function": "join",
              "line": 1285
            },
            {
              "function": "makedirs",
              "line": 1286
            },
            {
              "function": "join",
              "line": 1287
            },
            {
              "function": "info",
              "line": 1303
            },
            {
              "function": "warning",
              "line": 1322
            },
            {
              "function": "join",
              "line": 1373
            },
            {
              "function": "join",
              "line": 1374
            },
            {
              "function": "load_from_file",
              "line": 1375
            },
            {
              "function": "info",
              "line": 1378
            },
            {
              "function": "cwd",
              "line": 179
            },
            {
              "function": "getcwd",
              "line": 188
            },
            {
              "function": "isinstance",
              "line": 194
            },
            {
              "function": "split",
              "line": 280
            },
            {
              "function": "join",
              "line": 283
            },
            {
              "function": "join",
              "line": 284
            },
            {
              "function": "exists",
              "line": 288
            },
            {
              "function": "_register_communication_handlers",
              "line": 332
            },
            {
              "function": "_process_agent_request",
              "line": 362
            },
            {
              "function": "send_response",
              "line": 363
            },
            {
              "function": "send_response",
              "line": 381
            },
            {
              "function": "info",
              "line": 409
            },
            {
              "function": "info",
              "line": 425
            },
            {
              "function": "search",
              "line": 452
            },
            {
              "function": "get_relevant_patterns",
              "line": 464
            },
            {
              "function": "update_context",
              "line": 483
            },
            {
              "function": "execute",
              "line": 502
            },
            {
              "function": "is_paused",
              "line": 505
            },
            {
              "function": "info",
              "line": 527
            },
            {
              "function": "TaskResult",
              "line": 528
            },
            {
              "function": "store",
              "line": 545
            },
            {
              "function": "store_code_pattern",
              "line": 562
            },
            {
              "function": "update_context",
              "line": 584
            },
            {
              "function": "max",
              "line": 671
            },
            {
              "function": "len",
              "line": 682
            },
            {
              "function": "max",
              "line": 683
            },
            {
              "function": "len",
              "line": 686
            },
            {
              "function": "write_file",
              "line": 755
            },
            {
              "function": "get",
              "line": 763
            },
            {
              "function": "info",
              "line": 764
            },
            {
              "function": "error",
              "line": 784
            },
            {
              "function": "error",
              "line": 790
            },
            {
              "function": "create_file",
              "line": 829
            },
            {
              "function": "info",
              "line": 859
            },
            {
              "function": "isoformat",
              "line": 932
            },
            {
              "function": "error",
              "line": 936
            },
            {
              "function": "get",
              "line": 962
            },
            {
              "function": "extend",
              "line": 963
            },
            {
              "function": "extend",
              "line": 972
            },
            {
              "function": "timestamp",
              "line": 985
            },
            {
              "function": "wait_for",
              "line": 1000
            },
            {
              "function": "warning",
              "line": 1006
            },
            {
              "function": "timestamp",
              "line": 1014
            },
            {
              "function": "isoformat",
              "line": 1137
            },
            {
              "function": "len",
              "line": 1159
            },
            {
              "function": "isinstance",
              "line": 1241
            },
            {
              "function": "str",
              "line": 1241
            },
            {
              "function": "append",
              "line": 1245
            },
            {
              "function": "open",
              "line": 1267
            },
            {
              "function": "dump",
              "line": 1268
            },
            {
              "function": "open",
              "line": 1289
            },
            {
              "function": "dump",
              "line": 1290
            },
            {
              "function": "exists",
              "line": 1331
            },
            {
              "function": "get",
              "line": 195
            },
            {
              "function": "get",
              "line": 196
            },
            {
              "function": "_process_agent_response",
              "line": 365
            },
            {
              "function": "_perform_mandatory_research",
              "line": 412
            },
            {
              "function": "format_challenge_response",
              "line": 429
            },
            {
              "function": "total_seconds",
              "line": 430
            },
            {
              "function": "TaskResult",
              "line": 431
            },
            {
              "function": "total_seconds",
              "line": 497
            },
            {
              "function": "wait_for_user_action",
              "line": 507
            },
            {
              "function": "TaskResult",
              "line": 512
            },
            {
              "function": "now",
              "line": 536
            },
            {
              "function": "warning",
              "line": 557
            },
            {
              "function": "lower",
              "line": 560
            },
            {
              "function": "create_checkpoint",
              "line": 603
            },
            {
              "function": "info",
              "line": 608
            },
            {
              "function": "warning",
              "line": 611
            },
            {
              "function": "min",
              "line": 677
            },
            {
              "function": "get",
              "line": 686
            },
            {
              "function": "len",
              "line": 692
            },
            {
              "function": "str",
              "line": 840
            },
            {
              "function": "append",
              "line": 864
            },
            {
              "function": "str",
              "line": 938
            },
            {
              "function": "isoformat",
              "line": 941
            },
            {
              "function": "get",
              "line": 952
            },
            {
              "function": "append",
              "line": 953
            },
            {
              "function": "_wait_for_response",
              "line": 1001
            },
            {
              "function": "append",
              "line": 1247
            },
            {
              "function": "open",
              "line": 1335
            },
            {
              "function": "load",
              "line": 1336
            },
            {
              "function": "LearningEntry",
              "line": 1343
            },
            {
              "function": "info",
              "line": 1359
            },
            {
              "function": "error",
              "line": 1363
            },
            {
              "function": "open",
              "line": 259
            },
            {
              "function": "read",
              "line": 260
            },
            {
              "function": "info",
              "line": 262
            },
            {
              "function": "warning",
              "line": 265
            },
            {
              "function": "_provide_help",
              "line": 383
            },
            {
              "function": "get",
              "line": 414
            },
            {
              "function": "get",
              "line": 415
            },
            {
              "function": "stop_and_rollback",
              "line": 511
            },
            {
              "function": "total_seconds",
              "line": 532
            },
            {
              "function": "isoformat",
              "line": 590
            },
            {
              "function": "store",
              "line": 771
            },
            {
              "function": "str",
              "line": 789
            },
            {
              "function": "get_latest_best_practices",
              "line": 863
            },
            {
              "function": "now",
              "line": 932
            },
            {
              "function": "join",
              "line": 956
            },
            {
              "function": "join",
              "line": 966
            },
            {
              "function": "get",
              "line": 972
            },
            {
              "function": "join",
              "line": 975
            },
            {
              "function": "now",
              "line": 985
            },
            {
              "function": "now",
              "line": 1014
            },
            {
              "function": "type",
              "line": 1167
            },
            {
              "function": "str",
              "line": 1169
            },
            {
              "function": "len",
              "line": 1201
            },
            {
              "function": "append",
              "line": 1251
            },
            {
              "function": "len",
              "line": 1281
            },
            {
              "function": "len",
              "line": 1303
            },
            {
              "function": "any",
              "line": 1354
            },
            {
              "function": "append",
              "line": 1355
            },
            {
              "function": "open",
              "line": 290
            },
            {
              "function": "read",
              "line": 291
            },
            {
              "function": "info",
              "line": 292
            },
            {
              "function": "warning",
              "line": 303
            },
            {
              "function": "get",
              "line": 409
            },
            {
              "function": "len",
              "line": 425
            },
            {
              "function": "isoformat",
              "line": 487
            },
            {
              "function": "total_seconds",
              "line": 516
            },
            {
              "function": "warning",
              "line": 782
            },
            {
              "function": "get",
              "line": 784
            },
            {
              "function": "append",
              "line": 873
            },
            {
              "function": "append",
              "line": 885
            },
            {
              "function": "now",
              "line": 941
            },
            {
              "function": "append",
              "line": 1253
            },
            {
              "function": "get",
              "line": 1350
            },
            {
              "function": "get",
              "line": 425
            },
            {
              "function": "now",
              "line": 430
            },
            {
              "function": "get",
              "line": 436
            },
            {
              "function": "now",
              "line": 497
            },
            {
              "function": "execute",
              "line": 525
            },
            {
              "function": "now",
              "line": 590
            },
            {
              "function": "get",
              "line": 776
            },
            {
              "function": "isoformat",
              "line": 778
            },
            {
              "function": "verify_technology_exists",
              "line": 872
            },
            {
              "function": "research_for_agent",
              "line": 881
            },
            {
              "function": "append",
              "line": 896
            },
            {
              "function": "append",
              "line": 1257
            },
            {
              "function": "append",
              "line": 1259
            },
            {
              "function": "now",
              "line": 487
            },
            {
              "function": "now",
              "line": 532
            },
            {
              "function": "research_for_agent",
              "line": 892
            },
            {
              "function": "append",
              "line": 907
            },
            {
              "function": "append",
              "line": 918
            },
            {
              "function": "now",
              "line": 516
            },
            {
              "function": "now",
              "line": 778
            },
            {
              "function": "research_for_agent",
              "line": 903
            },
            {
              "function": "research_for_agent",
              "line": 914
            }
          ]
        },
        "backend/agents/base/prime_directives.py": {
          "functions": [
            {
              "name": "validate_request",
              "line": 126,
              "async": false,
              "calls": [
                "get",
                "check_research_requirements",
                "_check_violations"
              ],
              "parameters": [
                "cls",
                "request"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "_check_violations",
              "line": 173,
              "async": false,
              "calls": [
                "items",
                "len",
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "cls",
                "prompt",
                "context"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "check_research_requirements",
              "line": 247,
              "async": false,
              "calls": [
                "items",
                "len",
                "findall",
                "join",
                "set",
                "list",
                "get",
                "lower",
                "append",
                "search"
              ],
              "parameters": [
                "cls",
                "prompt",
                "context"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "format_challenge_response",
              "line": 316,
              "async": false,
              "calls": [
                "get",
                "join",
                "append",
                "enumerate"
              ],
              "parameters": [
                "cls",
                "validation_result"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "get_directive_prompt",
              "line": 344,
              "async": false,
              "calls": [
                "join",
                "append"
              ],
              "parameters": [
                "cls"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "check_global_error_search",
              "line": 365,
              "async": false,
              "calls": [],
              "parameters": [
                "cls",
                "error_found",
                "file_location"
              ],
              "decorators": [
                "classmethod"
              ],
              "file": "backend/agents/base/prime_directives.py"
            }
          ],
          "classes": [
            {
              "name": "Directive",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "backend/agents/base/prime_directives.py"
            },
            {
              "name": "PrimeDirectives",
              "line": 22,
              "methods": [
                "validate_request",
                "_check_violations",
                "check_research_requirements",
                "format_challenge_response",
                "get_directive_prompt",
                "check_global_error_search"
              ],
              "bases": [],
              "file": "backend/agents/base/prime_directives.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 384
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 385
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "Directive",
              "line": 30
            },
            {
              "function": "Directive",
              "line": 44
            },
            {
              "function": "Directive",
              "line": 58
            },
            {
              "function": "Directive",
              "line": 73
            },
            {
              "function": "Directive",
              "line": 85
            },
            {
              "function": "Directive",
              "line": 97
            },
            {
              "function": "Directive",
              "line": 109
            },
            {
              "function": "get",
              "line": 135
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "_check_violations",
              "line": 139
            },
            {
              "function": "check_research_requirements",
              "line": 142
            },
            {
              "function": "lower",
              "line": 204
            },
            {
              "function": "items",
              "line": 205
            },
            {
              "function": "lower",
              "line": 252
            },
            {
              "function": "items",
              "line": 286
            },
            {
              "function": "findall",
              "line": 293
            },
            {
              "function": "get",
              "line": 304
            },
            {
              "function": "join",
              "line": 341
            },
            {
              "function": "append",
              "line": 357
            },
            {
              "function": "append",
              "line": 358
            },
            {
              "function": "append",
              "line": 359
            },
            {
              "function": "append",
              "line": 360
            },
            {
              "function": "join",
              "line": 362
            },
            {
              "function": "search",
              "line": 206
            },
            {
              "function": "search",
              "line": 235
            },
            {
              "function": "search",
              "line": 287
            },
            {
              "function": "append",
              "line": 300
            },
            {
              "function": "append",
              "line": 301
            },
            {
              "function": "append",
              "line": 305
            },
            {
              "function": "append",
              "line": 306
            },
            {
              "function": "list",
              "line": 310
            },
            {
              "function": "append",
              "line": 321
            },
            {
              "function": "get",
              "line": 323
            },
            {
              "function": "get",
              "line": 329
            },
            {
              "function": "append",
              "line": 335
            },
            {
              "function": "append",
              "line": 336
            },
            {
              "function": "append",
              "line": 337
            },
            {
              "function": "append",
              "line": 338
            },
            {
              "function": "append",
              "line": 339
            },
            {
              "function": "append",
              "line": 349
            },
            {
              "function": "append",
              "line": 350
            },
            {
              "function": "append",
              "line": 351
            },
            {
              "function": "append",
              "line": 352
            },
            {
              "function": "append",
              "line": 355
            },
            {
              "function": "append",
              "line": 406
            },
            {
              "function": "append",
              "line": 407
            },
            {
              "function": "run",
              "line": 410
            },
            {
              "function": "get",
              "line": 154
            },
            {
              "function": "get",
              "line": 155
            },
            {
              "function": "append",
              "line": 207
            },
            {
              "function": "append",
              "line": 208
            },
            {
              "function": "append",
              "line": 224
            },
            {
              "function": "append",
              "line": 225
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "append",
              "line": 237
            },
            {
              "function": "append",
              "line": 288
            },
            {
              "function": "append",
              "line": 289
            },
            {
              "function": "len",
              "line": 309
            },
            {
              "function": "set",
              "line": 310
            },
            {
              "function": "join",
              "line": 311
            },
            {
              "function": "append",
              "line": 324
            },
            {
              "function": "enumerate",
              "line": 325
            },
            {
              "function": "append",
              "line": 327
            },
            {
              "function": "append",
              "line": 330
            },
            {
              "function": "enumerate",
              "line": 331
            },
            {
              "function": "append",
              "line": 333
            },
            {
              "function": "append",
              "line": 354
            },
            {
              "function": "extend",
              "line": 400
            },
            {
              "function": "extend",
              "line": 403
            },
            {
              "function": "getcwd",
              "line": 407
            },
            {
              "function": "len",
              "line": 415
            },
            {
              "function": "run",
              "line": 419
            },
            {
              "function": "str",
              "line": 431
            },
            {
              "function": "len",
              "line": 240
            },
            {
              "function": "len",
              "line": 240
            },
            {
              "function": "append",
              "line": 326
            },
            {
              "function": "append",
              "line": 332
            },
            {
              "function": "sum",
              "line": 422
            },
            {
              "function": "join",
              "line": 301
            },
            {
              "function": "split",
              "line": 413
            },
            {
              "function": "int",
              "line": 422
            },
            {
              "function": "strip",
              "line": 413
            },
            {
              "function": "split",
              "line": 422
            },
            {
              "function": "split",
              "line": 422
            },
            {
              "function": "strip",
              "line": 422
            }
          ]
        },
        "backend/agents/base/chat_agent.py": {
          "functions": [
            {
              "name": "__post_init__",
              "line": 26,
              "async": false,
              "calls": [
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/chat_agent.py"
            },
            {
              "name": "to_dict",
              "line": 32,
              "async": false,
              "calls": [
                "isoformat"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/chat_agent.py"
            },
            {
              "name": "__init__",
              "line": 47,
              "async": false,
              "calls": [
                "__init__",
                "super"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "backend/agents/base/chat_agent.py"
            },
            {
              "name": "format_response",
              "line": 193,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "content",
                "status"
              ],
              "decorators": [],
              "file": "backend/agents/base/chat_agent.py"
            },
            {
              "name": "get_chat_status",
              "line": 203,
              "async": false,
              "calls": [
                "update",
                "len",
                "get_status"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/agents/base/chat_agent.py"
            }
          ],
          "classes": [
            {
              "name": "StreamMessage",
              "line": 18,
              "methods": [
                "__post_init__",
                "to_dict"
              ],
              "bases": [],
              "file": "backend/agents/base/chat_agent.py"
            },
            {
              "name": "ChatAgent",
              "line": 41,
              "methods": [
                "__init__",
                "format_response",
                "get_chat_status"
              ],
              "bases": [
                "BaseAgent"
              ],
              "file": "backend/agents/base/chat_agent.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "AsyncGenerator",
                "Dict",
                "Any",
                "Optional",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "base_agent",
              "names": [
                "BaseAgent",
                "AgentConfig",
                "TaskRequest",
                "TaskResult"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "__init__",
              "line": 48
            },
            {
              "function": "info",
              "line": 154
            },
            {
              "function": "items",
              "line": 190
            },
            {
              "function": "get_status",
              "line": 205
            },
            {
              "function": "update",
              "line": 206
            },
            {
              "function": "now",
              "line": 28
            },
            {
              "function": "isoformat",
              "line": 37
            },
            {
              "function": "StreamMessage",
              "line": 65
            },
            {
              "function": "_execute_streaming",
              "line": 95
            },
            {
              "function": "StreamMessage",
              "line": 101
            },
            {
              "function": "execute",
              "line": 131
            },
            {
              "function": "super",
              "line": 48
            },
            {
              "function": "timestamp",
              "line": 61
            },
            {
              "function": "StreamMessage",
              "line": 115
            },
            {
              "function": "error",
              "line": 123
            },
            {
              "function": "StreamMessage",
              "line": 135
            },
            {
              "function": "StreamMessage",
              "line": 142
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "TaskRequest",
              "line": 168
            },
            {
              "function": "handle_chat_stream",
              "line": 177
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "put",
              "line": 191
            },
            {
              "function": "len",
              "line": 207
            },
            {
              "function": "stream_callback",
              "line": 71
            },
            {
              "function": "search",
              "line": 77
            },
            {
              "function": "StreamMessage",
              "line": 84
            },
            {
              "function": "stream_callback",
              "line": 111
            },
            {
              "function": "receive_json",
              "line": 159
            },
            {
              "function": "send_json",
              "line": 182
            },
            {
              "function": "now",
              "line": 61
            },
            {
              "function": "stream_callback",
              "line": 97
            },
            {
              "function": "stream_callback",
              "line": 121
            },
            {
              "function": "send_json",
              "line": 164
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "get",
              "line": 171
            },
            {
              "function": "get",
              "line": 172
            },
            {
              "function": "get",
              "line": 173
            },
            {
              "function": "send_json",
              "line": 178
            },
            {
              "function": "stream_callback",
              "line": 91
            },
            {
              "function": "to_dict",
              "line": 178
            },
            {
              "function": "str",
              "line": 184
            },
            {
              "function": "len",
              "line": 88
            },
            {
              "function": "str",
              "line": 117
            }
          ]
        },
        "backend/utils/perplexity_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "getenv",
                "info",
                "ValueError"
              ],
              "parameters": [
                "self",
                "model"
              ],
              "decorators": [],
              "file": "backend/utils/perplexity_service.py"
            },
            {
              "name": "test_connection",
              "line": 314,
              "async": false,
              "calls": [
                "error",
                "post"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/utils/perplexity_service.py"
            }
          ],
          "classes": [
            {
              "name": "PerplexityService",
              "line": 15,
              "methods": [
                "__init__",
                "test_connection"
              ],
              "bases": [],
              "file": "backend/utils/perplexity_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "aiohttp",
              "names": [
                "aiohttp"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 322
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "getenv",
              "line": 31
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "ValueError",
              "line": 33
            },
            {
              "function": "send_message",
              "line": 217
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "send_message",
              "line": 264
            },
            {
              "function": "get",
              "line": 274
            },
            {
              "function": "send_message",
              "line": 300
            },
            {
              "function": "get",
              "line": 309
            },
            {
              "function": "post",
              "line": 323
            },
            {
              "function": "ClientSession",
              "line": 94
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "ClientSession",
              "line": 159
            },
            {
              "function": "error",
              "line": 185
            },
            {
              "function": "join",
              "line": 255
            },
            {
              "function": "error",
              "line": 334
            },
            {
              "function": "error",
              "line": 337
            },
            {
              "function": "post",
              "line": 95
            },
            {
              "function": "post",
              "line": 160
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "get",
              "line": 105
            },
            {
              "function": "error",
              "line": 116
            },
            {
              "function": "Exception",
              "line": 117
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "Exception",
              "line": 182
            },
            {
              "function": "chr",
              "line": 255
            },
            {
              "function": "json",
              "line": 101
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "isoformat",
              "line": 112
            },
            {
              "function": "text",
              "line": 115
            },
            {
              "function": "text",
              "line": 180
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "strip",
              "line": 168
            },
            {
              "function": "startswith",
              "line": 169
            },
            {
              "function": "now",
              "line": 112
            },
            {
              "function": "decode",
              "line": 168
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "loads",
              "line": 173
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 174
            }
          ]
        },
        "backend/utils/claude_code_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [
                "ClaudeCodeConfig",
                "_check_cli_availability"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "backend/utils/claude_code_service.py"
            },
            {
              "name": "_check_cli_availability",
              "line": 40,
              "async": false,
              "calls": [
                "error",
                "run",
                "info",
                "strip"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/utils/claude_code_service.py"
            },
            {
              "name": "_parse_json_response",
              "line": 136,
              "async": false,
              "calls": [
                "loads",
                "type",
                "join",
                "isinstance",
                "split",
                "get",
                "append",
                "warning",
                "startswith",
                "strip"
              ],
              "parameters": [
                "self",
                "response"
              ],
              "decorators": [],
              "file": "backend/utils/claude_code_service.py"
            },
            {
              "name": "is_available",
              "line": 252,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/utils/claude_code_service.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeCodeConfig",
              "line": 18,
              "methods": [],
              "bases": [],
              "file": "backend/utils/claude_code_service.py"
            },
            {
              "name": "ClaudeCodeService",
              "line": 25,
              "methods": [
                "__init__",
                "_check_cli_availability",
                "_parse_json_response",
                "is_available"
              ],
              "bases": [],
              "file": "backend/utils/claude_code_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "_check_cli_availability",
              "line": 38
            },
            {
              "function": "split",
              "line": 138
            },
            {
              "function": "join",
              "line": 183
            },
            {
              "function": "ClaudeCodeConfig",
              "line": 34
            },
            {
              "function": "run",
              "line": 43
            },
            {
              "function": "error",
              "line": 77
            },
            {
              "function": "Exception",
              "line": 78
            },
            {
              "function": "extend",
              "line": 95
            },
            {
              "function": "info",
              "line": 108
            },
            {
              "function": "isinstance",
              "line": 178
            },
            {
              "function": "complete",
              "line": 210
            },
            {
              "function": "complete",
              "line": 245
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "error",
              "line": 54
            },
            {
              "function": "create_subprocess_exec",
              "line": 99
            },
            {
              "function": "wait_for",
              "line": 110
            },
            {
              "function": "error",
              "line": 117
            },
            {
              "function": "Exception",
              "line": 118
            },
            {
              "function": "_parse_json_response",
              "line": 122
            },
            {
              "function": "strip",
              "line": 124
            },
            {
              "function": "error",
              "line": 128
            },
            {
              "function": "error",
              "line": 129
            },
            {
              "function": "Exception",
              "line": 130
            },
            {
              "function": "error",
              "line": 133
            },
            {
              "function": "Exception",
              "line": 134
            },
            {
              "function": "strip",
              "line": 138
            },
            {
              "function": "strip",
              "line": 142
            },
            {
              "function": "loads",
              "line": 146
            },
            {
              "function": "append",
              "line": 179
            },
            {
              "function": "warning",
              "line": 181
            },
            {
              "function": "complete",
              "line": 267
            },
            {
              "function": "communicate",
              "line": 111
            },
            {
              "function": "decode",
              "line": 122
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "lower",
              "line": 249
            },
            {
              "function": "lower",
              "line": 249
            },
            {
              "function": "str",
              "line": 276
            },
            {
              "function": "decode",
              "line": 116
            },
            {
              "function": "decode",
              "line": 124
            },
            {
              "function": "str",
              "line": 132
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "get",
              "line": 153
            },
            {
              "function": "append",
              "line": 173
            },
            {
              "function": "strip",
              "line": 51
            },
            {
              "function": "encode",
              "line": 111
            },
            {
              "function": "append",
              "line": 155
            },
            {
              "function": "get",
              "line": 157
            },
            {
              "function": "startswith",
              "line": 172
            },
            {
              "function": "type",
              "line": 181
            },
            {
              "function": "isinstance",
              "line": 159
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "isinstance",
              "line": 161
            },
            {
              "function": "isinstance",
              "line": 163
            },
            {
              "function": "get",
              "line": 164
            },
            {
              "function": "isinstance",
              "line": 165
            },
            {
              "function": "isinstance",
              "line": 167
            },
            {
              "function": "get",
              "line": 163
            },
            {
              "function": "append",
              "line": 166
            },
            {
              "function": "append",
              "line": 168
            }
          ]
        },
        "backend/utils/openai_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "getenv",
                "OpenAIConfig",
                "info",
                "AsyncOpenAI",
                "warning"
              ],
              "parameters": [
                "self",
                "config",
                "model"
              ],
              "decorators": [],
              "file": "backend/utils/openai_service.py"
            },
            {
              "name": "is_available",
              "line": 266,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/utils/openai_service.py"
            }
          ],
          "classes": [
            {
              "name": "OpenAIConfig",
              "line": 20,
              "methods": [],
              "bases": [],
              "file": "backend/utils/openai_service.py"
            },
            {
              "name": "OpenAIService",
              "line": 28,
              "methods": [
                "__init__",
                "is_available"
              ],
              "bases": [],
              "file": "backend/utils/openai_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "openai",
              "names": [
                "AsyncOpenAI"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 81
            }
          ],
          "calls": [
            {
              "function": "load_dotenv",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 17
            },
            {
              "function": "append",
              "line": 71
            },
            {
              "function": "OpenAIConfig",
              "line": 36
            },
            {
              "function": "warning",
              "line": 46
            },
            {
              "function": "AsyncOpenAI",
              "line": 49
            },
            {
              "function": "info",
              "line": 50
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "complete",
              "line": 201
            },
            {
              "function": "loads",
              "line": 205
            },
            {
              "function": "complete",
              "line": 243
            },
            {
              "function": "complete",
              "line": 257
            },
            {
              "function": "range",
              "line": 89
            },
            {
              "function": "error",
              "line": 140
            },
            {
              "function": "create",
              "line": 153
            },
            {
              "function": "error",
              "line": 166
            },
            {
              "function": "getenv",
              "line": 37
            },
            {
              "function": "_stream_completion",
              "line": 75
            },
            {
              "function": "str",
              "line": 137
            },
            {
              "function": "str",
              "line": 141
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "min",
              "line": 96
            },
            {
              "function": "wait_for",
              "line": 107
            },
            {
              "function": "warning",
              "line": 113
            },
            {
              "function": "debug",
              "line": 114
            },
            {
              "function": "error",
              "line": 127
            },
            {
              "function": "str",
              "line": 167
            },
            {
              "function": "sleep",
              "line": 94
            },
            {
              "function": "create",
              "line": 108
            },
            {
              "function": "warning",
              "line": 120
            },
            {
              "function": "error",
              "line": 123
            },
            {
              "function": "lower",
              "line": 128
            },
            {
              "function": "sleep",
              "line": 130
            },
            {
              "function": "str",
              "line": 128
            }
          ]
        },
        "backend/utils/anthropic_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 34,
              "async": false,
              "calls": [
                "getenv",
                "info",
                "AnthropicConfig",
                "AsyncAnthropic",
                "warning"
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "file": "backend/utils/anthropic_service.py"
            },
            {
              "name": "_format_outputs",
              "line": 241,
              "async": false,
              "calls": [
                "enumerate",
                "join",
                "append",
                "get"
              ],
              "parameters": [
                "self",
                "outputs"
              ],
              "decorators": [],
              "file": "backend/utils/anthropic_service.py"
            },
            {
              "name": "is_available",
              "line": 251,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/utils/anthropic_service.py"
            }
          ],
          "classes": [
            {
              "name": "AnthropicConfig",
              "line": 20,
              "methods": [],
              "bases": [],
              "file": "backend/utils/anthropic_service.py"
            },
            {
              "name": "AnthropicService",
              "line": 28,
              "methods": [
                "__init__",
                "_format_outputs",
                "is_available"
              ],
              "bases": [],
              "file": "backend/utils/anthropic_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "AsyncGenerator"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "anthropic",
              "names": [
                "AsyncAnthropic"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "load_dotenv",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 17
            },
            {
              "function": "enumerate",
              "line": 244
            },
            {
              "function": "join",
              "line": 249
            },
            {
              "function": "AnthropicConfig",
              "line": 36
            },
            {
              "function": "warning",
              "line": 43
            },
            {
              "function": "AsyncAnthropic",
              "line": 46
            },
            {
              "function": "info",
              "line": 47
            },
            {
              "function": "complete",
              "line": 150
            },
            {
              "function": "complete",
              "line": 187
            },
            {
              "function": "complete",
              "line": 229
            },
            {
              "function": "append",
              "line": 245
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "create",
              "line": 105
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "_format_outputs",
              "line": 217
            },
            {
              "function": "getenv",
              "line": 37
            },
            {
              "function": "_stream_completion",
              "line": 67
            },
            {
              "function": "create",
              "line": 74
            },
            {
              "function": "isinstance",
              "line": 84
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "str",
              "line": 92
            },
            {
              "function": "hasattr",
              "line": 116
            },
            {
              "function": "hasattr",
              "line": 116
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 247
            },
            {
              "function": "str",
              "line": 121
            }
          ]
        },
        "backend/langgraph_system/intelligent_query_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "_init_fallback_responses",
                "_init_query_patterns"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_init_fallback_responses",
              "line": 39,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_init_query_patterns",
              "line": 119,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "analyze_query",
              "line": 148,
              "async": false,
              "calls": [
                "QueryAnalysis",
                "split",
                "any",
                "get",
                "lower",
                "len"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "get_intelligent_response",
              "line": 219,
              "async": false,
              "calls": [
                "lower",
                "any",
                "analyze_query"
              ],
              "parameters": [
                "self",
                "query",
                "context"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "create_intelligent_execution_plan",
              "line": 256,
              "async": false,
              "calls": [
                "analyze_query",
                "ExecutionStep",
                "get_intelligent_response"
              ],
              "parameters": [
                "self",
                "query",
                "fallback_agent"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "enhance_orchestrator_step",
              "line": 344,
              "async": false,
              "calls": [
                "info",
                "len",
                "get_intelligent_response"
              ],
              "parameters": [
                "self",
                "step",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "integrate_with_classification",
              "line": 359,
              "async": false,
              "calls": [
                "get",
                "_get_development_guidance"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_get_development_guidance",
              "line": 389,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            }
          ],
          "classes": [
            {
              "name": "QueryAnalysis",
              "line": 17,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "IntelligentQueryHandler",
              "line": 29,
              "methods": [
                "__init__",
                "_init_fallback_responses",
                "_init_query_patterns",
                "analyze_query",
                "get_intelligent_response",
                "create_intelligent_execution_plan",
                "enhance_orchestrator_step",
                "integrate_with_classification",
                "_get_development_guidance"
              ],
              "bases": [],
              "file": "backend/langgraph_system/intelligent_query_handler.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Tuple",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExecutionStep"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "_init_fallback_responses",
              "line": 36
            },
            {
              "function": "_init_query_patterns",
              "line": 37
            },
            {
              "function": "lower",
              "line": 152
            },
            {
              "function": "any",
              "line": 168
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "get",
              "line": 203
            },
            {
              "function": "QueryAnalysis",
              "line": 208
            },
            {
              "function": "lower",
              "line": 224
            },
            {
              "function": "analyze_query",
              "line": 232
            },
            {
              "function": "analyze_query",
              "line": 264
            },
            {
              "function": "get",
              "line": 365
            },
            {
              "function": "get",
              "line": 369
            },
            {
              "function": "get",
              "line": 372
            },
            {
              "function": "get",
              "line": 375
            },
            {
              "function": "get",
              "line": 382
            },
            {
              "function": "get",
              "line": 431
            },
            {
              "function": "any",
              "line": 155
            },
            {
              "function": "any",
              "line": 160
            },
            {
              "function": "any",
              "line": 170
            },
            {
              "function": "any",
              "line": 180
            },
            {
              "function": "any",
              "line": 228
            },
            {
              "function": "get_intelligent_response",
              "line": 282
            },
            {
              "function": "ExecutionStep",
              "line": 333
            },
            {
              "function": "get_intelligent_response",
              "line": 351
            },
            {
              "function": "info",
              "line": 355
            },
            {
              "function": "get",
              "line": 376
            },
            {
              "function": "any",
              "line": 162
            },
            {
              "function": "any",
              "line": 172
            },
            {
              "function": "any",
              "line": 182
            },
            {
              "function": "split",
              "line": 191
            },
            {
              "function": "ExecutionStep",
              "line": 269
            },
            {
              "function": "ExecutionStep",
              "line": 285
            },
            {
              "function": "ExecutionStep",
              "line": 304
            },
            {
              "function": "ExecutionStep",
              "line": 312
            },
            {
              "function": "ExecutionStep",
              "line": 320
            },
            {
              "function": "_get_development_guidance",
              "line": 379
            },
            {
              "function": "any",
              "line": 184
            },
            {
              "function": "len",
              "line": 191
            },
            {
              "function": "len",
              "line": 355
            }
          ]
        },
        "backend/langgraph_system/cache_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 24,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/cache_manager.py"
            },
            {
              "name": "check_docker_installed",
              "line": 28,
              "async": false,
              "calls": [
                "run"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/cache_manager.py"
            },
            {
              "name": "check_redis_running",
              "line": 41,
              "async": false,
              "calls": [
                "Redis",
                "ping"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/cache_manager.py"
            },
            {
              "name": "start_redis_container",
              "line": 51,
              "async": false,
              "calls": [
                "check_redis_running",
                "check_docker_installed",
                "sleep",
                "info",
                "run",
                "append",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/cache_manager.py"
            },
            {
              "name": "fill_caches",
              "line": 131,
              "async": false,
              "calls": [
                "start_redis_container",
                "join",
                "set",
                "extend",
                "append"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/cache_manager.py"
            }
          ],
          "classes": [
            {
              "name": "CacheManager",
              "line": 21,
              "methods": [
                "__init__",
                "check_docker_installed",
                "check_redis_running",
                "start_redis_container",
                "fill_caches"
              ],
              "bases": [],
              "file": "backend/langgraph_system/cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "redis",
              "names": [
                "redis"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "__version__",
              "names": [
                "__version_display__"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "check_redis_running",
              "line": 66
            },
            {
              "function": "start_redis_container",
              "line": 141
            },
            {
              "function": "extend",
              "line": 157
            },
            {
              "function": "extend",
              "line": 158
            },
            {
              "function": "extend",
              "line": 159
            },
            {
              "function": "abspath",
              "line": 15
            },
            {
              "function": "run",
              "line": 31
            },
            {
              "function": "Redis",
              "line": 44
            },
            {
              "function": "ping",
              "line": 45
            },
            {
              "function": "check_docker_installed",
              "line": 60
            },
            {
              "function": "append",
              "line": 62
            },
            {
              "function": "append",
              "line": 69
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "run",
              "line": 75
            },
            {
              "function": "run",
              "line": 80
            },
            {
              "function": "append",
              "line": 85
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "run",
              "line": 96
            },
            {
              "function": "join",
              "line": 161
            },
            {
              "function": "append",
              "line": 104
            },
            {
              "function": "sleep",
              "line": 107
            },
            {
              "function": "check_redis_running",
              "line": 110
            },
            {
              "function": "append",
              "line": 120
            },
            {
              "function": "append",
              "line": 124
            },
            {
              "function": "append",
              "line": 127
            },
            {
              "function": "set",
              "line": 149
            },
            {
              "function": "set",
              "line": 150
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "append",
              "line": 113
            },
            {
              "function": "append",
              "line": 114
            },
            {
              "function": "append",
              "line": 117
            },
            {
              "function": "append",
              "line": 153
            },
            {
              "function": "str",
              "line": 126
            },
            {
              "function": "str",
              "line": 127
            }
          ]
        },
        "backend/langgraph_system/development_query_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [
                "getLogger"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "analyze_context",
              "line": 36,
              "async": false,
              "calls": [
                "sum",
                "lower",
                "bool",
                "DevelopmentContext",
                "any",
                "search"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_performance_query",
              "line": 77,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_bug_query",
              "line": 116,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_refactoring_query",
              "line": 162,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_testing_query",
              "line": 204,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_implementation_query",
              "line": 253,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_technology_query",
              "line": 311,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_database_query",
              "line": 355,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_ai_integration_query",
              "line": 417,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_error_diagnosis_query",
              "line": 470,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_scope_clarification",
              "line": 546,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "get_handler_for_type",
              "line": 604,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_development_query",
              "line": 622,
              "async": false,
              "calls": [
                "handler",
                "get_handler_for_type"
              ],
              "parameters": [
                "self",
                "query",
                "dev_type",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "suggest_next_steps",
              "line": 647,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "query_type"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            }
          ],
          "classes": [
            {
              "name": "DevelopmentContext",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            },
            {
              "name": "DevelopmentQueryHandler",
              "line": 27,
              "methods": [
                "__init__",
                "analyze_context",
                "handle_performance_query",
                "handle_bug_query",
                "handle_refactoring_query",
                "handle_testing_query",
                "handle_implementation_query",
                "handle_technology_query",
                "handle_database_query",
                "handle_ai_integration_query",
                "handle_error_diagnosis_query",
                "handle_scope_clarification",
                "get_handler_for_type",
                "handle_development_query",
                "suggest_next_steps"
              ],
              "bases": [],
              "file": "backend/langgraph_system/development_query_handler.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "getLogger",
              "line": 34
            },
            {
              "function": "any",
              "line": 40
            },
            {
              "function": "bool",
              "line": 45
            },
            {
              "function": "any",
              "line": 48
            },
            {
              "function": "any",
              "line": 53
            },
            {
              "function": "any",
              "line": 58
            },
            {
              "function": "DevelopmentContext",
              "line": 65
            },
            {
              "function": "analyze_context",
              "line": 79
            },
            {
              "function": "analyze_context",
              "line": 118
            },
            {
              "function": "analyze_context",
              "line": 164
            },
            {
              "function": "analyze_context",
              "line": 206
            },
            {
              "function": "any",
              "line": 257
            },
            {
              "function": "any",
              "line": 358
            },
            {
              "function": "any",
              "line": 473
            },
            {
              "function": "get",
              "line": 620
            },
            {
              "function": "get_handler_for_type",
              "line": 635
            },
            {
              "function": "get",
              "line": 663
            },
            {
              "function": "search",
              "line": 45
            },
            {
              "function": "sum",
              "line": 63
            },
            {
              "function": "handler",
              "line": 638
            },
            {
              "function": "lower",
              "line": 40
            },
            {
              "function": "lower",
              "line": 48
            },
            {
              "function": "lower",
              "line": 53
            },
            {
              "function": "lower",
              "line": 58
            },
            {
              "function": "lower",
              "line": 257
            },
            {
              "function": "lower",
              "line": 358
            },
            {
              "function": "lower",
              "line": 473
            }
          ]
        },
        "backend/langgraph_system/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "create_initial_state"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "extensions",
              "names": [
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 8
            }
          ],
          "calls": []
        },
        "backend/langgraph_system/query_classifier.py": {
          "functions": [
            {
              "name": "summary",
              "line": 57,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "__init__",
              "line": 71,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "classify_query",
              "line": 161,
              "async": false,
              "calls": [
                "md5",
                "_has_context_reference",
                "_check_pattern",
                "_calculate_safety",
                "_calculate_confidence",
                "_calculate_coherence",
                "_prepare_responses",
                "encode",
                "_is_nonsense",
                "DetailedClassification",
                "_check_development_patterns",
                "_determine_action",
                "lower",
                "_is_greeting",
                "hexdigest",
                "strip"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_greeting",
              "line": 208,
              "async": false,
              "calls": [
                "lower",
                "startswith",
                "split"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_nonsense",
              "line": 228,
              "async": false,
              "calls": [
                "set",
                "split",
                "search",
                "len",
                "match"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_has_context_reference",
              "line": 249,
              "async": false,
              "calls": [
                "startswith"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_pattern",
              "line": 259,
              "async": false,
              "calls": [
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "patterns"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_development_patterns",
              "line": 263,
              "async": false,
              "calls": [
                "len",
                "_check_pattern",
                "_has_context_reference",
                "split"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_coherence",
              "line": 319,
              "async": false,
              "calls": [
                "max",
                "set",
                "split",
                "len",
                "min",
                "match"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_confidence",
              "line": 342,
              "async": false,
              "calls": [
                "max",
                "min"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_safety",
              "line": 364,
              "async": false,
              "calls": [
                "max",
                "get",
                "min"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_determine_action",
              "line": 386,
              "async": false,
              "calls": [
                "_get_dev_agent"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_get_dev_agent",
              "line": 436,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_prepare_responses",
              "line": 450,
              "async": false,
              "calls": [
                "split"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "__init__",
              "line": 527,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "is_safe",
              "line": 530,
              "async": false,
              "calls": [
                "warning",
                "_detect_loop_pattern",
                "get",
                "_check_resource_exhaustion",
                "_is_duplicate"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_duplicate",
              "line": 562,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query_hash"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_detect_loop_pattern",
              "line": 568,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_resource_exhaustion",
              "line": 577,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "record_execution",
              "line": 589,
              "async": false,
              "calls": [
                "len",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "query_hash"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/query_classifier.py"
            }
          ],
          "classes": [
            {
              "name": "DetailedClassification",
              "line": 18,
              "methods": [
                "summary"
              ],
              "bases": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "EnhancedQueryClassifier",
              "line": 65,
              "methods": [
                "__init__",
                "classify_query",
                "_is_greeting",
                "_is_nonsense",
                "_has_context_reference",
                "_check_pattern",
                "_check_development_patterns",
                "_calculate_coherence",
                "_calculate_confidence",
                "_calculate_safety",
                "_determine_action",
                "_get_dev_agent",
                "_prepare_responses"
              ],
              "bases": [],
              "file": "backend/langgraph_system/query_classifier.py"
            },
            {
              "name": "ExecutionGuard",
              "line": 518,
              "methods": [
                "__init__",
                "is_safe",
                "_is_duplicate",
                "_detect_loop_pattern",
                "_check_resource_exhaustion",
                "record_execution"
              ],
              "bases": [],
              "file": "backend/langgraph_system/query_classifier.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional",
                "Tuple"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "field",
              "line": 24
            },
            {
              "function": "strip",
              "line": 168
            },
            {
              "function": "DetailedClassification",
              "line": 171
            },
            {
              "function": "_is_greeting",
              "line": 177
            },
            {
              "function": "_is_nonsense",
              "line": 178
            },
            {
              "function": "_has_context_reference",
              "line": 179
            },
            {
              "function": "_check_pattern",
              "line": 182
            },
            {
              "function": "_check_pattern",
              "line": 183
            },
            {
              "function": "_check_pattern",
              "line": 184
            },
            {
              "function": "_check_pattern",
              "line": 185
            },
            {
              "function": "_check_pattern",
              "line": 186
            },
            {
              "function": "_check_pattern",
              "line": 187
            },
            {
              "function": "_check_development_patterns",
              "line": 190
            },
            {
              "function": "_calculate_coherence",
              "line": 196
            },
            {
              "function": "_calculate_confidence",
              "line": 197
            },
            {
              "function": "_calculate_safety",
              "line": 198
            },
            {
              "function": "_determine_action",
              "line": 201
            },
            {
              "function": "_prepare_responses",
              "line": 204
            },
            {
              "function": "split",
              "line": 216
            },
            {
              "function": "split",
              "line": 235
            },
            {
              "function": "any",
              "line": 261
            },
            {
              "function": "_check_pattern",
              "line": 272
            },
            {
              "function": "split",
              "line": 330
            },
            {
              "function": "max",
              "line": 340
            },
            {
              "function": "max",
              "line": 362
            },
            {
              "function": "max",
              "line": 384
            },
            {
              "function": "get",
              "line": 448
            },
            {
              "function": "_is_duplicate",
              "line": 541
            },
            {
              "function": "_detect_loop_pattern",
              "line": 551
            },
            {
              "function": "_check_resource_exhaustion",
              "line": 556
            },
            {
              "function": "get",
              "line": 570
            },
            {
              "function": "get",
              "line": 579
            },
            {
              "function": "get",
              "line": 583
            },
            {
              "function": "append",
              "line": 591
            },
            {
              "function": "len",
              "line": 231
            },
            {
              "function": "len",
              "line": 237
            },
            {
              "function": "match",
              "line": 241
            },
            {
              "function": "len",
              "line": 243
            },
            {
              "function": "_check_pattern",
              "line": 277
            },
            {
              "function": "len",
              "line": 324
            },
            {
              "function": "len",
              "line": 331
            },
            {
              "function": "match",
              "line": 337
            },
            {
              "function": "min",
              "line": 340
            },
            {
              "function": "min",
              "line": 362
            },
            {
              "function": "get",
              "line": 379
            },
            {
              "function": "min",
              "line": 384
            },
            {
              "function": "_get_dev_agent",
              "line": 412
            },
            {
              "function": "get",
              "line": 536
            },
            {
              "function": "warning",
              "line": 537
            },
            {
              "function": "warning",
              "line": 542
            },
            {
              "function": "warning",
              "line": 547
            },
            {
              "function": "warning",
              "line": 552
            },
            {
              "function": "warning",
              "line": 557
            },
            {
              "function": "len",
              "line": 571
            },
            {
              "function": "len",
              "line": 580
            },
            {
              "function": "len",
              "line": 584
            },
            {
              "function": "len",
              "line": 593
            },
            {
              "function": "lower",
              "line": 168
            },
            {
              "function": "hexdigest",
              "line": 173
            },
            {
              "function": "lower",
              "line": 218
            },
            {
              "function": "startswith",
              "line": 223
            },
            {
              "function": "startswith",
              "line": 223
            },
            {
              "function": "search",
              "line": 236
            },
            {
              "function": "set",
              "line": 243
            },
            {
              "function": "_has_context_reference",
              "line": 275
            },
            {
              "function": "_check_pattern",
              "line": 283
            },
            {
              "function": "len",
              "line": 326
            },
            {
              "function": "len",
              "line": 333
            },
            {
              "function": "len",
              "line": 337
            },
            {
              "function": "now",
              "line": 591
            },
            {
              "function": "len",
              "line": 244
            },
            {
              "function": "startswith",
              "line": 255
            },
            {
              "function": "startswith",
              "line": 255
            },
            {
              "function": "len",
              "line": 281
            },
            {
              "function": "_check_pattern",
              "line": 288
            },
            {
              "function": "set",
              "line": 337
            },
            {
              "function": "len",
              "line": 337
            },
            {
              "function": "md5",
              "line": 173
            },
            {
              "function": "split",
              "line": 281
            },
            {
              "function": "_has_context_reference",
              "line": 286
            },
            {
              "function": "_check_pattern",
              "line": 293
            },
            {
              "function": "get",
              "line": 537
            },
            {
              "function": "encode",
              "line": 173
            },
            {
              "function": "len",
              "line": 291
            },
            {
              "function": "_check_pattern",
              "line": 297
            },
            {
              "function": "_check_pattern",
              "line": 302
            },
            {
              "function": "split",
              "line": 291
            },
            {
              "function": "_check_pattern",
              "line": 307
            },
            {
              "function": "split",
              "line": 482
            },
            {
              "function": "len",
              "line": 300
            },
            {
              "function": "len",
              "line": 305
            },
            {
              "function": "_check_pattern",
              "line": 312
            },
            {
              "function": "split",
              "line": 300
            },
            {
              "function": "split",
              "line": 305
            },
            {
              "function": "len",
              "line": 315
            },
            {
              "function": "split",
              "line": 315
            }
          ]
        },
        "backend/langgraph_system/workflow_self_diagnosis.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 57,
              "async": false,
              "calls": [
                "_initialize_patterns",
                "deque"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_initialize_patterns",
              "line": 61,
              "async": false,
              "calls": [
                "KnownAntiPattern"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "detect_patterns",
              "line": 138,
              "async": false,
              "calls": [
                "_get_detection_reason",
                "_check_pattern",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_pattern",
              "line": 154,
              "async": false,
              "calls": [
                "get",
                "len",
                "_has_circular_dependencies"
              ],
              "parameters": [
                "self",
                "pattern",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_has_circular_dependencies",
              "line": 205,
              "async": false,
              "calls": [
                "remove",
                "next",
                "set",
                "has_cycle_from",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_get_detection_reason",
              "line": 231,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "pattern",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 254,
              "async": false,
              "calls": [
                "_define_invariants"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_define_invariants",
              "line": 258,
              "async": false,
              "calls": [
                "_check_unique_ids",
                "_check_dependencies_exist",
                "_check_valid_transitions",
                "any",
                "get",
                "len",
                "_check_agent_capabilities"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "check_all",
              "line": 328,
              "async": false,
              "calls": [
                "error",
                "append",
                "len",
                "now"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_valid_transitions",
              "line": 347,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_unique_ids",
              "line": 366,
              "async": false,
              "calls": [
                "get",
                "len",
                "set"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_dependencies_exist",
              "line": 372,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_agent_capabilities",
              "line": 383,
              "async": false,
              "calls": [
                "_suggest_better_agent",
                "any",
                "get",
                "lower",
                "warning"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_suggest_better_agent",
              "line": 422,
              "async": false,
              "calls": [
                "sum",
                "items"
              ],
              "parameters": [
                "self",
                "current_agent",
                "task",
                "agent_capabilities"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 454,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "known_patterns",
                "invariants"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_calculate_dependency_depth",
              "line": 715,
              "async": false,
              "calls": [
                "max",
                "get_depth",
                "get"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_find_parallelizable_steps",
              "line": 729,
              "async": false,
              "calls": [
                "set",
                "_has_dependency_conflict",
                "append",
                "len",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_has_dependency_conflict",
              "line": 752,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step1",
                "step2",
                "all_steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_is_in_cycle",
              "line": 757,
              "async": false,
              "calls": [
                "has_cycle",
                "remove",
                "next",
                "set",
                "add"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 791,
              "async": false,
              "calls": [
                "_initialize_patterns",
                "deque"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_initialize_patterns",
              "line": 796,
              "async": false,
              "calls": [
                "_detect_timeout_cluster",
                "_detect_stuck_progress",
                "_detect_collaboration_spiral",
                "_detect_routing_loop",
                "_detect_resource_spike"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "analyze_patterns",
              "line": 826,
              "async": false,
              "calls": [
                "items",
                "_detect_statistical_anomalies",
                "get",
                "append",
                "len",
                "min",
                "extend"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_routing_loop",
              "line": 867,
              "async": false,
              "calls": [
                "get",
                "len",
                "all"
              ],
              "parameters": [
                "self",
                "history"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_collaboration_spiral",
              "line": 876,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "history"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_stuck_progress",
              "line": 889,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_resource_spike",
              "line": 894,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_timeout_cluster",
              "line": 899,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "events"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_statistical_anomalies",
              "line": 904,
              "async": false,
              "calls": [
                "sum",
                "max",
                "get",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 946,
              "async": false,
              "calls": [
                "deque"
              ],
              "parameters": [
                "self",
                "invariants",
                "validator",
                "pattern_engine"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 1140,
              "async": false,
              "calls": [
                "KnownAntiPatternsDatabase",
                "WorkflowInvariants",
                "PatternRecognitionEngine",
                "info",
                "PreExecutionValidator",
                "SelfTestFramework"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "get_diagnosis_report",
              "line": 1211,
              "async": false,
              "calls": [
                "len",
                "list"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "has_cycle_from",
              "line": 208,
              "async": false,
              "calls": [
                "next",
                "has_cycle_from",
                "remove",
                "add"
              ],
              "parameters": [
                "step_id",
                "visited",
                "path"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "get_depth",
              "line": 717,
              "async": false,
              "calls": [
                "get",
                "get_depth",
                "max"
              ],
              "parameters": [
                "step_id",
                "steps_dict"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "has_cycle",
              "line": 762,
              "async": false,
              "calls": [
                "next",
                "has_cycle",
                "remove",
                "add"
              ],
              "parameters": [
                "s_id"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            }
          ],
          "classes": [
            {
              "name": "AntiPatternType",
              "line": 26,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "KnownAntiPattern",
              "line": 41,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "KnownAntiPatternsDatabase",
              "line": 51,
              "methods": [
                "__init__",
                "_initialize_patterns",
                "detect_patterns",
                "_check_pattern",
                "_has_circular_dependencies",
                "_get_detection_reason",
                "has_cycle_from"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "WorkflowInvariants",
              "line": 248,
              "methods": [
                "__init__",
                "_define_invariants",
                "check_all",
                "_check_valid_transitions",
                "_check_unique_ids",
                "_check_dependencies_exist",
                "_check_agent_capabilities",
                "_suggest_better_agent"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "PreExecutionValidator",
              "line": 448,
              "methods": [
                "__init__",
                "_calculate_dependency_depth",
                "_find_parallelizable_steps",
                "_has_dependency_conflict",
                "_is_in_cycle",
                "get_depth",
                "has_cycle"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "PatternRecognitionEngine",
              "line": 785,
              "methods": [
                "__init__",
                "_initialize_patterns",
                "analyze_patterns",
                "_detect_routing_loop",
                "_detect_collaboration_spiral",
                "_detect_stuck_progress",
                "_detect_resource_spike",
                "_detect_timeout_cluster",
                "_detect_statistical_anomalies"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "SelfTestFramework",
              "line": 940,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "WorkflowSelfDiagnosisSystem",
              "line": 1134,
              "methods": [
                "__init__",
                "get_diagnosis_report"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow_self_diagnosis.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Tuple",
                "Optional",
                "Set"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict",
                "deque"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "ExecutionStep",
                "TaskLedger",
                "ProgressLedger"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "_initialize_patterns",
              "line": 58
            },
            {
              "function": "deque",
              "line": 59
            },
            {
              "function": "set",
              "line": 224
            },
            {
              "function": "_define_invariants",
              "line": 255
            },
            {
              "function": "get",
              "line": 361
            },
            {
              "function": "get",
              "line": 368
            },
            {
              "function": "get",
              "line": 374
            },
            {
              "function": "get",
              "line": 401
            },
            {
              "function": "items",
              "line": 431
            },
            {
              "function": "info",
              "line": 470
            },
            {
              "function": "range",
              "line": 475
            },
            {
              "function": "append",
              "line": 538
            },
            {
              "function": "get",
              "line": 559
            },
            {
              "function": "_calculate_dependency_depth",
              "line": 580
            },
            {
              "function": "set",
              "line": 590
            },
            {
              "function": "get",
              "line": 609
            },
            {
              "function": "defaultdict",
              "line": 612
            },
            {
              "function": "items",
              "line": 617
            },
            {
              "function": "enumerate",
              "line": 627
            },
            {
              "function": "get",
              "line": 646
            },
            {
              "function": "sum",
              "line": 649
            },
            {
              "function": "_find_parallelizable_steps",
              "line": 659
            },
            {
              "function": "copy",
              "line": 673
            },
            {
              "function": "max",
              "line": 727
            },
            {
              "function": "set",
              "line": 732
            },
            {
              "function": "set",
              "line": 759
            },
            {
              "function": "set",
              "line": 760
            },
            {
              "function": "has_cycle",
              "line": 780
            },
            {
              "function": "deque",
              "line": 792
            },
            {
              "function": "_initialize_patterns",
              "line": 794
            },
            {
              "function": "get",
              "line": 836
            },
            {
              "function": "get",
              "line": 837
            },
            {
              "function": "get",
              "line": 838
            },
            {
              "function": "items",
              "line": 841
            },
            {
              "function": "_detect_statistical_anomalies",
              "line": 852
            },
            {
              "function": "extend",
              "line": 853
            },
            {
              "function": "min",
              "line": 863
            },
            {
              "function": "all",
              "line": 874
            },
            {
              "function": "get",
              "line": 909
            },
            {
              "function": "get",
              "line": 922
            },
            {
              "function": "deque",
              "line": 955
            },
            {
              "function": "info",
              "line": 961
            },
            {
              "function": "check_all",
              "line": 973
            },
            {
              "function": "analyze_patterns",
              "line": 980
            },
            {
              "function": "update",
              "line": 989
            },
            {
              "function": "update",
              "line": 994
            },
            {
              "function": "values",
              "line": 1001
            },
            {
              "function": "append",
              "line": 1025
            },
            {
              "function": "now",
              "line": 1026
            },
            {
              "function": "info",
              "line": 1029
            },
            {
              "function": "info",
              "line": 1030
            },
            {
              "function": "get",
              "line": 1036
            },
            {
              "function": "get",
              "line": 1037
            },
            {
              "function": "get",
              "line": 1054
            },
            {
              "function": "get",
              "line": 1079
            },
            {
              "function": "sum",
              "line": 1085
            },
            {
              "function": "sum",
              "line": 1089
            },
            {
              "function": "info",
              "line": 1107
            },
            {
              "function": "KnownAntiPatternsDatabase",
              "line": 1142
            },
            {
              "function": "WorkflowInvariants",
              "line": 1143
            },
            {
              "function": "PreExecutionValidator",
              "line": 1144
            },
            {
              "function": "PatternRecognitionEngine",
              "line": 1145
            },
            {
              "function": "SelfTestFramework",
              "line": 1146
            },
            {
              "function": "info",
              "line": 1152
            },
            {
              "function": "info",
              "line": 1163
            },
            {
              "function": "info",
              "line": 1164
            },
            {
              "function": "info",
              "line": 1165
            },
            {
              "function": "analyze_patterns",
              "line": 1174
            },
            {
              "function": "info",
              "line": 1187
            },
            {
              "function": "info",
              "line": 1188
            },
            {
              "function": "info",
              "line": 1189
            },
            {
              "function": "info",
              "line": 1190
            },
            {
              "function": "info",
              "line": 1191
            },
            {
              "function": "info",
              "line": 1192
            },
            {
              "function": "info",
              "line": 1193
            },
            {
              "function": "KnownAntiPattern",
              "line": 64
            },
            {
              "function": "KnownAntiPattern",
              "line": 72
            },
            {
              "function": "KnownAntiPattern",
              "line": 80
            },
            {
              "function": "KnownAntiPattern",
              "line": 88
            },
            {
              "function": "KnownAntiPattern",
              "line": 96
            },
            {
              "function": "KnownAntiPattern",
              "line": 104
            },
            {
              "function": "KnownAntiPattern",
              "line": 112
            },
            {
              "function": "KnownAntiPattern",
              "line": 120
            },
            {
              "function": "KnownAntiPattern",
              "line": 128
            },
            {
              "function": "_check_pattern",
              "line": 143
            },
            {
              "function": "get",
              "line": 159
            },
            {
              "function": "add",
              "line": 209
            },
            {
              "function": "add",
              "line": 210
            },
            {
              "function": "next",
              "line": 212
            },
            {
              "function": "remove",
              "line": 221
            },
            {
              "function": "get",
              "line": 235
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "lower",
              "line": 403
            },
            {
              "function": "sum",
              "line": 436
            },
            {
              "function": "info",
              "line": 476
            },
            {
              "function": "check_all",
              "line": 481
            },
            {
              "function": "detect_patterns",
              "line": 491
            },
            {
              "function": "extend",
              "line": 523
            },
            {
              "function": "info",
              "line": 530
            },
            {
              "function": "len",
              "line": 547
            },
            {
              "function": "info",
              "line": 550
            },
            {
              "function": "error",
              "line": 552
            },
            {
              "function": "append",
              "line": 563
            },
            {
              "function": "len",
              "line": 571
            },
            {
              "function": "append",
              "line": 572
            },
            {
              "function": "append",
              "line": 582
            },
            {
              "function": "update",
              "line": 592
            },
            {
              "function": "append",
              "line": 651
            },
            {
              "function": "len",
              "line": 660
            },
            {
              "function": "sum",
              "line": 661
            },
            {
              "function": "append",
              "line": 662
            },
            {
              "function": "list",
              "line": 710
            },
            {
              "function": "info",
              "line": 711
            },
            {
              "function": "get",
              "line": 718
            },
            {
              "function": "add",
              "line": 748
            },
            {
              "function": "add",
              "line": 768
            },
            {
              "function": "add",
              "line": 769
            },
            {
              "function": "next",
              "line": 771
            },
            {
              "function": "remove",
              "line": 777
            },
            {
              "function": "len",
              "line": 854
            },
            {
              "function": "append",
              "line": 858
            },
            {
              "function": "len",
              "line": 859
            },
            {
              "function": "append",
              "line": 860
            },
            {
              "function": "len",
              "line": 869
            },
            {
              "function": "len",
              "line": 878
            },
            {
              "function": "get",
              "line": 886
            },
            {
              "function": "len",
              "line": 910
            },
            {
              "function": "sum",
              "line": 924
            },
            {
              "function": "sum",
              "line": 925
            },
            {
              "function": "len",
              "line": 926
            },
            {
              "function": "now",
              "line": 964
            },
            {
              "function": "extend",
              "line": 976
            },
            {
              "function": "_test_resource_health",
              "line": 987
            },
            {
              "function": "_test_performance_health",
              "line": 992
            },
            {
              "function": "_test_structural_health",
              "line": 997
            },
            {
              "function": "min",
              "line": 1039
            },
            {
              "function": "min",
              "line": 1040
            },
            {
              "function": "min",
              "line": 1066
            },
            {
              "function": "len",
              "line": 1086
            },
            {
              "function": "validate_comprehensive",
              "line": 1168
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1177
            },
            {
              "function": "error",
              "line": 1196
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1209
            },
            {
              "function": "len",
              "line": 1217
            },
            {
              "function": "len",
              "line": 1218
            },
            {
              "function": "_get_detection_reason",
              "line": 144
            },
            {
              "function": "append",
              "line": 145
            },
            {
              "function": "append",
              "line": 146
            },
            {
              "function": "_has_circular_dependencies",
              "line": 165
            },
            {
              "function": "has_cycle_from",
              "line": 227
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "len",
              "line": 345
            },
            {
              "function": "set",
              "line": 370
            },
            {
              "function": "error",
              "line": 483
            },
            {
              "function": "extend",
              "line": 484
            },
            {
              "function": "warning",
              "line": 493
            },
            {
              "function": "_validate_structure",
              "line": 506
            },
            {
              "function": "warning",
              "line": 508
            },
            {
              "function": "extend",
              "line": 509
            },
            {
              "function": "_validate_semantics",
              "line": 512
            },
            {
              "function": "warning",
              "line": 514
            },
            {
              "function": "extend",
              "line": 515
            },
            {
              "function": "_validate_performance",
              "line": 518
            },
            {
              "function": "info",
              "line": 520
            },
            {
              "function": "extend",
              "line": 521
            },
            {
              "function": "_attempt_fixes",
              "line": 531
            },
            {
              "function": "now",
              "line": 539
            },
            {
              "function": "len",
              "line": 541
            },
            {
              "function": "append",
              "line": 619
            },
            {
              "function": "get",
              "line": 677
            },
            {
              "function": "max",
              "line": 721
            },
            {
              "function": "get_depth",
              "line": 727
            },
            {
              "function": "len",
              "line": 746
            },
            {
              "function": "append",
              "line": 747
            },
            {
              "function": "len",
              "line": 911
            },
            {
              "function": "len",
              "line": 912
            },
            {
              "function": "max",
              "line": 912
            },
            {
              "function": "append",
              "line": 915
            },
            {
              "function": "append",
              "line": 929
            },
            {
              "function": "sum",
              "line": 1002
            },
            {
              "function": "len",
              "line": 1002
            },
            {
              "function": "append",
              "line": 1016
            },
            {
              "function": "get",
              "line": 1018
            },
            {
              "function": "append",
              "line": 1019
            },
            {
              "function": "get",
              "line": 1021
            },
            {
              "function": "append",
              "line": 1022
            },
            {
              "function": "len",
              "line": 1045
            },
            {
              "function": "len",
              "line": 1046
            },
            {
              "function": "sum",
              "line": 1058
            },
            {
              "function": "len",
              "line": 1058
            },
            {
              "function": "sum",
              "line": 1062
            },
            {
              "function": "len",
              "line": 1062
            },
            {
              "function": "len",
              "line": 1090
            },
            {
              "function": "error",
              "line": 1198
            },
            {
              "function": "warning",
              "line": 1201
            },
            {
              "function": "list",
              "line": 1215
            },
            {
              "function": "list",
              "line": 1216
            },
            {
              "function": "get",
              "line": 165
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "set",
              "line": 227
            },
            {
              "function": "_check_valid_transitions",
              "line": 285
            },
            {
              "function": "_check_unique_ids",
              "line": 292
            },
            {
              "function": "_check_dependencies_exist",
              "line": 299
            },
            {
              "function": "_check_agent_capabilities",
              "line": 323
            },
            {
              "function": "append",
              "line": 335
            },
            {
              "function": "error",
              "line": 343
            },
            {
              "function": "any",
              "line": 408
            },
            {
              "function": "_suggest_better_agent",
              "line": 410
            },
            {
              "function": "append",
              "line": 495
            },
            {
              "function": "sleep",
              "line": 535
            },
            {
              "function": "len",
              "line": 542
            },
            {
              "function": "get",
              "line": 546
            },
            {
              "function": "len",
              "line": 596
            },
            {
              "function": "append",
              "line": 597
            },
            {
              "function": "len",
              "line": 661
            },
            {
              "function": "lower",
              "line": 680
            },
            {
              "function": "has_cycle",
              "line": 774
            },
            {
              "function": "_detect_routing_loop",
              "line": 801
            },
            {
              "function": "_detect_collaboration_spiral",
              "line": 806
            },
            {
              "function": "_detect_stuck_progress",
              "line": 811
            },
            {
              "function": "_detect_resource_spike",
              "line": 816
            },
            {
              "function": "_detect_timeout_cluster",
              "line": 821
            },
            {
              "function": "append",
              "line": 844
            },
            {
              "function": "get",
              "line": 874
            },
            {
              "function": "get",
              "line": 874
            },
            {
              "function": "get",
              "line": 912
            },
            {
              "function": "len",
              "line": 1039
            },
            {
              "function": "len",
              "line": 1040
            },
            {
              "function": "max",
              "line": 1073
            },
            {
              "function": "state_provider",
              "line": 1112
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1115
            },
            {
              "function": "error",
              "line": 1119
            },
            {
              "function": "sleep",
              "line": 1125
            },
            {
              "function": "error",
              "line": 1128
            },
            {
              "function": "warning",
              "line": 1203
            },
            {
              "function": "now",
              "line": 148
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 175
            },
            {
              "function": "has_cycle_from",
              "line": 218
            },
            {
              "function": "any",
              "line": 265
            },
            {
              "function": "any",
              "line": 275
            },
            {
              "function": "get",
              "line": 316
            },
            {
              "function": "warning",
              "line": 412
            },
            {
              "function": "warning",
              "line": 417
            },
            {
              "function": "len",
              "line": 530
            },
            {
              "function": "len",
              "line": 552
            },
            {
              "function": "append",
              "line": 634
            },
            {
              "function": "lower",
              "line": 689
            },
            {
              "function": "len",
              "line": 711
            },
            {
              "function": "get_depth",
              "line": 721
            },
            {
              "function": "_has_dependency_conflict",
              "line": 742
            },
            {
              "function": "append",
              "line": 743
            },
            {
              "function": "add",
              "line": 744
            },
            {
              "function": "warning",
              "line": 1122
            },
            {
              "function": "sleep",
              "line": 1129
            },
            {
              "function": "get",
              "line": 180
            },
            {
              "function": "len",
              "line": 307
            },
            {
              "function": "len",
              "line": 308
            },
            {
              "function": "now",
              "line": 340
            },
            {
              "function": "len",
              "line": 483
            },
            {
              "function": "len",
              "line": 493
            },
            {
              "function": "len",
              "line": 508
            },
            {
              "function": "len",
              "line": 514
            },
            {
              "function": "len",
              "line": 520
            },
            {
              "function": "len",
              "line": 575
            },
            {
              "function": "len",
              "line": 665
            },
            {
              "function": "get",
              "line": 680
            },
            {
              "function": "append",
              "line": 685
            },
            {
              "function": "info",
              "line": 686
            },
            {
              "function": "_is_in_cycle",
              "line": 693
            },
            {
              "function": "lower",
              "line": 701
            },
            {
              "function": "get",
              "line": 703
            },
            {
              "function": "get",
              "line": 1198
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "get",
              "line": 307
            },
            {
              "function": "get",
              "line": 308
            },
            {
              "function": "get",
              "line": 689
            },
            {
              "function": "len",
              "line": 704
            },
            {
              "function": "append",
              "line": 706
            },
            {
              "function": "info",
              "line": 707
            },
            {
              "function": "len",
              "line": 187
            },
            {
              "function": "get",
              "line": 267
            },
            {
              "function": "get",
              "line": 277
            },
            {
              "function": "pop",
              "line": 695
            },
            {
              "function": "append",
              "line": 696
            },
            {
              "function": "info",
              "line": 697
            },
            {
              "function": "get",
              "line": 701
            },
            {
              "function": "get",
              "line": 200
            },
            {
              "function": "len",
              "line": 201
            }
          ]
        },
        "backend/langgraph_system/workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 172,
              "async": false,
              "calls": [
                "get_tool_registry",
                "_init_real_agents",
                "ApprovalManager",
                "IntelligentQueryHandler",
                "info",
                "error",
                "DynamicWorkflowManager",
                "WorkflowSelfDiagnosisSystem",
                "SafeOrchestratorExecutor",
                "DevelopmentQueryHandler",
                "EnhancedQueryClassifier",
                "_init_agent_memories"
              ],
              "parameters": [
                "self",
                "websocket_manager",
                "db_path",
                "memory_db_path"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_init_agent_memories",
              "line": 250,
              "async": false,
              "calls": [
                "PersistentAgentMemory"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_init_real_agents",
              "line": 272,
              "async": false,
              "calls": [
                "FixerBotAgent",
                "DocuBotAgent",
                "exception",
                "ResearchAgent",
                "PerformanceBot",
                "ReviewerGPTAgent",
                "info",
                "error",
                "OpusArbitratorAgent",
                "format_exc",
                "CodeSmithAgent",
                "VideoAgent",
                "TradeStratAgent",
                "ArchitectAgent",
                "len",
                "warning",
                "OrchestratorAgent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "create_task_ledger",
              "line": 379,
              "async": false,
              "calls": [
                "TaskLedger",
                "get",
                "extract_success_criteria",
                "now"
              ],
              "parameters": [
                "self",
                "task",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "extract_success_criteria",
              "line": 413,
              "async": false,
              "calls": [
                "lower",
                "append",
                "any"
              ],
              "parameters": [
                "self",
                "task"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "create_progress_ledger",
              "line": 437,
              "async": false,
              "calls": [
                "len",
                "ProgressLedger",
                "update_from_steps"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "identify_parallel_groups",
              "line": 500,
              "async": false,
              "calls": [
                "set",
                "_has_dependency_conflict",
                "append",
                "len",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_has_dependency_conflict",
              "line": 542,
              "async": false,
              "calls": [
                "_get_all_dependencies"
              ],
              "parameters": [
                "self",
                "step1",
                "step2",
                "all_steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_get_all_dependencies",
              "line": 560,
              "async": false,
              "calls": [
                "next",
                "set",
                "pop",
                "list",
                "append",
                "add"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_dependencies_met",
              "line": 2160,
              "async": false,
              "calls": [
                "next"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_get_current_step",
              "line": 2168,
              "async": false,
              "calls": [
                "get",
                "next"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_get_step_by_agent",
              "line": 2175,
              "async": false,
              "calls": [
                "reversed"
              ],
              "parameters": [
                "self",
                "state",
                "agent"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_check_escalation_needed",
              "line": 2182,
              "async": false,
              "calls": [
                "dirname",
                "join",
                "chr",
                "insert",
                "enumerate",
                "error",
                "info",
                "any",
                "get",
                "len",
                "getattr"
              ],
              "parameters": [
                "self",
                "state",
                "suggested_agent",
                "suggested_query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_calculate_agent_confidence",
              "line": 2635,
              "async": false,
              "calls": [
                "get",
                "items",
                "debug"
              ],
              "parameters": [
                "self",
                "task_lower"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_create_single_agent_step",
              "line": 2690,
              "async": false,
              "calls": [
                "ExecutionStep",
                "info",
                "enhance_orchestrator_step",
                "get_intelligent_response",
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "agent",
                "task"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_detect_task_complexity",
              "line": 2738,
              "async": false,
              "calls": [
                "endswith",
                "split",
                "info",
                "any",
                "count",
                "lower",
                "len",
                "strip"
              ],
              "parameters": [
                "self",
                "task"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_apply_plan_modifications",
              "line": 2975,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "plan",
                "modifications"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "_format_proposal_for_user",
              "line": 3241,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "proposal"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            },
            {
              "name": "create_workflow",
              "line": 3655,
              "async": false,
              "calls": [
                "add_conditional_edges",
                "add_node",
                "StateGraph",
                "set_entry_point",
                "add_edge"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/workflow.py"
            }
          ],
          "classes": [
            {
              "name": "AgentWorkflow",
              "line": 167,
              "methods": [
                "__init__",
                "_init_agent_memories",
                "_init_real_agents",
                "create_task_ledger",
                "extract_success_criteria",
                "create_progress_ledger",
                "identify_parallel_groups",
                "_has_dependency_conflict",
                "_get_all_dependencies",
                "_dependencies_met",
                "_get_current_step",
                "_get_step_by_agent",
                "_check_escalation_needed",
                "_calculate_agent_confidence",
                "_create_single_agent_step",
                "_detect_task_complexity",
                "_apply_plan_modifications",
                "_format_proposal_for_user",
                "create_workflow"
              ],
              "bases": [],
              "file": "backend/langgraph_system/workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "langgraph.graph",
              "names": [
                "StateGraph",
                "END"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.memory",
              "names": [
                "MemorySaver"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "create_initial_state",
                "ExecutionStep",
                "TaskLedger",
                "ProgressLedger"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "extensions",
              "names": [
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager",
                "get_tool_registry"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "cache_manager",
              "names": [
                "CacheManager"
              ],
              "line": 30
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 69
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 70
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.sqlite.aio",
              "names": [
                "AsyncSqliteSaver"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "intelligent_query_handler",
              "names": [
                "IntelligentQueryHandler"
              ],
              "line": 36
            },
            {
              "type": "from_import",
              "module": "workflow_self_diagnosis",
              "names": [
                "WorkflowSelfDiagnosisSystem"
              ],
              "line": 46
            },
            {
              "type": "from_import",
              "module": "safe_orchestrator_executor",
              "names": [
                "SafeOrchestratorExecutor"
              ],
              "line": 56
            },
            {
              "type": "from_import",
              "module": "query_classifier",
              "names": [
                "EnhancedQueryClassifier"
              ],
              "line": 57
            },
            {
              "type": "from_import",
              "module": "development_query_handler",
              "names": [
                "DevelopmentQueryHandler"
              ],
              "line": 58
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 77
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 78
            },
            {
              "type": "from_import",
              "module": "agents.specialized.reviewer_gpt_agent",
              "names": [
                "ReviewerGPTAgent"
              ],
              "line": 79
            },
            {
              "type": "from_import",
              "module": "agents.specialized.fixerbot_agent",
              "names": [
                "FixerBotAgent"
              ],
              "line": 80
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest",
                "TaskResult"
              ],
              "line": 81
            },
            {
              "type": "from_import",
              "module": "agents.specialized.orchestrator_agent",
              "names": [
                "OrchestratorAgent"
              ],
              "line": 90
            },
            {
              "type": "from_import",
              "module": "agents.specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 99
            },
            {
              "type": "from_import",
              "module": "agents.specialized.docubot_agent",
              "names": [
                "DocuBotAgent"
              ],
              "line": 108
            },
            {
              "type": "from_import",
              "module": "agents.specialized.performance_bot",
              "names": [
                "PerformanceBot"
              ],
              "line": 117
            },
            {
              "type": "from_import",
              "module": "agents.specialized.tradestrat_agent",
              "names": [
                "TradeStratAgent"
              ],
              "line": 126
            },
            {
              "type": "from_import",
              "module": "agents.specialized.opus_arbitrator_agent",
              "names": [
                "OpusArbitratorAgent"
              ],
              "line": 135
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "settings"
              ],
              "line": 144
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.sqlite",
              "names": [
                "SqliteSaver"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.specialized.video_agent",
              "names": [
                "VideoAgent"
              ],
              "line": 155
            },
            {
              "type": "from_import",
              "module": "agents.specialized.fixer_gpt_agent",
              "names": [
                "FixerGPTAgent"
              ],
              "line": 1523
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 2205
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 2208
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 2209
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 2211
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 3189
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 3190
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 3389
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 3390
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 368
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 1157
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 32
            },
            {
              "function": "append",
              "line": 71
            },
            {
              "function": "info",
              "line": 38
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "dirname",
              "line": 71
            },
            {
              "function": "info",
              "line": 83
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 101
            },
            {
              "function": "info",
              "line": 110
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 128
            },
            {
              "function": "info",
              "line": 137
            },
            {
              "function": "info",
              "line": 164
            },
            {
              "function": "AgentWorkflow",
              "line": 3925
            },
            {
              "function": "warning",
              "line": 20
            },
            {
              "function": "warning",
              "line": 40
            },
            {
              "function": "warning",
              "line": 50
            },
            {
              "function": "warning",
              "line": 62
            },
            {
              "function": "dirname",
              "line": 71
            },
            {
              "function": "warning",
              "line": 85
            },
            {
              "function": "warning",
              "line": 94
            },
            {
              "function": "warning",
              "line": 95
            },
            {
              "function": "warning",
              "line": 103
            },
            {
              "function": "warning",
              "line": 104
            },
            {
              "function": "warning",
              "line": 112
            },
            {
              "function": "warning",
              "line": 113
            },
            {
              "function": "warning",
              "line": 121
            },
            {
              "function": "warning",
              "line": 122
            },
            {
              "function": "warning",
              "line": 130
            },
            {
              "function": "warning",
              "line": 131
            },
            {
              "function": "warning",
              "line": 139
            },
            {
              "function": "warning",
              "line": 140
            },
            {
              "function": "warning",
              "line": 148
            },
            {
              "function": "info",
              "line": 157
            },
            {
              "function": "get_tool_registry",
              "line": 191
            },
            {
              "function": "ApprovalManager",
              "line": 192
            },
            {
              "function": "DynamicWorkflowManager",
              "line": 193
            },
            {
              "function": "_init_agent_memories",
              "line": 197
            },
            {
              "function": "_init_real_agents",
              "line": 201
            },
            {
              "function": "info",
              "line": 278
            },
            {
              "function": "now",
              "line": 383
            },
            {
              "function": "extract_success_criteria",
              "line": 384
            },
            {
              "function": "TaskLedger",
              "line": 403
            },
            {
              "function": "any",
              "line": 420
            },
            {
              "function": "any",
              "line": 422
            },
            {
              "function": "any",
              "line": 424
            },
            {
              "function": "any",
              "line": 426
            },
            {
              "function": "any",
              "line": 428
            },
            {
              "function": "ProgressLedger",
              "line": 441
            },
            {
              "function": "update_from_steps",
              "line": 451
            },
            {
              "function": "set",
              "line": 509
            },
            {
              "function": "_get_all_dependencies",
              "line": 551
            },
            {
              "function": "_get_all_dependencies",
              "line": 552
            },
            {
              "function": "set",
              "line": 564
            },
            {
              "function": "list",
              "line": 565
            },
            {
              "function": "info",
              "line": 661
            },
            {
              "function": "get",
              "line": 665
            },
            {
              "function": "get",
              "line": 735
            },
            {
              "function": "create_progress_ledger",
              "line": 782
            },
            {
              "function": "info",
              "line": 784
            },
            {
              "function": "identify_parallel_groups",
              "line": 787
            },
            {
              "function": "list",
              "line": 853
            },
            {
              "function": "info",
              "line": 855
            },
            {
              "function": "store_memory",
              "line": 858
            },
            {
              "function": "info",
              "line": 875
            },
            {
              "function": "get",
              "line": 878
            },
            {
              "function": "get",
              "line": 923
            },
            {
              "function": "info",
              "line": 924
            },
            {
              "function": "info",
              "line": 970
            },
            {
              "function": "discover_tools_for_agent",
              "line": 975
            },
            {
              "function": "_get_current_step",
              "line": 979
            },
            {
              "function": "info",
              "line": 980
            },
            {
              "function": "recall_similar",
              "line": 986
            },
            {
              "function": "extend",
              "line": 987
            },
            {
              "function": "info",
              "line": 1212
            },
            {
              "function": "discover_tools_for_agent",
              "line": 1216
            },
            {
              "function": "next",
              "line": 1221
            },
            {
              "function": "info",
              "line": 1229
            },
            {
              "function": "recall_similar",
              "line": 1240
            },
            {
              "function": "info",
              "line": 1304
            },
            {
              "function": "next",
              "line": 1310
            },
            {
              "function": "info",
              "line": 1318
            },
            {
              "function": "info",
              "line": 1375
            },
            {
              "function": "next",
              "line": 1381
            },
            {
              "function": "info",
              "line": 1389
            },
            {
              "function": "_get_step_by_agent",
              "line": 1392
            },
            {
              "function": "info",
              "line": 1440
            },
            {
              "function": "next",
              "line": 1444
            },
            {
              "function": "info",
              "line": 1452
            },
            {
              "function": "info",
              "line": 1507
            },
            {
              "function": "next",
              "line": 1511
            },
            {
              "function": "info",
              "line": 1519
            },
            {
              "function": "info",
              "line": 1576
            },
            {
              "function": "next",
              "line": 1580
            },
            {
              "function": "info",
              "line": 1588
            },
            {
              "function": "info",
              "line": 1649
            },
            {
              "function": "next",
              "line": 1653
            },
            {
              "function": "info",
              "line": 1661
            },
            {
              "function": "info",
              "line": 1722
            },
            {
              "function": "next",
              "line": 1726
            },
            {
              "function": "info",
              "line": 1734
            },
            {
              "function": "info",
              "line": 1796
            },
            {
              "function": "next",
              "line": 1800
            },
            {
              "function": "info",
              "line": 1808
            },
            {
              "function": "info",
              "line": 1879
            },
            {
              "function": "next",
              "line": 1883
            },
            {
              "function": "info",
              "line": 1891
            },
            {
              "function": "get",
              "line": 1982
            },
            {
              "function": "info",
              "line": 1983
            },
            {
              "function": "info",
              "line": 1984
            },
            {
              "function": "enumerate",
              "line": 1985
            },
            {
              "function": "info",
              "line": 2069
            },
            {
              "function": "info",
              "line": 2070
            },
            {
              "function": "create_task",
              "line": 2073
            },
            {
              "function": "get",
              "line": 2076
            },
            {
              "function": "get",
              "line": 2097
            },
            {
              "function": "any",
              "line": 2104
            },
            {
              "function": "info",
              "line": 2157
            },
            {
              "function": "get",
              "line": 2170
            },
            {
              "function": "reversed",
              "line": 2177
            },
            {
              "function": "get",
              "line": 2213
            },
            {
              "function": "get",
              "line": 2214
            },
            {
              "function": "get",
              "line": 2215
            },
            {
              "function": "getattr",
              "line": 2328
            },
            {
              "function": "get",
              "line": 2359
            },
            {
              "function": "_create_single_agent_step",
              "line": 2453
            },
            {
              "function": "lower",
              "line": 2489
            },
            {
              "function": "lower",
              "line": 2505
            },
            {
              "function": "any",
              "line": 2513
            },
            {
              "function": "lower",
              "line": 2532
            },
            {
              "function": "any",
              "line": 2536
            },
            {
              "function": "any",
              "line": 2541
            },
            {
              "function": "_calculate_agent_confidence",
              "line": 2591
            },
            {
              "function": "info",
              "line": 2617
            },
            {
              "function": "items",
              "line": 2675
            },
            {
              "function": "items",
              "line": 2682
            },
            {
              "function": "ExecutionStep",
              "line": 2722
            },
            {
              "function": "lower",
              "line": 2745
            },
            {
              "function": "any",
              "line": 2776
            },
            {
              "function": "any",
              "line": 2794
            },
            {
              "function": "info",
              "line": 2799
            },
            {
              "function": "info",
              "line": 2812
            },
            {
              "function": "lower",
              "line": 2849
            },
            {
              "function": "any",
              "line": 2850
            },
            {
              "function": "_create_single_agent_step",
              "line": 2896
            },
            {
              "function": "warning",
              "line": 3016
            },
            {
              "function": "warning",
              "line": 3102
            },
            {
              "function": "info",
              "line": 3124
            },
            {
              "function": "get",
              "line": 3126
            },
            {
              "function": "_get_current_step",
              "line": 3127
            },
            {
              "function": "warning",
              "line": 3231
            },
            {
              "function": "info",
              "line": 3291
            },
            {
              "function": "get",
              "line": 3293
            },
            {
              "function": "get",
              "line": 3294
            },
            {
              "function": "info",
              "line": 3327
            },
            {
              "function": "info",
              "line": 3345
            },
            {
              "function": "get",
              "line": 3347
            },
            {
              "function": "get",
              "line": 3348
            },
            {
              "function": "warning",
              "line": 3408
            },
            {
              "function": "warning",
              "line": 3462
            },
            {
              "function": "warning",
              "line": 3515
            },
            {
              "function": "warning",
              "line": 3565
            },
            {
              "function": "warning",
              "line": 3613
            },
            {
              "function": "StateGraph",
              "line": 3659
            },
            {
              "function": "add_node",
              "line": 3662
            },
            {
              "function": "add_node",
              "line": 3663
            },
            {
              "function": "add_node",
              "line": 3664
            },
            {
              "function": "add_node",
              "line": 3665
            },
            {
              "function": "add_node",
              "line": 3666
            },
            {
              "function": "add_node",
              "line": 3667
            },
            {
              "function": "add_node",
              "line": 3668
            },
            {
              "function": "add_node",
              "line": 3669
            },
            {
              "function": "add_node",
              "line": 3670
            },
            {
              "function": "add_node",
              "line": 3671
            },
            {
              "function": "add_node",
              "line": 3672
            },
            {
              "function": "add_node",
              "line": 3673
            },
            {
              "function": "add_node",
              "line": 3674
            },
            {
              "function": "set_entry_point",
              "line": 3677
            },
            {
              "function": "add_edge",
              "line": 3681
            },
            {
              "function": "add_conditional_edges",
              "line": 3684
            },
            {
              "function": "add_conditional_edges",
              "line": 3707
            },
            {
              "function": "create_workflow",
              "line": 3757
            },
            {
              "function": "compile",
              "line": 3771
            },
            {
              "function": "info",
              "line": 3774
            },
            {
              "function": "create_initial_state",
              "line": 3802
            },
            {
              "function": "append",
              "line": 3811
            },
            {
              "function": "compile_workflow",
              "line": 3932
            },
            {
              "function": "abspath",
              "line": 71
            },
            {
              "function": "warning",
              "line": 159
            },
            {
              "function": "warning",
              "line": 160
            },
            {
              "function": "warning",
              "line": 161
            },
            {
              "function": "PersistentAgentMemory",
              "line": 267
            },
            {
              "function": "warning",
              "line": 275
            },
            {
              "function": "info",
              "line": 371
            },
            {
              "function": "get",
              "line": 401
            },
            {
              "function": "append",
              "line": 421
            },
            {
              "function": "append",
              "line": 423
            },
            {
              "function": "append",
              "line": 425
            },
            {
              "function": "append",
              "line": 427
            },
            {
              "function": "append",
              "line": 429
            },
            {
              "function": "append",
              "line": 433
            },
            {
              "function": "list",
              "line": 496
            },
            {
              "function": "add",
              "line": 538
            },
            {
              "function": "pop",
              "line": 568
            },
            {
              "function": "next",
              "line": 569
            },
            {
              "function": "debug",
              "line": 649
            },
            {
              "function": "info",
              "line": 666
            },
            {
              "function": "get",
              "line": 667
            },
            {
              "function": "get",
              "line": 668
            },
            {
              "function": "get",
              "line": 669
            },
            {
              "function": "list",
              "line": 676
            },
            {
              "function": "append",
              "line": 677
            },
            {
              "function": "append",
              "line": 678
            },
            {
              "function": "list",
              "line": 687
            },
            {
              "function": "append",
              "line": 688
            },
            {
              "function": "info",
              "line": 697
            },
            {
              "function": "info",
              "line": 698
            },
            {
              "function": "_check_escalation_needed",
              "line": 701
            },
            {
              "function": "get",
              "line": 710
            },
            {
              "function": "ExecutionStep",
              "line": 713
            },
            {
              "function": "append",
              "line": 722
            },
            {
              "function": "list",
              "line": 723
            },
            {
              "function": "info",
              "line": 730
            },
            {
              "function": "info",
              "line": 736
            },
            {
              "function": "info",
              "line": 737
            },
            {
              "function": "get",
              "line": 743
            },
            {
              "function": "recall_similar",
              "line": 758
            },
            {
              "function": "get_learned_solution",
              "line": 762
            },
            {
              "function": "_create_execution_plan",
              "line": 771
            },
            {
              "function": "create_task_ledger",
              "line": 777
            },
            {
              "function": "info",
              "line": 779
            },
            {
              "function": "info",
              "line": 789
            },
            {
              "function": "items",
              "line": 790
            },
            {
              "function": "info",
              "line": 796
            },
            {
              "function": "warning",
              "line": 838
            },
            {
              "function": "info",
              "line": 844
            },
            {
              "function": "get",
              "line": 881
            },
            {
              "function": "warning",
              "line": 918
            },
            {
              "function": "info",
              "line": 926
            },
            {
              "function": "info",
              "line": 934
            },
            {
              "function": "info",
              "line": 935
            },
            {
              "function": "info",
              "line": 936
            },
            {
              "function": "info",
              "line": 937
            },
            {
              "function": "list",
              "line": 942
            },
            {
              "function": "info",
              "line": 943
            },
            {
              "function": "info",
              "line": 946
            },
            {
              "function": "warning",
              "line": 982
            },
            {
              "function": "get",
              "line": 993
            },
            {
              "function": "warning",
              "line": 1181
            },
            {
              "function": "list",
              "line": 1185
            },
            {
              "function": "store_memory",
              "line": 1187
            },
            {
              "function": "error",
              "line": 1226
            },
            {
              "function": "_send_agent_activity",
              "line": 1232
            },
            {
              "function": "info",
              "line": 1251
            },
            {
              "function": "list",
              "line": 1262
            },
            {
              "function": "info",
              "line": 1263
            },
            {
              "function": "store_memory",
              "line": 1283
            },
            {
              "function": "error",
              "line": 1315
            },
            {
              "function": "list",
              "line": 1327
            },
            {
              "function": "any",
              "line": 1331
            },
            {
              "function": "error",
              "line": 1386
            },
            {
              "function": "isinstance",
              "line": 1395
            },
            {
              "function": "list",
              "line": 1410
            },
            {
              "function": "isinstance",
              "line": 1415
            },
            {
              "function": "zip",
              "line": 1419
            },
            {
              "function": "error",
              "line": 1449
            },
            {
              "function": "list",
              "line": 1479
            },
            {
              "function": "list",
              "line": 1482
            },
            {
              "function": "append",
              "line": 1483
            },
            {
              "function": "info",
              "line": 1492
            },
            {
              "function": "error",
              "line": 1516
            },
            {
              "function": "get",
              "line": 1530
            },
            {
              "function": "FixerGPTAgent",
              "line": 1533
            },
            {
              "function": "TaskRequest",
              "line": 1536
            },
            {
              "function": "info",
              "line": 1550
            },
            {
              "function": "list",
              "line": 1555
            },
            {
              "function": "info",
              "line": 1562
            },
            {
              "function": "error",
              "line": 1585
            },
            {
              "function": "error",
              "line": 1658
            },
            {
              "function": "error",
              "line": 1731
            },
            {
              "function": "error",
              "line": 1805
            },
            {
              "function": "error",
              "line": 1888
            },
            {
              "function": "get",
              "line": 1978
            },
            {
              "function": "info",
              "line": 1979
            },
            {
              "function": "info",
              "line": 1986
            },
            {
              "function": "info",
              "line": 2018
            },
            {
              "function": "get",
              "line": 2035
            },
            {
              "function": "get",
              "line": 2036
            },
            {
              "function": "route_to_next_agent",
              "line": 2055
            },
            {
              "function": "check_and_handle_timeouts",
              "line": 2073
            },
            {
              "function": "update_from_steps",
              "line": 2077
            },
            {
              "function": "info",
              "line": 2079
            },
            {
              "function": "create_task",
              "line": 2094
            },
            {
              "function": "info",
              "line": 2098
            },
            {
              "function": "warning",
              "line": 2106
            },
            {
              "function": "info",
              "line": 2115
            },
            {
              "function": "error",
              "line": 2141
            },
            {
              "function": "error",
              "line": 2142
            },
            {
              "function": "list",
              "line": 2148
            },
            {
              "function": "any",
              "line": 2150
            },
            {
              "function": "next",
              "line": 2163
            },
            {
              "function": "next",
              "line": 2172
            },
            {
              "function": "get",
              "line": 2260
            },
            {
              "function": "any",
              "line": 2313
            },
            {
              "function": "error",
              "line": 2330
            },
            {
              "function": "should_use_safe_execution",
              "line": 2364
            },
            {
              "function": "info",
              "line": 2365
            },
            {
              "function": "classify_query",
              "line": 2384
            },
            {
              "function": "any",
              "line": 2413
            },
            {
              "function": "info",
              "line": 2441
            },
            {
              "function": "info",
              "line": 2449
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2450
            },
            {
              "function": "info",
              "line": 2546
            },
            {
              "function": "info",
              "line": 2587
            },
            {
              "function": "max",
              "line": 2595
            },
            {
              "function": "info",
              "line": 2621
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2622
            },
            {
              "function": "_create_single_agent_step",
              "line": 2630
            },
            {
              "function": "_create_single_agent_step",
              "line": 2633
            },
            {
              "function": "get_intelligent_response",
              "line": 2718
            },
            {
              "function": "info",
              "line": 2719
            },
            {
              "function": "enhance_orchestrator_step",
              "line": 2734
            },
            {
              "function": "any",
              "line": 2760
            },
            {
              "function": "info",
              "line": 2777
            },
            {
              "function": "any",
              "line": 2786
            },
            {
              "function": "info",
              "line": 2795
            },
            {
              "function": "warning",
              "line": 2809
            },
            {
              "function": "_create_single_agent_step",
              "line": 2810
            },
            {
              "function": "TaskRequest",
              "line": 2818
            },
            {
              "function": "info",
              "line": 2851
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2893
            },
            {
              "function": "get",
              "line": 2911
            },
            {
              "function": "any",
              "line": 2929
            },
            {
              "function": "get",
              "line": 2942
            },
            {
              "function": "get",
              "line": 2943
            },
            {
              "function": "lower",
              "line": 2989
            },
            {
              "function": "info",
              "line": 2990
            },
            {
              "function": "CacheManager",
              "line": 2991
            },
            {
              "function": "fill_caches",
              "line": 2992
            },
            {
              "function": "info",
              "line": 2997
            },
            {
              "function": "sleep",
              "line": 3017
            },
            {
              "function": "info",
              "line": 3069
            },
            {
              "function": "TaskRequest",
              "line": 3083
            },
            {
              "function": "get",
              "line": 3409
            },
            {
              "function": "info",
              "line": 3421
            },
            {
              "function": "sleep",
              "line": 3463
            },
            {
              "function": "info",
              "line": 3477
            },
            {
              "function": "sleep",
              "line": 3516
            },
            {
              "function": "info",
              "line": 3529
            },
            {
              "function": "sleep",
              "line": 3566
            },
            {
              "function": "info",
              "line": 3588
            },
            {
              "function": "sleep",
              "line": 3614
            },
            {
              "function": "add_conditional_edges",
              "line": 3729
            },
            {
              "function": "MemorySaver",
              "line": 3764
            },
            {
              "function": "info",
              "line": 3765
            },
            {
              "function": "compile_workflow",
              "line": 3820
            },
            {
              "function": "now",
              "line": 3844
            },
            {
              "function": "get",
              "line": 3847
            },
            {
              "function": "info",
              "line": 3886
            },
            {
              "function": "WorkflowSelfDiagnosisSystem",
              "line": 211
            },
            {
              "function": "info",
              "line": 212
            },
            {
              "function": "IntelligentQueryHandler",
              "line": 221
            },
            {
              "function": "info",
              "line": 222
            },
            {
              "function": "SafeOrchestratorExecutor",
              "line": 233
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 234
            },
            {
              "function": "DevelopmentQueryHandler",
              "line": 235
            },
            {
              "function": "info",
              "line": 236
            },
            {
              "function": "ArchitectAgent",
              "line": 282
            },
            {
              "function": "CodeSmithAgent",
              "line": 283
            },
            {
              "function": "ReviewerGPTAgent",
              "line": 284
            },
            {
              "function": "FixerBotAgent",
              "line": 285
            },
            {
              "function": "error",
              "line": 373
            },
            {
              "function": "exception",
              "line": 374
            },
            {
              "function": "len",
              "line": 442
            },
            {
              "function": "is_timeout",
              "line": 462
            },
            {
              "function": "warning",
              "line": 463
            },
            {
              "function": "append",
              "line": 466
            },
            {
              "function": "can_retry",
              "line": 474
            },
            {
              "function": "len",
              "line": 528
            },
            {
              "function": "get",
              "line": 620
            },
            {
              "function": "isoformat",
              "line": 627
            },
            {
              "function": "send_json",
              "line": 648
            },
            {
              "function": "error",
              "line": 652
            },
            {
              "function": "get",
              "line": 672
            },
            {
              "function": "get",
              "line": 676
            },
            {
              "function": "get",
              "line": 687
            },
            {
              "function": "warning",
              "line": 707
            },
            {
              "function": "len",
              "line": 711
            },
            {
              "function": "enumerate",
              "line": 744
            },
            {
              "function": "info",
              "line": 764
            },
            {
              "function": "append",
              "line": 765
            },
            {
              "function": "info",
              "line": 792
            },
            {
              "function": "get",
              "line": 842
            },
            {
              "function": "get",
              "line": 842
            },
            {
              "function": "get",
              "line": 863
            },
            {
              "function": "info",
              "line": 885
            },
            {
              "function": "info",
              "line": 888
            },
            {
              "function": "_dependencies_met",
              "line": 927
            },
            {
              "function": "info",
              "line": 929
            },
            {
              "function": "list",
              "line": 954
            },
            {
              "function": "info",
              "line": 955
            },
            {
              "function": "info",
              "line": 997
            },
            {
              "function": "list",
              "line": 1001
            },
            {
              "function": "store_memory",
              "line": 1004
            },
            {
              "function": "info",
              "line": 1012
            },
            {
              "function": "info",
              "line": 1017
            },
            {
              "function": "get",
              "line": 1018
            },
            {
              "function": "_format_proposal_for_user",
              "line": 1027
            },
            {
              "function": "append",
              "line": 1030
            },
            {
              "function": "info",
              "line": 1050
            },
            {
              "function": "get",
              "line": 1056
            },
            {
              "function": "info",
              "line": 1057
            },
            {
              "function": "ExecutionStep",
              "line": 1068
            },
            {
              "function": "info",
              "line": 1075
            },
            {
              "function": "info",
              "line": 1084
            },
            {
              "function": "info",
              "line": 1087
            },
            {
              "function": "info",
              "line": 1096
            },
            {
              "function": "_format_proposal_for_user",
              "line": 1114
            },
            {
              "function": "append",
              "line": 1117
            },
            {
              "function": "list",
              "line": 1164
            },
            {
              "function": "store_memory",
              "line": 1167
            },
            {
              "function": "info",
              "line": 1175
            },
            {
              "function": "_execute_architect_task",
              "line": 1182
            },
            {
              "function": "error",
              "line": 1196
            },
            {
              "function": "str",
              "line": 1198
            },
            {
              "function": "append",
              "line": 1199
            },
            {
              "function": "list",
              "line": 1204
            },
            {
              "function": "_execute_codesmith_task",
              "line": 1248
            },
            {
              "function": "_send_agent_activity",
              "line": 1254
            },
            {
              "function": "error",
              "line": 1292
            },
            {
              "function": "str",
              "line": 1294
            },
            {
              "function": "list",
              "line": 1296
            },
            {
              "function": "_execute_reviewer_task",
              "line": 1322
            },
            {
              "function": "isinstance",
              "line": 1330
            },
            {
              "function": "lower",
              "line": 1330
            },
            {
              "function": "lower",
              "line": 1330
            },
            {
              "function": "warning",
              "line": 1337
            },
            {
              "function": "info",
              "line": 1341
            },
            {
              "function": "isinstance",
              "line": 1344
            },
            {
              "function": "get",
              "line": 1344
            },
            {
              "function": "store_memory",
              "line": 1354
            },
            {
              "function": "error",
              "line": 1363
            },
            {
              "function": "str",
              "line": 1365
            },
            {
              "function": "list",
              "line": 1367
            },
            {
              "function": "get",
              "line": 1396
            },
            {
              "function": "_execute_fixer_task",
              "line": 1405
            },
            {
              "function": "get",
              "line": 1416
            },
            {
              "function": "learn_pattern",
              "line": 1420
            },
            {
              "function": "error",
              "line": 1427
            },
            {
              "function": "str",
              "line": 1429
            },
            {
              "function": "list",
              "line": 1431
            },
            {
              "function": "TaskRequest",
              "line": 1462
            },
            {
              "function": "info",
              "line": 1470
            },
            {
              "function": "warning",
              "line": 1473
            },
            {
              "function": "get",
              "line": 1482
            },
            {
              "function": "error",
              "line": 1495
            },
            {
              "function": "str",
              "line": 1497
            },
            {
              "function": "list",
              "line": 1498
            },
            {
              "function": "execute",
              "line": 1547
            },
            {
              "function": "error",
              "line": 1565
            },
            {
              "function": "str",
              "line": 1567
            },
            {
              "function": "list",
              "line": 1568
            },
            {
              "function": "TaskRequest",
              "line": 1602
            },
            {
              "function": "info",
              "line": 1616
            },
            {
              "function": "list",
              "line": 1621
            },
            {
              "function": "append",
              "line": 1624
            },
            {
              "function": "warning",
              "line": 1632
            },
            {
              "function": "list",
              "line": 1635
            },
            {
              "function": "error",
              "line": 1638
            },
            {
              "function": "str",
              "line": 1640
            },
            {
              "function": "list",
              "line": 1641
            },
            {
              "function": "TaskRequest",
              "line": 1675
            },
            {
              "function": "info",
              "line": 1689
            },
            {
              "function": "list",
              "line": 1694
            },
            {
              "function": "append",
              "line": 1697
            },
            {
              "function": "warning",
              "line": 1705
            },
            {
              "function": "list",
              "line": 1708
            },
            {
              "function": "error",
              "line": 1711
            },
            {
              "function": "str",
              "line": 1713
            },
            {
              "function": "list",
              "line": 1714
            },
            {
              "function": "get",
              "line": 1742
            },
            {
              "function": "TaskRequest",
              "line": 1749
            },
            {
              "function": "info",
              "line": 1763
            },
            {
              "function": "list",
              "line": 1768
            },
            {
              "function": "append",
              "line": 1771
            },
            {
              "function": "warning",
              "line": 1779
            },
            {
              "function": "list",
              "line": 1782
            },
            {
              "function": "error",
              "line": 1785
            },
            {
              "function": "str",
              "line": 1787
            },
            {
              "function": "list",
              "line": 1788
            },
            {
              "function": "TaskRequest",
              "line": 1825
            },
            {
              "function": "info",
              "line": 1840
            },
            {
              "function": "list",
              "line": 1845
            },
            {
              "function": "append",
              "line": 1848
            },
            {
              "function": "warning",
              "line": 1861
            },
            {
              "function": "list",
              "line": 1864
            },
            {
              "function": "error",
              "line": 1867
            },
            {
              "function": "str",
              "line": 1869
            },
            {
              "function": "list",
              "line": 1870
            },
            {
              "function": "get",
              "line": 1899
            },
            {
              "function": "TaskRequest",
              "line": 1909
            },
            {
              "function": "info",
              "line": 1927
            },
            {
              "function": "list",
              "line": 1932
            },
            {
              "function": "append",
              "line": 1935
            },
            {
              "function": "append",
              "line": 1945
            },
            {
              "function": "warning",
              "line": 1953
            },
            {
              "function": "list",
              "line": 1956
            },
            {
              "function": "error",
              "line": 1959
            },
            {
              "function": "str",
              "line": 1961
            },
            {
              "function": "list",
              "line": 1962
            },
            {
              "function": "info",
              "line": 2022
            },
            {
              "function": "info",
              "line": 2025
            },
            {
              "function": "get",
              "line": 2035
            },
            {
              "function": "info",
              "line": 2040
            },
            {
              "function": "run_health_check",
              "line": 2094
            },
            {
              "function": "_dependencies_met",
              "line": 2118
            },
            {
              "function": "error",
              "line": 2144
            },
            {
              "function": "info",
              "line": 2153
            },
            {
              "function": "insert",
              "line": 2210
            },
            {
              "function": "len",
              "line": 2220
            },
            {
              "function": "info",
              "line": 2309
            },
            {
              "function": "info",
              "line": 2388
            },
            {
              "function": "info",
              "line": 2400
            },
            {
              "function": "handle_development_query",
              "line": 2420
            },
            {
              "function": "_use_orchestrator_for_planning",
              "line": 2443
            },
            {
              "function": "lower",
              "line": 2462
            },
            {
              "function": "lower",
              "line": 2462
            },
            {
              "function": "ExecutionStep",
              "line": 2476
            },
            {
              "function": "ExecutionStep",
              "line": 2492
            },
            {
              "function": "ExecutionStep",
              "line": 2519
            },
            {
              "function": "ExecutionStep",
              "line": 2549
            },
            {
              "function": "ExecutionStep",
              "line": 2558
            },
            {
              "function": "ExecutionStep",
              "line": 2567
            },
            {
              "function": "ExecutionStep",
              "line": 2576
            },
            {
              "function": "items",
              "line": 2595
            },
            {
              "function": "info",
              "line": 2600
            },
            {
              "function": "_create_single_agent_step",
              "line": 2601
            },
            {
              "function": "info",
              "line": 2626
            },
            {
              "function": "get",
              "line": 2726
            },
            {
              "function": "len",
              "line": 2750
            },
            {
              "function": "len",
              "line": 2751
            },
            {
              "function": "any",
              "line": 2754
            },
            {
              "function": "count",
              "line": 2766
            },
            {
              "function": "len",
              "line": 2773
            },
            {
              "function": "len",
              "line": 2783
            },
            {
              "function": "endswith",
              "line": 2791
            },
            {
              "function": "execute",
              "line": 2819
            },
            {
              "function": "info",
              "line": 2841
            },
            {
              "function": "error",
              "line": 2845
            },
            {
              "function": "warning",
              "line": 2846
            },
            {
              "function": "ExecutionStep",
              "line": 2853
            },
            {
              "function": "ExecutionStep",
              "line": 2862
            },
            {
              "function": "ExecutionStep",
              "line": 2871
            },
            {
              "function": "ExecutionStep",
              "line": 2880
            },
            {
              "function": "append",
              "line": 2919
            },
            {
              "function": "len",
              "line": 2937
            },
            {
              "function": "list",
              "line": 2938
            },
            {
              "function": "store_memory",
              "line": 2954
            },
            {
              "function": "info",
              "line": 2970
            },
            {
              "function": "warning",
              "line": 2973
            },
            {
              "function": "TaskRequest",
              "line": 3000
            },
            {
              "function": "TaskRequest",
              "line": 3164
            },
            {
              "function": "info",
              "line": 3177
            },
            {
              "function": "info",
              "line": 3184
            },
            {
              "function": "info",
              "line": 3185
            },
            {
              "function": "info",
              "line": 3186
            },
            {
              "function": "search",
              "line": 3193
            },
            {
              "function": "info",
              "line": 3213
            },
            {
              "function": "get",
              "line": 3255
            },
            {
              "function": "get",
              "line": 3260
            },
            {
              "function": "get",
              "line": 3263
            },
            {
              "function": "get",
              "line": 3266
            },
            {
              "function": "get",
              "line": 3269
            },
            {
              "function": "get",
              "line": 3272
            },
            {
              "function": "get",
              "line": 3305
            },
            {
              "function": "get",
              "line": 3308
            },
            {
              "function": "get",
              "line": 3311
            },
            {
              "function": "get",
              "line": 3314
            },
            {
              "function": "get",
              "line": 3318
            },
            {
              "function": "dumps",
              "line": 3354
            },
            {
              "function": "TaskRequest",
              "line": 3376
            },
            {
              "function": "search",
              "line": 3391
            },
            {
              "function": "loads",
              "line": 3395
            },
            {
              "function": "info",
              "line": 3396
            },
            {
              "function": "TaskRequest",
              "line": 3445
            },
            {
              "function": "TaskRequest",
              "line": 3504
            },
            {
              "function": "TaskRequest",
              "line": 3554
            },
            {
              "function": "TaskRequest",
              "line": 3593
            },
            {
              "function": "isoformat",
              "line": 3814
            },
            {
              "function": "ainvoke",
              "line": 3825
            },
            {
              "function": "get",
              "line": 3834
            },
            {
              "function": "info",
              "line": 3839
            },
            {
              "function": "info",
              "line": 3840
            },
            {
              "function": "_store_execution_for_learning",
              "line": 3880
            },
            {
              "function": "error",
              "line": 3890
            },
            {
              "function": "exception",
              "line": 3891
            },
            {
              "function": "append",
              "line": 3893
            },
            {
              "function": "error",
              "line": 214
            },
            {
              "function": "error",
              "line": 224
            },
            {
              "function": "error",
              "line": 238
            },
            {
              "function": "OrchestratorAgent",
              "line": 291
            },
            {
              "function": "info",
              "line": 296
            },
            {
              "function": "ResearchAgent",
              "line": 303
            },
            {
              "function": "info",
              "line": 308
            },
            {
              "function": "DocuBotAgent",
              "line": 315
            },
            {
              "function": "info",
              "line": 319
            },
            {
              "function": "PerformanceBot",
              "line": 326
            },
            {
              "function": "info",
              "line": 330
            },
            {
              "function": "TradeStratAgent",
              "line": 337
            },
            {
              "function": "info",
              "line": 341
            },
            {
              "function": "OpusArbitratorAgent",
              "line": 348
            },
            {
              "function": "info",
              "line": 352
            },
            {
              "function": "VideoAgent",
              "line": 359
            },
            {
              "function": "info",
              "line": 363
            },
            {
              "function": "lower",
              "line": 420
            },
            {
              "function": "lower",
              "line": 422
            },
            {
              "function": "lower",
              "line": 424
            },
            {
              "function": "lower",
              "line": 426
            },
            {
              "function": "lower",
              "line": 428
            },
            {
              "function": "get_retry_delay",
              "line": 475
            },
            {
              "function": "info",
              "line": 476
            },
            {
              "function": "append",
              "line": 483
            },
            {
              "function": "error",
              "line": 489
            },
            {
              "function": "now",
              "line": 492
            },
            {
              "function": "_has_dependency_conflict",
              "line": 523
            },
            {
              "function": "append",
              "line": 524
            },
            {
              "function": "add",
              "line": 525
            },
            {
              "function": "str",
              "line": 643
            },
            {
              "function": "get",
              "line": 683
            },
            {
              "function": "isoformat",
              "line": 693
            },
            {
              "function": "info",
              "line": 745
            },
            {
              "function": "pre_execution_check",
              "line": 799
            },
            {
              "function": "error",
              "line": 805
            },
            {
              "function": "append",
              "line": 808
            },
            {
              "function": "ExecutionStep",
              "line": 817
            },
            {
              "function": "error",
              "line": 826
            },
            {
              "function": "info",
              "line": 829
            },
            {
              "function": "error",
              "line": 834
            },
            {
              "function": "warning",
              "line": 836
            },
            {
              "function": "len",
              "line": 855
            },
            {
              "function": "len",
              "line": 862
            },
            {
              "function": "info",
              "line": 893
            },
            {
              "function": "len",
              "line": 924
            },
            {
              "function": "get",
              "line": 980
            },
            {
              "function": "_finalize_architecture",
              "line": 998
            },
            {
              "function": "_revise_proposal",
              "line": 1020
            },
            {
              "function": "_send_agent_activity",
              "line": 1060
            },
            {
              "function": "_send_agent_activity",
              "line": 1076
            },
            {
              "function": "_execute_research_task",
              "line": 1083
            },
            {
              "function": "_send_agent_activity",
              "line": 1088
            },
            {
              "function": "_execute_architect_task_with_research",
              "line": 1095
            },
            {
              "function": "_send_agent_activity",
              "line": 1099
            },
            {
              "function": "_create_architecture_proposal",
              "line": 1107
            },
            {
              "function": "info",
              "line": 1126
            },
            {
              "function": "info",
              "line": 1127
            },
            {
              "function": "info",
              "line": 1128
            },
            {
              "function": "warning",
              "line": 1160
            },
            {
              "function": "get",
              "line": 1192
            },
            {
              "function": "get",
              "line": 1288
            },
            {
              "function": "store_memory",
              "line": 1346
            },
            {
              "function": "execute",
              "line": 1467
            },
            {
              "function": "get",
              "line": 1484
            },
            {
              "function": "isoformat",
              "line": 1488
            },
            {
              "function": "get",
              "line": 1527
            },
            {
              "function": "execute",
              "line": 1613
            },
            {
              "function": "execute",
              "line": 1686
            },
            {
              "function": "execute",
              "line": 1760
            },
            {
              "function": "get",
              "line": 1817
            },
            {
              "function": "execute",
              "line": 1837
            },
            {
              "function": "execute",
              "line": 1924
            },
            {
              "function": "len",
              "line": 1984
            },
            {
              "function": "info",
              "line": 2000
            },
            {
              "function": "_dependencies_met",
              "line": 2005
            },
            {
              "function": "info",
              "line": 2014
            },
            {
              "function": "info",
              "line": 2044
            },
            {
              "function": "len",
              "line": 2070
            },
            {
              "function": "get",
              "line": 2082
            },
            {
              "function": "warning",
              "line": 2109
            },
            {
              "function": "now",
              "line": 2130
            },
            {
              "function": "now",
              "line": 2131
            },
            {
              "function": "info",
              "line": 2133
            },
            {
              "function": "info",
              "line": 2136
            },
            {
              "function": "route_to_next_agent",
              "line": 2154
            },
            {
              "function": "join",
              "line": 2210
            },
            {
              "function": "join",
              "line": 2268
            },
            {
              "function": "create_safe_execution_plan",
              "line": 2369
            },
            {
              "function": "info",
              "line": 2371
            },
            {
              "function": "error",
              "line": 2374
            },
            {
              "function": "ExecutionStep",
              "line": 2389
            },
            {
              "function": "ExecutionStep",
              "line": 2401
            },
            {
              "function": "len",
              "line": 2444
            },
            {
              "function": "sorted",
              "line": 2606
            },
            {
              "function": "debug",
              "line": 2679
            },
            {
              "function": "debug",
              "line": 2686
            },
            {
              "function": "split",
              "line": 2750
            },
            {
              "function": "split",
              "line": 2751
            },
            {
              "function": "len",
              "line": 2757
            },
            {
              "function": "split",
              "line": 2773
            },
            {
              "function": "split",
              "line": 2783
            },
            {
              "function": "len",
              "line": 2791
            },
            {
              "function": "append",
              "line": 2828
            },
            {
              "function": "set",
              "line": 2938
            },
            {
              "function": "execute",
              "line": 3009
            },
            {
              "function": "hasattr",
              "line": 3010
            },
            {
              "function": "str",
              "line": 3010
            },
            {
              "function": "error",
              "line": 3012
            },
            {
              "function": "execute",
              "line": 3095
            },
            {
              "function": "hasattr",
              "line": 3096
            },
            {
              "function": "str",
              "line": 3096
            },
            {
              "function": "error",
              "line": 3098
            },
            {
              "function": "execute",
              "line": 3173
            },
            {
              "function": "hasattr",
              "line": 3174
            },
            {
              "function": "str",
              "line": 3174
            },
            {
              "function": "error",
              "line": 3179
            },
            {
              "function": "error",
              "line": 3180
            },
            {
              "function": "ValueError",
              "line": 3181
            },
            {
              "function": "group",
              "line": 3195
            },
            {
              "function": "info",
              "line": 3196
            },
            {
              "function": "warning",
              "line": 3198
            },
            {
              "function": "loads",
              "line": 3202
            },
            {
              "function": "all",
              "line": 3210
            },
            {
              "function": "ValueError",
              "line": 3211
            },
            {
              "function": "error",
              "line": 3217
            },
            {
              "function": "warning",
              "line": 3218
            },
            {
              "function": "execute",
              "line": 3385
            },
            {
              "function": "hasattr",
              "line": 3386
            },
            {
              "function": "str",
              "line": 3386
            },
            {
              "function": "group",
              "line": 3393
            },
            {
              "function": "error",
              "line": 3400
            },
            {
              "function": "warning",
              "line": 3401
            },
            {
              "function": "get",
              "line": 3428
            },
            {
              "function": "get",
              "line": 3429
            },
            {
              "function": "execute",
              "line": 3449
            },
            {
              "function": "hasattr",
              "line": 3452
            },
            {
              "function": "hasattr",
              "line": 3452
            },
            {
              "function": "info",
              "line": 3454
            },
            {
              "function": "hasattr",
              "line": 3456
            },
            {
              "function": "str",
              "line": 3456
            },
            {
              "function": "error",
              "line": 3458
            },
            {
              "function": "get",
              "line": 3484
            },
            {
              "function": "get",
              "line": 3485
            },
            {
              "function": "append",
              "line": 3499
            },
            {
              "function": "execute",
              "line": 3508
            },
            {
              "function": "hasattr",
              "line": 3509
            },
            {
              "function": "str",
              "line": 3509
            },
            {
              "function": "error",
              "line": 3511
            },
            {
              "function": "get",
              "line": 3536
            },
            {
              "function": "get",
              "line": 3537
            },
            {
              "function": "append",
              "line": 3549
            },
            {
              "function": "execute",
              "line": 3558
            },
            {
              "function": "hasattr",
              "line": 3559
            },
            {
              "function": "str",
              "line": 3559
            },
            {
              "function": "error",
              "line": 3561
            },
            {
              "function": "execute",
              "line": 3599
            },
            {
              "function": "info",
              "line": 3602
            },
            {
              "function": "error",
              "line": 3605
            },
            {
              "function": "error",
              "line": 3609
            },
            {
              "function": "get",
              "line": 3807
            },
            {
              "function": "hasattr",
              "line": 3836
            },
            {
              "function": "join",
              "line": 3853
            },
            {
              "function": "info",
              "line": 3873
            },
            {
              "function": "get_intelligent_response",
              "line": 3874
            },
            {
              "function": "_store_execution_for_learning",
              "line": 3899
            },
            {
              "function": "warning",
              "line": 298
            },
            {
              "function": "warning",
              "line": 310
            },
            {
              "function": "warning",
              "line": 321
            },
            {
              "function": "warning",
              "line": 332
            },
            {
              "function": "warning",
              "line": 343
            },
            {
              "function": "warning",
              "line": 354
            },
            {
              "function": "error",
              "line": 365
            },
            {
              "function": "error",
              "line": 366
            },
            {
              "function": "error",
              "line": 367
            },
            {
              "function": "error",
              "line": 369
            },
            {
              "function": "len",
              "line": 371
            },
            {
              "function": "isoformat",
              "line": 470
            },
            {
              "function": "add",
              "line": 573
            },
            {
              "function": "append",
              "line": 574
            },
            {
              "function": "now",
              "line": 627
            },
            {
              "function": "len",
              "line": 644
            },
            {
              "function": "get",
              "line": 698
            },
            {
              "function": "len",
              "line": 737
            },
            {
              "function": "len",
              "line": 779
            },
            {
              "function": "len",
              "line": 789
            },
            {
              "function": "info",
              "line": 903
            },
            {
              "function": "get",
              "line": 935
            },
            {
              "function": "get",
              "line": 936
            },
            {
              "function": "get",
              "line": 1009
            },
            {
              "function": "send_json",
              "line": 1039
            },
            {
              "function": "get",
              "line": 1136
            },
            {
              "function": "info",
              "line": 1145
            },
            {
              "function": "info",
              "line": 1154
            },
            {
              "function": "get",
              "line": 1172
            },
            {
              "function": "str",
              "line": 1201
            },
            {
              "function": "isoformat",
              "line": 1202
            },
            {
              "function": "len",
              "line": 1287
            },
            {
              "function": "str",
              "line": 1330
            },
            {
              "function": "str",
              "line": 1330
            },
            {
              "function": "get",
              "line": 1359
            },
            {
              "function": "str",
              "line": 1399
            },
            {
              "function": "len",
              "line": 1492
            },
            {
              "function": "get",
              "line": 1528
            },
            {
              "function": "len",
              "line": 1550
            },
            {
              "function": "append",
              "line": 1599
            },
            {
              "function": "isoformat",
              "line": 1628
            },
            {
              "function": "append",
              "line": 1672
            },
            {
              "function": "isoformat",
              "line": 1701
            },
            {
              "function": "isoformat",
              "line": 1775
            },
            {
              "function": "get",
              "line": 1818
            },
            {
              "function": "append",
              "line": 1819
            },
            {
              "function": "isoformat",
              "line": 1852
            },
            {
              "function": "isoformat",
              "line": 1939
            },
            {
              "function": "warning",
              "line": 1995
            },
            {
              "function": "list",
              "line": 1998
            },
            {
              "function": "warning",
              "line": 2009
            },
            {
              "function": "list",
              "line": 2012
            },
            {
              "function": "route_to_next_agent",
              "line": 2052
            },
            {
              "function": "real_time_monitoring",
              "line": 2086
            },
            {
              "function": "error",
              "line": 2088
            },
            {
              "function": "error",
              "line": 2089
            },
            {
              "function": "warning",
              "line": 2091
            },
            {
              "function": "warning",
              "line": 2122
            },
            {
              "function": "list",
              "line": 2125
            },
            {
              "function": "dirname",
              "line": 2210
            },
            {
              "function": "get",
              "line": 2314
            },
            {
              "function": "get",
              "line": 2315
            },
            {
              "function": "lower",
              "line": 2413
            },
            {
              "function": "ExecutionStep",
              "line": 2424
            },
            {
              "function": "len",
              "line": 2587
            },
            {
              "function": "items",
              "line": 2606
            },
            {
              "function": "info",
              "line": 2609
            },
            {
              "function": "_create_single_agent_step",
              "line": 2611
            },
            {
              "function": "info",
              "line": 2613
            },
            {
              "function": "_create_single_agent_step",
              "line": 2614
            },
            {
              "function": "get",
              "line": 2678
            },
            {
              "function": "get",
              "line": 2685
            },
            {
              "function": "len",
              "line": 2719
            },
            {
              "function": "split",
              "line": 2757
            },
            {
              "function": "strip",
              "line": 2791
            },
            {
              "function": "split",
              "line": 2791
            },
            {
              "function": "ExecutionStep",
              "line": 2828
            },
            {
              "function": "len",
              "line": 2930
            },
            {
              "function": "total_seconds",
              "line": 2947
            },
            {
              "function": "get",
              "line": 2966
            },
            {
              "function": "get",
              "line": 3088
            },
            {
              "function": "get",
              "line": 3089
            },
            {
              "function": "strip",
              "line": 3178
            },
            {
              "function": "error",
              "line": 3204
            },
            {
              "function": "error",
              "line": 3205
            },
            {
              "function": "get",
              "line": 3404
            },
            {
              "function": "append",
              "line": 3438
            },
            {
              "function": "now",
              "line": 3814
            },
            {
              "function": "append",
              "line": 3851
            },
            {
              "function": "info",
              "line": 3857
            },
            {
              "function": "get_intelligent_response",
              "line": 3858
            },
            {
              "function": "str",
              "line": 3894
            },
            {
              "function": "isoformat",
              "line": 3895
            },
            {
              "function": "format_exc",
              "line": 369
            },
            {
              "function": "now",
              "line": 693
            },
            {
              "function": "get",
              "line": 737
            },
            {
              "function": "info",
              "line": 912
            },
            {
              "function": "send_json",
              "line": 1144
            },
            {
              "function": "hasattr",
              "line": 1151
            },
            {
              "function": "get",
              "line": 1153
            },
            {
              "function": "error",
              "line": 1156
            },
            {
              "function": "error",
              "line": 1158
            },
            {
              "function": "str",
              "line": 1287
            },
            {
              "function": "get",
              "line": 1330
            },
            {
              "function": "get",
              "line": 1350
            },
            {
              "function": "len",
              "line": 1470
            },
            {
              "function": "now",
              "line": 1488
            },
            {
              "function": "get",
              "line": 1608
            },
            {
              "function": "len",
              "line": 1616
            },
            {
              "function": "get",
              "line": 1681
            },
            {
              "function": "len",
              "line": 1689
            },
            {
              "function": "get",
              "line": 1755
            },
            {
              "function": "len",
              "line": 1763
            },
            {
              "function": "get",
              "line": 1831
            },
            {
              "function": "get",
              "line": 1832
            },
            {
              "function": "len",
              "line": 1840
            },
            {
              "function": "get",
              "line": 1919
            },
            {
              "function": "len",
              "line": 1927
            },
            {
              "function": "list",
              "line": 2049
            },
            {
              "function": "get",
              "line": 2261
            },
            {
              "function": "chr",
              "line": 2268
            },
            {
              "function": "len",
              "line": 2607
            },
            {
              "function": "len",
              "line": 2841
            },
            {
              "function": "hasattr",
              "line": 2923
            },
            {
              "function": "get",
              "line": 2924
            },
            {
              "function": "get",
              "line": 2963
            },
            {
              "function": "isoformat",
              "line": 2964
            },
            {
              "function": "get",
              "line": 3005
            },
            {
              "function": "get",
              "line": 3006
            },
            {
              "function": "str",
              "line": 3013
            },
            {
              "function": "str",
              "line": 3099
            },
            {
              "function": "get",
              "line": 3168
            },
            {
              "function": "get",
              "line": 3169
            },
            {
              "function": "len",
              "line": 3177
            },
            {
              "function": "repr",
              "line": 3185
            },
            {
              "function": "repr",
              "line": 3186
            },
            {
              "function": "chr",
              "line": 3302
            },
            {
              "function": "chr",
              "line": 3302
            },
            {
              "function": "get",
              "line": 3380
            },
            {
              "function": "get",
              "line": 3381
            },
            {
              "function": "str",
              "line": 3459
            },
            {
              "function": "hasattr",
              "line": 3496
            },
            {
              "function": "info",
              "line": 3498
            },
            {
              "function": "str",
              "line": 3512
            },
            {
              "function": "append",
              "line": 3548
            },
            {
              "function": "str",
              "line": 3562
            },
            {
              "function": "str",
              "line": 3610
            },
            {
              "function": "str",
              "line": 3853
            },
            {
              "function": "now",
              "line": 470
            },
            {
              "function": "get",
              "line": 1043
            },
            {
              "function": "get",
              "line": 1126
            },
            {
              "function": "get",
              "line": 1127
            },
            {
              "function": "len",
              "line": 1128
            },
            {
              "function": "now",
              "line": 1202
            },
            {
              "function": "now",
              "line": 1628
            },
            {
              "function": "now",
              "line": 1701
            },
            {
              "function": "now",
              "line": 1775
            },
            {
              "function": "now",
              "line": 1852
            },
            {
              "function": "now",
              "line": 1939
            },
            {
              "function": "enumerate",
              "line": 2268
            },
            {
              "function": "len",
              "line": 2371
            },
            {
              "function": "get",
              "line": 2829
            },
            {
              "function": "get",
              "line": 2830
            },
            {
              "function": "get",
              "line": 2831
            },
            {
              "function": "get",
              "line": 2832
            },
            {
              "function": "get",
              "line": 2833
            },
            {
              "function": "hasattr",
              "line": 2924
            },
            {
              "function": "hasattr",
              "line": 2930
            },
            {
              "function": "type",
              "line": 3179
            },
            {
              "function": "dir",
              "line": 3180
            },
            {
              "function": "list",
              "line": 3211
            },
            {
              "function": "list",
              "line": 3454
            },
            {
              "function": "lower",
              "line": 3547
            },
            {
              "function": "lower",
              "line": 3547
            },
            {
              "function": "now",
              "line": 3895
            },
            {
              "function": "str",
              "line": 1128
            },
            {
              "function": "get",
              "line": 1154
            },
            {
              "function": "get",
              "line": 2089
            },
            {
              "function": "get",
              "line": 2831
            },
            {
              "function": "get",
              "line": 2838
            },
            {
              "function": "int",
              "line": 2838
            },
            {
              "function": "now",
              "line": 2964
            },
            {
              "function": "repr",
              "line": 3205
            },
            {
              "function": "keys",
              "line": 3211
            },
            {
              "function": "keys",
              "line": 3454
            },
            {
              "function": "format_exc",
              "line": 1158
            },
            {
              "function": "get",
              "line": 2268
            },
            {
              "function": "list",
              "line": 3498
            },
            {
              "function": "str",
              "line": 3547
            },
            {
              "function": "str",
              "line": 3547
            },
            {
              "function": "get",
              "line": 2838
            },
            {
              "function": "keys",
              "line": 3498
            },
            {
              "function": "len",
              "line": 2829
            },
            {
              "function": "max",
              "line": 3205
            }
          ]
        },
        "backend/langgraph_system/state.py": {
          "functions": [
            {
              "name": "create_initial_state",
              "line": 245,
              "async": false,
              "calls": [
                "uuid4",
                "getcwd",
                "now",
                "ExtendedAgentState",
                "str"
              ],
              "parameters": [
                "session_id",
                "client_id",
                "workspace_path",
                "plan_first_mode",
                "debug_mode"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 70,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "is_timeout",
              "line": 77,
              "async": false,
              "calls": [
                "total_seconds",
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "can_retry",
              "line": 84,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "get_retry_delay",
              "line": 88,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 109,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 132,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "update_from_steps",
              "line": 139,
              "async": false,
              "calls": [
                "sum",
                "len"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/state.py"
            }
          ],
          "classes": [
            {
              "name": "ToolDefinition",
              "line": 14,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "MemoryEntry",
              "line": 26,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "ExecutionStep",
              "line": 37,
              "methods": [
                "__post_init__",
                "is_timeout",
                "can_retry",
                "get_retry_delay"
              ],
              "bases": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "TaskLedger",
              "line": 94,
              "methods": [
                "__post_init__"
              ],
              "bases": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "ProgressLedger",
              "line": 116,
              "methods": [
                "__post_init__",
                "update_from_steps"
              ],
              "bases": [],
              "file": "backend/langgraph_system/state.py"
            },
            {
              "name": "ExtendedAgentState",
              "line": 151,
              "methods": [],
              "bases": [
                "TypedDict"
              ],
              "file": "backend/langgraph_system/state.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "TypedDict",
                "List",
                "Dict",
                "Any",
                "Optional",
                "Literal",
                "Annotated"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "operator",
              "names": [
                "operator"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 255
            }
          ],
          "calls": [
            {
              "function": "ExtendedAgentState",
              "line": 256
            },
            {
              "function": "len",
              "line": 141
            },
            {
              "function": "sum",
              "line": 142
            },
            {
              "function": "sum",
              "line": 143
            },
            {
              "function": "sum",
              "line": 144
            },
            {
              "function": "sum",
              "line": 145
            },
            {
              "function": "total_seconds",
              "line": 80
            },
            {
              "function": "now",
              "line": 326
            },
            {
              "function": "str",
              "line": 263
            },
            {
              "function": "getcwd",
              "line": 265
            },
            {
              "function": "uuid4",
              "line": 263
            },
            {
              "function": "now",
              "line": 80
            }
          ]
        },
        "backend/langgraph_system/safe_orchestrator_executor.py": {
          "functions": [
            {
              "name": "add_attempt",
              "line": 41,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "attempt"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "__init__",
              "line": 68,
              "async": false,
              "calls": [
                "ExecutionHistory",
                "ExecutionGuard",
                "getLogger",
                "DevelopmentQueryHandler",
                "EnhancedQueryClassifier"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_generate_query_hash",
              "line": 75,
              "async": false,
              "calls": [
                "encode",
                "hexdigest",
                "md5",
                "lower",
                "strip"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_detect_loop_pattern",
              "line": 80,
              "async": false,
              "calls": [
                "len",
                "warning",
                "min",
                "range"
              ],
              "parameters": [
                "self",
                "recent_hashes"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_get_safe_fallback_response",
              "line": 102,
              "async": false,
              "calls": [
                "handle_development_query"
              ],
              "parameters": [
                "self",
                "query",
                "classification"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "get_execution_stats",
              "line": 314,
              "async": false,
              "calls": [
                "sorted",
                "sum",
                "items",
                "split",
                "get",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "should_use_safe_execution",
              "line": 351,
              "async": false,
              "calls": [
                "isinstance",
                "set",
                "hasattr",
                "dict",
                "any",
                "get",
                "append",
                "len",
                "classify_query"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "reset_history",
              "line": 399,
              "async": false,
              "calls": [
                "ExecutionHistory",
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            }
          ],
          "classes": [
            {
              "name": "ExecutionAttempt",
              "line": 21,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "ExecutionHistory",
              "line": 33,
              "methods": [
                "add_attempt"
              ],
              "bases": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "SafeOrchestratorExecutor",
              "line": 53,
              "methods": [
                "__init__",
                "_generate_query_hash",
                "_detect_loop_pattern",
                "_get_safe_fallback_response",
                "get_execution_stats",
                "should_use_safe_execution",
                "reset_history"
              ],
              "bases": [],
              "file": "backend/langgraph_system/safe_orchestrator_executor.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "query_classifier",
              "names": [
                "EnhancedQueryClassifier",
                "ExecutionGuard",
                "DetailedClassification"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "development_query_handler",
              "names": [
                "DevelopmentQueryHandler"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExecutionStep",
                "WorkflowState"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "field",
              "line": 35
            },
            {
              "function": "field",
              "line": 36
            },
            {
              "function": "field",
              "line": 37
            },
            {
              "function": "append",
              "line": 43
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 69
            },
            {
              "function": "DevelopmentQueryHandler",
              "line": 70
            },
            {
              "function": "ExecutionGuard",
              "line": 71
            },
            {
              "function": "ExecutionHistory",
              "line": 72
            },
            {
              "function": "getLogger",
              "line": 73
            },
            {
              "function": "strip",
              "line": 77
            },
            {
              "function": "range",
              "line": 93
            },
            {
              "function": "isinstance",
              "line": 172
            },
            {
              "function": "classify_query",
              "line": 178
            },
            {
              "function": "_generate_query_hash",
              "line": 181
            },
            {
              "function": "len",
              "line": 182
            },
            {
              "function": "ExecutionAttempt",
              "line": 185
            },
            {
              "function": "_detect_loop_pattern",
              "line": 212
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "len",
              "line": 317
            },
            {
              "function": "len",
              "line": 319
            },
            {
              "function": "isinstance",
              "line": 358
            },
            {
              "function": "classify_query",
              "line": 376
            },
            {
              "function": "ExecutionHistory",
              "line": 401
            },
            {
              "function": "info",
              "line": 402
            },
            {
              "function": "isinstance",
              "line": 415
            },
            {
              "function": "classify_query",
              "line": 420
            },
            {
              "function": "timestamp",
              "line": 422
            },
            {
              "function": "info",
              "line": 478
            },
            {
              "function": "hexdigest",
              "line": 78
            },
            {
              "function": "len",
              "line": 85
            },
            {
              "function": "min",
              "line": 93
            },
            {
              "function": "handle_development_query",
              "line": 115
            },
            {
              "function": "add_attempt",
              "line": 197
            },
            {
              "function": "add_attempt",
              "line": 215
            },
            {
              "function": "add_attempt",
              "line": 223
            },
            {
              "function": "sorted",
              "line": 327
            },
            {
              "function": "get",
              "line": 359
            },
            {
              "function": "any",
              "line": 367
            },
            {
              "function": "len",
              "line": 381
            },
            {
              "function": "len",
              "line": 385
            },
            {
              "function": "handle_development_query",
              "line": 427
            },
            {
              "function": "enumerate",
              "line": 431
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "len",
              "line": 89
            },
            {
              "function": "warning",
              "line": 97
            },
            {
              "function": "wait_for",
              "line": 145
            },
            {
              "function": "error",
              "line": 151
            },
            {
              "function": "error",
              "line": 154
            },
            {
              "function": "hasattr",
              "line": 175
            },
            {
              "function": "dict",
              "line": 175
            },
            {
              "function": "now",
              "line": 188
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 199
            },
            {
              "function": "add_attempt",
              "line": 206
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 217
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 225
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 234
            },
            {
              "function": "add_attempt",
              "line": 236
            },
            {
              "function": "error",
              "line": 304
            },
            {
              "function": "str",
              "line": 305
            },
            {
              "function": "add_attempt",
              "line": 306
            },
            {
              "function": "pop",
              "line": 312
            },
            {
              "function": "sum",
              "line": 324
            },
            {
              "function": "items",
              "line": 328
            },
            {
              "function": "hasattr",
              "line": 362
            },
            {
              "function": "hasattr",
              "line": 363
            },
            {
              "function": "dict",
              "line": 363
            },
            {
              "function": "hasattr",
              "line": 388
            },
            {
              "function": "hasattr",
              "line": 418
            },
            {
              "function": "dict",
              "line": 418
            },
            {
              "function": "now",
              "line": 422
            },
            {
              "function": "ExecutionStep",
              "line": 432
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "enumerate",
              "line": 455
            },
            {
              "function": "ExecutionStep",
              "line": 468
            },
            {
              "function": "append",
              "line": 476
            },
            {
              "function": "md5",
              "line": 78
            },
            {
              "function": "len",
              "line": 95
            },
            {
              "function": "func",
              "line": 146
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 208
            },
            {
              "function": "add_attempt",
              "line": 243
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 307
            },
            {
              "function": "split",
              "line": 337
            },
            {
              "function": "get",
              "line": 338
            },
            {
              "function": "append",
              "line": 389
            },
            {
              "function": "isinstance",
              "line": 390
            },
            {
              "function": "len",
              "line": 393
            },
            {
              "function": "len",
              "line": 393
            },
            {
              "function": "ExecutionStep",
              "line": 456
            },
            {
              "function": "append",
              "line": 464
            },
            {
              "function": "len",
              "line": 478
            },
            {
              "function": "encode",
              "line": 78
            },
            {
              "function": "len",
              "line": 93
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 241
            },
            {
              "function": "hasattr",
              "line": 369
            },
            {
              "function": "append",
              "line": 391
            },
            {
              "function": "set",
              "line": 393
            },
            {
              "function": "lower",
              "line": 444
            },
            {
              "function": "lower",
              "line": 444
            },
            {
              "function": "handle_development_query",
              "line": 249
            },
            {
              "function": "info",
              "line": 277
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 298
            },
            {
              "function": "add_attempt",
              "line": 300
            },
            {
              "function": "get",
              "line": 391
            },
            {
              "function": "lower",
              "line": 446
            },
            {
              "function": "lower",
              "line": 446
            },
            {
              "function": "lower",
              "line": 448
            },
            {
              "function": "add_attempt",
              "line": 268
            },
            {
              "function": "add_attempt",
              "line": 272
            },
            {
              "function": "_execute_with_timeout",
              "line": 279
            },
            {
              "function": "add_attempt",
              "line": 288
            },
            {
              "function": "add_attempt",
              "line": 293
            },
            {
              "function": "get",
              "line": 370
            },
            {
              "function": "get",
              "line": 370
            },
            {
              "function": "lower",
              "line": 450
            },
            {
              "function": "ExecutionStep",
              "line": 257
            },
            {
              "function": "append",
              "line": 265
            },
            {
              "function": "str",
              "line": 287
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 294
            },
            {
              "function": "join",
              "line": 267
            },
            {
              "function": "timestamp",
              "line": 258
            },
            {
              "function": "now",
              "line": 258
            }
          ]
        },
        "backend/langgraph_system/extensions/dynamic_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 48,
              "async": false,
              "calls": [
                "_extract_base_structure"
              ],
              "parameters": [
                "self",
                "base_graph"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "_extract_base_structure",
              "line": 75,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_node",
              "line": 81,
              "async": false,
              "calls": [
                "info",
                "DynamicNode",
                "warning"
              ],
              "parameters": [
                "self",
                "name",
                "func",
                "node_type",
                "description",
                "metadata"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "remove_node",
              "line": 118,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self",
                "name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_edge",
              "line": 149,
              "async": false,
              "calls": [
                "error",
                "info",
                "append",
                "DynamicEdge"
              ],
              "parameters": [
                "self",
                "source",
                "target",
                "condition",
                "metadata"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_conditional_routing",
              "line": 188,
              "async": false,
              "calls": [
                "info",
                "append",
                "ConditionalRoute"
              ],
              "parameters": [
                "self",
                "source",
                "condition",
                "routes",
                "metadata"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "compile_graph",
              "line": 218,
              "async": false,
              "calls": [
                "add_conditional_edges",
                "items",
                "add_node",
                "StateGraph",
                "add_edge",
                "info",
                "len",
                "append",
                "compile"
              ],
              "parameters": [
                "self",
                "state_class"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "create_template",
              "line": 272,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "name",
                "nodes",
                "edges",
                "routes",
                "description"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "apply_template",
              "line": 303,
              "async": false,
              "calls": [
                "items",
                "add_node",
                "add_conditional_routing",
                "add_edge",
                "error",
                "info"
              ],
              "parameters": [
                "self",
                "template_name",
                "node_prefix",
                "parameter_mapping"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "rollback",
              "line": 361,
              "async": false,
              "calls": [
                "max",
                "error",
                "info",
                "len",
                "warning"
              ],
              "parameters": [
                "self",
                "version"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "get_graph_info",
              "line": 387,
              "async": false,
              "calls": [
                "keys",
                "len",
                "list"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "visualize_graph",
              "line": 402,
              "async": false,
              "calls": [
                "join",
                "append",
                "items",
                "ValueError"
              ],
              "parameters": [
                "self",
                "format"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "DynamicNode",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "DynamicEdge",
              "line": 25,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "ConditionalRoute",
              "line": 34,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "DynamicWorkflowManager",
              "line": 42,
              "methods": [
                "__init__",
                "_extract_base_structure",
                "add_node",
                "remove_node",
                "add_edge",
                "add_conditional_routing",
                "compile_graph",
                "create_template",
                "apply_template",
                "rollback",
                "get_graph_info",
                "visualize_graph"
              ],
              "bases": [],
              "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Callable",
                "Any",
                "Optional",
                "Literal"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "langgraph.graph",
              "names": [
                "StateGraph",
                "END"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 78
            },
            {
              "function": "DynamicNode",
              "line": 106
            },
            {
              "function": "info",
              "line": 115
            },
            {
              "function": "warning",
              "line": 146
            },
            {
              "function": "DynamicEdge",
              "line": 177
            },
            {
              "function": "append",
              "line": 184
            },
            {
              "function": "info",
              "line": 185
            },
            {
              "function": "ConditionalRoute",
              "line": 207
            },
            {
              "function": "append",
              "line": 214
            },
            {
              "function": "info",
              "line": 215
            },
            {
              "function": "StateGraph",
              "line": 228
            },
            {
              "function": "items",
              "line": 231
            },
            {
              "function": "items",
              "line": 235
            },
            {
              "function": "compile",
              "line": 263
            },
            {
              "function": "append",
              "line": 266
            },
            {
              "function": "info",
              "line": 269
            },
            {
              "function": "info",
              "line": 300
            },
            {
              "function": "info",
              "line": 358
            },
            {
              "function": "error",
              "line": 384
            },
            {
              "function": "_extract_base_structure",
              "line": 73
            },
            {
              "function": "warning",
              "line": 103
            },
            {
              "function": "info",
              "line": 143
            },
            {
              "function": "error",
              "line": 171
            },
            {
              "function": "error",
              "line": 174
            },
            {
              "function": "add_node",
              "line": 232
            },
            {
              "function": "add_node",
              "line": 236
            },
            {
              "function": "add_conditional_edges",
              "line": 256
            },
            {
              "function": "len",
              "line": 267
            },
            {
              "function": "error",
              "line": 321
            },
            {
              "function": "add_node",
              "line": 328
            },
            {
              "function": "add_edge",
              "line": 338
            },
            {
              "function": "add_conditional_routing",
              "line": 351
            },
            {
              "function": "warning",
              "line": 372
            },
            {
              "function": "max",
              "line": 377
            },
            {
              "function": "len",
              "line": 379
            },
            {
              "function": "info",
              "line": 381
            },
            {
              "function": "len",
              "line": 392
            },
            {
              "function": "list",
              "line": 393
            },
            {
              "function": "list",
              "line": 394
            },
            {
              "function": "len",
              "line": 396
            },
            {
              "function": "list",
              "line": 397
            },
            {
              "function": "len",
              "line": 399
            },
            {
              "function": "join",
              "line": 443
            },
            {
              "function": "add_edge",
              "line": 242
            },
            {
              "function": "add_edge",
              "line": 244
            },
            {
              "function": "add_edge",
              "line": 250
            },
            {
              "function": "add_edge",
              "line": 252
            },
            {
              "function": "keys",
              "line": 393
            },
            {
              "function": "keys",
              "line": 394
            },
            {
              "function": "len",
              "line": 395
            },
            {
              "function": "len",
              "line": 395
            },
            {
              "function": "keys",
              "line": 397
            },
            {
              "function": "append",
              "line": 429
            },
            {
              "function": "items",
              "line": 440
            },
            {
              "function": "append",
              "line": 472
            },
            {
              "function": "join",
              "line": 473
            },
            {
              "function": "ValueError",
              "line": 476
            },
            {
              "function": "items",
              "line": 349
            },
            {
              "function": "append",
              "line": 434
            },
            {
              "function": "append",
              "line": 436
            },
            {
              "function": "append",
              "line": 441
            },
            {
              "function": "append",
              "line": 458
            },
            {
              "function": "append",
              "line": 465
            },
            {
              "function": "items",
              "line": 469
            },
            {
              "function": "append",
              "line": 470
            }
          ]
        },
        "backend/langgraph_system/extensions/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "tool_discovery",
              "names": [
                "ToolRegistry",
                "tool",
                "get_tool_registry"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "approval_manager",
              "names": [
                "ApprovalManager"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "persistent_memory",
              "names": [
                "PersistentAgentMemory"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dynamic_workflow",
              "names": [
                "DynamicWorkflowManager"
              ],
              "line": 9
            }
          ],
          "calls": []
        },
        "backend/langgraph_system/extensions/approval_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "websocket_manager",
                "timeout_seconds"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "_format_plan_for_ui",
              "line": 155,
              "async": false,
              "calls": [
                "asdict",
                "isinstance",
                "vars",
                "_format_step",
                "hasattr",
                "str"
              ],
              "parameters": [
                "self",
                "plan"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "_format_step",
              "line": 176,
              "async": false,
              "calls": [
                "asdict",
                "vars",
                "hasattr",
                "get",
                "str"
              ],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_approval_status",
              "line": 218,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "approval_id"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_approval_history",
              "line": 224,
              "async": false,
              "calls": [
                "sort"
              ],
              "parameters": [
                "self",
                "client_id",
                "limit"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "cleanup_expired",
              "line": 253,
              "async": false,
              "calls": [
                "items",
                "now",
                "cancel",
                "info",
                "done",
                "len",
                "append"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_pending_approvals",
              "line": 276,
              "async": false,
              "calls": [
                "values"
              ],
              "parameters": [
                "self",
                "client_id"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            }
          ],
          "classes": [
            {
              "name": "ApprovalRequest",
              "line": 17,
              "methods": [],
              "bases": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "ApprovalManager",
              "line": 30,
              "methods": [
                "__init__",
                "_format_plan_for_ui",
                "_format_step",
                "get_approval_status",
                "get_approval_history",
                "cleanup_expired",
                "get_pending_approvals"
              ],
              "bases": [],
              "file": "backend/langgraph_system/extensions/approval_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Literal",
                "Optional",
                "List"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "asdict"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "str",
              "line": 69
            },
            {
              "function": "ApprovalRequest",
              "line": 73
            },
            {
              "function": "Future",
              "line": 86
            },
            {
              "function": "isinstance",
              "line": 157
            },
            {
              "function": "hasattr",
              "line": 178
            },
            {
              "function": "sort",
              "line": 236
            },
            {
              "function": "now",
              "line": 255
            },
            {
              "function": "items",
              "line": 258
            },
            {
              "function": "info",
              "line": 274
            },
            {
              "function": "uuid4",
              "line": 69
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "append",
              "line": 117
            },
            {
              "function": "_format_plan_for_ui",
              "line": 130
            },
            {
              "function": "isoformat",
              "line": 132
            },
            {
              "function": "hasattr",
              "line": 163
            },
            {
              "function": "str",
              "line": 188
            },
            {
              "function": "warning",
              "line": 206
            },
            {
              "function": "done",
              "line": 211
            },
            {
              "function": "set_result",
              "line": 212
            },
            {
              "function": "info",
              "line": 213
            },
            {
              "function": "handle_user_response",
              "line": 241
            },
            {
              "function": "handle_user_response",
              "line": 248
            },
            {
              "function": "handle_user_response",
              "line": 300
            },
            {
              "function": "now",
              "line": 77
            },
            {
              "function": "_send_approval_request_to_ui",
              "line": 91
            },
            {
              "function": "wait_for",
              "line": 95
            },
            {
              "function": "warning",
              "line": 104
            },
            {
              "function": "error",
              "line": 108
            },
            {
              "function": "send_json",
              "line": 153
            },
            {
              "function": "hasattr",
              "line": 179
            },
            {
              "function": "asdict",
              "line": 179
            },
            {
              "function": "vars",
              "line": 179
            },
            {
              "function": "get",
              "line": 181
            },
            {
              "function": "get",
              "line": 182
            },
            {
              "function": "get",
              "line": 183
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "values",
              "line": 279
            },
            {
              "function": "now",
              "line": 78
            },
            {
              "function": "timedelta",
              "line": 78
            },
            {
              "function": "_format_step",
              "line": 161
            },
            {
              "function": "str",
              "line": 173
            },
            {
              "function": "len",
              "line": 274
            },
            {
              "function": "hasattr",
              "line": 167
            },
            {
              "function": "asdict",
              "line": 167
            },
            {
              "function": "vars",
              "line": 167
            },
            {
              "function": "get",
              "line": 213
            },
            {
              "function": "done",
              "line": 266
            },
            {
              "function": "cancel",
              "line": 267
            },
            {
              "function": "str",
              "line": 108
            }
          ]
        },
        "backend/langgraph_system/extensions/tool_discovery.py": {
          "functions": [
            {
              "name": "tool",
              "line": 18,
              "async": false,
              "calls": [],
              "parameters": [
                "name",
                "description",
                "tags"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_tool_registry",
              "line": 313,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "decorator",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "func"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "__init__",
              "line": 41,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "auto_discover_tools",
              "line": 47,
              "async": false,
              "calls": [
                "_create_tool_from_decorated",
                "getmembers",
                "_create_tool_from_prefix",
                "hasattr",
                "info",
                "register_tool",
                "append",
                "startswith"
              ],
              "parameters": [
                "self",
                "agent_instance"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_create_tool_from_decorated",
              "line": 76,
              "async": false,
              "calls": [
                "_extract_parameters",
                "ToolDefinition",
                "getattr"
              ],
              "parameters": [
                "self",
                "method",
                "agent_name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_create_tool_from_prefix",
              "line": 87,
              "async": false,
              "calls": [
                "_extract_parameters",
                "ToolDefinition",
                "replace"
              ],
              "parameters": [
                "self",
                "method",
                "agent_name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_extract_parameters",
              "line": 99,
              "async": false,
              "calls": [
                "items",
                "signature",
                "get_type_hints",
                "_python_type_to_json_type"
              ],
              "parameters": [
                "self",
                "method"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_python_type_to_json_type",
              "line": 132,
              "async": false,
              "calls": [
                "hasattr",
                "get"
              ],
              "parameters": [
                "self",
                "python_type"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "register_tool",
              "line": 153,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "tool",
                "shared"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "discover_tools_for_agent",
              "line": 173,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_tool_schema",
              "line": 232,
              "async": false,
              "calls": [
                "get",
                "items"
              ],
              "parameters": [
                "self",
                "tool_name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "list_all_tools",
              "line": 253,
              "async": false,
              "calls": [
                "keys",
                "get_tool_schema"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_usage_stats",
              "line": 260,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "tool_name"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "export_tools",
              "line": 266,
              "async": false,
              "calls": [
                "ValueError",
                "values",
                "asdict",
                "dump",
                "dumps"
              ],
              "parameters": [
                "self",
                "format"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "import_tools",
              "line": 283,
              "async": false,
              "calls": [
                "ValueError",
                "loads",
                "ToolDefinition",
                "clear",
                "get",
                "safe_load"
              ],
              "parameters": [
                "self",
                "data",
                "format"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            }
          ],
          "classes": [
            {
              "name": "ToolRegistry",
              "line": 36,
              "methods": [
                "__init__",
                "auto_discover_tools",
                "_create_tool_from_decorated",
                "_create_tool_from_prefix",
                "_extract_parameters",
                "_python_type_to_json_type",
                "register_tool",
                "discover_tools_for_agent",
                "get_tool_schema",
                "list_all_tools",
                "get_usage_stats",
                "export_tools",
                "import_tools"
              ],
              "bases": [],
              "file": "backend/langgraph_system/extensions/tool_discovery.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "inspect",
              "names": [
                "inspect"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Callable",
                "Any",
                "Optional",
                "get_type_hints"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "functools",
              "names": [
                "wraps"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "asdict"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ToolDefinition"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 228
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 278
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 288
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "ToolRegistry",
              "line": 310
            },
            {
              "function": "getmembers",
              "line": 59
            },
            {
              "function": "ToolDefinition",
              "line": 78
            },
            {
              "function": "replace",
              "line": 89
            },
            {
              "function": "ToolDefinition",
              "line": 90
            },
            {
              "function": "signature",
              "line": 101
            },
            {
              "function": "items",
              "line": 109
            },
            {
              "function": "hasattr",
              "line": 147
            },
            {
              "function": "get",
              "line": 151
            },
            {
              "function": "clear",
              "line": 294
            },
            {
              "function": "clear",
              "line": 295
            },
            {
              "function": "clear",
              "line": 296
            },
            {
              "function": "get",
              "line": 299
            },
            {
              "function": "get",
              "line": 304
            },
            {
              "function": "get",
              "line": 305
            },
            {
              "function": "get",
              "line": 306
            },
            {
              "function": "hasattr",
              "line": 63
            },
            {
              "function": "get_type_hints",
              "line": 105
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "append",
              "line": 162
            },
            {
              "function": "ValueError",
              "line": 198
            },
            {
              "function": "time",
              "line": 205
            },
            {
              "function": "iscoroutinefunction",
              "line": 210
            },
            {
              "function": "get_tool_schema",
              "line": 256
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "dumps",
              "line": 276
            },
            {
              "function": "loads",
              "line": 286
            },
            {
              "function": "ToolDefinition",
              "line": 301
            },
            {
              "function": "_create_tool_from_decorated",
              "line": 64
            },
            {
              "function": "startswith",
              "line": 66
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "register_tool",
              "line": 71
            },
            {
              "function": "info",
              "line": 72
            },
            {
              "function": "_extract_parameters",
              "line": 81
            },
            {
              "function": "getattr",
              "line": 84
            },
            {
              "function": "_extract_parameters",
              "line": 93
            },
            {
              "function": "_python_type_to_json_type",
              "line": 122
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "callable",
              "line": 213
            },
            {
              "function": "error",
              "line": 223
            },
            {
              "function": "keys",
              "line": 257
            },
            {
              "function": "asdict",
              "line": 269
            },
            {
              "function": "dump",
              "line": 279
            },
            {
              "function": "ValueError",
              "line": 281
            },
            {
              "function": "safe_load",
              "line": 289
            },
            {
              "function": "ValueError",
              "line": 291
            },
            {
              "function": "_create_tool_from_prefix",
              "line": 67
            },
            {
              "function": "append",
              "line": 181
            },
            {
              "function": "callable",
              "line": 211
            },
            {
              "function": "time",
              "line": 229
            },
            {
              "function": "values",
              "line": 269
            },
            {
              "function": "items",
              "line": 245
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "str",
              "line": 223
            }
          ]
        },
        "backend/langgraph_system/extensions/persistent_memory.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "_init_vector_store",
                "warning",
                "OpenAIEmbeddings",
                "_init_sqlite"
              ],
              "parameters": [
                "self",
                "agent_name",
                "db_path",
                "vector_store_path",
                "embedding_model"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_init_sqlite",
              "line": 71,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_init_vector_store",
              "line": 136,
              "async": false,
              "calls": [
                "exists",
                "Path",
                "info",
                "error",
                "load_local",
                "_create_new_vector_store",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_create_new_vector_store",
              "line": 158,
              "async": false,
              "calls": [
                "now",
                "error",
                "info",
                "from_texts",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "store_memory",
              "line": 175,
              "async": false,
              "calls": [
                "execute",
                "now",
                "commit",
                "pop",
                "_save_vector_store",
                "close",
                "cursor",
                "dumps",
                "error",
                "connect",
                "len",
                "append",
                "add_texts",
                "str"
              ],
              "parameters": [
                "self",
                "content",
                "memory_type",
                "importance",
                "metadata",
                "session_id"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "recall_similar",
              "line": 240,
              "async": false,
              "calls": [
                "execute",
                "get",
                "loads",
                "now",
                "fromisoformat",
                "_update_access_counts",
                "join",
                "fetchall",
                "close",
                "cursor",
                "error",
                "similarity_search_with_score",
                "connect",
                "extend",
                "append",
                "len",
                "MemoryEntry",
                "str"
              ],
              "parameters": [
                "self",
                "query",
                "k",
                "memory_types",
                "min_importance"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "learn_pattern",
              "line": 367,
              "async": false,
              "calls": [
                "execute",
                "md5",
                "fetchone",
                "commit",
                "close",
                "cursor",
                "encode",
                "dumps",
                "connect",
                "hexdigest"
              ],
              "parameters": [
                "self",
                "pattern",
                "solution",
                "success",
                "metadata"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_learned_solution",
              "line": 426,
              "async": false,
              "calls": [
                "execute",
                "md5",
                "fetchone",
                "close",
                "cursor",
                "info",
                "encode",
                "connect",
                "hexdigest"
              ],
              "parameters": [
                "self",
                "pattern",
                "min_success_rate"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "record_agent_interaction",
              "line": 454,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self",
                "to_agent",
                "interaction_type",
                "content",
                "result",
                "session_id"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_interaction_history",
              "line": 475,
              "async": false,
              "calls": [
                "execute",
                "fetchall",
                "close",
                "cursor",
                "connect",
                "append"
              ],
              "parameters": [
                "self",
                "with_agent",
                "limit"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_update_access_counts",
              "line": 516,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self",
                "memory_ids"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_save_vector_store",
              "line": 536,
              "async": false,
              "calls": [
                "mkdir",
                "Path",
                "error",
                "save_local",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "consolidate_memories",
              "line": 545,
              "async": false,
              "calls": [
                "execute",
                "now",
                "timedelta",
                "commit",
                "close",
                "cursor",
                "info",
                "connect"
              ],
              "parameters": [
                "self",
                "max_age_days"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_memory_stats",
              "line": 567,
              "async": false,
              "calls": [
                "execute",
                "fetchone",
                "fetchall",
                "close",
                "cursor",
                "connect",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            }
          ],
          "classes": [
            {
              "name": "PersistentAgentMemory",
              "line": 30,
              "methods": [
                "__init__",
                "_init_sqlite",
                "_init_vector_store",
                "_create_new_vector_store",
                "store_memory",
                "recall_similar",
                "learn_pattern",
                "get_learned_solution",
                "record_agent_interaction",
                "get_interaction_history",
                "_update_access_counts",
                "_save_vector_store",
                "consolidate_memories",
                "get_memory_stats"
              ],
              "bases": [],
              "file": "backend/langgraph_system/extensions/persistent_memory.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sqlite3",
              "names": [
                "sqlite3"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "pickle",
              "names": [
                "pickle"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "Literal"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "numpy",
              "names": [
                "numpy"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "MemoryEntry"
              ],
              "line": 25
            },
            {
              "type": "import",
              "module": "faiss",
              "names": [
                "faiss"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "langchain_openai",
              "names": [
                "OpenAIEmbeddings"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "langchain_community.vectorstores",
              "names": [
                "FAISS"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 380
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 432
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 27
            },
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "warning",
              "line": 23
            },
            {
              "function": "_init_sqlite",
              "line": 56
            },
            {
              "function": "connect",
              "line": 73
            },
            {
              "function": "cursor",
              "line": 74
            },
            {
              "function": "execute",
              "line": 77
            },
            {
              "function": "execute",
              "line": 93
            },
            {
              "function": "execute",
              "line": 109
            },
            {
              "function": "execute",
              "line": 123
            },
            {
              "function": "execute",
              "line": 128
            },
            {
              "function": "commit",
              "line": 133
            },
            {
              "function": "close",
              "line": 134
            },
            {
              "function": "Path",
              "line": 141
            },
            {
              "function": "exists",
              "line": 143
            },
            {
              "function": "connect",
              "line": 189
            },
            {
              "function": "cursor",
              "line": 190
            },
            {
              "function": "execute",
              "line": 192
            },
            {
              "function": "commit",
              "line": 206
            },
            {
              "function": "close",
              "line": 207
            },
            {
              "function": "append",
              "line": 227
            },
            {
              "function": "_update_access_counts",
              "line": 326
            },
            {
              "function": "recall_similar",
              "line": 351
            },
            {
              "function": "hexdigest",
              "line": 381
            },
            {
              "function": "connect",
              "line": 383
            },
            {
              "function": "cursor",
              "line": 384
            },
            {
              "function": "execute",
              "line": 387
            },
            {
              "function": "fetchone",
              "line": 393
            },
            {
              "function": "commit",
              "line": 422
            },
            {
              "function": "close",
              "line": 423
            },
            {
              "function": "hexdigest",
              "line": 433
            },
            {
              "function": "connect",
              "line": 435
            },
            {
              "function": "cursor",
              "line": 436
            },
            {
              "function": "execute",
              "line": 438
            },
            {
              "function": "fetchone",
              "line": 444
            },
            {
              "function": "close",
              "line": 445
            },
            {
              "function": "connect",
              "line": 463
            },
            {
              "function": "cursor",
              "line": 464
            },
            {
              "function": "execute",
              "line": 466
            },
            {
              "function": "commit",
              "line": 472
            },
            {
              "function": "close",
              "line": 473
            },
            {
              "function": "connect",
              "line": 481
            },
            {
              "function": "cursor",
              "line": 482
            },
            {
              "function": "fetchall",
              "line": 502
            },
            {
              "function": "close",
              "line": 513
            },
            {
              "function": "connect",
              "line": 521
            },
            {
              "function": "cursor",
              "line": 522
            },
            {
              "function": "commit",
              "line": 533
            },
            {
              "function": "close",
              "line": 534
            },
            {
              "function": "connect",
              "line": 547
            },
            {
              "function": "cursor",
              "line": 548
            },
            {
              "function": "execute",
              "line": 553
            },
            {
              "function": "commit",
              "line": 562
            },
            {
              "function": "close",
              "line": 563
            },
            {
              "function": "info",
              "line": 565
            },
            {
              "function": "connect",
              "line": 569
            },
            {
              "function": "cursor",
              "line": 570
            },
            {
              "function": "execute",
              "line": 575
            },
            {
              "function": "fetchall",
              "line": 583
            },
            {
              "function": "execute",
              "line": 590
            },
            {
              "function": "fetchone",
              "line": 596
            },
            {
              "function": "execute",
              "line": 604
            },
            {
              "function": "close",
              "line": 612
            },
            {
              "function": "len",
              "line": 621
            },
            {
              "function": "_create_new_vector_store",
              "line": 156
            },
            {
              "function": "from_texts",
              "line": 165
            },
            {
              "function": "info",
              "line": 170
            },
            {
              "function": "len",
              "line": 235
            },
            {
              "function": "pop",
              "line": 236
            },
            {
              "function": "len",
              "line": 290
            },
            {
              "function": "connect",
              "line": 291
            },
            {
              "function": "cursor",
              "line": 292
            },
            {
              "function": "append",
              "line": 302
            },
            {
              "function": "append",
              "line": 303
            },
            {
              "function": "execute",
              "line": 305
            },
            {
              "function": "fetchall",
              "line": 313
            },
            {
              "function": "close",
              "line": 323
            },
            {
              "function": "append",
              "line": 356
            },
            {
              "function": "execute",
              "line": 400
            },
            {
              "function": "execute",
              "line": 408
            },
            {
              "function": "info",
              "line": 449
            },
            {
              "function": "execute",
              "line": 485
            },
            {
              "function": "execute",
              "line": 493
            },
            {
              "function": "append",
              "line": 503
            },
            {
              "function": "now",
              "line": 550
            },
            {
              "function": "timedelta",
              "line": 550
            },
            {
              "function": "fetchone",
              "line": 610
            },
            {
              "function": "OpenAIEmbeddings",
              "line": 62
            },
            {
              "function": "_init_vector_store",
              "line": 63
            },
            {
              "function": "load_local",
              "line": 146
            },
            {
              "function": "info",
              "line": 151
            },
            {
              "function": "error",
              "line": 172
            },
            {
              "function": "dumps",
              "line": 201
            },
            {
              "function": "add_texts",
              "line": 212
            },
            {
              "function": "_save_vector_store",
              "line": 222
            },
            {
              "function": "now",
              "line": 231
            },
            {
              "function": "similarity_search_with_score",
              "line": 264
            },
            {
              "function": "join",
              "line": 298
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "extend",
              "line": 300
            },
            {
              "function": "append",
              "line": 314
            },
            {
              "function": "get",
              "line": 326
            },
            {
              "function": "md5",
              "line": 381
            },
            {
              "function": "md5",
              "line": 433
            },
            {
              "function": "execute",
              "line": 526
            },
            {
              "function": "mkdir",
              "line": 540
            },
            {
              "function": "save_local",
              "line": 541
            },
            {
              "function": "warning",
              "line": 65
            },
            {
              "function": "str",
              "line": 147
            },
            {
              "function": "error",
              "line": 153
            },
            {
              "function": "_create_new_vector_store",
              "line": 154
            },
            {
              "function": "error",
              "line": 224
            },
            {
              "function": "append",
              "line": 274
            },
            {
              "function": "error",
              "line": 287
            },
            {
              "function": "MemoryEntry",
              "line": 314
            },
            {
              "function": "encode",
              "line": 381
            },
            {
              "function": "dumps",
              "line": 419
            },
            {
              "function": "encode",
              "line": 433
            },
            {
              "function": "str",
              "line": 541
            },
            {
              "function": "error",
              "line": 543
            },
            {
              "function": "get",
              "line": 271
            },
            {
              "function": "MemoryEntry",
              "line": 274
            },
            {
              "function": "len",
              "line": 283
            },
            {
              "function": "len",
              "line": 298
            },
            {
              "function": "join",
              "line": 308
            },
            {
              "function": "isoformat",
              "line": 361
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "str",
              "line": 168
            },
            {
              "function": "get",
              "line": 269
            },
            {
              "function": "len",
              "line": 311
            },
            {
              "function": "fromisoformat",
              "line": 317
            },
            {
              "function": "loads",
              "line": 319
            },
            {
              "function": "Path",
              "line": 540
            },
            {
              "function": "now",
              "line": 168
            },
            {
              "function": "str",
              "line": 218
            },
            {
              "function": "get",
              "line": 276
            },
            {
              "function": "fromisoformat",
              "line": 277
            },
            {
              "function": "get",
              "line": 278
            },
            {
              "function": "get",
              "line": 280
            },
            {
              "function": "now",
              "line": 218
            },
            {
              "function": "get",
              "line": 277
            },
            {
              "function": "str",
              "line": 277
            },
            {
              "function": "now",
              "line": 277
            }
          ]
        },
        "backend/api/settings_endpoint.py": {
          "functions": [],
          "classes": [
            {
              "name": "SettingsUpdateRequest",
              "line": 22,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "backend/api/settings_endpoint.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "APIRouter",
                "HTTPException"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pydantic",
              "names": [
                "BaseModel"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 14
            },
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "APIRouter",
              "line": 19
            },
            {
              "function": "get",
              "line": 27
            },
            {
              "function": "post",
              "line": 45
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "post",
              "line": 136
            },
            {
              "function": "get",
              "line": 192
            },
            {
              "function": "dirname",
              "line": 14
            },
            {
              "function": "dirname",
              "line": 14
            },
            {
              "function": "update_from_vscode",
              "line": 64
            },
            {
              "function": "info",
              "line": 66
            },
            {
              "function": "info",
              "line": 180
            },
            {
              "function": "append",
              "line": 210
            },
            {
              "function": "append",
              "line": 212
            },
            {
              "function": "append",
              "line": 216
            },
            {
              "function": "append",
              "line": 218
            },
            {
              "function": "append",
              "line": 242
            },
            {
              "function": "append",
              "line": 244
            },
            {
              "function": "append",
              "line": 248
            },
            {
              "function": "append",
              "line": 250
            },
            {
              "function": "append",
              "line": 254
            },
            {
              "function": "to_dict",
              "line": 261
            },
            {
              "function": "abspath",
              "line": 14
            },
            {
              "function": "to_dict",
              "line": 38
            },
            {
              "function": "error",
              "line": 41
            },
            {
              "function": "HTTPException",
              "line": 42
            },
            {
              "function": "to_dict",
              "line": 71
            },
            {
              "function": "error",
              "line": 74
            },
            {
              "function": "HTTPException",
              "line": 75
            },
            {
              "function": "to_dict",
              "line": 185
            },
            {
              "function": "error",
              "line": 188
            },
            {
              "function": "HTTPException",
              "line": 189
            },
            {
              "function": "append",
              "line": 224
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "append",
              "line": 232
            },
            {
              "function": "append",
              "line": 234
            },
            {
              "function": "append",
              "line": 238
            },
            {
              "function": "len",
              "line": 257
            },
            {
              "function": "len",
              "line": 258
            },
            {
              "function": "str",
              "line": 42
            },
            {
              "function": "len",
              "line": 66
            },
            {
              "function": "len",
              "line": 70
            },
            {
              "function": "str",
              "line": 75
            },
            {
              "function": "str",
              "line": 189
            },
            {
              "function": "join",
              "line": 224
            }
          ]
        },
        "backend/api/server_langgraph.py": {
          "functions": [
            {
              "name": "main",
              "line": 834,
              "async": false,
              "calls": [
                "socket",
                "warning",
                "range",
                "exit",
                "graceful_shutdown",
                "sleep",
                "check_server_running",
                "info",
                "run",
                "close",
                "error",
                "post",
                "connect_ex"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/api/server_langgraph.py"
            },
            {
              "name": "__init__",
              "line": 78,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/api/server_langgraph.py"
            },
            {
              "name": "disconnect",
              "line": 91,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "client_id"
              ],
              "decorators": [],
              "file": "backend/api/server_langgraph.py"
            },
            {
              "name": "check_server_running",
              "line": 841,
              "async": false,
              "calls": [
                "close",
                "socket",
                "connect_ex"
              ],
              "parameters": [
                "port"
              ],
              "decorators": [],
              "file": "backend/api/server_langgraph.py"
            },
            {
              "name": "graceful_shutdown",
              "line": 848,
              "async": false,
              "calls": [
                "info",
                "sleep",
                "post"
              ],
              "parameters": [
                "port"
              ],
              "decorators": [],
              "file": "backend/api/server_langgraph.py"
            }
          ],
          "classes": [
            {
              "name": "ConnectionManager",
              "line": 77,
              "methods": [
                "__init__",
                "disconnect"
              ],
              "bases": [],
              "file": "backend/api/server_langgraph.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "FastAPI",
                "WebSocket",
                "WebSocketDisconnect",
                "HTTPException"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "starlette.websockets",
              "names": [
                "WebSocketState"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "fastapi.middleware.cors",
              "names": [
                "CORSMiddleware"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "contextlib",
              "names": [
                "asynccontextmanager"
              ],
              "line": 23
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 25
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 26
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 27
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "Set"
              ],
              "line": 28
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 29
            },
            {
              "type": "import",
              "module": "uvicorn",
              "names": [
                "uvicorn"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "langgraph_system",
              "names": [
                "create_agent_workflow",
                "ExtendedAgentState",
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 33
            },
            {
              "type": "from_import",
              "module": "__version__",
              "names": [
                "__version__",
                "__version_display__",
                "__release_tag__"
              ],
              "line": 61
            },
            {
              "type": "from_import",
              "module": "models_endpoint",
              "names": [
                "router"
              ],
              "line": 44
            },
            {
              "type": "from_import",
              "module": "settings_endpoint",
              "names": [
                "router"
              ],
              "line": 53
            },
            {
              "type": "import",
              "module": "socket",
              "names": [
                "socket"
              ],
              "line": 836
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 837
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 838
            },
            {
              "type": "from_import",
              "module": "api.models_endpoint",
              "names": [
                "router"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "api.settings_endpoint",
              "names": [
                "router"
              ],
              "line": 56
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 779
            },
            {
              "type": "from_import",
              "module": "backend.api.models_endpoint",
              "names": [
                "router"
              ],
              "line": 49
            },
            {
              "type": "from_import",
              "module": "backend.api.settings_endpoint",
              "names": [
                "router"
              ],
              "line": 58
            }
          ],
          "calls": [
            {
              "function": "dirname",
              "line": 10
            },
            {
              "function": "dirname",
              "line": 11
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "basicConfig",
              "line": 64
            },
            {
              "function": "getLogger",
              "line": 69
            },
            {
              "function": "info",
              "line": 72
            },
            {
              "function": "info",
              "line": 73
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "ConnectionManager",
              "line": 151
            },
            {
              "function": "FastAPI",
              "line": 210
            },
            {
              "function": "add_middleware",
              "line": 217
            },
            {
              "function": "include_router",
              "line": 226
            },
            {
              "function": "info",
              "line": 227
            },
            {
              "function": "include_router",
              "line": 230
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "get",
              "line": 234
            },
            {
              "function": "get",
              "line": 243
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "get",
              "line": 285
            },
            {
              "function": "get",
              "line": 295
            },
            {
              "function": "post",
              "line": 312
            },
            {
              "function": "websocket",
              "line": 327
            },
            {
              "function": "post",
              "line": 790
            },
            {
              "function": "post",
              "line": 803
            },
            {
              "function": "post",
              "line": 820
            },
            {
              "function": "abspath",
              "line": 10
            },
            {
              "function": "insert",
              "line": 16
            },
            {
              "function": "insert",
              "line": 18
            },
            {
              "function": "get_graph_info",
              "line": 292
            },
            {
              "function": "info",
              "line": 584
            },
            {
              "function": "get",
              "line": 617
            },
            {
              "function": "info",
              "line": 709
            },
            {
              "function": "info",
              "line": 712
            },
            {
              "function": "info",
              "line": 713
            },
            {
              "function": "info",
              "line": 714
            },
            {
              "function": "add_edge",
              "line": 810
            },
            {
              "function": "info",
              "line": 823
            },
            {
              "function": "create_task",
              "line": 824
            },
            {
              "function": "info",
              "line": 830
            },
            {
              "function": "_exit",
              "line": 831
            },
            {
              "function": "check_server_running",
              "line": 865
            },
            {
              "function": "info",
              "line": 884
            },
            {
              "function": "run",
              "line": 887
            },
            {
              "function": "main",
              "line": 898
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "list",
              "line": 131
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 164
            },
            {
              "function": "info",
              "line": 165
            },
            {
              "function": "info",
              "line": 168
            },
            {
              "function": "info",
              "line": 183
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "info",
              "line": 188
            },
            {
              "function": "info",
              "line": 192
            },
            {
              "function": "info",
              "line": 194
            },
            {
              "function": "info",
              "line": 195
            },
            {
              "function": "info",
              "line": 196
            },
            {
              "function": "info",
              "line": 201
            },
            {
              "function": "isoformat",
              "line": 238
            },
            {
              "function": "HTTPException",
              "line": 247
            },
            {
              "function": "discover_tools_for_agent",
              "line": 252
            },
            {
              "function": "HTTPException",
              "line": 267
            },
            {
              "function": "items",
              "line": 280
            },
            {
              "function": "HTTPException",
              "line": 289
            },
            {
              "function": "HTTPException",
              "line": 299
            },
            {
              "function": "visualize_graph",
              "line": 303
            },
            {
              "function": "HTTPException",
              "line": 316
            },
            {
              "function": "handle_user_response",
              "line": 319
            },
            {
              "function": "HTTPException",
              "line": 324
            },
            {
              "function": "connect",
              "line": 332
            },
            {
              "function": "str",
              "line": 338
            },
            {
              "function": "now",
              "line": 339
            },
            {
              "function": "info",
              "line": 349
            },
            {
              "function": "info",
              "line": 358
            },
            {
              "function": "get",
              "line": 568
            },
            {
              "function": "get",
              "line": 568
            },
            {
              "function": "info",
              "line": 573
            },
            {
              "function": "hasattr",
              "line": 590
            },
            {
              "function": "info",
              "line": 591
            },
            {
              "function": "get",
              "line": 592
            },
            {
              "function": "get",
              "line": 593
            },
            {
              "function": "get",
              "line": 597
            },
            {
              "function": "info",
              "line": 613
            },
            {
              "function": "info",
              "line": 618
            },
            {
              "function": "strip",
              "line": 621
            },
            {
              "function": "info",
              "line": 633
            },
            {
              "function": "info",
              "line": 643
            },
            {
              "function": "info",
              "line": 644
            },
            {
              "function": "update",
              "line": 650
            },
            {
              "function": "info",
              "line": 669
            },
            {
              "function": "error",
              "line": 702
            },
            {
              "function": "send_json",
              "line": 715
            },
            {
              "function": "info",
              "line": 723
            },
            {
              "function": "info",
              "line": 724
            },
            {
              "function": "info",
              "line": 725
            },
            {
              "function": "get",
              "line": 738
            },
            {
              "function": "append",
              "line": 767
            },
            {
              "function": "append",
              "line": 772
            },
            {
              "function": "HTTPException",
              "line": 794
            },
            {
              "function": "HTTPException",
              "line": 807
            },
            {
              "function": "HTTPException",
              "line": 818
            },
            {
              "function": "shutdown_server",
              "line": 824
            },
            {
              "function": "sleep",
              "line": 829
            },
            {
              "function": "socket",
              "line": 843
            },
            {
              "function": "connect_ex",
              "line": 844
            },
            {
              "function": "close",
              "line": 845
            },
            {
              "function": "info",
              "line": 866
            },
            {
              "function": "info",
              "line": 867
            },
            {
              "function": "graceful_shutdown",
              "line": 869
            },
            {
              "function": "accept",
              "line": 83
            },
            {
              "function": "now",
              "line": 86
            },
            {
              "function": "now",
              "line": 87
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "debug",
              "line": 103
            },
            {
              "function": "warning",
              "line": 110
            },
            {
              "function": "disconnect",
              "line": 111
            },
            {
              "function": "now",
              "line": 116
            },
            {
              "function": "debug",
              "line": 117
            },
            {
              "function": "keys",
              "line": 131
            },
            {
              "function": "disconnect",
              "line": 148
            },
            {
              "function": "create_agent_workflow",
              "line": 170
            },
            {
              "function": "error",
              "line": 180
            },
            {
              "function": "RuntimeError",
              "line": 181
            },
            {
              "function": "error",
              "line": 205
            },
            {
              "function": "error",
              "line": 206
            },
            {
              "function": "list_all_tools",
              "line": 259
            },
            {
              "function": "HTTPException",
              "line": 277
            },
            {
              "function": "get_memory_stats",
              "line": 281
            },
            {
              "function": "HTTPException",
              "line": 309
            },
            {
              "function": "uuid4",
              "line": 338
            },
            {
              "function": "send_json",
              "line": 350
            },
            {
              "function": "get",
              "line": 363
            },
            {
              "function": "info",
              "line": 365
            },
            {
              "function": "info",
              "line": 366
            },
            {
              "function": "info",
              "line": 367
            },
            {
              "function": "info",
              "line": 540
            },
            {
              "function": "disconnect",
              "line": 543
            },
            {
              "function": "error",
              "line": 559
            },
            {
              "function": "disconnect",
              "line": 561
            },
            {
              "function": "send_json",
              "line": 576
            },
            {
              "function": "info",
              "line": 594
            },
            {
              "function": "hasattr",
              "line": 598
            },
            {
              "function": "info",
              "line": 599
            },
            {
              "function": "get",
              "line": 600
            },
            {
              "function": "get",
              "line": 601
            },
            {
              "function": "get",
              "line": 605
            },
            {
              "function": "send_json",
              "line": 636
            },
            {
              "function": "copy",
              "line": 647
            },
            {
              "function": "info",
              "line": 663
            },
            {
              "function": "enumerate",
              "line": 664
            },
            {
              "function": "warning",
              "line": 667
            },
            {
              "function": "send_json",
              "line": 703
            },
            {
              "function": "execute",
              "line": 726
            },
            {
              "function": "get",
              "line": 749
            },
            {
              "function": "info",
              "line": 764
            },
            {
              "function": "error",
              "line": 780
            },
            {
              "function": "error",
              "line": 781
            },
            {
              "function": "post",
              "line": 852
            },
            {
              "function": "info",
              "line": 870
            },
            {
              "function": "warning",
              "line": 872
            },
            {
              "function": "range",
              "line": 874
            },
            {
              "function": "send_json",
              "line": 115
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "disconnect",
              "line": 122
            },
            {
              "function": "debug",
              "line": 136
            },
            {
              "function": "append",
              "line": 137
            },
            {
              "function": "now",
              "line": 238
            },
            {
              "function": "get_tool_schema",
              "line": 255
            },
            {
              "function": "get_memory_stats",
              "line": 274
            },
            {
              "function": "receive_json",
              "line": 362
            },
            {
              "function": "info",
              "line": 370
            },
            {
              "function": "get",
              "line": 374
            },
            {
              "function": "info",
              "line": 386
            },
            {
              "function": "get",
              "line": 399
            },
            {
              "function": "warning",
              "line": 400
            },
            {
              "function": "get",
              "line": 548
            },
            {
              "function": "info",
              "line": 556
            },
            {
              "function": "info",
              "line": 602
            },
            {
              "function": "hasattr",
              "line": 606
            },
            {
              "function": "hasattr",
              "line": 606
            },
            {
              "function": "info",
              "line": 607
            },
            {
              "function": "get",
              "line": 608
            },
            {
              "function": "get",
              "line": 609
            },
            {
              "function": "lower",
              "line": 621
            },
            {
              "function": "info",
              "line": 665
            },
            {
              "function": "ainvoke",
              "line": 673
            },
            {
              "function": "send_json",
              "line": 682
            },
            {
              "function": "error",
              "line": 694
            },
            {
              "function": "get",
              "line": 713
            },
            {
              "function": "get",
              "line": 713
            },
            {
              "function": "get",
              "line": 714
            },
            {
              "function": "send_json",
              "line": 750
            },
            {
              "function": "isoformat",
              "line": 770
            },
            {
              "function": "get",
              "line": 774
            },
            {
              "function": "isoformat",
              "line": 775
            },
            {
              "function": "send_json",
              "line": 782
            },
            {
              "function": "info",
              "line": 854
            },
            {
              "function": "sleep",
              "line": 855
            },
            {
              "function": "error",
              "line": 880
            },
            {
              "function": "exit",
              "line": 881
            },
            {
              "function": "send_json",
              "line": 141
            },
            {
              "function": "error",
              "line": 143
            },
            {
              "function": "append",
              "line": 144
            },
            {
              "function": "len",
              "line": 188
            },
            {
              "function": "str",
              "line": 309
            },
            {
              "function": "uuid4",
              "line": 330
            },
            {
              "function": "get",
              "line": 369
            },
            {
              "function": "get",
              "line": 369
            },
            {
              "function": "error",
              "line": 376
            },
            {
              "function": "send_json",
              "line": 389
            },
            {
              "function": "send_json",
              "line": 401
            },
            {
              "function": "handle_chat_message",
              "line": 408
            },
            {
              "function": "get",
              "line": 412
            },
            {
              "function": "get",
              "line": 413
            },
            {
              "function": "get",
              "line": 414
            },
            {
              "function": "info",
              "line": 416
            },
            {
              "function": "info",
              "line": 552
            },
            {
              "function": "len",
              "line": 591
            },
            {
              "function": "info",
              "line": 610
            },
            {
              "function": "len",
              "line": 625
            },
            {
              "function": "len",
              "line": 643
            },
            {
              "function": "send_json",
              "line": 695
            },
            {
              "function": "type",
              "line": 709
            },
            {
              "function": "get",
              "line": 725
            },
            {
              "function": "get",
              "line": 730
            },
            {
              "function": "get",
              "line": 731
            },
            {
              "function": "check_server_running",
              "line": 875
            },
            {
              "function": "info",
              "line": 877
            },
            {
              "function": "type",
              "line": 184
            },
            {
              "function": "format_exc",
              "line": 206
            },
            {
              "function": "list",
              "line": 367
            },
            {
              "function": "send_json",
              "line": 377
            },
            {
              "function": "error",
              "line": 419
            },
            {
              "function": "error",
              "line": 427
            },
            {
              "function": "hasattr",
              "line": 436
            },
            {
              "function": "items",
              "line": 439
            },
            {
              "function": "error",
              "line": 510
            },
            {
              "function": "info",
              "line": 519
            },
            {
              "function": "getattr",
              "line": 591
            },
            {
              "function": "len",
              "line": 599
            },
            {
              "function": "len",
              "line": 628
            },
            {
              "function": "len",
              "line": 663
            },
            {
              "function": "get",
              "line": 685
            },
            {
              "function": "get",
              "line": 733
            },
            {
              "function": "send_json",
              "line": 741
            },
            {
              "function": "get",
              "line": 753
            },
            {
              "function": "now",
              "line": 770
            },
            {
              "function": "now",
              "line": 775
            },
            {
              "function": "format_exc",
              "line": 781
            },
            {
              "function": "format_exc",
              "line": 785
            },
            {
              "function": "keys",
              "line": 367
            },
            {
              "function": "send_json",
              "line": 420
            },
            {
              "function": "send_json",
              "line": 428
            },
            {
              "function": "info",
              "line": 445
            },
            {
              "function": "info",
              "line": 456
            },
            {
              "function": "error",
              "line": 504
            },
            {
              "function": "send_json",
              "line": 511
            },
            {
              "function": "get",
              "line": 518
            },
            {
              "function": "get",
              "line": 518
            },
            {
              "function": "len",
              "line": 607
            },
            {
              "function": "get",
              "line": 687
            },
            {
              "function": "get",
              "line": 758
            },
            {
              "function": "get",
              "line": 759
            },
            {
              "function": "get",
              "line": 760
            },
            {
              "function": "send_json",
              "line": 448
            },
            {
              "function": "info",
              "line": 472
            },
            {
              "function": "info",
              "line": 475
            },
            {
              "function": "info",
              "line": 495
            },
            {
              "function": "send_json",
              "line": 505
            },
            {
              "function": "send_json",
              "line": 524
            },
            {
              "function": "get",
              "line": 757
            },
            {
              "function": "total_seconds",
              "line": 755
            },
            {
              "function": "str",
              "line": 784
            },
            {
              "function": "ainvoke",
              "line": 476
            },
            {
              "function": "send_json",
              "line": 485
            },
            {
              "function": "error",
              "line": 498
            },
            {
              "function": "send_json",
              "line": 530
            },
            {
              "function": "send_json",
              "line": 533
            },
            {
              "function": "str",
              "line": 697
            },
            {
              "function": "send_json",
              "line": 499
            },
            {
              "function": "get",
              "line": 488
            },
            {
              "function": "get",
              "line": 490
            },
            {
              "function": "isoformat",
              "line": 491
            },
            {
              "function": "now",
              "line": 491
            },
            {
              "function": "str",
              "line": 501
            }
          ]
        },
        "backend/api/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "backend/api/models_endpoint.py": {
          "functions": [
            {
              "name": "load_models_from_config",
              "line": 19,
              "async": false,
              "calls": [
                "items",
                "dirname",
                "join",
                "open",
                "error",
                "get",
                "lower",
                "append",
                "safe_load"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/api/models_endpoint.py"
            },
            {
              "name": "load_models_from_available_json",
              "line": 83,
              "async": false,
              "calls": [
                "dirname",
                "load",
                "join",
                "open",
                "warning"
              ],
              "parameters": [],
              "decorators": [],
              "file": "backend/api/models_endpoint.py"
            },
            {
              "name": "get_model_recommendations",
              "line": 102,
              "async": false,
              "calls": [
                "sorted",
                "lower",
                "replace"
              ],
              "parameters": [
                "provider",
                "models"
              ],
              "decorators": [],
              "file": "backend/api/models_endpoint.py"
            },
            {
              "name": "get_latest_models",
              "line": 143,
              "async": false,
              "calls": [
                "sorted",
                "lower"
              ],
              "parameters": [
                "models",
                "limit"
              ],
              "decorators": [],
              "file": "backend/api/models_endpoint.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "APIRouter",
                "HTTPException"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Optional"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "APIRouter",
              "line": 17
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get",
              "line": 212
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "get",
              "line": 268
            },
            {
              "function": "post",
              "line": 294
            },
            {
              "function": "get",
              "line": 310
            },
            {
              "function": "join",
              "line": 21
            },
            {
              "function": "join",
              "line": 85
            },
            {
              "function": "sorted",
              "line": 146
            },
            {
              "function": "dirname",
              "line": 21
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "load_models_from_config",
              "line": 154
            },
            {
              "function": "load_models_from_available_json",
              "line": 155
            },
            {
              "function": "load_models_from_config",
              "line": 188
            },
            {
              "function": "load_models_from_available_json",
              "line": 189
            },
            {
              "function": "list",
              "line": 198
            },
            {
              "function": "load_models_from_config",
              "line": 216
            },
            {
              "function": "load_models_from_available_json",
              "line": 217
            },
            {
              "function": "list",
              "line": 226
            },
            {
              "function": "load_models_from_config",
              "line": 244
            },
            {
              "function": "load_models_from_available_json",
              "line": 245
            },
            {
              "function": "list",
              "line": 254
            },
            {
              "function": "load_models_from_config",
              "line": 272
            },
            {
              "function": "items",
              "line": 275
            },
            {
              "function": "info",
              "line": 581
            },
            {
              "function": "dirname",
              "line": 21
            },
            {
              "function": "open",
              "line": 24
            },
            {
              "function": "safe_load",
              "line": 25
            },
            {
              "function": "items",
              "line": 30
            },
            {
              "function": "items",
              "line": 63
            },
            {
              "function": "error",
              "line": 80
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "open",
              "line": 88
            },
            {
              "function": "load",
              "line": 89
            },
            {
              "function": "warning",
              "line": 99
            },
            {
              "function": "sorted",
              "line": 111
            },
            {
              "function": "list",
              "line": 171
            },
            {
              "function": "isoformat",
              "line": 174
            },
            {
              "function": "list",
              "line": 175
            },
            {
              "function": "sum",
              "line": 176
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "HTTPException",
              "line": 182
            },
            {
              "function": "extend",
              "line": 194
            },
            {
              "function": "extend",
              "line": 196
            },
            {
              "function": "set",
              "line": 198
            },
            {
              "function": "get_latest_models",
              "line": 203
            },
            {
              "function": "get_model_recommendations",
              "line": 204
            },
            {
              "function": "len",
              "line": 205
            },
            {
              "function": "error",
              "line": 209
            },
            {
              "function": "HTTPException",
              "line": 210
            },
            {
              "function": "extend",
              "line": 222
            },
            {
              "function": "extend",
              "line": 224
            },
            {
              "function": "set",
              "line": 226
            },
            {
              "function": "get_latest_models",
              "line": 231
            },
            {
              "function": "get_model_recommendations",
              "line": 232
            },
            {
              "function": "len",
              "line": 233
            },
            {
              "function": "error",
              "line": 237
            },
            {
              "function": "HTTPException",
              "line": 238
            },
            {
              "function": "extend",
              "line": 250
            },
            {
              "function": "extend",
              "line": 252
            },
            {
              "function": "set",
              "line": 254
            },
            {
              "function": "get_latest_models",
              "line": 259
            },
            {
              "function": "get_model_recommendations",
              "line": 260
            },
            {
              "function": "len",
              "line": 261
            },
            {
              "function": "error",
              "line": 265
            },
            {
              "function": "HTTPException",
              "line": 266
            },
            {
              "function": "len",
              "line": 287
            },
            {
              "function": "error",
              "line": 291
            },
            {
              "function": "HTTPException",
              "line": 292
            },
            {
              "function": "isoformat",
              "line": 302
            },
            {
              "function": "error",
              "line": 307
            },
            {
              "function": "HTTPException",
              "line": 308
            },
            {
              "function": "error",
              "line": 585
            },
            {
              "function": "HTTPException",
              "line": 586
            },
            {
              "function": "get",
              "line": 31
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "lower",
              "line": 146
            },
            {
              "function": "extend",
              "line": 164
            },
            {
              "function": "extend",
              "line": 168
            },
            {
              "function": "set",
              "line": 171
            },
            {
              "function": "keys",
              "line": 175
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "lower",
              "line": 108
            },
            {
              "function": "now",
              "line": 174
            },
            {
              "function": "len",
              "line": 176
            },
            {
              "function": "now",
              "line": 302
            },
            {
              "function": "lower",
              "line": 34
            },
            {
              "function": "append",
              "line": 48
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "replace",
              "line": 111
            },
            {
              "function": "lower",
              "line": 117
            },
            {
              "function": "lower",
              "line": 122
            },
            {
              "function": "values",
              "line": 176
            },
            {
              "function": "get",
              "line": 282
            },
            {
              "function": "lower",
              "line": 36
            },
            {
              "function": "lower",
              "line": 125
            },
            {
              "function": "lower",
              "line": 126
            },
            {
              "function": "str",
              "line": 182
            },
            {
              "function": "str",
              "line": 210
            },
            {
              "function": "str",
              "line": 238
            },
            {
              "function": "str",
              "line": 266
            },
            {
              "function": "str",
              "line": 292
            },
            {
              "function": "str",
              "line": 308
            },
            {
              "function": "str",
              "line": 586
            },
            {
              "function": "get",
              "line": 72
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "lower",
              "line": 111
            },
            {
              "function": "lower",
              "line": 38
            },
            {
              "function": "lower",
              "line": 38
            },
            {
              "function": "append",
              "line": 58
            }
          ]
        },
        "backend/services/diagram_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 38,
              "async": false,
              "calls": [
                "info",
                "Path",
                "mkdir"
              ],
              "parameters": [
                "self",
                "output_dir"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_flowchart",
              "line": 51,
              "async": false,
              "calls": [
                "_generate_mermaid_flowchart",
                "warning",
                "_generate_ascii_flowchart"
              ],
              "parameters": [
                "self",
                "nodes",
                "format"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_dependency_graph",
              "line": 71,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "import_graph"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_state_diagram",
              "line": 77,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "states"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_sequence_diagram",
              "line": 83,
              "async": false,
              "calls": [
                "warning",
                "_generate_mermaid_sequence"
              ],
              "parameters": [
                "self",
                "interactions",
                "format"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_class_diagram",
              "line": 101,
              "async": false,
              "calls": [
                "warning",
                "_generate_mermaid_class"
              ],
              "parameters": [
                "self",
                "classes",
                "format"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "generate_architecture_diagram",
              "line": 119,
              "async": false,
              "calls": [
                "_generate_mermaid_architecture",
                "warning"
              ],
              "parameters": [
                "self",
                "components",
                "format"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_flowchart",
              "line": 137,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "nodes"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_sequence",
              "line": 163,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "interactions"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_class",
              "line": 180,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "classes"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_architecture",
              "line": 213,
              "async": false,
              "calls": [
                "isinstance",
                "join",
                "replace",
                "get",
                "append",
                "warning"
              ],
              "parameters": [
                "self",
                "components"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "_generate_ascii_flowchart",
              "line": 260,
              "async": false,
              "calls": [
                "join",
                "enumerate",
                "get",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "nodes"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "save_diagram",
              "line": 286,
              "async": false,
              "calls": [
                "open",
                "info",
                "error",
                "write",
                "warning"
              ],
              "parameters": [
                "self",
                "diagram",
                "filename"
              ],
              "decorators": [],
              "file": "backend/services/diagram_service.py"
            }
          ],
          "classes": [
            {
              "name": "DiagramFormat",
              "line": 14,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "DiagramType",
              "line": 22,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "backend/services/diagram_service.py"
            },
            {
              "name": "DiagramService",
              "line": 32,
              "methods": [
                "__init__",
                "generate_flowchart",
                "generate_dependency_graph",
                "generate_state_diagram",
                "generate_sequence_diagram",
                "generate_class_diagram",
                "generate_architecture_diagram",
                "_generate_mermaid_flowchart",
                "_generate_mermaid_sequence",
                "_generate_mermaid_class",
                "_generate_mermaid_architecture",
                "_generate_ascii_flowchart",
                "save_diagram"
              ],
              "bases": [],
              "file": "backend/services/diagram_service.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 49
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "info",
              "line": 80
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "join",
              "line": 161
            },
            {
              "function": "append",
              "line": 177
            },
            {
              "function": "join",
              "line": 178
            },
            {
              "function": "append",
              "line": 210
            },
            {
              "function": "join",
              "line": 211
            },
            {
              "function": "isinstance",
              "line": 218
            },
            {
              "function": "append",
              "line": 257
            },
            {
              "function": "join",
              "line": 258
            },
            {
              "function": "enumerate",
              "line": 264
            },
            {
              "function": "join",
              "line": 284
            },
            {
              "function": "Path",
              "line": 45
            },
            {
              "function": "mkdir",
              "line": 47
            },
            {
              "function": "_generate_mermaid_flowchart",
              "line": 64
            },
            {
              "function": "_generate_mermaid_sequence",
              "line": 96
            },
            {
              "function": "warning",
              "line": 98
            },
            {
              "function": "_generate_mermaid_sequence",
              "line": 99
            },
            {
              "function": "_generate_mermaid_class",
              "line": 114
            },
            {
              "function": "warning",
              "line": 116
            },
            {
              "function": "_generate_mermaid_class",
              "line": 117
            },
            {
              "function": "_generate_mermaid_architecture",
              "line": 132
            },
            {
              "function": "warning",
              "line": 134
            },
            {
              "function": "_generate_mermaid_architecture",
              "line": 135
            },
            {
              "function": "get",
              "line": 142
            },
            {
              "function": "get",
              "line": 143
            },
            {
              "function": "get",
              "line": 144
            },
            {
              "function": "get",
              "line": 168
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "append",
              "line": 172
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "get",
              "line": 189
            },
            {
              "function": "get",
              "line": 193
            },
            {
              "function": "append",
              "line": 196
            },
            {
              "function": "get",
              "line": 199
            },
            {
              "function": "warning",
              "line": 219
            },
            {
              "function": "warning",
              "line": 222
            },
            {
              "function": "isinstance",
              "line": 228
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "get",
              "line": 232
            },
            {
              "function": "get",
              "line": 233
            },
            {
              "function": "isinstance",
              "line": 244
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 248
            },
            {
              "function": "get",
              "line": 265
            },
            {
              "function": "get",
              "line": 266
            },
            {
              "function": "warning",
              "line": 298
            },
            {
              "function": "info",
              "line": 307
            },
            {
              "function": "_generate_ascii_flowchart",
              "line": 66
            },
            {
              "function": "warning",
              "line": 68
            },
            {
              "function": "_generate_mermaid_flowchart",
              "line": 69
            },
            {
              "function": "append",
              "line": 148
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "append",
              "line": 175
            },
            {
              "function": "append",
              "line": 190
            },
            {
              "function": "append",
              "line": 194
            },
            {
              "function": "get",
              "line": 200
            },
            {
              "function": "get",
              "line": 201
            },
            {
              "function": "warning",
              "line": 229
            },
            {
              "function": "replace",
              "line": 231
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "replace",
              "line": 246
            },
            {
              "function": "len",
              "line": 269
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "append",
              "line": 272
            },
            {
              "function": "append",
              "line": 273
            },
            {
              "function": "append",
              "line": 275
            },
            {
              "function": "append",
              "line": 276
            },
            {
              "function": "append",
              "line": 277
            },
            {
              "function": "append",
              "line": 281
            },
            {
              "function": "append",
              "line": 282
            },
            {
              "function": "open",
              "line": 304
            },
            {
              "function": "write",
              "line": 305
            },
            {
              "function": "error",
              "line": 310
            },
            {
              "function": "append",
              "line": 150
            },
            {
              "function": "append",
              "line": 204
            },
            {
              "function": "append",
              "line": 238
            },
            {
              "function": "append",
              "line": 240
            },
            {
              "function": "isinstance",
              "line": 249
            },
            {
              "function": "get",
              "line": 249
            },
            {
              "function": "isinstance",
              "line": 250
            },
            {
              "function": "get",
              "line": 250
            },
            {
              "function": "append",
              "line": 253
            },
            {
              "function": "append",
              "line": 255
            },
            {
              "function": "len",
              "line": 280
            },
            {
              "function": "append",
              "line": 152
            },
            {
              "function": "append",
              "line": 154
            },
            {
              "function": "append",
              "line": 206
            },
            {
              "function": "append",
              "line": 208
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "get",
              "line": 246
            }
          ]
        },
        "backend/services/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "project_cache",
              "names": [
                "ProjectCache"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "smart_file_watcher",
              "names": [
                "SmartFileWatcher"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "code_search",
              "names": [
                "LightweightCodeSearch",
                "SearchResult"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "diagram_service",
              "names": [
                "DiagramService",
                "DiagramFormat",
                "DiagramType"
              ],
              "line": 8
            }
          ],
          "calls": []
        },
        "backend/services/project_cache.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 26,
              "async": false,
              "calls": [
                "timedelta",
                "Path",
                "mkdir",
                "error",
                "info"
              ],
              "parameters": [
                "self",
                "project_root",
                "cache_duration_hours"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "_get_cache_key",
              "line": 59,
              "async": false,
              "calls": [
                "encode",
                "hexdigest",
                "md5"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "_get_cache_path",
              "line": 65,
              "async": false,
              "calls": [
                "_get_cache_key"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "get",
              "line": 69,
              "async": false,
              "calls": [
                "debug",
                "unlink",
                "exists",
                "load",
                "fromisoformat",
                "open",
                "now",
                "_get_cache_path",
                "warning"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "set",
              "line": 102,
              "async": false,
              "calls": [
                "debug",
                "now",
                "open",
                "dump",
                "_get_cache_path",
                "isoformat",
                "warning"
              ],
              "parameters": [
                "self",
                "key",
                "value"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "invalidate",
              "line": 127,
              "async": false,
              "calls": [
                "debug",
                "_get_cache_path",
                "exists",
                "unlink"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "clear_all",
              "line": 140,
              "async": false,
              "calls": [
                "info",
                "unlink",
                "glob"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            },
            {
              "name": "get_stats",
              "line": 146,
              "async": false,
              "calls": [
                "sum",
                "glob",
                "stat",
                "round",
                "list",
                "len",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/project_cache.py"
            }
          ],
          "classes": [
            {
              "name": "ProjectCache",
              "line": 16,
              "methods": [
                "__init__",
                "_get_cache_key",
                "_get_cache_path",
                "get",
                "set",
                "invalidate",
                "clear_all",
                "get_stats"
              ],
              "bases": [],
              "file": "backend/services/project_cache.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "Path",
              "line": 36
            },
            {
              "function": "timedelta",
              "line": 48
            },
            {
              "function": "hexdigest",
              "line": 62
            },
            {
              "function": "_get_cache_path",
              "line": 79
            },
            {
              "function": "_get_cache_path",
              "line": 110
            },
            {
              "function": "_get_cache_path",
              "line": 134
            },
            {
              "function": "exists",
              "line": 136
            },
            {
              "function": "glob",
              "line": 142
            },
            {
              "function": "info",
              "line": 144
            },
            {
              "function": "list",
              "line": 148
            },
            {
              "function": "sum",
              "line": 149
            },
            {
              "function": "mkdir",
              "line": 53
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "_get_cache_key",
              "line": 67
            },
            {
              "function": "exists",
              "line": 81
            },
            {
              "function": "fromisoformat",
              "line": 89
            },
            {
              "function": "debug",
              "line": 95
            },
            {
              "function": "debug",
              "line": 122
            },
            {
              "function": "unlink",
              "line": 137
            },
            {
              "function": "debug",
              "line": 138
            },
            {
              "function": "unlink",
              "line": 143
            },
            {
              "function": "glob",
              "line": 148
            },
            {
              "function": "len",
              "line": 152
            },
            {
              "function": "round",
              "line": 154
            },
            {
              "function": "str",
              "line": 155
            },
            {
              "function": "error",
              "line": 56
            },
            {
              "function": "md5",
              "line": 62
            },
            {
              "function": "open",
              "line": 85
            },
            {
              "function": "load",
              "line": 86
            },
            {
              "function": "debug",
              "line": 91
            },
            {
              "function": "unlink",
              "line": 92
            },
            {
              "function": "warning",
              "line": 99
            },
            {
              "function": "isoformat",
              "line": 114
            },
            {
              "function": "open",
              "line": 119
            },
            {
              "function": "dump",
              "line": 120
            },
            {
              "function": "warning",
              "line": 125
            },
            {
              "function": "encode",
              "line": 62
            },
            {
              "function": "now",
              "line": 90
            },
            {
              "function": "stat",
              "line": 149
            },
            {
              "function": "now",
              "line": 114
            }
          ]
        },
        "backend/services/smart_file_watcher.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "Path",
                "info"
              ],
              "parameters": [
                "self",
                "project_root",
                "cache",
                "debounce_seconds"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "watch_file",
              "line": 38,
              "async": false,
              "calls": [
                "debug",
                "exists",
                "stat",
                "set",
                "warning",
                "_resolve_path",
                "add"
              ],
              "parameters": [
                "self",
                "file_path",
                "callback"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "watch_directory",
              "line": 64,
              "async": false,
              "calls": [
                "glob",
                "is_dir",
                "info",
                "is_file",
                "warning",
                "watch_file",
                "_resolve_path",
                "str"
              ],
              "parameters": [
                "self",
                "dir_path",
                "pattern",
                "callback"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "check_changes",
              "line": 86,
              "async": false,
              "calls": [
                "items",
                "callback",
                "exists",
                "stat",
                "fromtimestamp",
                "info",
                "error",
                "list",
                "warning",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "stop_watching",
              "line": 120,
              "async": false,
              "calls": [
                "debug",
                "_resolve_path"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "stop_all",
              "line": 137,
              "async": false,
              "calls": [
                "info",
                "clear"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "get_watched_files",
              "line": 144,
              "async": false,
              "calls": [
                "keys",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "_resolve_path",
              "line": 148,
              "async": false,
              "calls": [
                "Path",
                "is_absolute",
                "resolve"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "start",
              "line": 155,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "stop",
              "line": 164,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            },
            {
              "name": "start_monitoring",
              "line": 169,
              "async": false,
              "calls": [
                "info",
                "sleep",
                "check_changes"
              ],
              "parameters": [
                "self",
                "interval_seconds"
              ],
              "decorators": [],
              "file": "backend/services/smart_file_watcher.py"
            }
          ],
          "classes": [
            {
              "name": "SmartFileWatcher",
              "line": 15,
              "methods": [
                "__init__",
                "watch_file",
                "watch_directory",
                "check_changes",
                "stop_watching",
                "stop_all",
                "get_watched_files",
                "_resolve_path",
                "start",
                "stop",
                "start_monitoring"
              ],
              "bases": [],
              "file": "backend/services/smart_file_watcher.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Set",
                "Optional",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "Path",
              "line": 30
            },
            {
              "function": "info",
              "line": 36
            },
            {
              "function": "_resolve_path",
              "line": 46
            },
            {
              "function": "debug",
              "line": 62
            },
            {
              "function": "_resolve_path",
              "line": 74
            },
            {
              "function": "glob",
              "line": 80
            },
            {
              "function": "info",
              "line": 84
            },
            {
              "function": "list",
              "line": 95
            },
            {
              "function": "_resolve_path",
              "line": 127
            },
            {
              "function": "debug",
              "line": 135
            },
            {
              "function": "clear",
              "line": 139
            },
            {
              "function": "clear",
              "line": 140
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "Path",
              "line": 150
            },
            {
              "function": "resolve",
              "line": 153
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 167
            },
            {
              "function": "info",
              "line": 177
            },
            {
              "function": "exists",
              "line": 48
            },
            {
              "function": "warning",
              "line": 49
            },
            {
              "function": "stat",
              "line": 53
            },
            {
              "function": "add",
              "line": 60
            },
            {
              "function": "is_dir",
              "line": 76
            },
            {
              "function": "warning",
              "line": 77
            },
            {
              "function": "is_file",
              "line": 81
            },
            {
              "function": "items",
              "line": 95
            },
            {
              "function": "str",
              "line": 146
            },
            {
              "function": "is_absolute",
              "line": 151
            },
            {
              "function": "set",
              "line": 59
            },
            {
              "function": "watch_file",
              "line": 82
            },
            {
              "function": "exists",
              "line": 96
            },
            {
              "function": "warning",
              "line": 97
            },
            {
              "function": "stat",
              "line": 101
            },
            {
              "function": "fromtimestamp",
              "line": 105
            },
            {
              "function": "info",
              "line": 116
            },
            {
              "function": "keys",
              "line": 146
            },
            {
              "function": "check_changes",
              "line": 181
            },
            {
              "function": "sleep",
              "line": 182
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "str",
              "line": 82
            },
            {
              "function": "str",
              "line": 105
            },
            {
              "function": "callback",
              "line": 112
            },
            {
              "function": "str",
              "line": 112
            },
            {
              "function": "error",
              "line": 114
            }
          ]
        },
        "backend/services/gemini_video_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 28,
              "async": false,
              "calls": [
                "getenv",
                "ValueError",
                "configure",
                "ImportError",
                "info",
                "GenerativeModel"
              ],
              "parameters": [
                "self",
                "api_key"
              ],
              "decorators": [],
              "file": "backend/services/gemini_video_service.py"
            }
          ],
          "classes": [
            {
              "name": "GeminiVideoService",
              "line": 22,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "backend/services/gemini_video_service.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "google.generativeai",
              "names": [
                "google.generativeai"
              ],
              "line": 13
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 19
            },
            {
              "function": "configure",
              "line": 53
            },
            {
              "function": "GenerativeModel",
              "line": 56
            },
            {
              "function": "info",
              "line": 58
            },
            {
              "function": "Path",
              "line": 74
            },
            {
              "function": "info",
              "line": 78
            },
            {
              "function": "get_event_loop",
              "line": 81
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "debug",
              "line": 176
            },
            {
              "function": "ImportError",
              "line": 40
            },
            {
              "function": "getenv",
              "line": 45
            },
            {
              "function": "ValueError",
              "line": 47
            },
            {
              "function": "exists",
              "line": 75
            },
            {
              "function": "FileNotFoundError",
              "line": 76
            },
            {
              "function": "run_in_executor",
              "line": 82
            },
            {
              "function": "debug",
              "line": 111
            },
            {
              "function": "RuntimeError",
              "line": 115
            },
            {
              "function": "get_event_loop",
              "line": 146
            },
            {
              "function": "info",
              "line": 154
            },
            {
              "function": "get_event_loop",
              "line": 179
            },
            {
              "function": "info",
              "line": 200
            },
            {
              "function": "get_event_loop",
              "line": 201
            },
            {
              "function": "info",
              "line": 207
            },
            {
              "function": "str",
              "line": 85
            },
            {
              "function": "RuntimeError",
              "line": 97
            },
            {
              "function": "sleep",
              "line": 101
            },
            {
              "function": "run_in_executor",
              "line": 105
            },
            {
              "function": "run_in_executor",
              "line": 147
            },
            {
              "function": "error",
              "line": 158
            },
            {
              "function": "RuntimeError",
              "line": 159
            },
            {
              "function": "run_in_executor",
              "line": 180
            },
            {
              "function": "error",
              "line": 189
            },
            {
              "function": "RuntimeError",
              "line": 190
            },
            {
              "function": "run_in_executor",
              "line": 202
            },
            {
              "function": "warning",
              "line": 209
            },
            {
              "function": "upload_video",
              "line": 231
            },
            {
              "function": "analyze_video",
              "line": 234
            },
            {
              "function": "cleanup",
              "line": 241
            },
            {
              "function": "len",
              "line": 154
            }
          ]
        },
        "backend/services/code_search.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "file_path",
                "line_number",
                "line_content",
                "context_before",
                "context_after"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "to_dict",
              "line": 25,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "__init__",
              "line": 44,
              "async": false,
              "calls": [
                "Path",
                "info"
              ],
              "parameters": [
                "self",
                "project_root",
                "cache_dir"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "search",
              "line": 61,
              "async": false,
              "calls": [
                "error",
                "info",
                "_find_files",
                "extend",
                "len",
                "warning",
                "compile",
                "_search_file"
              ],
              "parameters": [
                "self",
                "pattern",
                "file_pattern",
                "case_sensitive",
                "context_lines",
                "max_results"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "search_definition",
              "line": 103,
              "async": false,
              "calls": [
                "get",
                "search"
              ],
              "parameters": [
                "self",
                "symbol_name",
                "symbol_type",
                "file_pattern"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "search_usage",
              "line": 126,
              "async": false,
              "calls": [
                "search",
                "escape"
              ],
              "parameters": [
                "self",
                "symbol_name",
                "file_pattern"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "_find_files",
              "line": 141,
              "async": false,
              "calls": [
                "_should_ignore",
                "is_file",
                "append",
                "glob"
              ],
              "parameters": [
                "self",
                "file_pattern"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "_should_ignore",
              "line": 155,
              "async": false,
              "calls": [
                "match"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "_search_file",
              "line": 171,
              "async": false,
              "calls": [
                "SearchResult",
                "len",
                "max",
                "open",
                "append",
                "enumerate",
                "relative_to",
                "rstrip",
                "search",
                "readlines",
                "warning",
                "min",
                "str"
              ],
              "parameters": [
                "self",
                "file_path",
                "regex",
                "context_lines",
                "max_results"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "add_ignore_pattern",
              "line": 206,
              "async": false,
              "calls": [
                "add"
              ],
              "parameters": [
                "self",
                "pattern"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "remove_ignore_pattern",
              "line": 210,
              "async": false,
              "calls": [
                "discard"
              ],
              "parameters": [
                "self",
                "pattern"
              ],
              "decorators": [],
              "file": "backend/services/code_search.py"
            }
          ],
          "classes": [
            {
              "name": "SearchResult",
              "line": 14,
              "methods": [
                "__init__",
                "to_dict"
              ],
              "bases": [],
              "file": "backend/services/code_search.py"
            },
            {
              "name": "LightweightCodeSearch",
              "line": 36,
              "methods": [
                "__init__",
                "search",
                "search_definition",
                "search_usage",
                "_find_files",
                "_should_ignore",
                "_search_file",
                "add_ignore_pattern",
                "remove_ignore_pattern"
              ],
              "bases": [],
              "file": "backend/services/code_search.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "Set"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "Path",
              "line": 52
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "_find_files",
              "line": 87
            },
            {
              "function": "info",
              "line": 100
            },
            {
              "function": "get",
              "line": 123
            },
            {
              "function": "search",
              "line": 124
            },
            {
              "function": "search",
              "line": 139
            },
            {
              "function": "glob",
              "line": 145
            },
            {
              "function": "add",
              "line": 208
            },
            {
              "function": "discard",
              "line": 212
            },
            {
              "function": "Path",
              "line": 53
            },
            {
              "function": "compile",
              "line": 81
            },
            {
              "function": "_should_ignore",
              "line": 147
            },
            {
              "function": "is_file",
              "line": 150
            },
            {
              "function": "enumerate",
              "line": 180
            },
            {
              "function": "error",
              "line": 83
            },
            {
              "function": "len",
              "line": 90
            },
            {
              "function": "extend",
              "line": 94
            },
            {
              "function": "escape",
              "line": 138
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "match",
              "line": 162
            },
            {
              "function": "open",
              "line": 177
            },
            {
              "function": "readlines",
              "line": 178
            },
            {
              "function": "search",
              "line": 184
            },
            {
              "function": "warning",
              "line": 202
            },
            {
              "function": "_search_file",
              "line": 94
            },
            {
              "function": "warning",
              "line": 98
            },
            {
              "function": "len",
              "line": 100
            },
            {
              "function": "len",
              "line": 181
            },
            {
              "function": "max",
              "line": 186
            },
            {
              "function": "min",
              "line": 187
            },
            {
              "function": "SearchResult",
              "line": 192
            },
            {
              "function": "append",
              "line": 199
            },
            {
              "function": "len",
              "line": 187
            },
            {
              "function": "rstrip",
              "line": 189
            },
            {
              "function": "rstrip",
              "line": 190
            },
            {
              "function": "len",
              "line": 95
            },
            {
              "function": "str",
              "line": 193
            },
            {
              "function": "rstrip",
              "line": 195
            },
            {
              "function": "relative_to",
              "line": 193
            }
          ]
        },
        "examples/claude_web_integration_example.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 24,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/claude_web_integration_example.py"
            },
            {
              "name": "start_proxy_server",
              "line": 28,
              "async": false,
              "calls": [
                "print",
                "Path",
                "Popen",
                "sleep"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/claude_web_integration_example.py"
            },
            {
              "name": "stop_proxy_server",
              "line": 49,
              "async": false,
              "calls": [
                "print",
                "wait",
                "terminate",
                "kill"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/claude_web_integration_example.py"
            },
            {
              "name": "interactive_mode",
              "line": 222,
              "async": false,
              "calls": [
                "input",
                "create_claude_web_llm",
                "generate",
                "print",
                "lower",
                "strip"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/claude_web_integration_example.py"
            }
          ],
          "classes": [
            {
              "name": "ClaudeWebIntegrationDemo",
              "line": 21,
              "methods": [
                "__init__",
                "start_proxy_server",
                "stop_proxy_server",
                "interactive_mode"
              ],
              "bases": [],
              "file": "examples/claude_web_integration_example.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "ClaudeWebLLM",
                "create_claude_web_llm"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.fastapi_server",
              "names": [
                "run_server"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "signal",
              "names": [
                "signal"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 261
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 13
            },
            {
              "function": "str",
              "line": 13
            },
            {
              "function": "ArgumentParser",
              "line": 263
            },
            {
              "function": "add_argument",
              "line": 264
            },
            {
              "function": "add_argument",
              "line": 265
            },
            {
              "function": "add_argument",
              "line": 266
            },
            {
              "function": "parse_args",
              "line": 268
            },
            {
              "function": "ClaudeWebIntegrationDemo",
              "line": 270
            },
            {
              "function": "run",
              "line": 310
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "create_claude_web_llm",
              "line": 69
            },
            {
              "function": "get_model_info",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "items",
              "line": 74
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "create_claude_web_llm",
              "line": 97
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "create_claude_web_llm",
              "line": 118
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 143
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "create_claude_web_llm",
              "line": 176
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "print",
              "line": 226
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "create_claude_web_llm",
              "line": 231
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "start_proxy_server",
              "line": 274
            },
            {
              "function": "main",
              "line": 310
            },
            {
              "function": "Popen",
              "line": 33
            },
            {
              "function": "sleep",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "generate",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "astream_generate",
              "line": 184
            },
            {
              "function": "start_proxy_server",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 211
            },
            {
              "function": "print",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "stop_proxy_server",
              "line": 220
            },
            {
              "function": "start_proxy_server",
              "line": 285
            },
            {
              "function": "Path",
              "line": 13
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "terminate",
              "line": 53
            },
            {
              "function": "wait",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "agenerate",
              "line": 104
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "generate",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "demo_direct_llm_usage",
              "line": 203
            },
            {
              "function": "demo_async_usage",
              "line": 204
            },
            {
              "function": "demo_agent_conversation_tracking",
              "line": 205
            },
            {
              "function": "demo_crewai_integration",
              "line": 206
            },
            {
              "function": "demo_streaming_concept",
              "line": 207
            },
            {
              "function": "strip",
              "line": 235
            },
            {
              "function": "print",
              "line": 276
            },
            {
              "function": "stop_proxy_server",
              "line": 282
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "print",
              "line": 297
            },
            {
              "function": "print",
              "line": 298
            },
            {
              "function": "print",
              "line": 299
            },
            {
              "function": "print",
              "line": 300
            },
            {
              "function": "print",
              "line": 301
            },
            {
              "function": "print",
              "line": 302
            },
            {
              "function": "print",
              "line": 303
            },
            {
              "function": "print",
              "line": 304
            },
            {
              "function": "print",
              "line": 305
            },
            {
              "function": "print",
              "line": 306
            },
            {
              "function": "kill",
              "line": 57
            },
            {
              "function": "wait",
              "line": 58
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "lower",
              "line": 237
            },
            {
              "function": "sleep",
              "line": 278
            },
            {
              "function": "interactive_mode",
              "line": 287
            },
            {
              "function": "stop_proxy_server",
              "line": 289
            },
            {
              "function": "run_full_demo",
              "line": 294
            },
            {
              "function": "input",
              "line": 235
            },
            {
              "function": "lower",
              "line": 239
            },
            {
              "function": "print",
              "line": 240
            },
            {
              "function": "Path",
              "line": 38
            },
            {
              "function": "lower",
              "line": 241
            },
            {
              "function": "print",
              "line": 242
            },
            {
              "function": "print",
              "line": 244
            },
            {
              "function": "print",
              "line": 246
            },
            {
              "function": "generate",
              "line": 248
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 251
            }
          ]
        },
        "examples/video_analysis_demo.py": {
          "functions": [
            {
              "name": "analyze_video",
              "line": 20,
              "async": false,
              "calls": [
                "getenv",
                "ValueError",
                "generate_content",
                "exists",
                "configure",
                "Path",
                "sleep",
                "hasattr",
                "upload_file",
                "FileNotFoundError",
                "print",
                "get_file",
                "GenerativeModel"
              ],
              "parameters": [
                "video_path",
                "query"
              ],
              "decorators": [],
              "file": "examples/video_analysis_demo.py"
            },
            {
              "name": "demo_bug_report",
              "line": 99,
              "async": false,
              "calls": [
                "len",
                "analyze_video"
              ],
              "parameters": [],
              "decorators": [],
              "file": "examples/video_analysis_demo.py"
            },
            {
              "name": "demo_code_walkthrough",
              "line": 120,
              "async": false,
              "calls": [
                "len",
                "analyze_video"
              ],
              "parameters": [],
              "decorators": [],
              "file": "examples/video_analysis_demo.py"
            },
            {
              "name": "demo_meeting_summary",
              "line": 140,
              "async": false,
              "calls": [
                "len",
                "analyze_video"
              ],
              "parameters": [],
              "decorators": [],
              "file": "examples/video_analysis_demo.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "google.generativeai",
              "names": [
                "google.generativeai"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 189
            }
          ],
          "calls": [
            {
              "function": "getenv",
              "line": 33
            },
            {
              "function": "configure",
              "line": 37
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "upload_file",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "GenerativeModel",
              "line": 78
            },
            {
              "function": "generate_content",
              "line": 79
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "analyze_video",
              "line": 116
            },
            {
              "function": "analyze_video",
              "line": 136
            },
            {
              "function": "analyze_video",
              "line": 156
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "ValueError",
              "line": 35
            },
            {
              "function": "exists",
              "line": 43
            },
            {
              "function": "FileNotFoundError",
              "line": 44
            },
            {
              "function": "sleep",
              "line": 54
            },
            {
              "function": "get_file",
              "line": 55
            },
            {
              "function": "ValueError",
              "line": 58
            },
            {
              "function": "len",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 169
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "exit",
              "line": 171
            },
            {
              "function": "analyze_video",
              "line": 175
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "hasattr",
              "line": 92
            },
            {
              "function": "len",
              "line": 114
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "len",
              "line": 154
            },
            {
              "function": "open",
              "line": 181
            },
            {
              "function": "write",
              "line": 182
            },
            {
              "function": "write",
              "line": 183
            },
            {
              "function": "write",
              "line": 184
            },
            {
              "function": "write",
              "line": 185
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print_exc",
              "line": 190
            },
            {
              "function": "exit",
              "line": 191
            },
            {
              "function": "Path",
              "line": 43
            }
          ]
        },
        "examples/video_batch_demo.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "agents.specialized.video_agent",
              "names": [
                "VideoAgent"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 26
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 273
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 23
            },
            {
              "function": "str",
              "line": 23
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "VideoAgent",
              "line": 39
            },
            {
              "function": "TaskRequest",
              "line": 51
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "VideoAgent",
              "line": 87
            },
            {
              "function": "TaskRequest",
              "line": 115
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "VideoAgent",
              "line": 151
            },
            {
              "function": "Path",
              "line": 171
            },
            {
              "function": "range",
              "line": 175
            },
            {
              "function": "TaskRequest",
              "line": 208
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "print",
              "line": 217
            },
            {
              "function": "print",
              "line": 247
            },
            {
              "function": "print",
              "line": 248
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "run",
              "line": 278
            },
            {
              "function": "exists",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "execute",
              "line": 63
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "get",
              "line": 70
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "exists",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "execute",
              "line": 127
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "get",
              "line": 134
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "append",
              "line": 182
            },
            {
              "function": "exists",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "print",
              "line": 200
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "print",
              "line": 202
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "print",
              "line": 204
            },
            {
              "function": "execute",
              "line": 219
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "print",
              "line": 240
            },
            {
              "function": "getenv",
              "line": 252
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "print",
              "line": 254
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 257
            },
            {
              "function": "print",
              "line": 258
            },
            {
              "function": "print",
              "line": 267
            },
            {
              "function": "print",
              "line": 268
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "main",
              "line": 278
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 236
            },
            {
              "function": "demo_single_video",
              "line": 263
            },
            {
              "function": "demo_custom_instruction",
              "line": 264
            },
            {
              "function": "demo_batch_processing",
              "line": 265
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print_exc",
              "line": 274
            },
            {
              "function": "Path",
              "line": 45
            },
            {
              "function": "Path",
              "line": 92
            },
            {
              "function": "str",
              "line": 183
            },
            {
              "function": "len",
              "line": 216
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "Path",
              "line": 23
            },
            {
              "function": "get",
              "line": 72
            },
            {
              "function": "get",
              "line": 136
            },
            {
              "function": "len",
              "line": 194
            }
          ]
        },
        "examples/multi_agent_claude_web_demo.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 24,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/multi_agent_claude_web_demo.py"
            },
            {
              "name": "start_claude_web_server",
              "line": 29,
              "async": false,
              "calls": [
                "print",
                "Path",
                "Popen",
                "sleep"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/multi_agent_claude_web_demo.py"
            },
            {
              "name": "stop_claude_web_server",
              "line": 50,
              "async": false,
              "calls": [
                "print",
                "wait",
                "terminate",
                "kill"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "examples/multi_agent_claude_web_demo.py"
            }
          ],
          "classes": [
            {
              "name": "MultiAgentClaudeWebDemo",
              "line": 21,
              "methods": [
                "__init__",
                "start_claude_web_server",
                "stop_claude_web_server"
              ],
              "bases": [],
              "file": "examples/multi_agent_claude_web_demo.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "signal",
              "names": [
                "signal"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "claude_web_proxy.crewai_integration",
              "names": [
                "create_claude_web_llm"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "orchestration.master_dispatcher",
              "names": [
                "MasterDispatcher"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 301
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 15
            },
            {
              "function": "str",
              "line": 15
            },
            {
              "function": "ArgumentParser",
              "line": 303
            },
            {
              "function": "add_argument",
              "line": 304
            },
            {
              "function": "add_argument",
              "line": 305
            },
            {
              "function": "add_argument",
              "line": 306
            },
            {
              "function": "add_argument",
              "line": 307
            },
            {
              "function": "parse_args",
              "line": 309
            },
            {
              "function": "MultiAgentClaudeWebDemo",
              "line": 311
            },
            {
              "function": "run",
              "line": 358
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "create_claude_web_llm",
              "line": 142
            },
            {
              "function": "enumerate",
              "line": 171
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "create_claude_web_llm",
              "line": 193
            },
            {
              "function": "print",
              "line": 204
            },
            {
              "function": "print",
              "line": 236
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 257
            },
            {
              "function": "start_claude_web_server",
              "line": 314
            },
            {
              "function": "main",
              "line": 358
            },
            {
              "function": "Popen",
              "line": 34
            },
            {
              "function": "sleep",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "create_claude_web_llm",
              "line": 71
            },
            {
              "function": "create_claude_web_llm",
              "line": 75
            },
            {
              "function": "create_claude_web_llm",
              "line": 79
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "gather",
              "line": 230
            },
            {
              "function": "isinstance",
              "line": 239
            },
            {
              "function": "start_claude_web_server",
              "line": 260
            },
            {
              "function": "print",
              "line": 261
            },
            {
              "function": "print",
              "line": 265
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "print",
              "line": 277
            },
            {
              "function": "print",
              "line": 278
            },
            {
              "function": "print",
              "line": 279
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 281
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print",
              "line": 289
            },
            {
              "function": "print",
              "line": 290
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "print",
              "line": 292
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "stop_claude_web_server",
              "line": 296
            },
            {
              "function": "start_claude_web_server",
              "line": 321
            },
            {
              "function": "Path",
              "line": 15
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "terminate",
              "line": 54
            },
            {
              "function": "wait",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "generate",
              "line": 118
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "generate",
              "line": 179
            },
            {
              "function": "print",
              "line": 180
            },
            {
              "function": "sleep",
              "line": 185
            },
            {
              "function": "time",
              "line": 209
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "get",
              "line": 241
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "sleep",
              "line": 266
            },
            {
              "function": "demonstrate_agent_coordination",
              "line": 269
            },
            {
              "function": "demonstrate_conversation_continuity",
              "line": 270
            },
            {
              "function": "demonstrate_parallel_agent_execution",
              "line": 271
            },
            {
              "function": "stop_claude_web_server",
              "line": 318
            },
            {
              "function": "start_claude_web_server",
              "line": 328
            },
            {
              "function": "kill",
              "line": 58
            },
            {
              "function": "wait",
              "line": 59
            },
            {
              "function": "sleep",
              "line": 128
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "len",
              "line": 204
            },
            {
              "function": "agenerate",
              "line": 210
            },
            {
              "function": "time",
              "line": 211
            },
            {
              "function": "len",
              "line": 236
            },
            {
              "function": "get",
              "line": 244
            },
            {
              "function": "len",
              "line": 245
            },
            {
              "function": "print",
              "line": 246
            },
            {
              "function": "get",
              "line": 248
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "demonstrate_agent_coordination",
              "line": 316
            },
            {
              "function": "stop_claude_web_server",
              "line": 325
            },
            {
              "function": "print",
              "line": 338
            },
            {
              "function": "print",
              "line": 339
            },
            {
              "function": "print",
              "line": 340
            },
            {
              "function": "print",
              "line": 341
            },
            {
              "function": "print",
              "line": 342
            },
            {
              "function": "print",
              "line": 343
            },
            {
              "function": "print",
              "line": 344
            },
            {
              "function": "print",
              "line": 345
            },
            {
              "function": "print",
              "line": 346
            },
            {
              "function": "print",
              "line": 347
            },
            {
              "function": "print",
              "line": 348
            },
            {
              "function": "print",
              "line": 349
            },
            {
              "function": "print",
              "line": 350
            },
            {
              "function": "print",
              "line": 351
            },
            {
              "function": "print",
              "line": 352
            },
            {
              "function": "print",
              "line": 353
            },
            {
              "function": "print",
              "line": 354
            },
            {
              "function": "str",
              "line": 225
            },
            {
              "function": "agent_task",
              "line": 231
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "demonstrate_conversation_continuity",
              "line": 323
            },
            {
              "function": "stop_claude_web_server",
              "line": 332
            },
            {
              "function": "run_comprehensive_demo",
              "line": 335
            },
            {
              "function": "Path",
              "line": 39
            },
            {
              "function": "len",
              "line": 124
            },
            {
              "function": "str",
              "line": 132
            },
            {
              "function": "demonstrate_parallel_agent_execution",
              "line": 330
            }
          ]
        },
        "scripts/create_version_info.py": {
          "functions": [
            {
              "name": "get_version_from_file",
              "line": 14,
              "async": false,
              "calls": [
                "exists",
                "Path",
                "open",
                "cwd",
                "split",
                "startswith",
                "strip"
              ],
              "parameters": [],
              "decorators": [],
              "file": "scripts/create_version_info.py"
            },
            {
              "name": "create_version_info",
              "line": 34,
              "async": false,
              "calls": [
                "exists",
                "load",
                "now",
                "Path",
                "open",
                "dump",
                "print",
                "isoformat",
                "get",
                "get_version_from_file"
              ],
              "parameters": [
                "install_dir",
                "is_update"
              ],
              "decorators": [],
              "file": "scripts/create_version_info.py"
            },
            {
              "name": "main",
              "line": 73,
              "async": false,
              "calls": [
                "add_argument",
                "exists",
                "print_exc",
                "ArgumentParser",
                "exit",
                "Path",
                "parse_args",
                "print",
                "create_version_info"
              ],
              "parameters": [],
              "decorators": [],
              "file": "scripts/create_version_info.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 89
            }
          ],
          "calls": [
            {
              "function": "Path",
              "line": 36
            },
            {
              "function": "get_version_from_file",
              "line": 39
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "ArgumentParser",
              "line": 74
            },
            {
              "function": "add_argument",
              "line": 75
            },
            {
              "function": "add_argument",
              "line": 76
            },
            {
              "function": "parse_args",
              "line": 78
            },
            {
              "function": "main",
              "line": 95
            },
            {
              "function": "exists",
              "line": 24
            },
            {
              "function": "exists",
              "line": 41
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "isoformat",
              "line": 49
            },
            {
              "function": "isoformat",
              "line": 50
            },
            {
              "function": "open",
              "line": 66
            },
            {
              "function": "dump",
              "line": 67
            },
            {
              "function": "exists",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "exit",
              "line": 83
            },
            {
              "function": "create_version_info",
              "line": 86
            },
            {
              "function": "cwd",
              "line": 20
            },
            {
              "function": "open",
              "line": 43
            },
            {
              "function": "load",
              "line": 44
            },
            {
              "function": "isoformat",
              "line": 60
            },
            {
              "function": "isoformat",
              "line": 62
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print_exc",
              "line": 90
            },
            {
              "function": "exit",
              "line": 91
            },
            {
              "function": "cwd",
              "line": 19
            },
            {
              "function": "open",
              "line": 25
            },
            {
              "function": "now",
              "line": 49
            },
            {
              "function": "now",
              "line": 50
            },
            {
              "function": "Path",
              "line": 81
            },
            {
              "function": "startswith",
              "line": 27
            },
            {
              "function": "now",
              "line": 60
            },
            {
              "function": "now",
              "line": 62
            },
            {
              "function": "Path",
              "line": 18
            },
            {
              "function": "strip",
              "line": 28
            },
            {
              "function": "strip",
              "line": 28
            },
            {
              "function": "strip",
              "line": 28
            },
            {
              "function": "split",
              "line": 28
            }
          ]
        },
        "scripts/update_instructions.py": {
          "functions": [
            {
              "name": "main",
              "line": 303,
              "async": false,
              "calls": [
                "add_argument",
                "update_preserve",
                "exists",
                "glob",
                "ArgumentParser",
                "exit",
                "print_exc",
                "Path",
                "update_overwrite",
                "parse_args",
                "copy",
                "print",
                "update_backup",
                "InstructionsUpdater",
                "update_interactive"
              ],
              "parameters": [],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "__init__",
              "line": 20,
              "async": false,
              "calls": [
                "Path",
                "mkdir"
              ],
              "parameters": [
                "self",
                "source_dir",
                "target_dir"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "get_file_hash",
              "line": 29,
              "async": false,
              "calls": [
                "open",
                "read",
                "hexdigest",
                "md5"
              ],
              "parameters": [
                "self",
                "filepath"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "find_changes",
              "line": 34,
              "async": false,
              "calls": [
                "get_file_hash",
                "exists",
                "glob"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "show_diff",
              "line": 64,
              "async": false,
              "calls": [
                "unified_diff",
                "readlines",
                "join",
                "open"
              ],
              "parameters": [
                "self",
                "filename",
                "context_lines"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "show_summary_diff",
              "line": 86,
              "async": false,
              "calls": [
                "sum",
                "open",
                "unified_diff",
                "list",
                "readlines",
                "startswith"
              ],
              "parameters": [
                "self",
                "filename"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "update_interactive",
              "line": 104,
              "async": false,
              "calls": [
                "_save_as_new",
                "items",
                "show_summary_diff",
                "_backup_and_update",
                "show_diff",
                "input",
                "copy",
                "print",
                "lower",
                "len",
                "find_changes"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "_backup_and_update",
              "line": 197,
              "async": false,
              "calls": [
                "now",
                "exists",
                "mkdir",
                "strftime",
                "copy"
              ],
              "parameters": [
                "self",
                "filename"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "_save_as_new",
              "line": 210,
              "async": false,
              "calls": [
                "copy"
              ],
              "parameters": [
                "self",
                "filename"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "update_overwrite",
              "line": 216,
              "async": false,
              "calls": [
                "now",
                "glob",
                "mkdir",
                "strftime",
                "copy",
                "print"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "update_preserve",
              "line": 231,
              "async": false,
              "calls": [
                "items",
                "copy",
                "print",
                "len",
                "find_changes"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "update_backup",
              "line": 247,
              "async": false,
              "calls": [
                "sorted",
                "items",
                "show_summary_diff",
                "now",
                "glob",
                "mkdir",
                "open",
                "write",
                "strftime",
                "_get_version",
                "copy",
                "print",
                "len",
                "capitalize",
                "find_changes"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            },
            {
              "name": "_get_version",
              "line": 284,
              "async": false,
              "calls": [
                "exists",
                "Path",
                "open",
                "split",
                "startswith",
                "strip"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "scripts/update_instructions.py"
            }
          ],
          "classes": [
            {
              "name": "InstructionsUpdater",
              "line": 19,
              "methods": [
                "__init__",
                "get_file_hash",
                "find_changes",
                "show_diff",
                "show_summary_diff",
                "update_interactive",
                "_backup_and_update",
                "_save_as_new",
                "update_overwrite",
                "update_preserve",
                "update_backup",
                "_get_version"
              ],
              "bases": [],
              "file": "scripts/update_instructions.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "shutil",
              "names": [
                "shutil"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Optional"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "difflib",
              "names": [
                "difflib"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "argparse",
              "names": [
                "argparse"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 371
            }
          ],
          "calls": [
            {
              "function": "ArgumentParser",
              "line": 304
            },
            {
              "function": "add_argument",
              "line": 323
            },
            {
              "function": "add_argument",
              "line": 324
            },
            {
              "function": "add_argument",
              "line": 325
            },
            {
              "function": "add_argument",
              "line": 329
            },
            {
              "function": "parse_args",
              "line": 332
            },
            {
              "function": "InstructionsUpdater",
              "line": 339
            },
            {
              "function": "main",
              "line": 377
            },
            {
              "function": "Path",
              "line": 21
            },
            {
              "function": "Path",
              "line": 22
            },
            {
              "function": "mkdir",
              "line": 27
            },
            {
              "function": "glob",
              "line": 43
            },
            {
              "function": "glob",
              "line": 58
            },
            {
              "function": "unified_diff",
              "line": 75
            },
            {
              "function": "join",
              "line": 84
            },
            {
              "function": "list",
              "line": 98
            },
            {
              "function": "sum",
              "line": 99
            },
            {
              "function": "sum",
              "line": 100
            },
            {
              "function": "find_changes",
              "line": 106
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 143
            },
            {
              "function": "mkdir",
              "line": 201
            },
            {
              "function": "exists",
              "line": 204
            },
            {
              "function": "copy",
              "line": 208
            },
            {
              "function": "copy",
              "line": 214
            },
            {
              "function": "mkdir",
              "line": 220
            },
            {
              "function": "glob",
              "line": 222
            },
            {
              "function": "glob",
              "line": 226
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "find_changes",
              "line": 233
            },
            {
              "function": "len",
              "line": 241
            },
            {
              "function": "print",
              "line": 245
            },
            {
              "function": "_get_version",
              "line": 250
            },
            {
              "function": "mkdir",
              "line": 252
            },
            {
              "function": "find_changes",
              "line": 254
            },
            {
              "function": "glob",
              "line": 257
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 281
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "exists",
              "line": 335
            },
            {
              "function": "print",
              "line": 336
            },
            {
              "function": "exit",
              "line": 337
            },
            {
              "function": "open",
              "line": 31
            },
            {
              "function": "hexdigest",
              "line": 32
            },
            {
              "function": "open",
              "line": 69
            },
            {
              "function": "readlines",
              "line": 70
            },
            {
              "function": "open",
              "line": 72
            },
            {
              "function": "readlines",
              "line": 73
            },
            {
              "function": "open",
              "line": 91
            },
            {
              "function": "readlines",
              "line": 92
            },
            {
              "function": "open",
              "line": 94
            },
            {
              "function": "readlines",
              "line": 95
            },
            {
              "function": "unified_diff",
              "line": 98
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "input",
              "line": 190
            },
            {
              "function": "strftime",
              "line": 200
            },
            {
              "function": "copy",
              "line": 205
            },
            {
              "function": "strftime",
              "line": 219
            },
            {
              "function": "copy",
              "line": 223
            },
            {
              "function": "copy",
              "line": 227
            },
            {
              "function": "print",
              "line": 243
            },
            {
              "function": "copy",
              "line": 258
            },
            {
              "function": "open",
              "line": 261
            },
            {
              "function": "write",
              "line": 262
            },
            {
              "function": "write",
              "line": 263
            },
            {
              "function": "write",
              "line": 265
            },
            {
              "function": "write",
              "line": 271
            },
            {
              "function": "sorted",
              "line": 272
            },
            {
              "function": "exists",
              "line": 293
            },
            {
              "function": "print",
              "line": 344
            },
            {
              "function": "glob",
              "line": 345
            },
            {
              "function": "print",
              "line": 348
            },
            {
              "function": "print",
              "line": 367
            },
            {
              "function": "exit",
              "line": 368
            },
            {
              "function": "print",
              "line": 370
            },
            {
              "function": "print_exc",
              "line": 372
            },
            {
              "function": "exit",
              "line": 373
            },
            {
              "function": "Path",
              "line": 24
            },
            {
              "function": "exists",
              "line": 46
            },
            {
              "function": "get_file_hash",
              "line": 49
            },
            {
              "function": "get_file_hash",
              "line": 50
            },
            {
              "function": "exists",
              "line": 59
            },
            {
              "function": "items",
              "line": 111
            },
            {
              "function": "items",
              "line": 112
            },
            {
              "function": "items",
              "line": 113
            },
            {
              "function": "items",
              "line": 114
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "show_summary_diff",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "len",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "input",
              "line": 151
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "copy",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "items",
              "line": 234
            },
            {
              "function": "copy",
              "line": 238
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "items",
              "line": 272
            },
            {
              "function": "write",
              "line": 273
            },
            {
              "function": "write",
              "line": 274
            },
            {
              "function": "Path",
              "line": 335
            },
            {
              "function": "copy",
              "line": 346
            },
            {
              "function": "print",
              "line": 347
            },
            {
              "function": "update_interactive",
              "line": 351
            },
            {
              "function": "Path",
              "line": 23
            },
            {
              "function": "md5",
              "line": 32
            },
            {
              "function": "_backup_and_update",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "now",
              "line": 200
            },
            {
              "function": "now",
              "line": 219
            },
            {
              "function": "write",
              "line": 269
            },
            {
              "function": "show_summary_diff",
              "line": 277
            },
            {
              "function": "write",
              "line": 278
            },
            {
              "function": "Path",
              "line": 289
            },
            {
              "function": "open",
              "line": 294
            },
            {
              "function": "Path",
              "line": 345
            },
            {
              "function": "update_overwrite",
              "line": 354
            },
            {
              "function": "read",
              "line": 32
            },
            {
              "function": "startswith",
              "line": 99
            },
            {
              "function": "startswith",
              "line": 100
            },
            {
              "function": "len",
              "line": 117
            },
            {
              "function": "len",
              "line": 122
            },
            {
              "function": "len",
              "line": 128
            },
            {
              "function": "len",
              "line": 133
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "strftime",
              "line": 263
            },
            {
              "function": "items",
              "line": 267
            },
            {
              "function": "startswith",
              "line": 296
            },
            {
              "function": "Path",
              "line": 346
            },
            {
              "function": "update_preserve",
              "line": 357
            },
            {
              "function": "startswith",
              "line": 99
            },
            {
              "function": "startswith",
              "line": 100
            },
            {
              "function": "_save_as_new",
              "line": 169
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "Path",
              "line": 288
            },
            {
              "function": "strip",
              "line": 297
            },
            {
              "function": "update_backup",
              "line": 360
            },
            {
              "function": "print",
              "line": 363
            },
            {
              "function": "exit",
              "line": 364
            },
            {
              "function": "len",
              "line": 137
            },
            {
              "function": "show_diff",
              "line": 174
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 181
            },
            {
              "function": "now",
              "line": 263
            },
            {
              "function": "capitalize",
              "line": 269
            },
            {
              "function": "len",
              "line": 269
            },
            {
              "function": "strip",
              "line": 297
            },
            {
              "function": "strip",
              "line": 297
            },
            {
              "function": "split",
              "line": 297
            }
          ]
        },
        "langgraph_system/intelligent_query_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "_init_fallback_responses",
                "_init_query_patterns"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_init_fallback_responses",
              "line": 39,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_init_query_patterns",
              "line": 119,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "analyze_query",
              "line": 148,
              "async": false,
              "calls": [
                "QueryAnalysis",
                "split",
                "any",
                "get",
                "lower",
                "len"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "get_intelligent_response",
              "line": 219,
              "async": false,
              "calls": [
                "lower",
                "any",
                "analyze_query"
              ],
              "parameters": [
                "self",
                "query",
                "context"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "create_intelligent_execution_plan",
              "line": 256,
              "async": false,
              "calls": [
                "analyze_query",
                "ExecutionStep",
                "get_intelligent_response"
              ],
              "parameters": [
                "self",
                "query",
                "fallback_agent"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "enhance_orchestrator_step",
              "line": 344,
              "async": false,
              "calls": [
                "info",
                "len",
                "get_intelligent_response"
              ],
              "parameters": [
                "self",
                "step",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "integrate_with_classification",
              "line": 359,
              "async": false,
              "calls": [
                "get",
                "_get_development_guidance"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "_get_development_guidance",
              "line": 389,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            }
          ],
          "classes": [
            {
              "name": "QueryAnalysis",
              "line": 17,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            },
            {
              "name": "IntelligentQueryHandler",
              "line": 29,
              "methods": [
                "__init__",
                "_init_fallback_responses",
                "_init_query_patterns",
                "analyze_query",
                "get_intelligent_response",
                "create_intelligent_execution_plan",
                "enhance_orchestrator_step",
                "integrate_with_classification",
                "_get_development_guidance"
              ],
              "bases": [],
              "file": "langgraph_system/intelligent_query_handler.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Tuple",
                "Optional"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExecutionStep"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "_init_fallback_responses",
              "line": 36
            },
            {
              "function": "_init_query_patterns",
              "line": 37
            },
            {
              "function": "lower",
              "line": 152
            },
            {
              "function": "any",
              "line": 168
            },
            {
              "function": "any",
              "line": 178
            },
            {
              "function": "get",
              "line": 203
            },
            {
              "function": "QueryAnalysis",
              "line": 208
            },
            {
              "function": "lower",
              "line": 224
            },
            {
              "function": "analyze_query",
              "line": 232
            },
            {
              "function": "analyze_query",
              "line": 264
            },
            {
              "function": "get",
              "line": 365
            },
            {
              "function": "get",
              "line": 369
            },
            {
              "function": "get",
              "line": 372
            },
            {
              "function": "get",
              "line": 375
            },
            {
              "function": "get",
              "line": 382
            },
            {
              "function": "get",
              "line": 431
            },
            {
              "function": "any",
              "line": 155
            },
            {
              "function": "any",
              "line": 160
            },
            {
              "function": "any",
              "line": 170
            },
            {
              "function": "any",
              "line": 180
            },
            {
              "function": "any",
              "line": 228
            },
            {
              "function": "get_intelligent_response",
              "line": 282
            },
            {
              "function": "ExecutionStep",
              "line": 333
            },
            {
              "function": "get_intelligent_response",
              "line": 351
            },
            {
              "function": "info",
              "line": 355
            },
            {
              "function": "get",
              "line": 376
            },
            {
              "function": "any",
              "line": 162
            },
            {
              "function": "any",
              "line": 172
            },
            {
              "function": "any",
              "line": 182
            },
            {
              "function": "split",
              "line": 191
            },
            {
              "function": "ExecutionStep",
              "line": 269
            },
            {
              "function": "ExecutionStep",
              "line": 285
            },
            {
              "function": "ExecutionStep",
              "line": 304
            },
            {
              "function": "ExecutionStep",
              "line": 312
            },
            {
              "function": "ExecutionStep",
              "line": 320
            },
            {
              "function": "_get_development_guidance",
              "line": 379
            },
            {
              "function": "any",
              "line": 184
            },
            {
              "function": "len",
              "line": 191
            },
            {
              "function": "len",
              "line": 355
            }
          ]
        },
        "langgraph_system/cache_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 24,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/cache_manager.py"
            },
            {
              "name": "check_docker_installed",
              "line": 28,
              "async": false,
              "calls": [
                "run"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/cache_manager.py"
            },
            {
              "name": "check_redis_running",
              "line": 41,
              "async": false,
              "calls": [
                "Redis",
                "ping"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/cache_manager.py"
            },
            {
              "name": "start_redis_container",
              "line": 51,
              "async": false,
              "calls": [
                "check_redis_running",
                "check_docker_installed",
                "sleep",
                "info",
                "run",
                "append",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/cache_manager.py"
            },
            {
              "name": "fill_caches",
              "line": 131,
              "async": false,
              "calls": [
                "start_redis_container",
                "join",
                "set",
                "extend",
                "append"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/cache_manager.py"
            }
          ],
          "classes": [
            {
              "name": "CacheManager",
              "line": 21,
              "methods": [
                "__init__",
                "check_docker_installed",
                "check_redis_running",
                "start_redis_container",
                "fill_caches"
              ],
              "bases": [],
              "file": "langgraph_system/cache_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "redis",
              "names": [
                "redis"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "__version__",
              "names": [
                "__version_display__"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "check_redis_running",
              "line": 66
            },
            {
              "function": "start_redis_container",
              "line": 141
            },
            {
              "function": "extend",
              "line": 157
            },
            {
              "function": "extend",
              "line": 158
            },
            {
              "function": "extend",
              "line": 159
            },
            {
              "function": "abspath",
              "line": 15
            },
            {
              "function": "run",
              "line": 31
            },
            {
              "function": "Redis",
              "line": 44
            },
            {
              "function": "ping",
              "line": 45
            },
            {
              "function": "check_docker_installed",
              "line": 60
            },
            {
              "function": "append",
              "line": 62
            },
            {
              "function": "append",
              "line": 69
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "run",
              "line": 75
            },
            {
              "function": "run",
              "line": 80
            },
            {
              "function": "append",
              "line": 85
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "run",
              "line": 96
            },
            {
              "function": "join",
              "line": 161
            },
            {
              "function": "append",
              "line": 104
            },
            {
              "function": "sleep",
              "line": 107
            },
            {
              "function": "check_redis_running",
              "line": 110
            },
            {
              "function": "append",
              "line": 120
            },
            {
              "function": "append",
              "line": 124
            },
            {
              "function": "append",
              "line": 127
            },
            {
              "function": "set",
              "line": 149
            },
            {
              "function": "set",
              "line": 150
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "append",
              "line": 113
            },
            {
              "function": "append",
              "line": 114
            },
            {
              "function": "append",
              "line": 117
            },
            {
              "function": "append",
              "line": 153
            },
            {
              "function": "str",
              "line": 126
            },
            {
              "function": "str",
              "line": 127
            }
          ]
        },
        "langgraph_system/development_query_handler.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 33,
              "async": false,
              "calls": [
                "getLogger"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "analyze_context",
              "line": 36,
              "async": false,
              "calls": [
                "sum",
                "lower",
                "bool",
                "DevelopmentContext",
                "any",
                "search"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_performance_query",
              "line": 77,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_bug_query",
              "line": 116,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_refactoring_query",
              "line": 162,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_testing_query",
              "line": 204,
              "async": false,
              "calls": [
                "analyze_context"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_implementation_query",
              "line": 253,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_technology_query",
              "line": 311,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_database_query",
              "line": 355,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_ai_integration_query",
              "line": 417,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_error_diagnosis_query",
              "line": 470,
              "async": false,
              "calls": [
                "lower",
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_scope_clarification",
              "line": 546,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "get_handler_for_type",
              "line": 604,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "handle_development_query",
              "line": 622,
              "async": false,
              "calls": [
                "handler",
                "get_handler_for_type"
              ],
              "parameters": [
                "self",
                "query",
                "dev_type",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "suggest_next_steps",
              "line": 647,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "query_type"
              ],
              "decorators": [],
              "file": "langgraph_system/development_query_handler.py"
            }
          ],
          "classes": [
            {
              "name": "DevelopmentContext",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/development_query_handler.py"
            },
            {
              "name": "DevelopmentQueryHandler",
              "line": 27,
              "methods": [
                "__init__",
                "analyze_context",
                "handle_performance_query",
                "handle_bug_query",
                "handle_refactoring_query",
                "handle_testing_query",
                "handle_implementation_query",
                "handle_technology_query",
                "handle_database_query",
                "handle_ai_integration_query",
                "handle_error_diagnosis_query",
                "handle_scope_clarification",
                "get_handler_for_type",
                "handle_development_query",
                "suggest_next_steps"
              ],
              "bases": [],
              "file": "langgraph_system/development_query_handler.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "getLogger",
              "line": 34
            },
            {
              "function": "any",
              "line": 40
            },
            {
              "function": "bool",
              "line": 45
            },
            {
              "function": "any",
              "line": 48
            },
            {
              "function": "any",
              "line": 53
            },
            {
              "function": "any",
              "line": 58
            },
            {
              "function": "DevelopmentContext",
              "line": 65
            },
            {
              "function": "analyze_context",
              "line": 79
            },
            {
              "function": "analyze_context",
              "line": 118
            },
            {
              "function": "analyze_context",
              "line": 164
            },
            {
              "function": "analyze_context",
              "line": 206
            },
            {
              "function": "any",
              "line": 257
            },
            {
              "function": "any",
              "line": 358
            },
            {
              "function": "any",
              "line": 473
            },
            {
              "function": "get",
              "line": 620
            },
            {
              "function": "get_handler_for_type",
              "line": 635
            },
            {
              "function": "get",
              "line": 663
            },
            {
              "function": "search",
              "line": 45
            },
            {
              "function": "sum",
              "line": 63
            },
            {
              "function": "handler",
              "line": 638
            },
            {
              "function": "lower",
              "line": 40
            },
            {
              "function": "lower",
              "line": 48
            },
            {
              "function": "lower",
              "line": 53
            },
            {
              "function": "lower",
              "line": 58
            },
            {
              "function": "lower",
              "line": 257
            },
            {
              "function": "lower",
              "line": 358
            },
            {
              "function": "lower",
              "line": 473
            }
          ]
        },
        "langgraph_system/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "create_initial_state"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "extensions",
              "names": [
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 8
            }
          ],
          "calls": []
        },
        "langgraph_system/query_classifier.py": {
          "functions": [
            {
              "name": "summary",
              "line": 57,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "__init__",
              "line": 71,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "classify_query",
              "line": 161,
              "async": false,
              "calls": [
                "md5",
                "_has_context_reference",
                "_check_pattern",
                "_calculate_safety",
                "_calculate_confidence",
                "_calculate_coherence",
                "_prepare_responses",
                "encode",
                "_is_nonsense",
                "DetailedClassification",
                "_check_development_patterns",
                "_determine_action",
                "lower",
                "_is_greeting",
                "hexdigest",
                "strip"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_greeting",
              "line": 208,
              "async": false,
              "calls": [
                "lower",
                "startswith",
                "split"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_nonsense",
              "line": 228,
              "async": false,
              "calls": [
                "set",
                "split",
                "search",
                "len",
                "match"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_has_context_reference",
              "line": 249,
              "async": false,
              "calls": [
                "startswith"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_pattern",
              "line": 259,
              "async": false,
              "calls": [
                "any"
              ],
              "parameters": [
                "self",
                "query",
                "patterns"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_development_patterns",
              "line": 263,
              "async": false,
              "calls": [
                "len",
                "_check_pattern",
                "_has_context_reference",
                "split"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_coherence",
              "line": 319,
              "async": false,
              "calls": [
                "max",
                "set",
                "split",
                "len",
                "min",
                "match"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_confidence",
              "line": 342,
              "async": false,
              "calls": [
                "max",
                "min"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_calculate_safety",
              "line": 364,
              "async": false,
              "calls": [
                "max",
                "get",
                "min"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_determine_action",
              "line": 386,
              "async": false,
              "calls": [
                "_get_dev_agent"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_get_dev_agent",
              "line": 436,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "dev_type"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_prepare_responses",
              "line": 450,
              "async": false,
              "calls": [
                "split"
              ],
              "parameters": [
                "self",
                "classification"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "__init__",
              "line": 527,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "is_safe",
              "line": 530,
              "async": false,
              "calls": [
                "warning",
                "_detect_loop_pattern",
                "get",
                "_check_resource_exhaustion",
                "_is_duplicate"
              ],
              "parameters": [
                "self",
                "classification",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_is_duplicate",
              "line": 562,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "query_hash"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_detect_loop_pattern",
              "line": 568,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "_check_resource_exhaustion",
              "line": 577,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "record_execution",
              "line": 589,
              "async": false,
              "calls": [
                "len",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "query_hash"
              ],
              "decorators": [],
              "file": "langgraph_system/query_classifier.py"
            }
          ],
          "classes": [
            {
              "name": "DetailedClassification",
              "line": 18,
              "methods": [
                "summary"
              ],
              "bases": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "EnhancedQueryClassifier",
              "line": 65,
              "methods": [
                "__init__",
                "classify_query",
                "_is_greeting",
                "_is_nonsense",
                "_has_context_reference",
                "_check_pattern",
                "_check_development_patterns",
                "_calculate_coherence",
                "_calculate_confidence",
                "_calculate_safety",
                "_determine_action",
                "_get_dev_agent",
                "_prepare_responses"
              ],
              "bases": [],
              "file": "langgraph_system/query_classifier.py"
            },
            {
              "name": "ExecutionGuard",
              "line": 518,
              "methods": [
                "__init__",
                "is_safe",
                "_is_duplicate",
                "_detect_loop_pattern",
                "_check_resource_exhaustion",
                "record_execution"
              ],
              "bases": [],
              "file": "langgraph_system/query_classifier.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Optional",
                "Tuple"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "field",
              "line": 24
            },
            {
              "function": "strip",
              "line": 168
            },
            {
              "function": "DetailedClassification",
              "line": 171
            },
            {
              "function": "_is_greeting",
              "line": 177
            },
            {
              "function": "_is_nonsense",
              "line": 178
            },
            {
              "function": "_has_context_reference",
              "line": 179
            },
            {
              "function": "_check_pattern",
              "line": 182
            },
            {
              "function": "_check_pattern",
              "line": 183
            },
            {
              "function": "_check_pattern",
              "line": 184
            },
            {
              "function": "_check_pattern",
              "line": 185
            },
            {
              "function": "_check_pattern",
              "line": 186
            },
            {
              "function": "_check_pattern",
              "line": 187
            },
            {
              "function": "_check_development_patterns",
              "line": 190
            },
            {
              "function": "_calculate_coherence",
              "line": 196
            },
            {
              "function": "_calculate_confidence",
              "line": 197
            },
            {
              "function": "_calculate_safety",
              "line": 198
            },
            {
              "function": "_determine_action",
              "line": 201
            },
            {
              "function": "_prepare_responses",
              "line": 204
            },
            {
              "function": "split",
              "line": 216
            },
            {
              "function": "split",
              "line": 235
            },
            {
              "function": "any",
              "line": 261
            },
            {
              "function": "_check_pattern",
              "line": 272
            },
            {
              "function": "split",
              "line": 330
            },
            {
              "function": "max",
              "line": 340
            },
            {
              "function": "max",
              "line": 362
            },
            {
              "function": "max",
              "line": 384
            },
            {
              "function": "get",
              "line": 448
            },
            {
              "function": "_is_duplicate",
              "line": 541
            },
            {
              "function": "_detect_loop_pattern",
              "line": 551
            },
            {
              "function": "_check_resource_exhaustion",
              "line": 556
            },
            {
              "function": "get",
              "line": 570
            },
            {
              "function": "get",
              "line": 579
            },
            {
              "function": "get",
              "line": 583
            },
            {
              "function": "append",
              "line": 591
            },
            {
              "function": "len",
              "line": 231
            },
            {
              "function": "len",
              "line": 237
            },
            {
              "function": "match",
              "line": 241
            },
            {
              "function": "len",
              "line": 243
            },
            {
              "function": "_check_pattern",
              "line": 277
            },
            {
              "function": "len",
              "line": 324
            },
            {
              "function": "len",
              "line": 331
            },
            {
              "function": "match",
              "line": 337
            },
            {
              "function": "min",
              "line": 340
            },
            {
              "function": "min",
              "line": 362
            },
            {
              "function": "get",
              "line": 379
            },
            {
              "function": "min",
              "line": 384
            },
            {
              "function": "_get_dev_agent",
              "line": 412
            },
            {
              "function": "get",
              "line": 536
            },
            {
              "function": "warning",
              "line": 537
            },
            {
              "function": "warning",
              "line": 542
            },
            {
              "function": "warning",
              "line": 547
            },
            {
              "function": "warning",
              "line": 552
            },
            {
              "function": "warning",
              "line": 557
            },
            {
              "function": "len",
              "line": 571
            },
            {
              "function": "len",
              "line": 580
            },
            {
              "function": "len",
              "line": 584
            },
            {
              "function": "len",
              "line": 593
            },
            {
              "function": "lower",
              "line": 168
            },
            {
              "function": "hexdigest",
              "line": 173
            },
            {
              "function": "lower",
              "line": 218
            },
            {
              "function": "startswith",
              "line": 223
            },
            {
              "function": "startswith",
              "line": 223
            },
            {
              "function": "search",
              "line": 236
            },
            {
              "function": "set",
              "line": 243
            },
            {
              "function": "_has_context_reference",
              "line": 275
            },
            {
              "function": "_check_pattern",
              "line": 283
            },
            {
              "function": "len",
              "line": 326
            },
            {
              "function": "len",
              "line": 333
            },
            {
              "function": "len",
              "line": 337
            },
            {
              "function": "now",
              "line": 591
            },
            {
              "function": "len",
              "line": 244
            },
            {
              "function": "startswith",
              "line": 255
            },
            {
              "function": "startswith",
              "line": 255
            },
            {
              "function": "len",
              "line": 281
            },
            {
              "function": "_check_pattern",
              "line": 288
            },
            {
              "function": "set",
              "line": 337
            },
            {
              "function": "len",
              "line": 337
            },
            {
              "function": "md5",
              "line": 173
            },
            {
              "function": "split",
              "line": 281
            },
            {
              "function": "_has_context_reference",
              "line": 286
            },
            {
              "function": "_check_pattern",
              "line": 293
            },
            {
              "function": "get",
              "line": 537
            },
            {
              "function": "encode",
              "line": 173
            },
            {
              "function": "len",
              "line": 291
            },
            {
              "function": "_check_pattern",
              "line": 297
            },
            {
              "function": "_check_pattern",
              "line": 302
            },
            {
              "function": "split",
              "line": 291
            },
            {
              "function": "_check_pattern",
              "line": 307
            },
            {
              "function": "split",
              "line": 482
            },
            {
              "function": "len",
              "line": 300
            },
            {
              "function": "len",
              "line": 305
            },
            {
              "function": "_check_pattern",
              "line": 312
            },
            {
              "function": "split",
              "line": 300
            },
            {
              "function": "split",
              "line": 305
            },
            {
              "function": "len",
              "line": 315
            },
            {
              "function": "split",
              "line": 315
            }
          ]
        },
        "langgraph_system/workflow_self_diagnosis.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 57,
              "async": false,
              "calls": [
                "_initialize_patterns",
                "deque"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_initialize_patterns",
              "line": 61,
              "async": false,
              "calls": [
                "KnownAntiPattern"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "detect_patterns",
              "line": 138,
              "async": false,
              "calls": [
                "_get_detection_reason",
                "_check_pattern",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_pattern",
              "line": 154,
              "async": false,
              "calls": [
                "get",
                "len",
                "_has_circular_dependencies"
              ],
              "parameters": [
                "self",
                "pattern",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_has_circular_dependencies",
              "line": 205,
              "async": false,
              "calls": [
                "remove",
                "next",
                "set",
                "has_cycle_from",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_get_detection_reason",
              "line": 231,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "pattern",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 254,
              "async": false,
              "calls": [
                "_define_invariants"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_define_invariants",
              "line": 258,
              "async": false,
              "calls": [
                "_check_unique_ids",
                "_check_dependencies_exist",
                "_check_valid_transitions",
                "any",
                "get",
                "len",
                "_check_agent_capabilities"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "check_all",
              "line": 328,
              "async": false,
              "calls": [
                "error",
                "append",
                "len",
                "now"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_valid_transitions",
              "line": 347,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_unique_ids",
              "line": 366,
              "async": false,
              "calls": [
                "get",
                "len",
                "set"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_dependencies_exist",
              "line": 372,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_check_agent_capabilities",
              "line": 383,
              "async": false,
              "calls": [
                "_suggest_better_agent",
                "any",
                "get",
                "lower",
                "warning"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_suggest_better_agent",
              "line": 422,
              "async": false,
              "calls": [
                "sum",
                "items"
              ],
              "parameters": [
                "self",
                "current_agent",
                "task",
                "agent_capabilities"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 454,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "known_patterns",
                "invariants"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_calculate_dependency_depth",
              "line": 715,
              "async": false,
              "calls": [
                "max",
                "get_depth",
                "get"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_find_parallelizable_steps",
              "line": 729,
              "async": false,
              "calls": [
                "set",
                "_has_dependency_conflict",
                "append",
                "len",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_has_dependency_conflict",
              "line": 752,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "step1",
                "step2",
                "all_steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_is_in_cycle",
              "line": 757,
              "async": false,
              "calls": [
                "has_cycle",
                "remove",
                "next",
                "set",
                "add"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 791,
              "async": false,
              "calls": [
                "_initialize_patterns",
                "deque"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_initialize_patterns",
              "line": 796,
              "async": false,
              "calls": [
                "_detect_timeout_cluster",
                "_detect_stuck_progress",
                "_detect_collaboration_spiral",
                "_detect_routing_loop",
                "_detect_resource_spike"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "analyze_patterns",
              "line": 826,
              "async": false,
              "calls": [
                "items",
                "_detect_statistical_anomalies",
                "get",
                "append",
                "len",
                "min",
                "extend"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_routing_loop",
              "line": 867,
              "async": false,
              "calls": [
                "get",
                "len",
                "all"
              ],
              "parameters": [
                "self",
                "history"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_collaboration_spiral",
              "line": 876,
              "async": false,
              "calls": [
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "history"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_stuck_progress",
              "line": 889,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_resource_spike",
              "line": 894,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "metrics"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_timeout_cluster",
              "line": 899,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "events"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "_detect_statistical_anomalies",
              "line": 904,
              "async": false,
              "calls": [
                "sum",
                "max",
                "get",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 946,
              "async": false,
              "calls": [
                "deque"
              ],
              "parameters": [
                "self",
                "invariants",
                "validator",
                "pattern_engine"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "__init__",
              "line": 1140,
              "async": false,
              "calls": [
                "KnownAntiPatternsDatabase",
                "WorkflowInvariants",
                "PatternRecognitionEngine",
                "info",
                "PreExecutionValidator",
                "SelfTestFramework"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "get_diagnosis_report",
              "line": 1211,
              "async": false,
              "calls": [
                "len",
                "list"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "has_cycle_from",
              "line": 208,
              "async": false,
              "calls": [
                "next",
                "has_cycle_from",
                "remove",
                "add"
              ],
              "parameters": [
                "step_id",
                "visited",
                "path"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "get_depth",
              "line": 717,
              "async": false,
              "calls": [
                "get",
                "get_depth",
                "max"
              ],
              "parameters": [
                "step_id",
                "steps_dict"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "has_cycle",
              "line": 762,
              "async": false,
              "calls": [
                "next",
                "has_cycle",
                "remove",
                "add"
              ],
              "parameters": [
                "s_id"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            }
          ],
          "classes": [
            {
              "name": "AntiPatternType",
              "line": 26,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "KnownAntiPattern",
              "line": 41,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "KnownAntiPatternsDatabase",
              "line": 51,
              "methods": [
                "__init__",
                "_initialize_patterns",
                "detect_patterns",
                "_check_pattern",
                "_has_circular_dependencies",
                "_get_detection_reason",
                "has_cycle_from"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "WorkflowInvariants",
              "line": 248,
              "methods": [
                "__init__",
                "_define_invariants",
                "check_all",
                "_check_valid_transitions",
                "_check_unique_ids",
                "_check_dependencies_exist",
                "_check_agent_capabilities",
                "_suggest_better_agent"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "PreExecutionValidator",
              "line": 448,
              "methods": [
                "__init__",
                "_calculate_dependency_depth",
                "_find_parallelizable_steps",
                "_has_dependency_conflict",
                "_is_in_cycle",
                "get_depth",
                "has_cycle"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "PatternRecognitionEngine",
              "line": 785,
              "methods": [
                "__init__",
                "_initialize_patterns",
                "analyze_patterns",
                "_detect_routing_loop",
                "_detect_collaboration_spiral",
                "_detect_stuck_progress",
                "_detect_resource_spike",
                "_detect_timeout_cluster",
                "_detect_statistical_anomalies"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "SelfTestFramework",
              "line": 940,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            },
            {
              "name": "WorkflowSelfDiagnosisSystem",
              "line": 1134,
              "methods": [
                "__init__",
                "get_diagnosis_report"
              ],
              "bases": [],
              "file": "langgraph_system/workflow_self_diagnosis.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Any",
                "Tuple",
                "Optional",
                "Set"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "collections",
              "names": [
                "defaultdict",
                "deque"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "ExecutionStep",
                "TaskLedger",
                "ProgressLedger"
              ],
              "line": 18
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "_initialize_patterns",
              "line": 58
            },
            {
              "function": "deque",
              "line": 59
            },
            {
              "function": "set",
              "line": 224
            },
            {
              "function": "_define_invariants",
              "line": 255
            },
            {
              "function": "get",
              "line": 361
            },
            {
              "function": "get",
              "line": 368
            },
            {
              "function": "get",
              "line": 374
            },
            {
              "function": "get",
              "line": 401
            },
            {
              "function": "items",
              "line": 431
            },
            {
              "function": "info",
              "line": 470
            },
            {
              "function": "range",
              "line": 475
            },
            {
              "function": "append",
              "line": 538
            },
            {
              "function": "get",
              "line": 559
            },
            {
              "function": "_calculate_dependency_depth",
              "line": 580
            },
            {
              "function": "set",
              "line": 590
            },
            {
              "function": "get",
              "line": 609
            },
            {
              "function": "defaultdict",
              "line": 612
            },
            {
              "function": "items",
              "line": 617
            },
            {
              "function": "enumerate",
              "line": 627
            },
            {
              "function": "get",
              "line": 646
            },
            {
              "function": "sum",
              "line": 649
            },
            {
              "function": "_find_parallelizable_steps",
              "line": 659
            },
            {
              "function": "copy",
              "line": 673
            },
            {
              "function": "max",
              "line": 727
            },
            {
              "function": "set",
              "line": 732
            },
            {
              "function": "set",
              "line": 759
            },
            {
              "function": "set",
              "line": 760
            },
            {
              "function": "has_cycle",
              "line": 780
            },
            {
              "function": "deque",
              "line": 792
            },
            {
              "function": "_initialize_patterns",
              "line": 794
            },
            {
              "function": "get",
              "line": 836
            },
            {
              "function": "get",
              "line": 837
            },
            {
              "function": "get",
              "line": 838
            },
            {
              "function": "items",
              "line": 841
            },
            {
              "function": "_detect_statistical_anomalies",
              "line": 852
            },
            {
              "function": "extend",
              "line": 853
            },
            {
              "function": "min",
              "line": 863
            },
            {
              "function": "all",
              "line": 874
            },
            {
              "function": "get",
              "line": 909
            },
            {
              "function": "get",
              "line": 922
            },
            {
              "function": "deque",
              "line": 955
            },
            {
              "function": "info",
              "line": 961
            },
            {
              "function": "check_all",
              "line": 973
            },
            {
              "function": "analyze_patterns",
              "line": 980
            },
            {
              "function": "update",
              "line": 989
            },
            {
              "function": "update",
              "line": 994
            },
            {
              "function": "values",
              "line": 1001
            },
            {
              "function": "append",
              "line": 1025
            },
            {
              "function": "now",
              "line": 1026
            },
            {
              "function": "info",
              "line": 1029
            },
            {
              "function": "info",
              "line": 1030
            },
            {
              "function": "get",
              "line": 1036
            },
            {
              "function": "get",
              "line": 1037
            },
            {
              "function": "get",
              "line": 1054
            },
            {
              "function": "get",
              "line": 1079
            },
            {
              "function": "sum",
              "line": 1085
            },
            {
              "function": "sum",
              "line": 1089
            },
            {
              "function": "info",
              "line": 1107
            },
            {
              "function": "KnownAntiPatternsDatabase",
              "line": 1142
            },
            {
              "function": "WorkflowInvariants",
              "line": 1143
            },
            {
              "function": "PreExecutionValidator",
              "line": 1144
            },
            {
              "function": "PatternRecognitionEngine",
              "line": 1145
            },
            {
              "function": "SelfTestFramework",
              "line": 1146
            },
            {
              "function": "info",
              "line": 1152
            },
            {
              "function": "info",
              "line": 1163
            },
            {
              "function": "info",
              "line": 1164
            },
            {
              "function": "info",
              "line": 1165
            },
            {
              "function": "analyze_patterns",
              "line": 1174
            },
            {
              "function": "info",
              "line": 1187
            },
            {
              "function": "info",
              "line": 1188
            },
            {
              "function": "info",
              "line": 1189
            },
            {
              "function": "info",
              "line": 1190
            },
            {
              "function": "info",
              "line": 1191
            },
            {
              "function": "info",
              "line": 1192
            },
            {
              "function": "info",
              "line": 1193
            },
            {
              "function": "KnownAntiPattern",
              "line": 64
            },
            {
              "function": "KnownAntiPattern",
              "line": 72
            },
            {
              "function": "KnownAntiPattern",
              "line": 80
            },
            {
              "function": "KnownAntiPattern",
              "line": 88
            },
            {
              "function": "KnownAntiPattern",
              "line": 96
            },
            {
              "function": "KnownAntiPattern",
              "line": 104
            },
            {
              "function": "KnownAntiPattern",
              "line": 112
            },
            {
              "function": "KnownAntiPattern",
              "line": 120
            },
            {
              "function": "KnownAntiPattern",
              "line": 128
            },
            {
              "function": "_check_pattern",
              "line": 143
            },
            {
              "function": "get",
              "line": 159
            },
            {
              "function": "add",
              "line": 209
            },
            {
              "function": "add",
              "line": 210
            },
            {
              "function": "next",
              "line": 212
            },
            {
              "function": "remove",
              "line": 221
            },
            {
              "function": "get",
              "line": 235
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "len",
              "line": 370
            },
            {
              "function": "lower",
              "line": 403
            },
            {
              "function": "sum",
              "line": 436
            },
            {
              "function": "info",
              "line": 476
            },
            {
              "function": "check_all",
              "line": 481
            },
            {
              "function": "detect_patterns",
              "line": 491
            },
            {
              "function": "extend",
              "line": 523
            },
            {
              "function": "info",
              "line": 530
            },
            {
              "function": "len",
              "line": 547
            },
            {
              "function": "info",
              "line": 550
            },
            {
              "function": "error",
              "line": 552
            },
            {
              "function": "append",
              "line": 563
            },
            {
              "function": "len",
              "line": 571
            },
            {
              "function": "append",
              "line": 572
            },
            {
              "function": "append",
              "line": 582
            },
            {
              "function": "update",
              "line": 592
            },
            {
              "function": "append",
              "line": 651
            },
            {
              "function": "len",
              "line": 660
            },
            {
              "function": "sum",
              "line": 661
            },
            {
              "function": "append",
              "line": 662
            },
            {
              "function": "list",
              "line": 710
            },
            {
              "function": "info",
              "line": 711
            },
            {
              "function": "get",
              "line": 718
            },
            {
              "function": "add",
              "line": 748
            },
            {
              "function": "add",
              "line": 768
            },
            {
              "function": "add",
              "line": 769
            },
            {
              "function": "next",
              "line": 771
            },
            {
              "function": "remove",
              "line": 777
            },
            {
              "function": "len",
              "line": 854
            },
            {
              "function": "append",
              "line": 858
            },
            {
              "function": "len",
              "line": 859
            },
            {
              "function": "append",
              "line": 860
            },
            {
              "function": "len",
              "line": 869
            },
            {
              "function": "len",
              "line": 878
            },
            {
              "function": "get",
              "line": 886
            },
            {
              "function": "len",
              "line": 910
            },
            {
              "function": "sum",
              "line": 924
            },
            {
              "function": "sum",
              "line": 925
            },
            {
              "function": "len",
              "line": 926
            },
            {
              "function": "now",
              "line": 964
            },
            {
              "function": "extend",
              "line": 976
            },
            {
              "function": "_test_resource_health",
              "line": 987
            },
            {
              "function": "_test_performance_health",
              "line": 992
            },
            {
              "function": "_test_structural_health",
              "line": 997
            },
            {
              "function": "min",
              "line": 1039
            },
            {
              "function": "min",
              "line": 1040
            },
            {
              "function": "min",
              "line": 1066
            },
            {
              "function": "len",
              "line": 1086
            },
            {
              "function": "validate_comprehensive",
              "line": 1168
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1177
            },
            {
              "function": "error",
              "line": 1196
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1209
            },
            {
              "function": "len",
              "line": 1217
            },
            {
              "function": "len",
              "line": 1218
            },
            {
              "function": "_get_detection_reason",
              "line": 144
            },
            {
              "function": "append",
              "line": 145
            },
            {
              "function": "append",
              "line": 146
            },
            {
              "function": "_has_circular_dependencies",
              "line": 165
            },
            {
              "function": "has_cycle_from",
              "line": 227
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "len",
              "line": 345
            },
            {
              "function": "set",
              "line": 370
            },
            {
              "function": "error",
              "line": 483
            },
            {
              "function": "extend",
              "line": 484
            },
            {
              "function": "warning",
              "line": 493
            },
            {
              "function": "_validate_structure",
              "line": 506
            },
            {
              "function": "warning",
              "line": 508
            },
            {
              "function": "extend",
              "line": 509
            },
            {
              "function": "_validate_semantics",
              "line": 512
            },
            {
              "function": "warning",
              "line": 514
            },
            {
              "function": "extend",
              "line": 515
            },
            {
              "function": "_validate_performance",
              "line": 518
            },
            {
              "function": "info",
              "line": 520
            },
            {
              "function": "extend",
              "line": 521
            },
            {
              "function": "_attempt_fixes",
              "line": 531
            },
            {
              "function": "now",
              "line": 539
            },
            {
              "function": "len",
              "line": 541
            },
            {
              "function": "append",
              "line": 619
            },
            {
              "function": "get",
              "line": 677
            },
            {
              "function": "max",
              "line": 721
            },
            {
              "function": "get_depth",
              "line": 727
            },
            {
              "function": "len",
              "line": 746
            },
            {
              "function": "append",
              "line": 747
            },
            {
              "function": "len",
              "line": 911
            },
            {
              "function": "len",
              "line": 912
            },
            {
              "function": "max",
              "line": 912
            },
            {
              "function": "append",
              "line": 915
            },
            {
              "function": "append",
              "line": 929
            },
            {
              "function": "sum",
              "line": 1002
            },
            {
              "function": "len",
              "line": 1002
            },
            {
              "function": "append",
              "line": 1016
            },
            {
              "function": "get",
              "line": 1018
            },
            {
              "function": "append",
              "line": 1019
            },
            {
              "function": "get",
              "line": 1021
            },
            {
              "function": "append",
              "line": 1022
            },
            {
              "function": "len",
              "line": 1045
            },
            {
              "function": "len",
              "line": 1046
            },
            {
              "function": "sum",
              "line": 1058
            },
            {
              "function": "len",
              "line": 1058
            },
            {
              "function": "sum",
              "line": 1062
            },
            {
              "function": "len",
              "line": 1062
            },
            {
              "function": "len",
              "line": 1090
            },
            {
              "function": "error",
              "line": 1198
            },
            {
              "function": "warning",
              "line": 1201
            },
            {
              "function": "list",
              "line": 1215
            },
            {
              "function": "list",
              "line": 1216
            },
            {
              "function": "get",
              "line": 165
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "set",
              "line": 227
            },
            {
              "function": "_check_valid_transitions",
              "line": 285
            },
            {
              "function": "_check_unique_ids",
              "line": 292
            },
            {
              "function": "_check_dependencies_exist",
              "line": 299
            },
            {
              "function": "_check_agent_capabilities",
              "line": 323
            },
            {
              "function": "append",
              "line": 335
            },
            {
              "function": "error",
              "line": 343
            },
            {
              "function": "any",
              "line": 408
            },
            {
              "function": "_suggest_better_agent",
              "line": 410
            },
            {
              "function": "append",
              "line": 495
            },
            {
              "function": "sleep",
              "line": 535
            },
            {
              "function": "len",
              "line": 542
            },
            {
              "function": "get",
              "line": 546
            },
            {
              "function": "len",
              "line": 596
            },
            {
              "function": "append",
              "line": 597
            },
            {
              "function": "len",
              "line": 661
            },
            {
              "function": "lower",
              "line": 680
            },
            {
              "function": "has_cycle",
              "line": 774
            },
            {
              "function": "_detect_routing_loop",
              "line": 801
            },
            {
              "function": "_detect_collaboration_spiral",
              "line": 806
            },
            {
              "function": "_detect_stuck_progress",
              "line": 811
            },
            {
              "function": "_detect_resource_spike",
              "line": 816
            },
            {
              "function": "_detect_timeout_cluster",
              "line": 821
            },
            {
              "function": "append",
              "line": 844
            },
            {
              "function": "get",
              "line": 874
            },
            {
              "function": "get",
              "line": 874
            },
            {
              "function": "get",
              "line": 912
            },
            {
              "function": "len",
              "line": 1039
            },
            {
              "function": "len",
              "line": 1040
            },
            {
              "function": "max",
              "line": 1073
            },
            {
              "function": "state_provider",
              "line": 1112
            },
            {
              "function": "run_comprehensive_health_check",
              "line": 1115
            },
            {
              "function": "error",
              "line": 1119
            },
            {
              "function": "sleep",
              "line": 1125
            },
            {
              "function": "error",
              "line": 1128
            },
            {
              "function": "warning",
              "line": 1203
            },
            {
              "function": "now",
              "line": 148
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "get",
              "line": 175
            },
            {
              "function": "has_cycle_from",
              "line": 218
            },
            {
              "function": "any",
              "line": 265
            },
            {
              "function": "any",
              "line": 275
            },
            {
              "function": "get",
              "line": 316
            },
            {
              "function": "warning",
              "line": 412
            },
            {
              "function": "warning",
              "line": 417
            },
            {
              "function": "len",
              "line": 530
            },
            {
              "function": "len",
              "line": 552
            },
            {
              "function": "append",
              "line": 634
            },
            {
              "function": "lower",
              "line": 689
            },
            {
              "function": "len",
              "line": 711
            },
            {
              "function": "get_depth",
              "line": 721
            },
            {
              "function": "_has_dependency_conflict",
              "line": 742
            },
            {
              "function": "append",
              "line": 743
            },
            {
              "function": "add",
              "line": 744
            },
            {
              "function": "warning",
              "line": 1122
            },
            {
              "function": "sleep",
              "line": 1129
            },
            {
              "function": "get",
              "line": 180
            },
            {
              "function": "len",
              "line": 307
            },
            {
              "function": "len",
              "line": 308
            },
            {
              "function": "now",
              "line": 340
            },
            {
              "function": "len",
              "line": 483
            },
            {
              "function": "len",
              "line": 493
            },
            {
              "function": "len",
              "line": 508
            },
            {
              "function": "len",
              "line": 514
            },
            {
              "function": "len",
              "line": 520
            },
            {
              "function": "len",
              "line": 575
            },
            {
              "function": "len",
              "line": 665
            },
            {
              "function": "get",
              "line": 680
            },
            {
              "function": "append",
              "line": 685
            },
            {
              "function": "info",
              "line": 686
            },
            {
              "function": "_is_in_cycle",
              "line": 693
            },
            {
              "function": "lower",
              "line": 701
            },
            {
              "function": "get",
              "line": 703
            },
            {
              "function": "get",
              "line": 1198
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "get",
              "line": 307
            },
            {
              "function": "get",
              "line": 308
            },
            {
              "function": "get",
              "line": 689
            },
            {
              "function": "len",
              "line": 704
            },
            {
              "function": "append",
              "line": 706
            },
            {
              "function": "info",
              "line": 707
            },
            {
              "function": "len",
              "line": 187
            },
            {
              "function": "get",
              "line": 267
            },
            {
              "function": "get",
              "line": 277
            },
            {
              "function": "pop",
              "line": 695
            },
            {
              "function": "append",
              "line": 696
            },
            {
              "function": "info",
              "line": 697
            },
            {
              "function": "get",
              "line": 701
            },
            {
              "function": "get",
              "line": 200
            },
            {
              "function": "len",
              "line": 201
            }
          ]
        },
        "langgraph_system/workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 148,
              "async": false,
              "calls": [
                "get_tool_registry",
                "_init_real_agents",
                "ApprovalManager",
                "IntelligentQueryHandler",
                "info",
                "error",
                "DynamicWorkflowManager",
                "WorkflowSelfDiagnosisSystem",
                "SafeOrchestratorExecutor",
                "DevelopmentQueryHandler",
                "EnhancedQueryClassifier",
                "_init_agent_memories"
              ],
              "parameters": [
                "self",
                "websocket_manager",
                "db_path",
                "memory_db_path"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_init_agent_memories",
              "line": 226,
              "async": false,
              "calls": [
                "PersistentAgentMemory"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_init_real_agents",
              "line": 247,
              "async": false,
              "calls": [
                "FixerBotAgent",
                "DocuBotAgent",
                "exception",
                "ResearchAgent",
                "PerformanceBot",
                "ReviewerGPTAgent",
                "info",
                "error",
                "OpusArbitratorAgent",
                "CodeSmithAgent",
                "TradeStratAgent",
                "ArchitectAgent",
                "len",
                "warning",
                "OrchestratorAgent"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "create_task_ledger",
              "line": 339,
              "async": false,
              "calls": [
                "TaskLedger",
                "get",
                "extract_success_criteria",
                "now"
              ],
              "parameters": [
                "self",
                "task",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "extract_success_criteria",
              "line": 373,
              "async": false,
              "calls": [
                "lower",
                "append",
                "any"
              ],
              "parameters": [
                "self",
                "task"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "create_progress_ledger",
              "line": 397,
              "async": false,
              "calls": [
                "len",
                "ProgressLedger",
                "update_from_steps"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "identify_parallel_groups",
              "line": 460,
              "async": false,
              "calls": [
                "set",
                "_has_dependency_conflict",
                "append",
                "len",
                "add"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_has_dependency_conflict",
              "line": 502,
              "async": false,
              "calls": [
                "_get_all_dependencies"
              ],
              "parameters": [
                "self",
                "step1",
                "step2",
                "all_steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_get_all_dependencies",
              "line": 520,
              "async": false,
              "calls": [
                "next",
                "set",
                "pop",
                "list",
                "append",
                "add"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_dependencies_met",
              "line": 1889,
              "async": false,
              "calls": [
                "next"
              ],
              "parameters": [
                "self",
                "step",
                "all_steps"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_get_current_step",
              "line": 1897,
              "async": false,
              "calls": [
                "get",
                "next"
              ],
              "parameters": [
                "self",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_get_step_by_agent",
              "line": 1904,
              "async": false,
              "calls": [
                "reversed"
              ],
              "parameters": [
                "self",
                "state",
                "agent"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_check_escalation_needed",
              "line": 1911,
              "async": false,
              "calls": [
                "dirname",
                "join",
                "chr",
                "insert",
                "enumerate",
                "error",
                "info",
                "any",
                "get",
                "len",
                "getattr"
              ],
              "parameters": [
                "self",
                "state",
                "suggested_agent",
                "suggested_query"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_calculate_agent_confidence",
              "line": 2364,
              "async": false,
              "calls": [
                "get",
                "items",
                "debug"
              ],
              "parameters": [
                "self",
                "task_lower"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_create_single_agent_step",
              "line": 2419,
              "async": false,
              "calls": [
                "ExecutionStep",
                "info",
                "enhance_orchestrator_step",
                "get_intelligent_response",
                "get",
                "len"
              ],
              "parameters": [
                "self",
                "agent",
                "task"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_detect_task_complexity",
              "line": 2467,
              "async": false,
              "calls": [
                "endswith",
                "split",
                "info",
                "any",
                "count",
                "lower",
                "len",
                "strip"
              ],
              "parameters": [
                "self",
                "task"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_apply_plan_modifications",
              "line": 2704,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "plan",
                "modifications"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "_format_proposal_for_user",
              "line": 2916,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "proposal"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            },
            {
              "name": "create_workflow",
              "line": 3330,
              "async": false,
              "calls": [
                "add_conditional_edges",
                "add_node",
                "StateGraph",
                "set_entry_point",
                "add_edge"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/workflow.py"
            }
          ],
          "classes": [
            {
              "name": "AgentWorkflow",
              "line": 143,
              "methods": [
                "__init__",
                "_init_agent_memories",
                "_init_real_agents",
                "create_task_ledger",
                "extract_success_criteria",
                "create_progress_ledger",
                "identify_parallel_groups",
                "_has_dependency_conflict",
                "_get_all_dependencies",
                "_dependencies_met",
                "_get_current_step",
                "_get_step_by_agent",
                "_check_escalation_needed",
                "_calculate_agent_confidence",
                "_create_single_agent_step",
                "_detect_task_complexity",
                "_apply_plan_modifications",
                "_format_proposal_for_user",
                "create_workflow"
              ],
              "bases": [],
              "file": "langgraph_system/workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "langgraph.graph",
              "names": [
                "StateGraph",
                "END"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.memory",
              "names": [
                "MemorySaver"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExtendedAgentState",
                "create_initial_state",
                "ExecutionStep",
                "TaskLedger",
                "ProgressLedger"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "extensions",
              "names": [
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager",
                "get_tool_registry"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "cache_manager",
              "names": [
                "CacheManager"
              ],
              "line": 30
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 69
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 70
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.sqlite.aio",
              "names": [
                "AsyncSqliteSaver"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "intelligent_query_handler",
              "names": [
                "IntelligentQueryHandler"
              ],
              "line": 36
            },
            {
              "type": "from_import",
              "module": "workflow_self_diagnosis",
              "names": [
                "WorkflowSelfDiagnosisSystem"
              ],
              "line": 46
            },
            {
              "type": "from_import",
              "module": "safe_orchestrator_executor",
              "names": [
                "SafeOrchestratorExecutor"
              ],
              "line": 56
            },
            {
              "type": "from_import",
              "module": "query_classifier",
              "names": [
                "EnhancedQueryClassifier"
              ],
              "line": 57
            },
            {
              "type": "from_import",
              "module": "development_query_handler",
              "names": [
                "DevelopmentQueryHandler"
              ],
              "line": 58
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 77
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 78
            },
            {
              "type": "from_import",
              "module": "agents.specialized.reviewer_gpt_agent",
              "names": [
                "ReviewerGPTAgent"
              ],
              "line": 79
            },
            {
              "type": "from_import",
              "module": "agents.specialized.fixerbot_agent",
              "names": [
                "FixerBotAgent"
              ],
              "line": 80
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest",
                "TaskResult"
              ],
              "line": 81
            },
            {
              "type": "from_import",
              "module": "agents.specialized.orchestrator_agent",
              "names": [
                "OrchestratorAgent"
              ],
              "line": 90
            },
            {
              "type": "from_import",
              "module": "agents.specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 99
            },
            {
              "type": "from_import",
              "module": "agents.specialized.docubot_agent",
              "names": [
                "DocuBotAgent"
              ],
              "line": 108
            },
            {
              "type": "from_import",
              "module": "agents.specialized.performance_bot",
              "names": [
                "PerformanceBot"
              ],
              "line": 117
            },
            {
              "type": "from_import",
              "module": "agents.specialized.tradestrat_agent",
              "names": [
                "TradeStratAgent"
              ],
              "line": 126
            },
            {
              "type": "from_import",
              "module": "agents.specialized.opus_arbitrator_agent",
              "names": [
                "OpusArbitratorAgent"
              ],
              "line": 135
            },
            {
              "type": "from_import",
              "module": "langgraph.checkpoint.sqlite",
              "names": [
                "SqliteSaver"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "agents.specialized.fixer_gpt_agent",
              "names": [
                "FixerGPTAgent"
              ],
              "line": 1344
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 1934
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 1937
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 1938
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 1940
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 2864
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 2865
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 3064
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 3065
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 994
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 32
            },
            {
              "function": "append",
              "line": 71
            },
            {
              "function": "info",
              "line": 38
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "dirname",
              "line": 71
            },
            {
              "function": "info",
              "line": 83
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 101
            },
            {
              "function": "info",
              "line": 110
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 128
            },
            {
              "function": "info",
              "line": 137
            },
            {
              "function": "AgentWorkflow",
              "line": 3596
            },
            {
              "function": "warning",
              "line": 20
            },
            {
              "function": "warning",
              "line": 40
            },
            {
              "function": "warning",
              "line": 50
            },
            {
              "function": "warning",
              "line": 62
            },
            {
              "function": "dirname",
              "line": 71
            },
            {
              "function": "warning",
              "line": 85
            },
            {
              "function": "warning",
              "line": 94
            },
            {
              "function": "warning",
              "line": 95
            },
            {
              "function": "warning",
              "line": 103
            },
            {
              "function": "warning",
              "line": 104
            },
            {
              "function": "warning",
              "line": 112
            },
            {
              "function": "warning",
              "line": 113
            },
            {
              "function": "warning",
              "line": 121
            },
            {
              "function": "warning",
              "line": 122
            },
            {
              "function": "warning",
              "line": 130
            },
            {
              "function": "warning",
              "line": 131
            },
            {
              "function": "warning",
              "line": 139
            },
            {
              "function": "warning",
              "line": 140
            },
            {
              "function": "get_tool_registry",
              "line": 167
            },
            {
              "function": "ApprovalManager",
              "line": 168
            },
            {
              "function": "DynamicWorkflowManager",
              "line": 169
            },
            {
              "function": "_init_agent_memories",
              "line": 173
            },
            {
              "function": "_init_real_agents",
              "line": 177
            },
            {
              "function": "info",
              "line": 253
            },
            {
              "function": "now",
              "line": 343
            },
            {
              "function": "extract_success_criteria",
              "line": 344
            },
            {
              "function": "TaskLedger",
              "line": 363
            },
            {
              "function": "any",
              "line": 380
            },
            {
              "function": "any",
              "line": 382
            },
            {
              "function": "any",
              "line": 384
            },
            {
              "function": "any",
              "line": 386
            },
            {
              "function": "any",
              "line": 388
            },
            {
              "function": "ProgressLedger",
              "line": 401
            },
            {
              "function": "update_from_steps",
              "line": 411
            },
            {
              "function": "set",
              "line": 469
            },
            {
              "function": "_get_all_dependencies",
              "line": 511
            },
            {
              "function": "_get_all_dependencies",
              "line": 512
            },
            {
              "function": "set",
              "line": 524
            },
            {
              "function": "list",
              "line": 525
            },
            {
              "function": "info",
              "line": 545
            },
            {
              "function": "get",
              "line": 549
            },
            {
              "function": "get",
              "line": 619
            },
            {
              "function": "create_progress_ledger",
              "line": 666
            },
            {
              "function": "info",
              "line": 668
            },
            {
              "function": "identify_parallel_groups",
              "line": 671
            },
            {
              "function": "list",
              "line": 737
            },
            {
              "function": "info",
              "line": 739
            },
            {
              "function": "store_memory",
              "line": 742
            },
            {
              "function": "info",
              "line": 759
            },
            {
              "function": "get",
              "line": 762
            },
            {
              "function": "get",
              "line": 807
            },
            {
              "function": "info",
              "line": 808
            },
            {
              "function": "info",
              "line": 854
            },
            {
              "function": "discover_tools_for_agent",
              "line": 859
            },
            {
              "function": "_get_current_step",
              "line": 863
            },
            {
              "function": "info",
              "line": 864
            },
            {
              "function": "recall_similar",
              "line": 870
            },
            {
              "function": "extend",
              "line": 871
            },
            {
              "function": "info",
              "line": 1049
            },
            {
              "function": "discover_tools_for_agent",
              "line": 1053
            },
            {
              "function": "next",
              "line": 1058
            },
            {
              "function": "info",
              "line": 1066
            },
            {
              "function": "recall_similar",
              "line": 1069
            },
            {
              "function": "info",
              "line": 1125
            },
            {
              "function": "next",
              "line": 1131
            },
            {
              "function": "info",
              "line": 1139
            },
            {
              "function": "info",
              "line": 1196
            },
            {
              "function": "next",
              "line": 1202
            },
            {
              "function": "info",
              "line": 1210
            },
            {
              "function": "_get_step_by_agent",
              "line": 1213
            },
            {
              "function": "info",
              "line": 1261
            },
            {
              "function": "next",
              "line": 1265
            },
            {
              "function": "info",
              "line": 1273
            },
            {
              "function": "info",
              "line": 1328
            },
            {
              "function": "next",
              "line": 1332
            },
            {
              "function": "info",
              "line": 1340
            },
            {
              "function": "info",
              "line": 1397
            },
            {
              "function": "next",
              "line": 1401
            },
            {
              "function": "info",
              "line": 1409
            },
            {
              "function": "info",
              "line": 1470
            },
            {
              "function": "next",
              "line": 1474
            },
            {
              "function": "info",
              "line": 1482
            },
            {
              "function": "info",
              "line": 1543
            },
            {
              "function": "next",
              "line": 1547
            },
            {
              "function": "info",
              "line": 1555
            },
            {
              "function": "info",
              "line": 1617
            },
            {
              "function": "next",
              "line": 1621
            },
            {
              "function": "info",
              "line": 1629
            },
            {
              "function": "get",
              "line": 1711
            },
            {
              "function": "info",
              "line": 1712
            },
            {
              "function": "info",
              "line": 1713
            },
            {
              "function": "enumerate",
              "line": 1714
            },
            {
              "function": "info",
              "line": 1798
            },
            {
              "function": "info",
              "line": 1799
            },
            {
              "function": "create_task",
              "line": 1802
            },
            {
              "function": "get",
              "line": 1805
            },
            {
              "function": "get",
              "line": 1826
            },
            {
              "function": "any",
              "line": 1833
            },
            {
              "function": "info",
              "line": 1886
            },
            {
              "function": "get",
              "line": 1899
            },
            {
              "function": "reversed",
              "line": 1906
            },
            {
              "function": "get",
              "line": 1942
            },
            {
              "function": "get",
              "line": 1943
            },
            {
              "function": "get",
              "line": 1944
            },
            {
              "function": "getattr",
              "line": 2057
            },
            {
              "function": "get",
              "line": 2088
            },
            {
              "function": "_create_single_agent_step",
              "line": 2182
            },
            {
              "function": "lower",
              "line": 2218
            },
            {
              "function": "lower",
              "line": 2234
            },
            {
              "function": "any",
              "line": 2242
            },
            {
              "function": "lower",
              "line": 2261
            },
            {
              "function": "any",
              "line": 2265
            },
            {
              "function": "any",
              "line": 2270
            },
            {
              "function": "_calculate_agent_confidence",
              "line": 2320
            },
            {
              "function": "info",
              "line": 2346
            },
            {
              "function": "items",
              "line": 2404
            },
            {
              "function": "items",
              "line": 2411
            },
            {
              "function": "ExecutionStep",
              "line": 2451
            },
            {
              "function": "lower",
              "line": 2474
            },
            {
              "function": "any",
              "line": 2505
            },
            {
              "function": "any",
              "line": 2523
            },
            {
              "function": "info",
              "line": 2528
            },
            {
              "function": "info",
              "line": 2541
            },
            {
              "function": "lower",
              "line": 2578
            },
            {
              "function": "any",
              "line": 2579
            },
            {
              "function": "_create_single_agent_step",
              "line": 2625
            },
            {
              "function": "warning",
              "line": 2745
            },
            {
              "function": "info",
              "line": 2799
            },
            {
              "function": "get",
              "line": 2801
            },
            {
              "function": "_get_current_step",
              "line": 2802
            },
            {
              "function": "warning",
              "line": 2906
            },
            {
              "function": "info",
              "line": 2966
            },
            {
              "function": "get",
              "line": 2968
            },
            {
              "function": "get",
              "line": 2969
            },
            {
              "function": "info",
              "line": 3002
            },
            {
              "function": "info",
              "line": 3020
            },
            {
              "function": "get",
              "line": 3022
            },
            {
              "function": "get",
              "line": 3023
            },
            {
              "function": "warning",
              "line": 3083
            },
            {
              "function": "warning",
              "line": 3137
            },
            {
              "function": "warning",
              "line": 3190
            },
            {
              "function": "warning",
              "line": 3240
            },
            {
              "function": "warning",
              "line": 3288
            },
            {
              "function": "StateGraph",
              "line": 3334
            },
            {
              "function": "add_node",
              "line": 3337
            },
            {
              "function": "add_node",
              "line": 3338
            },
            {
              "function": "add_node",
              "line": 3339
            },
            {
              "function": "add_node",
              "line": 3340
            },
            {
              "function": "add_node",
              "line": 3341
            },
            {
              "function": "add_node",
              "line": 3342
            },
            {
              "function": "add_node",
              "line": 3343
            },
            {
              "function": "add_node",
              "line": 3344
            },
            {
              "function": "add_node",
              "line": 3345
            },
            {
              "function": "add_node",
              "line": 3346
            },
            {
              "function": "add_node",
              "line": 3347
            },
            {
              "function": "add_node",
              "line": 3348
            },
            {
              "function": "set_entry_point",
              "line": 3351
            },
            {
              "function": "add_edge",
              "line": 3355
            },
            {
              "function": "add_conditional_edges",
              "line": 3358
            },
            {
              "function": "add_conditional_edges",
              "line": 3380
            },
            {
              "function": "create_workflow",
              "line": 3428
            },
            {
              "function": "compile",
              "line": 3442
            },
            {
              "function": "info",
              "line": 3445
            },
            {
              "function": "create_initial_state",
              "line": 3473
            },
            {
              "function": "append",
              "line": 3482
            },
            {
              "function": "compile_workflow",
              "line": 3603
            },
            {
              "function": "abspath",
              "line": 71
            },
            {
              "function": "PersistentAgentMemory",
              "line": 242
            },
            {
              "function": "warning",
              "line": 250
            },
            {
              "function": "info",
              "line": 331
            },
            {
              "function": "get",
              "line": 361
            },
            {
              "function": "append",
              "line": 381
            },
            {
              "function": "append",
              "line": 383
            },
            {
              "function": "append",
              "line": 385
            },
            {
              "function": "append",
              "line": 387
            },
            {
              "function": "append",
              "line": 389
            },
            {
              "function": "append",
              "line": 393
            },
            {
              "function": "list",
              "line": 456
            },
            {
              "function": "add",
              "line": 498
            },
            {
              "function": "pop",
              "line": 528
            },
            {
              "function": "next",
              "line": 529
            },
            {
              "function": "info",
              "line": 550
            },
            {
              "function": "get",
              "line": 551
            },
            {
              "function": "get",
              "line": 552
            },
            {
              "function": "get",
              "line": 553
            },
            {
              "function": "list",
              "line": 560
            },
            {
              "function": "append",
              "line": 561
            },
            {
              "function": "append",
              "line": 562
            },
            {
              "function": "list",
              "line": 571
            },
            {
              "function": "append",
              "line": 572
            },
            {
              "function": "info",
              "line": 581
            },
            {
              "function": "info",
              "line": 582
            },
            {
              "function": "_check_escalation_needed",
              "line": 585
            },
            {
              "function": "get",
              "line": 594
            },
            {
              "function": "ExecutionStep",
              "line": 597
            },
            {
              "function": "append",
              "line": 606
            },
            {
              "function": "list",
              "line": 607
            },
            {
              "function": "info",
              "line": 614
            },
            {
              "function": "info",
              "line": 620
            },
            {
              "function": "info",
              "line": 621
            },
            {
              "function": "get",
              "line": 627
            },
            {
              "function": "recall_similar",
              "line": 642
            },
            {
              "function": "get_learned_solution",
              "line": 646
            },
            {
              "function": "_create_execution_plan",
              "line": 655
            },
            {
              "function": "create_task_ledger",
              "line": 661
            },
            {
              "function": "info",
              "line": 663
            },
            {
              "function": "info",
              "line": 673
            },
            {
              "function": "items",
              "line": 674
            },
            {
              "function": "info",
              "line": 680
            },
            {
              "function": "warning",
              "line": 722
            },
            {
              "function": "info",
              "line": 728
            },
            {
              "function": "get",
              "line": 765
            },
            {
              "function": "warning",
              "line": 802
            },
            {
              "function": "info",
              "line": 810
            },
            {
              "function": "info",
              "line": 818
            },
            {
              "function": "info",
              "line": 819
            },
            {
              "function": "info",
              "line": 820
            },
            {
              "function": "info",
              "line": 821
            },
            {
              "function": "list",
              "line": 826
            },
            {
              "function": "info",
              "line": 827
            },
            {
              "function": "info",
              "line": 830
            },
            {
              "function": "warning",
              "line": 866
            },
            {
              "function": "get",
              "line": 877
            },
            {
              "function": "warning",
              "line": 1018
            },
            {
              "function": "list",
              "line": 1022
            },
            {
              "function": "store_memory",
              "line": 1024
            },
            {
              "function": "error",
              "line": 1063
            },
            {
              "function": "info",
              "line": 1080
            },
            {
              "function": "list",
              "line": 1083
            },
            {
              "function": "info",
              "line": 1084
            },
            {
              "function": "store_memory",
              "line": 1104
            },
            {
              "function": "error",
              "line": 1136
            },
            {
              "function": "list",
              "line": 1148
            },
            {
              "function": "any",
              "line": 1152
            },
            {
              "function": "error",
              "line": 1207
            },
            {
              "function": "isinstance",
              "line": 1216
            },
            {
              "function": "list",
              "line": 1231
            },
            {
              "function": "isinstance",
              "line": 1236
            },
            {
              "function": "zip",
              "line": 1240
            },
            {
              "function": "error",
              "line": 1270
            },
            {
              "function": "list",
              "line": 1300
            },
            {
              "function": "list",
              "line": 1303
            },
            {
              "function": "append",
              "line": 1304
            },
            {
              "function": "info",
              "line": 1313
            },
            {
              "function": "error",
              "line": 1337
            },
            {
              "function": "get",
              "line": 1351
            },
            {
              "function": "FixerGPTAgent",
              "line": 1354
            },
            {
              "function": "TaskRequest",
              "line": 1357
            },
            {
              "function": "info",
              "line": 1371
            },
            {
              "function": "list",
              "line": 1376
            },
            {
              "function": "info",
              "line": 1383
            },
            {
              "function": "error",
              "line": 1406
            },
            {
              "function": "error",
              "line": 1479
            },
            {
              "function": "error",
              "line": 1552
            },
            {
              "function": "error",
              "line": 1626
            },
            {
              "function": "get",
              "line": 1707
            },
            {
              "function": "info",
              "line": 1708
            },
            {
              "function": "info",
              "line": 1715
            },
            {
              "function": "info",
              "line": 1747
            },
            {
              "function": "get",
              "line": 1764
            },
            {
              "function": "get",
              "line": 1765
            },
            {
              "function": "route_to_next_agent",
              "line": 1784
            },
            {
              "function": "check_and_handle_timeouts",
              "line": 1802
            },
            {
              "function": "update_from_steps",
              "line": 1806
            },
            {
              "function": "info",
              "line": 1808
            },
            {
              "function": "create_task",
              "line": 1823
            },
            {
              "function": "info",
              "line": 1827
            },
            {
              "function": "warning",
              "line": 1835
            },
            {
              "function": "info",
              "line": 1844
            },
            {
              "function": "error",
              "line": 1870
            },
            {
              "function": "error",
              "line": 1871
            },
            {
              "function": "list",
              "line": 1877
            },
            {
              "function": "any",
              "line": 1879
            },
            {
              "function": "next",
              "line": 1892
            },
            {
              "function": "next",
              "line": 1901
            },
            {
              "function": "get",
              "line": 1989
            },
            {
              "function": "any",
              "line": 2042
            },
            {
              "function": "error",
              "line": 2059
            },
            {
              "function": "should_use_safe_execution",
              "line": 2093
            },
            {
              "function": "info",
              "line": 2094
            },
            {
              "function": "classify_query",
              "line": 2113
            },
            {
              "function": "any",
              "line": 2142
            },
            {
              "function": "info",
              "line": 2170
            },
            {
              "function": "info",
              "line": 2178
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2179
            },
            {
              "function": "info",
              "line": 2275
            },
            {
              "function": "info",
              "line": 2316
            },
            {
              "function": "max",
              "line": 2324
            },
            {
              "function": "info",
              "line": 2350
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2351
            },
            {
              "function": "_create_single_agent_step",
              "line": 2359
            },
            {
              "function": "_create_single_agent_step",
              "line": 2362
            },
            {
              "function": "get_intelligent_response",
              "line": 2447
            },
            {
              "function": "info",
              "line": 2448
            },
            {
              "function": "enhance_orchestrator_step",
              "line": 2463
            },
            {
              "function": "any",
              "line": 2489
            },
            {
              "function": "info",
              "line": 2506
            },
            {
              "function": "any",
              "line": 2515
            },
            {
              "function": "info",
              "line": 2524
            },
            {
              "function": "warning",
              "line": 2538
            },
            {
              "function": "_create_single_agent_step",
              "line": 2539
            },
            {
              "function": "TaskRequest",
              "line": 2547
            },
            {
              "function": "info",
              "line": 2580
            },
            {
              "function": "create_intelligent_execution_plan",
              "line": 2622
            },
            {
              "function": "get",
              "line": 2640
            },
            {
              "function": "any",
              "line": 2658
            },
            {
              "function": "get",
              "line": 2671
            },
            {
              "function": "get",
              "line": 2672
            },
            {
              "function": "lower",
              "line": 2718
            },
            {
              "function": "info",
              "line": 2719
            },
            {
              "function": "CacheManager",
              "line": 2720
            },
            {
              "function": "fill_caches",
              "line": 2721
            },
            {
              "function": "info",
              "line": 2726
            },
            {
              "function": "sleep",
              "line": 2746
            },
            {
              "function": "get",
              "line": 3084
            },
            {
              "function": "info",
              "line": 3096
            },
            {
              "function": "sleep",
              "line": 3138
            },
            {
              "function": "info",
              "line": 3152
            },
            {
              "function": "sleep",
              "line": 3191
            },
            {
              "function": "info",
              "line": 3204
            },
            {
              "function": "sleep",
              "line": 3241
            },
            {
              "function": "info",
              "line": 3263
            },
            {
              "function": "sleep",
              "line": 3289
            },
            {
              "function": "add_conditional_edges",
              "line": 3401
            },
            {
              "function": "MemorySaver",
              "line": 3435
            },
            {
              "function": "info",
              "line": 3436
            },
            {
              "function": "compile_workflow",
              "line": 3491
            },
            {
              "function": "now",
              "line": 3515
            },
            {
              "function": "get",
              "line": 3518
            },
            {
              "function": "info",
              "line": 3557
            },
            {
              "function": "WorkflowSelfDiagnosisSystem",
              "line": 187
            },
            {
              "function": "info",
              "line": 188
            },
            {
              "function": "IntelligentQueryHandler",
              "line": 197
            },
            {
              "function": "info",
              "line": 198
            },
            {
              "function": "SafeOrchestratorExecutor",
              "line": 209
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 210
            },
            {
              "function": "DevelopmentQueryHandler",
              "line": 211
            },
            {
              "function": "info",
              "line": 212
            },
            {
              "function": "ArchitectAgent",
              "line": 257
            },
            {
              "function": "CodeSmithAgent",
              "line": 258
            },
            {
              "function": "ReviewerGPTAgent",
              "line": 259
            },
            {
              "function": "FixerBotAgent",
              "line": 260
            },
            {
              "function": "error",
              "line": 333
            },
            {
              "function": "exception",
              "line": 334
            },
            {
              "function": "len",
              "line": 402
            },
            {
              "function": "is_timeout",
              "line": 422
            },
            {
              "function": "warning",
              "line": 423
            },
            {
              "function": "append",
              "line": 426
            },
            {
              "function": "can_retry",
              "line": 434
            },
            {
              "function": "len",
              "line": 488
            },
            {
              "function": "get",
              "line": 556
            },
            {
              "function": "get",
              "line": 560
            },
            {
              "function": "get",
              "line": 571
            },
            {
              "function": "warning",
              "line": 591
            },
            {
              "function": "len",
              "line": 595
            },
            {
              "function": "enumerate",
              "line": 628
            },
            {
              "function": "info",
              "line": 648
            },
            {
              "function": "append",
              "line": 649
            },
            {
              "function": "info",
              "line": 676
            },
            {
              "function": "get",
              "line": 726
            },
            {
              "function": "get",
              "line": 726
            },
            {
              "function": "get",
              "line": 747
            },
            {
              "function": "info",
              "line": 769
            },
            {
              "function": "info",
              "line": 772
            },
            {
              "function": "_dependencies_met",
              "line": 811
            },
            {
              "function": "info",
              "line": 813
            },
            {
              "function": "list",
              "line": 838
            },
            {
              "function": "info",
              "line": 839
            },
            {
              "function": "info",
              "line": 881
            },
            {
              "function": "list",
              "line": 885
            },
            {
              "function": "store_memory",
              "line": 888
            },
            {
              "function": "info",
              "line": 896
            },
            {
              "function": "info",
              "line": 901
            },
            {
              "function": "get",
              "line": 902
            },
            {
              "function": "_format_proposal_for_user",
              "line": 911
            },
            {
              "function": "append",
              "line": 914
            },
            {
              "function": "info",
              "line": 930
            },
            {
              "function": "get",
              "line": 936
            },
            {
              "function": "info",
              "line": 937
            },
            {
              "function": "info",
              "line": 941
            },
            {
              "function": "_format_proposal_for_user",
              "line": 951
            },
            {
              "function": "append",
              "line": 954
            },
            {
              "function": "list",
              "line": 1001
            },
            {
              "function": "store_memory",
              "line": 1004
            },
            {
              "function": "info",
              "line": 1012
            },
            {
              "function": "_execute_architect_task",
              "line": 1019
            },
            {
              "function": "error",
              "line": 1033
            },
            {
              "function": "str",
              "line": 1035
            },
            {
              "function": "append",
              "line": 1036
            },
            {
              "function": "list",
              "line": 1041
            },
            {
              "function": "_execute_codesmith_task",
              "line": 1077
            },
            {
              "function": "error",
              "line": 1113
            },
            {
              "function": "str",
              "line": 1115
            },
            {
              "function": "list",
              "line": 1117
            },
            {
              "function": "_execute_reviewer_task",
              "line": 1143
            },
            {
              "function": "isinstance",
              "line": 1151
            },
            {
              "function": "lower",
              "line": 1151
            },
            {
              "function": "lower",
              "line": 1151
            },
            {
              "function": "warning",
              "line": 1158
            },
            {
              "function": "info",
              "line": 1162
            },
            {
              "function": "isinstance",
              "line": 1165
            },
            {
              "function": "get",
              "line": 1165
            },
            {
              "function": "store_memory",
              "line": 1175
            },
            {
              "function": "error",
              "line": 1184
            },
            {
              "function": "str",
              "line": 1186
            },
            {
              "function": "list",
              "line": 1188
            },
            {
              "function": "get",
              "line": 1217
            },
            {
              "function": "_execute_fixer_task",
              "line": 1226
            },
            {
              "function": "get",
              "line": 1237
            },
            {
              "function": "learn_pattern",
              "line": 1241
            },
            {
              "function": "error",
              "line": 1248
            },
            {
              "function": "str",
              "line": 1250
            },
            {
              "function": "list",
              "line": 1252
            },
            {
              "function": "TaskRequest",
              "line": 1283
            },
            {
              "function": "info",
              "line": 1291
            },
            {
              "function": "warning",
              "line": 1294
            },
            {
              "function": "get",
              "line": 1303
            },
            {
              "function": "error",
              "line": 1316
            },
            {
              "function": "str",
              "line": 1318
            },
            {
              "function": "list",
              "line": 1319
            },
            {
              "function": "execute",
              "line": 1368
            },
            {
              "function": "error",
              "line": 1386
            },
            {
              "function": "str",
              "line": 1388
            },
            {
              "function": "list",
              "line": 1389
            },
            {
              "function": "TaskRequest",
              "line": 1423
            },
            {
              "function": "info",
              "line": 1437
            },
            {
              "function": "list",
              "line": 1442
            },
            {
              "function": "append",
              "line": 1445
            },
            {
              "function": "warning",
              "line": 1453
            },
            {
              "function": "list",
              "line": 1456
            },
            {
              "function": "error",
              "line": 1459
            },
            {
              "function": "str",
              "line": 1461
            },
            {
              "function": "list",
              "line": 1462
            },
            {
              "function": "TaskRequest",
              "line": 1496
            },
            {
              "function": "info",
              "line": 1510
            },
            {
              "function": "list",
              "line": 1515
            },
            {
              "function": "append",
              "line": 1518
            },
            {
              "function": "warning",
              "line": 1526
            },
            {
              "function": "list",
              "line": 1529
            },
            {
              "function": "error",
              "line": 1532
            },
            {
              "function": "str",
              "line": 1534
            },
            {
              "function": "list",
              "line": 1535
            },
            {
              "function": "get",
              "line": 1563
            },
            {
              "function": "TaskRequest",
              "line": 1570
            },
            {
              "function": "info",
              "line": 1584
            },
            {
              "function": "list",
              "line": 1589
            },
            {
              "function": "append",
              "line": 1592
            },
            {
              "function": "warning",
              "line": 1600
            },
            {
              "function": "list",
              "line": 1603
            },
            {
              "function": "error",
              "line": 1606
            },
            {
              "function": "str",
              "line": 1608
            },
            {
              "function": "list",
              "line": 1609
            },
            {
              "function": "TaskRequest",
              "line": 1646
            },
            {
              "function": "info",
              "line": 1661
            },
            {
              "function": "list",
              "line": 1666
            },
            {
              "function": "append",
              "line": 1669
            },
            {
              "function": "warning",
              "line": 1682
            },
            {
              "function": "list",
              "line": 1685
            },
            {
              "function": "error",
              "line": 1688
            },
            {
              "function": "str",
              "line": 1690
            },
            {
              "function": "list",
              "line": 1691
            },
            {
              "function": "info",
              "line": 1751
            },
            {
              "function": "info",
              "line": 1754
            },
            {
              "function": "get",
              "line": 1764
            },
            {
              "function": "info",
              "line": 1769
            },
            {
              "function": "run_health_check",
              "line": 1823
            },
            {
              "function": "_dependencies_met",
              "line": 1847
            },
            {
              "function": "error",
              "line": 1873
            },
            {
              "function": "info",
              "line": 1882
            },
            {
              "function": "insert",
              "line": 1939
            },
            {
              "function": "len",
              "line": 1949
            },
            {
              "function": "info",
              "line": 2038
            },
            {
              "function": "info",
              "line": 2117
            },
            {
              "function": "info",
              "line": 2129
            },
            {
              "function": "handle_development_query",
              "line": 2149
            },
            {
              "function": "_use_orchestrator_for_planning",
              "line": 2172
            },
            {
              "function": "lower",
              "line": 2191
            },
            {
              "function": "lower",
              "line": 2191
            },
            {
              "function": "ExecutionStep",
              "line": 2205
            },
            {
              "function": "ExecutionStep",
              "line": 2221
            },
            {
              "function": "ExecutionStep",
              "line": 2248
            },
            {
              "function": "ExecutionStep",
              "line": 2278
            },
            {
              "function": "ExecutionStep",
              "line": 2287
            },
            {
              "function": "ExecutionStep",
              "line": 2296
            },
            {
              "function": "ExecutionStep",
              "line": 2305
            },
            {
              "function": "items",
              "line": 2324
            },
            {
              "function": "info",
              "line": 2329
            },
            {
              "function": "_create_single_agent_step",
              "line": 2330
            },
            {
              "function": "info",
              "line": 2355
            },
            {
              "function": "get",
              "line": 2455
            },
            {
              "function": "len",
              "line": 2479
            },
            {
              "function": "len",
              "line": 2480
            },
            {
              "function": "any",
              "line": 2483
            },
            {
              "function": "count",
              "line": 2495
            },
            {
              "function": "len",
              "line": 2502
            },
            {
              "function": "len",
              "line": 2512
            },
            {
              "function": "endswith",
              "line": 2520
            },
            {
              "function": "execute",
              "line": 2548
            },
            {
              "function": "info",
              "line": 2570
            },
            {
              "function": "error",
              "line": 2574
            },
            {
              "function": "warning",
              "line": 2575
            },
            {
              "function": "ExecutionStep",
              "line": 2582
            },
            {
              "function": "ExecutionStep",
              "line": 2591
            },
            {
              "function": "ExecutionStep",
              "line": 2600
            },
            {
              "function": "ExecutionStep",
              "line": 2609
            },
            {
              "function": "append",
              "line": 2648
            },
            {
              "function": "len",
              "line": 2666
            },
            {
              "function": "list",
              "line": 2667
            },
            {
              "function": "store_memory",
              "line": 2683
            },
            {
              "function": "info",
              "line": 2699
            },
            {
              "function": "warning",
              "line": 2702
            },
            {
              "function": "TaskRequest",
              "line": 2729
            },
            {
              "function": "TaskRequest",
              "line": 2839
            },
            {
              "function": "info",
              "line": 2852
            },
            {
              "function": "info",
              "line": 2859
            },
            {
              "function": "info",
              "line": 2860
            },
            {
              "function": "info",
              "line": 2861
            },
            {
              "function": "search",
              "line": 2868
            },
            {
              "function": "info",
              "line": 2888
            },
            {
              "function": "get",
              "line": 2930
            },
            {
              "function": "get",
              "line": 2935
            },
            {
              "function": "get",
              "line": 2938
            },
            {
              "function": "get",
              "line": 2941
            },
            {
              "function": "get",
              "line": 2944
            },
            {
              "function": "get",
              "line": 2947
            },
            {
              "function": "get",
              "line": 2980
            },
            {
              "function": "get",
              "line": 2983
            },
            {
              "function": "get",
              "line": 2986
            },
            {
              "function": "get",
              "line": 2989
            },
            {
              "function": "get",
              "line": 2993
            },
            {
              "function": "dumps",
              "line": 3029
            },
            {
              "function": "TaskRequest",
              "line": 3051
            },
            {
              "function": "search",
              "line": 3066
            },
            {
              "function": "loads",
              "line": 3070
            },
            {
              "function": "info",
              "line": 3071
            },
            {
              "function": "TaskRequest",
              "line": 3120
            },
            {
              "function": "TaskRequest",
              "line": 3179
            },
            {
              "function": "TaskRequest",
              "line": 3229
            },
            {
              "function": "TaskRequest",
              "line": 3268
            },
            {
              "function": "isoformat",
              "line": 3485
            },
            {
              "function": "ainvoke",
              "line": 3496
            },
            {
              "function": "get",
              "line": 3505
            },
            {
              "function": "info",
              "line": 3510
            },
            {
              "function": "info",
              "line": 3511
            },
            {
              "function": "_store_execution_for_learning",
              "line": 3551
            },
            {
              "function": "error",
              "line": 3561
            },
            {
              "function": "exception",
              "line": 3562
            },
            {
              "function": "append",
              "line": 3564
            },
            {
              "function": "error",
              "line": 190
            },
            {
              "function": "error",
              "line": 200
            },
            {
              "function": "error",
              "line": 214
            },
            {
              "function": "OrchestratorAgent",
              "line": 266
            },
            {
              "function": "info",
              "line": 271
            },
            {
              "function": "ResearchAgent",
              "line": 278
            },
            {
              "function": "info",
              "line": 283
            },
            {
              "function": "DocuBotAgent",
              "line": 290
            },
            {
              "function": "info",
              "line": 294
            },
            {
              "function": "PerformanceBot",
              "line": 301
            },
            {
              "function": "info",
              "line": 305
            },
            {
              "function": "TradeStratAgent",
              "line": 312
            },
            {
              "function": "info",
              "line": 316
            },
            {
              "function": "OpusArbitratorAgent",
              "line": 323
            },
            {
              "function": "info",
              "line": 327
            },
            {
              "function": "lower",
              "line": 380
            },
            {
              "function": "lower",
              "line": 382
            },
            {
              "function": "lower",
              "line": 384
            },
            {
              "function": "lower",
              "line": 386
            },
            {
              "function": "lower",
              "line": 388
            },
            {
              "function": "get_retry_delay",
              "line": 435
            },
            {
              "function": "info",
              "line": 436
            },
            {
              "function": "append",
              "line": 443
            },
            {
              "function": "error",
              "line": 449
            },
            {
              "function": "now",
              "line": 452
            },
            {
              "function": "_has_dependency_conflict",
              "line": 483
            },
            {
              "function": "append",
              "line": 484
            },
            {
              "function": "add",
              "line": 485
            },
            {
              "function": "get",
              "line": 567
            },
            {
              "function": "isoformat",
              "line": 577
            },
            {
              "function": "info",
              "line": 629
            },
            {
              "function": "pre_execution_check",
              "line": 683
            },
            {
              "function": "error",
              "line": 689
            },
            {
              "function": "append",
              "line": 692
            },
            {
              "function": "ExecutionStep",
              "line": 701
            },
            {
              "function": "error",
              "line": 710
            },
            {
              "function": "info",
              "line": 713
            },
            {
              "function": "error",
              "line": 718
            },
            {
              "function": "warning",
              "line": 720
            },
            {
              "function": "len",
              "line": 739
            },
            {
              "function": "len",
              "line": 746
            },
            {
              "function": "info",
              "line": 777
            },
            {
              "function": "len",
              "line": 808
            },
            {
              "function": "get",
              "line": 864
            },
            {
              "function": "_finalize_architecture",
              "line": 882
            },
            {
              "function": "_revise_proposal",
              "line": 904
            },
            {
              "function": "_execute_architect_task",
              "line": 940
            },
            {
              "function": "_create_architecture_proposal",
              "line": 944
            },
            {
              "function": "info",
              "line": 963
            },
            {
              "function": "info",
              "line": 964
            },
            {
              "function": "info",
              "line": 965
            },
            {
              "function": "warning",
              "line": 997
            },
            {
              "function": "get",
              "line": 1029
            },
            {
              "function": "get",
              "line": 1109
            },
            {
              "function": "store_memory",
              "line": 1167
            },
            {
              "function": "execute",
              "line": 1288
            },
            {
              "function": "get",
              "line": 1305
            },
            {
              "function": "isoformat",
              "line": 1309
            },
            {
              "function": "get",
              "line": 1348
            },
            {
              "function": "execute",
              "line": 1434
            },
            {
              "function": "execute",
              "line": 1507
            },
            {
              "function": "execute",
              "line": 1581
            },
            {
              "function": "get",
              "line": 1638
            },
            {
              "function": "execute",
              "line": 1658
            },
            {
              "function": "len",
              "line": 1713
            },
            {
              "function": "info",
              "line": 1729
            },
            {
              "function": "_dependencies_met",
              "line": 1734
            },
            {
              "function": "info",
              "line": 1743
            },
            {
              "function": "info",
              "line": 1773
            },
            {
              "function": "len",
              "line": 1799
            },
            {
              "function": "get",
              "line": 1811
            },
            {
              "function": "warning",
              "line": 1838
            },
            {
              "function": "now",
              "line": 1859
            },
            {
              "function": "now",
              "line": 1860
            },
            {
              "function": "info",
              "line": 1862
            },
            {
              "function": "info",
              "line": 1865
            },
            {
              "function": "route_to_next_agent",
              "line": 1883
            },
            {
              "function": "join",
              "line": 1939
            },
            {
              "function": "join",
              "line": 1997
            },
            {
              "function": "create_safe_execution_plan",
              "line": 2098
            },
            {
              "function": "info",
              "line": 2100
            },
            {
              "function": "error",
              "line": 2103
            },
            {
              "function": "ExecutionStep",
              "line": 2118
            },
            {
              "function": "ExecutionStep",
              "line": 2130
            },
            {
              "function": "len",
              "line": 2173
            },
            {
              "function": "sorted",
              "line": 2335
            },
            {
              "function": "debug",
              "line": 2408
            },
            {
              "function": "debug",
              "line": 2415
            },
            {
              "function": "split",
              "line": 2479
            },
            {
              "function": "split",
              "line": 2480
            },
            {
              "function": "len",
              "line": 2486
            },
            {
              "function": "split",
              "line": 2502
            },
            {
              "function": "split",
              "line": 2512
            },
            {
              "function": "len",
              "line": 2520
            },
            {
              "function": "append",
              "line": 2557
            },
            {
              "function": "set",
              "line": 2667
            },
            {
              "function": "execute",
              "line": 2738
            },
            {
              "function": "hasattr",
              "line": 2739
            },
            {
              "function": "str",
              "line": 2739
            },
            {
              "function": "error",
              "line": 2741
            },
            {
              "function": "execute",
              "line": 2848
            },
            {
              "function": "hasattr",
              "line": 2849
            },
            {
              "function": "str",
              "line": 2849
            },
            {
              "function": "error",
              "line": 2854
            },
            {
              "function": "error",
              "line": 2855
            },
            {
              "function": "ValueError",
              "line": 2856
            },
            {
              "function": "group",
              "line": 2870
            },
            {
              "function": "info",
              "line": 2871
            },
            {
              "function": "warning",
              "line": 2873
            },
            {
              "function": "loads",
              "line": 2877
            },
            {
              "function": "all",
              "line": 2885
            },
            {
              "function": "ValueError",
              "line": 2886
            },
            {
              "function": "error",
              "line": 2892
            },
            {
              "function": "warning",
              "line": 2893
            },
            {
              "function": "execute",
              "line": 3060
            },
            {
              "function": "hasattr",
              "line": 3061
            },
            {
              "function": "str",
              "line": 3061
            },
            {
              "function": "group",
              "line": 3068
            },
            {
              "function": "error",
              "line": 3075
            },
            {
              "function": "warning",
              "line": 3076
            },
            {
              "function": "get",
              "line": 3103
            },
            {
              "function": "get",
              "line": 3104
            },
            {
              "function": "execute",
              "line": 3124
            },
            {
              "function": "hasattr",
              "line": 3127
            },
            {
              "function": "hasattr",
              "line": 3127
            },
            {
              "function": "info",
              "line": 3129
            },
            {
              "function": "hasattr",
              "line": 3131
            },
            {
              "function": "str",
              "line": 3131
            },
            {
              "function": "error",
              "line": 3133
            },
            {
              "function": "get",
              "line": 3159
            },
            {
              "function": "get",
              "line": 3160
            },
            {
              "function": "append",
              "line": 3174
            },
            {
              "function": "execute",
              "line": 3183
            },
            {
              "function": "hasattr",
              "line": 3184
            },
            {
              "function": "str",
              "line": 3184
            },
            {
              "function": "error",
              "line": 3186
            },
            {
              "function": "get",
              "line": 3211
            },
            {
              "function": "get",
              "line": 3212
            },
            {
              "function": "append",
              "line": 3224
            },
            {
              "function": "execute",
              "line": 3233
            },
            {
              "function": "hasattr",
              "line": 3234
            },
            {
              "function": "str",
              "line": 3234
            },
            {
              "function": "error",
              "line": 3236
            },
            {
              "function": "execute",
              "line": 3274
            },
            {
              "function": "info",
              "line": 3277
            },
            {
              "function": "error",
              "line": 3280
            },
            {
              "function": "error",
              "line": 3284
            },
            {
              "function": "get",
              "line": 3478
            },
            {
              "function": "hasattr",
              "line": 3507
            },
            {
              "function": "join",
              "line": 3524
            },
            {
              "function": "info",
              "line": 3544
            },
            {
              "function": "get_intelligent_response",
              "line": 3545
            },
            {
              "function": "_store_execution_for_learning",
              "line": 3570
            },
            {
              "function": "warning",
              "line": 273
            },
            {
              "function": "warning",
              "line": 285
            },
            {
              "function": "warning",
              "line": 296
            },
            {
              "function": "warning",
              "line": 307
            },
            {
              "function": "warning",
              "line": 318
            },
            {
              "function": "warning",
              "line": 329
            },
            {
              "function": "len",
              "line": 331
            },
            {
              "function": "isoformat",
              "line": 430
            },
            {
              "function": "add",
              "line": 533
            },
            {
              "function": "append",
              "line": 534
            },
            {
              "function": "get",
              "line": 582
            },
            {
              "function": "len",
              "line": 621
            },
            {
              "function": "len",
              "line": 663
            },
            {
              "function": "len",
              "line": 673
            },
            {
              "function": "info",
              "line": 787
            },
            {
              "function": "get",
              "line": 819
            },
            {
              "function": "get",
              "line": 820
            },
            {
              "function": "get",
              "line": 893
            },
            {
              "function": "send_json",
              "line": 923
            },
            {
              "function": "get",
              "line": 972
            },
            {
              "function": "info",
              "line": 982
            },
            {
              "function": "info",
              "line": 991
            },
            {
              "function": "get",
              "line": 1009
            },
            {
              "function": "str",
              "line": 1038
            },
            {
              "function": "isoformat",
              "line": 1039
            },
            {
              "function": "len",
              "line": 1108
            },
            {
              "function": "str",
              "line": 1151
            },
            {
              "function": "str",
              "line": 1151
            },
            {
              "function": "get",
              "line": 1180
            },
            {
              "function": "str",
              "line": 1220
            },
            {
              "function": "len",
              "line": 1313
            },
            {
              "function": "get",
              "line": 1349
            },
            {
              "function": "len",
              "line": 1371
            },
            {
              "function": "append",
              "line": 1420
            },
            {
              "function": "isoformat",
              "line": 1449
            },
            {
              "function": "append",
              "line": 1493
            },
            {
              "function": "isoformat",
              "line": 1522
            },
            {
              "function": "isoformat",
              "line": 1596
            },
            {
              "function": "get",
              "line": 1639
            },
            {
              "function": "append",
              "line": 1640
            },
            {
              "function": "isoformat",
              "line": 1673
            },
            {
              "function": "warning",
              "line": 1724
            },
            {
              "function": "list",
              "line": 1727
            },
            {
              "function": "warning",
              "line": 1738
            },
            {
              "function": "list",
              "line": 1741
            },
            {
              "function": "route_to_next_agent",
              "line": 1781
            },
            {
              "function": "real_time_monitoring",
              "line": 1815
            },
            {
              "function": "error",
              "line": 1817
            },
            {
              "function": "error",
              "line": 1818
            },
            {
              "function": "warning",
              "line": 1820
            },
            {
              "function": "warning",
              "line": 1851
            },
            {
              "function": "list",
              "line": 1854
            },
            {
              "function": "dirname",
              "line": 1939
            },
            {
              "function": "get",
              "line": 2043
            },
            {
              "function": "get",
              "line": 2044
            },
            {
              "function": "lower",
              "line": 2142
            },
            {
              "function": "ExecutionStep",
              "line": 2153
            },
            {
              "function": "len",
              "line": 2316
            },
            {
              "function": "items",
              "line": 2335
            },
            {
              "function": "info",
              "line": 2338
            },
            {
              "function": "_create_single_agent_step",
              "line": 2340
            },
            {
              "function": "info",
              "line": 2342
            },
            {
              "function": "_create_single_agent_step",
              "line": 2343
            },
            {
              "function": "get",
              "line": 2407
            },
            {
              "function": "get",
              "line": 2414
            },
            {
              "function": "len",
              "line": 2448
            },
            {
              "function": "split",
              "line": 2486
            },
            {
              "function": "strip",
              "line": 2520
            },
            {
              "function": "split",
              "line": 2520
            },
            {
              "function": "ExecutionStep",
              "line": 2557
            },
            {
              "function": "len",
              "line": 2659
            },
            {
              "function": "total_seconds",
              "line": 2676
            },
            {
              "function": "get",
              "line": 2695
            },
            {
              "function": "strip",
              "line": 2853
            },
            {
              "function": "error",
              "line": 2879
            },
            {
              "function": "error",
              "line": 2880
            },
            {
              "function": "get",
              "line": 3079
            },
            {
              "function": "append",
              "line": 3113
            },
            {
              "function": "now",
              "line": 3485
            },
            {
              "function": "append",
              "line": 3522
            },
            {
              "function": "info",
              "line": 3528
            },
            {
              "function": "get_intelligent_response",
              "line": 3529
            },
            {
              "function": "str",
              "line": 3565
            },
            {
              "function": "isoformat",
              "line": 3566
            },
            {
              "function": "now",
              "line": 577
            },
            {
              "function": "get",
              "line": 621
            },
            {
              "function": "info",
              "line": 796
            },
            {
              "function": "send_json",
              "line": 981
            },
            {
              "function": "hasattr",
              "line": 988
            },
            {
              "function": "get",
              "line": 990
            },
            {
              "function": "error",
              "line": 993
            },
            {
              "function": "error",
              "line": 995
            },
            {
              "function": "str",
              "line": 1108
            },
            {
              "function": "get",
              "line": 1151
            },
            {
              "function": "get",
              "line": 1171
            },
            {
              "function": "len",
              "line": 1291
            },
            {
              "function": "now",
              "line": 1309
            },
            {
              "function": "get",
              "line": 1429
            },
            {
              "function": "len",
              "line": 1437
            },
            {
              "function": "get",
              "line": 1502
            },
            {
              "function": "len",
              "line": 1510
            },
            {
              "function": "get",
              "line": 1576
            },
            {
              "function": "len",
              "line": 1584
            },
            {
              "function": "get",
              "line": 1652
            },
            {
              "function": "get",
              "line": 1653
            },
            {
              "function": "len",
              "line": 1661
            },
            {
              "function": "list",
              "line": 1778
            },
            {
              "function": "get",
              "line": 1990
            },
            {
              "function": "chr",
              "line": 1997
            },
            {
              "function": "len",
              "line": 2336
            },
            {
              "function": "len",
              "line": 2570
            },
            {
              "function": "hasattr",
              "line": 2652
            },
            {
              "function": "get",
              "line": 2653
            },
            {
              "function": "get",
              "line": 2692
            },
            {
              "function": "isoformat",
              "line": 2693
            },
            {
              "function": "get",
              "line": 2734
            },
            {
              "function": "get",
              "line": 2735
            },
            {
              "function": "str",
              "line": 2742
            },
            {
              "function": "get",
              "line": 2843
            },
            {
              "function": "get",
              "line": 2844
            },
            {
              "function": "len",
              "line": 2852
            },
            {
              "function": "repr",
              "line": 2860
            },
            {
              "function": "repr",
              "line": 2861
            },
            {
              "function": "chr",
              "line": 2977
            },
            {
              "function": "chr",
              "line": 2977
            },
            {
              "function": "get",
              "line": 3055
            },
            {
              "function": "get",
              "line": 3056
            },
            {
              "function": "str",
              "line": 3134
            },
            {
              "function": "hasattr",
              "line": 3171
            },
            {
              "function": "info",
              "line": 3173
            },
            {
              "function": "str",
              "line": 3187
            },
            {
              "function": "append",
              "line": 3223
            },
            {
              "function": "str",
              "line": 3237
            },
            {
              "function": "str",
              "line": 3285
            },
            {
              "function": "str",
              "line": 3524
            },
            {
              "function": "now",
              "line": 430
            },
            {
              "function": "get",
              "line": 927
            },
            {
              "function": "get",
              "line": 963
            },
            {
              "function": "get",
              "line": 964
            },
            {
              "function": "len",
              "line": 965
            },
            {
              "function": "now",
              "line": 1039
            },
            {
              "function": "now",
              "line": 1449
            },
            {
              "function": "now",
              "line": 1522
            },
            {
              "function": "now",
              "line": 1596
            },
            {
              "function": "now",
              "line": 1673
            },
            {
              "function": "enumerate",
              "line": 1997
            },
            {
              "function": "len",
              "line": 2100
            },
            {
              "function": "get",
              "line": 2558
            },
            {
              "function": "get",
              "line": 2559
            },
            {
              "function": "get",
              "line": 2560
            },
            {
              "function": "get",
              "line": 2561
            },
            {
              "function": "get",
              "line": 2562
            },
            {
              "function": "hasattr",
              "line": 2653
            },
            {
              "function": "hasattr",
              "line": 2659
            },
            {
              "function": "type",
              "line": 2854
            },
            {
              "function": "dir",
              "line": 2855
            },
            {
              "function": "list",
              "line": 2886
            },
            {
              "function": "list",
              "line": 3129
            },
            {
              "function": "lower",
              "line": 3222
            },
            {
              "function": "lower",
              "line": 3222
            },
            {
              "function": "now",
              "line": 3566
            },
            {
              "function": "str",
              "line": 965
            },
            {
              "function": "get",
              "line": 991
            },
            {
              "function": "get",
              "line": 1818
            },
            {
              "function": "get",
              "line": 2560
            },
            {
              "function": "get",
              "line": 2567
            },
            {
              "function": "int",
              "line": 2567
            },
            {
              "function": "now",
              "line": 2693
            },
            {
              "function": "repr",
              "line": 2880
            },
            {
              "function": "keys",
              "line": 2886
            },
            {
              "function": "keys",
              "line": 3129
            },
            {
              "function": "format_exc",
              "line": 995
            },
            {
              "function": "get",
              "line": 1997
            },
            {
              "function": "list",
              "line": 3173
            },
            {
              "function": "str",
              "line": 3222
            },
            {
              "function": "str",
              "line": 3222
            },
            {
              "function": "get",
              "line": 2567
            },
            {
              "function": "keys",
              "line": 3173
            },
            {
              "function": "len",
              "line": 2558
            },
            {
              "function": "max",
              "line": 2880
            }
          ]
        },
        "langgraph_system/state.py": {
          "functions": [
            {
              "name": "create_initial_state",
              "line": 245,
              "async": false,
              "calls": [
                "uuid4",
                "getcwd",
                "now",
                "ExtendedAgentState",
                "str"
              ],
              "parameters": [
                "session_id",
                "client_id",
                "workspace_path",
                "plan_first_mode",
                "debug_mode"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 70,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "is_timeout",
              "line": 77,
              "async": false,
              "calls": [
                "total_seconds",
                "now"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "can_retry",
              "line": 84,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "get_retry_delay",
              "line": 88,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 109,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "__post_init__",
              "line": 132,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "update_from_steps",
              "line": 139,
              "async": false,
              "calls": [
                "sum",
                "len"
              ],
              "parameters": [
                "self",
                "steps"
              ],
              "decorators": [],
              "file": "langgraph_system/state.py"
            }
          ],
          "classes": [
            {
              "name": "ToolDefinition",
              "line": 14,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "MemoryEntry",
              "line": 26,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "ExecutionStep",
              "line": 37,
              "methods": [
                "__post_init__",
                "is_timeout",
                "can_retry",
                "get_retry_delay"
              ],
              "bases": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "TaskLedger",
              "line": 94,
              "methods": [
                "__post_init__"
              ],
              "bases": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "ProgressLedger",
              "line": 116,
              "methods": [
                "__post_init__",
                "update_from_steps"
              ],
              "bases": [],
              "file": "langgraph_system/state.py"
            },
            {
              "name": "ExtendedAgentState",
              "line": 151,
              "methods": [],
              "bases": [
                "TypedDict"
              ],
              "file": "langgraph_system/state.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "TypedDict",
                "List",
                "Dict",
                "Any",
                "Optional",
                "Literal",
                "Annotated"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "operator",
              "names": [
                "operator"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 255
            }
          ],
          "calls": [
            {
              "function": "ExtendedAgentState",
              "line": 256
            },
            {
              "function": "len",
              "line": 141
            },
            {
              "function": "sum",
              "line": 142
            },
            {
              "function": "sum",
              "line": 143
            },
            {
              "function": "sum",
              "line": 144
            },
            {
              "function": "sum",
              "line": 145
            },
            {
              "function": "total_seconds",
              "line": 80
            },
            {
              "function": "now",
              "line": 326
            },
            {
              "function": "str",
              "line": 263
            },
            {
              "function": "getcwd",
              "line": 265
            },
            {
              "function": "uuid4",
              "line": 263
            },
            {
              "function": "now",
              "line": 80
            }
          ]
        },
        "langgraph_system/safe_orchestrator_executor.py": {
          "functions": [
            {
              "name": "add_attempt",
              "line": 41,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "attempt"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "__init__",
              "line": 68,
              "async": false,
              "calls": [
                "ExecutionHistory",
                "ExecutionGuard",
                "getLogger",
                "DevelopmentQueryHandler",
                "EnhancedQueryClassifier"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_generate_query_hash",
              "line": 75,
              "async": false,
              "calls": [
                "encode",
                "hexdigest",
                "md5",
                "lower",
                "strip"
              ],
              "parameters": [
                "self",
                "query"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_detect_loop_pattern",
              "line": 80,
              "async": false,
              "calls": [
                "len",
                "warning",
                "min",
                "range"
              ],
              "parameters": [
                "self",
                "recent_hashes"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "_get_safe_fallback_response",
              "line": 102,
              "async": false,
              "calls": [
                "handle_development_query"
              ],
              "parameters": [
                "self",
                "query",
                "classification"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "get_execution_stats",
              "line": 314,
              "async": false,
              "calls": [
                "sorted",
                "sum",
                "items",
                "split",
                "get",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "should_use_safe_execution",
              "line": 351,
              "async": false,
              "calls": [
                "isinstance",
                "set",
                "hasattr",
                "dict",
                "any",
                "get",
                "append",
                "len",
                "classify_query"
              ],
              "parameters": [
                "self",
                "query",
                "state"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "reset_history",
              "line": 399,
              "async": false,
              "calls": [
                "ExecutionHistory",
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            }
          ],
          "classes": [
            {
              "name": "ExecutionAttempt",
              "line": 21,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "ExecutionHistory",
              "line": 33,
              "methods": [
                "add_attempt"
              ],
              "bases": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            },
            {
              "name": "SafeOrchestratorExecutor",
              "line": 53,
              "methods": [
                "__init__",
                "_generate_query_hash",
                "_detect_loop_pattern",
                "_get_safe_fallback_response",
                "get_execution_stats",
                "should_use_safe_execution",
                "reset_history"
              ],
              "bases": [],
              "file": "langgraph_system/safe_orchestrator_executor.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "List",
                "Tuple"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "field"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "query_classifier",
              "names": [
                "EnhancedQueryClassifier",
                "ExecutionGuard",
                "DetailedClassification"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "development_query_handler",
              "names": [
                "DevelopmentQueryHandler"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ExecutionStep",
                "WorkflowState"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "field",
              "line": 35
            },
            {
              "function": "field",
              "line": 36
            },
            {
              "function": "field",
              "line": 37
            },
            {
              "function": "append",
              "line": 43
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 69
            },
            {
              "function": "DevelopmentQueryHandler",
              "line": 70
            },
            {
              "function": "ExecutionGuard",
              "line": 71
            },
            {
              "function": "ExecutionHistory",
              "line": 72
            },
            {
              "function": "getLogger",
              "line": 73
            },
            {
              "function": "strip",
              "line": 77
            },
            {
              "function": "range",
              "line": 93
            },
            {
              "function": "isinstance",
              "line": 172
            },
            {
              "function": "classify_query",
              "line": 178
            },
            {
              "function": "_generate_query_hash",
              "line": 181
            },
            {
              "function": "len",
              "line": 182
            },
            {
              "function": "ExecutionAttempt",
              "line": 185
            },
            {
              "function": "_detect_loop_pattern",
              "line": 212
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "len",
              "line": 317
            },
            {
              "function": "len",
              "line": 319
            },
            {
              "function": "isinstance",
              "line": 358
            },
            {
              "function": "classify_query",
              "line": 376
            },
            {
              "function": "ExecutionHistory",
              "line": 401
            },
            {
              "function": "info",
              "line": 402
            },
            {
              "function": "isinstance",
              "line": 415
            },
            {
              "function": "classify_query",
              "line": 420
            },
            {
              "function": "timestamp",
              "line": 422
            },
            {
              "function": "info",
              "line": 478
            },
            {
              "function": "hexdigest",
              "line": 78
            },
            {
              "function": "len",
              "line": 85
            },
            {
              "function": "min",
              "line": 93
            },
            {
              "function": "handle_development_query",
              "line": 115
            },
            {
              "function": "add_attempt",
              "line": 197
            },
            {
              "function": "add_attempt",
              "line": 215
            },
            {
              "function": "add_attempt",
              "line": 223
            },
            {
              "function": "sorted",
              "line": 327
            },
            {
              "function": "get",
              "line": 359
            },
            {
              "function": "any",
              "line": 367
            },
            {
              "function": "len",
              "line": 381
            },
            {
              "function": "len",
              "line": 385
            },
            {
              "function": "handle_development_query",
              "line": 427
            },
            {
              "function": "enumerate",
              "line": 431
            },
            {
              "function": "lower",
              "line": 77
            },
            {
              "function": "len",
              "line": 89
            },
            {
              "function": "warning",
              "line": 97
            },
            {
              "function": "wait_for",
              "line": 145
            },
            {
              "function": "error",
              "line": 151
            },
            {
              "function": "error",
              "line": 154
            },
            {
              "function": "hasattr",
              "line": 175
            },
            {
              "function": "dict",
              "line": 175
            },
            {
              "function": "now",
              "line": 188
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 199
            },
            {
              "function": "add_attempt",
              "line": 206
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 217
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 225
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 234
            },
            {
              "function": "add_attempt",
              "line": 236
            },
            {
              "function": "error",
              "line": 304
            },
            {
              "function": "str",
              "line": 305
            },
            {
              "function": "add_attempt",
              "line": 306
            },
            {
              "function": "pop",
              "line": 312
            },
            {
              "function": "sum",
              "line": 324
            },
            {
              "function": "items",
              "line": 328
            },
            {
              "function": "hasattr",
              "line": 362
            },
            {
              "function": "hasattr",
              "line": 363
            },
            {
              "function": "dict",
              "line": 363
            },
            {
              "function": "hasattr",
              "line": 388
            },
            {
              "function": "hasattr",
              "line": 418
            },
            {
              "function": "dict",
              "line": 418
            },
            {
              "function": "now",
              "line": 422
            },
            {
              "function": "ExecutionStep",
              "line": 432
            },
            {
              "function": "append",
              "line": 440
            },
            {
              "function": "enumerate",
              "line": 455
            },
            {
              "function": "ExecutionStep",
              "line": 468
            },
            {
              "function": "append",
              "line": 476
            },
            {
              "function": "md5",
              "line": 78
            },
            {
              "function": "len",
              "line": 95
            },
            {
              "function": "func",
              "line": 146
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 208
            },
            {
              "function": "add_attempt",
              "line": 243
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 307
            },
            {
              "function": "split",
              "line": 337
            },
            {
              "function": "get",
              "line": 338
            },
            {
              "function": "append",
              "line": 389
            },
            {
              "function": "isinstance",
              "line": 390
            },
            {
              "function": "len",
              "line": 393
            },
            {
              "function": "len",
              "line": 393
            },
            {
              "function": "ExecutionStep",
              "line": 456
            },
            {
              "function": "append",
              "line": 464
            },
            {
              "function": "len",
              "line": 478
            },
            {
              "function": "encode",
              "line": 78
            },
            {
              "function": "len",
              "line": 93
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 241
            },
            {
              "function": "hasattr",
              "line": 369
            },
            {
              "function": "append",
              "line": 391
            },
            {
              "function": "set",
              "line": 393
            },
            {
              "function": "lower",
              "line": 444
            },
            {
              "function": "lower",
              "line": 444
            },
            {
              "function": "handle_development_query",
              "line": 249
            },
            {
              "function": "info",
              "line": 277
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 298
            },
            {
              "function": "add_attempt",
              "line": 300
            },
            {
              "function": "get",
              "line": 391
            },
            {
              "function": "lower",
              "line": 446
            },
            {
              "function": "lower",
              "line": 446
            },
            {
              "function": "lower",
              "line": 448
            },
            {
              "function": "add_attempt",
              "line": 268
            },
            {
              "function": "add_attempt",
              "line": 272
            },
            {
              "function": "_execute_with_timeout",
              "line": 279
            },
            {
              "function": "add_attempt",
              "line": 288
            },
            {
              "function": "add_attempt",
              "line": 293
            },
            {
              "function": "get",
              "line": 370
            },
            {
              "function": "get",
              "line": 370
            },
            {
              "function": "lower",
              "line": 450
            },
            {
              "function": "ExecutionStep",
              "line": 257
            },
            {
              "function": "append",
              "line": 265
            },
            {
              "function": "str",
              "line": 287
            },
            {
              "function": "_get_safe_fallback_response",
              "line": 294
            },
            {
              "function": "join",
              "line": 267
            },
            {
              "function": "timestamp",
              "line": 258
            },
            {
              "function": "now",
              "line": 258
            }
          ]
        },
        "langgraph_system/extensions/dynamic_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 48,
              "async": false,
              "calls": [
                "_extract_base_structure"
              ],
              "parameters": [
                "self",
                "base_graph"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "_extract_base_structure",
              "line": 75,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_node",
              "line": 81,
              "async": false,
              "calls": [
                "info",
                "DynamicNode",
                "warning"
              ],
              "parameters": [
                "self",
                "name",
                "func",
                "node_type",
                "description",
                "metadata"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "remove_node",
              "line": 118,
              "async": false,
              "calls": [
                "info",
                "warning"
              ],
              "parameters": [
                "self",
                "name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_edge",
              "line": 149,
              "async": false,
              "calls": [
                "error",
                "info",
                "append",
                "DynamicEdge"
              ],
              "parameters": [
                "self",
                "source",
                "target",
                "condition",
                "metadata"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "add_conditional_routing",
              "line": 188,
              "async": false,
              "calls": [
                "info",
                "append",
                "ConditionalRoute"
              ],
              "parameters": [
                "self",
                "source",
                "condition",
                "routes",
                "metadata"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "compile_graph",
              "line": 218,
              "async": false,
              "calls": [
                "add_conditional_edges",
                "items",
                "add_node",
                "StateGraph",
                "add_edge",
                "info",
                "len",
                "append",
                "compile"
              ],
              "parameters": [
                "self",
                "state_class"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "create_template",
              "line": 272,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "name",
                "nodes",
                "edges",
                "routes",
                "description"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "apply_template",
              "line": 303,
              "async": false,
              "calls": [
                "items",
                "add_node",
                "add_conditional_routing",
                "add_edge",
                "error",
                "info"
              ],
              "parameters": [
                "self",
                "template_name",
                "node_prefix",
                "parameter_mapping"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "rollback",
              "line": 361,
              "async": false,
              "calls": [
                "max",
                "error",
                "info",
                "len",
                "warning"
              ],
              "parameters": [
                "self",
                "version"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "get_graph_info",
              "line": 387,
              "async": false,
              "calls": [
                "keys",
                "len",
                "list"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "visualize_graph",
              "line": 402,
              "async": false,
              "calls": [
                "join",
                "append",
                "items",
                "ValueError"
              ],
              "parameters": [
                "self",
                "format"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "DynamicNode",
              "line": 15,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "DynamicEdge",
              "line": 25,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "ConditionalRoute",
              "line": 34,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            },
            {
              "name": "DynamicWorkflowManager",
              "line": 42,
              "methods": [
                "__init__",
                "_extract_base_structure",
                "add_node",
                "remove_node",
                "add_edge",
                "add_conditional_routing",
                "compile_graph",
                "create_template",
                "apply_template",
                "rollback",
                "get_graph_info",
                "visualize_graph"
              ],
              "bases": [],
              "file": "langgraph_system/extensions/dynamic_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Callable",
                "Any",
                "Optional",
                "Literal"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "langgraph.graph",
              "names": [
                "StateGraph",
                "END"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 78
            },
            {
              "function": "DynamicNode",
              "line": 106
            },
            {
              "function": "info",
              "line": 115
            },
            {
              "function": "warning",
              "line": 146
            },
            {
              "function": "DynamicEdge",
              "line": 177
            },
            {
              "function": "append",
              "line": 184
            },
            {
              "function": "info",
              "line": 185
            },
            {
              "function": "ConditionalRoute",
              "line": 207
            },
            {
              "function": "append",
              "line": 214
            },
            {
              "function": "info",
              "line": 215
            },
            {
              "function": "StateGraph",
              "line": 228
            },
            {
              "function": "items",
              "line": 231
            },
            {
              "function": "items",
              "line": 235
            },
            {
              "function": "compile",
              "line": 263
            },
            {
              "function": "append",
              "line": 266
            },
            {
              "function": "info",
              "line": 269
            },
            {
              "function": "info",
              "line": 300
            },
            {
              "function": "info",
              "line": 358
            },
            {
              "function": "error",
              "line": 384
            },
            {
              "function": "_extract_base_structure",
              "line": 73
            },
            {
              "function": "warning",
              "line": 103
            },
            {
              "function": "info",
              "line": 143
            },
            {
              "function": "error",
              "line": 171
            },
            {
              "function": "error",
              "line": 174
            },
            {
              "function": "add_node",
              "line": 232
            },
            {
              "function": "add_node",
              "line": 236
            },
            {
              "function": "add_conditional_edges",
              "line": 256
            },
            {
              "function": "len",
              "line": 267
            },
            {
              "function": "error",
              "line": 321
            },
            {
              "function": "add_node",
              "line": 328
            },
            {
              "function": "add_edge",
              "line": 338
            },
            {
              "function": "add_conditional_routing",
              "line": 351
            },
            {
              "function": "warning",
              "line": 372
            },
            {
              "function": "max",
              "line": 377
            },
            {
              "function": "len",
              "line": 379
            },
            {
              "function": "info",
              "line": 381
            },
            {
              "function": "len",
              "line": 392
            },
            {
              "function": "list",
              "line": 393
            },
            {
              "function": "list",
              "line": 394
            },
            {
              "function": "len",
              "line": 396
            },
            {
              "function": "list",
              "line": 397
            },
            {
              "function": "len",
              "line": 399
            },
            {
              "function": "join",
              "line": 443
            },
            {
              "function": "add_edge",
              "line": 242
            },
            {
              "function": "add_edge",
              "line": 244
            },
            {
              "function": "add_edge",
              "line": 250
            },
            {
              "function": "add_edge",
              "line": 252
            },
            {
              "function": "keys",
              "line": 393
            },
            {
              "function": "keys",
              "line": 394
            },
            {
              "function": "len",
              "line": 395
            },
            {
              "function": "len",
              "line": 395
            },
            {
              "function": "keys",
              "line": 397
            },
            {
              "function": "append",
              "line": 429
            },
            {
              "function": "items",
              "line": 440
            },
            {
              "function": "append",
              "line": 472
            },
            {
              "function": "join",
              "line": 473
            },
            {
              "function": "ValueError",
              "line": 476
            },
            {
              "function": "items",
              "line": 349
            },
            {
              "function": "append",
              "line": 434
            },
            {
              "function": "append",
              "line": 436
            },
            {
              "function": "append",
              "line": 441
            },
            {
              "function": "append",
              "line": 458
            },
            {
              "function": "append",
              "line": 465
            },
            {
              "function": "items",
              "line": 469
            },
            {
              "function": "append",
              "line": 470
            }
          ]
        },
        "langgraph_system/extensions/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "tool_discovery",
              "names": [
                "ToolRegistry",
                "tool",
                "get_tool_registry"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "approval_manager",
              "names": [
                "ApprovalManager"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "persistent_memory",
              "names": [
                "PersistentAgentMemory"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dynamic_workflow",
              "names": [
                "DynamicWorkflowManager"
              ],
              "line": 9
            }
          ],
          "calls": []
        },
        "langgraph_system/extensions/approval_manager.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 36,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "websocket_manager",
                "timeout_seconds"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "_format_plan_for_ui",
              "line": 155,
              "async": false,
              "calls": [
                "asdict",
                "isinstance",
                "vars",
                "_format_step",
                "hasattr",
                "str"
              ],
              "parameters": [
                "self",
                "plan"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "_format_step",
              "line": 176,
              "async": false,
              "calls": [
                "asdict",
                "vars",
                "hasattr",
                "get",
                "str"
              ],
              "parameters": [
                "self",
                "step"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_approval_status",
              "line": 218,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "approval_id"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_approval_history",
              "line": 224,
              "async": false,
              "calls": [
                "sort"
              ],
              "parameters": [
                "self",
                "client_id",
                "limit"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "cleanup_expired",
              "line": 253,
              "async": false,
              "calls": [
                "items",
                "now",
                "cancel",
                "info",
                "done",
                "len",
                "append"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "get_pending_approvals",
              "line": 276,
              "async": false,
              "calls": [
                "values"
              ],
              "parameters": [
                "self",
                "client_id"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            }
          ],
          "classes": [
            {
              "name": "ApprovalRequest",
              "line": 17,
              "methods": [],
              "bases": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            },
            {
              "name": "ApprovalManager",
              "line": 30,
              "methods": [
                "__init__",
                "_format_plan_for_ui",
                "_format_step",
                "get_approval_status",
                "get_approval_history",
                "cleanup_expired",
                "get_pending_approvals"
              ],
              "bases": [],
              "file": "langgraph_system/extensions/approval_manager.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Literal",
                "Optional",
                "List"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass",
                "asdict"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "str",
              "line": 69
            },
            {
              "function": "ApprovalRequest",
              "line": 73
            },
            {
              "function": "Future",
              "line": 86
            },
            {
              "function": "isinstance",
              "line": 157
            },
            {
              "function": "hasattr",
              "line": 178
            },
            {
              "function": "sort",
              "line": 236
            },
            {
              "function": "now",
              "line": 255
            },
            {
              "function": "items",
              "line": 258
            },
            {
              "function": "info",
              "line": 274
            },
            {
              "function": "uuid4",
              "line": 69
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "append",
              "line": 117
            },
            {
              "function": "_format_plan_for_ui",
              "line": 130
            },
            {
              "function": "isoformat",
              "line": 132
            },
            {
              "function": "hasattr",
              "line": 163
            },
            {
              "function": "str",
              "line": 188
            },
            {
              "function": "warning",
              "line": 206
            },
            {
              "function": "done",
              "line": 211
            },
            {
              "function": "set_result",
              "line": 212
            },
            {
              "function": "info",
              "line": 213
            },
            {
              "function": "handle_user_response",
              "line": 241
            },
            {
              "function": "handle_user_response",
              "line": 248
            },
            {
              "function": "handle_user_response",
              "line": 300
            },
            {
              "function": "now",
              "line": 77
            },
            {
              "function": "_send_approval_request_to_ui",
              "line": 91
            },
            {
              "function": "wait_for",
              "line": 95
            },
            {
              "function": "warning",
              "line": 104
            },
            {
              "function": "error",
              "line": 108
            },
            {
              "function": "send_json",
              "line": 153
            },
            {
              "function": "hasattr",
              "line": 179
            },
            {
              "function": "asdict",
              "line": 179
            },
            {
              "function": "vars",
              "line": 179
            },
            {
              "function": "get",
              "line": 181
            },
            {
              "function": "get",
              "line": 182
            },
            {
              "function": "get",
              "line": 183
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "append",
              "line": 261
            },
            {
              "function": "values",
              "line": 279
            },
            {
              "function": "now",
              "line": 78
            },
            {
              "function": "timedelta",
              "line": 78
            },
            {
              "function": "_format_step",
              "line": 161
            },
            {
              "function": "str",
              "line": 173
            },
            {
              "function": "len",
              "line": 274
            },
            {
              "function": "hasattr",
              "line": 167
            },
            {
              "function": "asdict",
              "line": 167
            },
            {
              "function": "vars",
              "line": 167
            },
            {
              "function": "get",
              "line": 213
            },
            {
              "function": "done",
              "line": 266
            },
            {
              "function": "cancel",
              "line": 267
            },
            {
              "function": "str",
              "line": 108
            }
          ]
        },
        "langgraph_system/extensions/tool_discovery.py": {
          "functions": [
            {
              "name": "tool",
              "line": 18,
              "async": false,
              "calls": [],
              "parameters": [
                "name",
                "description",
                "tags"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_tool_registry",
              "line": 313,
              "async": false,
              "calls": [],
              "parameters": [],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "decorator",
              "line": 27,
              "async": false,
              "calls": [],
              "parameters": [
                "func"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "__init__",
              "line": 41,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "auto_discover_tools",
              "line": 47,
              "async": false,
              "calls": [
                "_create_tool_from_decorated",
                "getmembers",
                "_create_tool_from_prefix",
                "hasattr",
                "info",
                "register_tool",
                "append",
                "startswith"
              ],
              "parameters": [
                "self",
                "agent_instance"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_create_tool_from_decorated",
              "line": 76,
              "async": false,
              "calls": [
                "_extract_parameters",
                "ToolDefinition",
                "getattr"
              ],
              "parameters": [
                "self",
                "method",
                "agent_name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_create_tool_from_prefix",
              "line": 87,
              "async": false,
              "calls": [
                "_extract_parameters",
                "ToolDefinition",
                "replace"
              ],
              "parameters": [
                "self",
                "method",
                "agent_name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_extract_parameters",
              "line": 99,
              "async": false,
              "calls": [
                "items",
                "signature",
                "get_type_hints",
                "_python_type_to_json_type"
              ],
              "parameters": [
                "self",
                "method"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "_python_type_to_json_type",
              "line": 132,
              "async": false,
              "calls": [
                "hasattr",
                "get"
              ],
              "parameters": [
                "self",
                "python_type"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "register_tool",
              "line": 153,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "tool",
                "shared"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "discover_tools_for_agent",
              "line": 173,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "agent_name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_tool_schema",
              "line": 232,
              "async": false,
              "calls": [
                "get",
                "items"
              ],
              "parameters": [
                "self",
                "tool_name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "list_all_tools",
              "line": 253,
              "async": false,
              "calls": [
                "keys",
                "get_tool_schema"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "get_usage_stats",
              "line": 260,
              "async": false,
              "calls": [
                "get"
              ],
              "parameters": [
                "self",
                "tool_name"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "export_tools",
              "line": 266,
              "async": false,
              "calls": [
                "ValueError",
                "values",
                "asdict",
                "dump",
                "dumps"
              ],
              "parameters": [
                "self",
                "format"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            },
            {
              "name": "import_tools",
              "line": 283,
              "async": false,
              "calls": [
                "ValueError",
                "loads",
                "ToolDefinition",
                "clear",
                "get",
                "safe_load"
              ],
              "parameters": [
                "self",
                "data",
                "format"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            }
          ],
          "classes": [
            {
              "name": "ToolRegistry",
              "line": 36,
              "methods": [
                "__init__",
                "auto_discover_tools",
                "_create_tool_from_decorated",
                "_create_tool_from_prefix",
                "_extract_parameters",
                "_python_type_to_json_type",
                "register_tool",
                "discover_tools_for_agent",
                "get_tool_schema",
                "list_all_tools",
                "get_usage_stats",
                "export_tools",
                "import_tools"
              ],
              "bases": [],
              "file": "langgraph_system/extensions/tool_discovery.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "inspect",
              "names": [
                "inspect"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Callable",
                "Any",
                "Optional",
                "get_type_hints"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "functools",
              "names": [
                "wraps"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "asdict"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "ToolDefinition"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 228
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 278
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 288
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 15
            },
            {
              "function": "ToolRegistry",
              "line": 310
            },
            {
              "function": "getmembers",
              "line": 59
            },
            {
              "function": "ToolDefinition",
              "line": 78
            },
            {
              "function": "replace",
              "line": 89
            },
            {
              "function": "ToolDefinition",
              "line": 90
            },
            {
              "function": "signature",
              "line": 101
            },
            {
              "function": "items",
              "line": 109
            },
            {
              "function": "hasattr",
              "line": 147
            },
            {
              "function": "get",
              "line": 151
            },
            {
              "function": "clear",
              "line": 294
            },
            {
              "function": "clear",
              "line": 295
            },
            {
              "function": "clear",
              "line": 296
            },
            {
              "function": "get",
              "line": 299
            },
            {
              "function": "get",
              "line": 304
            },
            {
              "function": "get",
              "line": 305
            },
            {
              "function": "get",
              "line": 306
            },
            {
              "function": "hasattr",
              "line": 63
            },
            {
              "function": "get_type_hints",
              "line": 105
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "append",
              "line": 162
            },
            {
              "function": "ValueError",
              "line": 198
            },
            {
              "function": "time",
              "line": 205
            },
            {
              "function": "iscoroutinefunction",
              "line": 210
            },
            {
              "function": "get_tool_schema",
              "line": 256
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "dumps",
              "line": 276
            },
            {
              "function": "loads",
              "line": 286
            },
            {
              "function": "ToolDefinition",
              "line": 301
            },
            {
              "function": "_create_tool_from_decorated",
              "line": 64
            },
            {
              "function": "startswith",
              "line": 66
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "register_tool",
              "line": 71
            },
            {
              "function": "info",
              "line": 72
            },
            {
              "function": "_extract_parameters",
              "line": 81
            },
            {
              "function": "getattr",
              "line": 84
            },
            {
              "function": "_extract_parameters",
              "line": 93
            },
            {
              "function": "_python_type_to_json_type",
              "line": 122
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "callable",
              "line": 213
            },
            {
              "function": "error",
              "line": 223
            },
            {
              "function": "keys",
              "line": 257
            },
            {
              "function": "asdict",
              "line": 269
            },
            {
              "function": "dump",
              "line": 279
            },
            {
              "function": "ValueError",
              "line": 281
            },
            {
              "function": "safe_load",
              "line": 289
            },
            {
              "function": "ValueError",
              "line": 291
            },
            {
              "function": "_create_tool_from_prefix",
              "line": 67
            },
            {
              "function": "append",
              "line": 181
            },
            {
              "function": "callable",
              "line": 211
            },
            {
              "function": "time",
              "line": 229
            },
            {
              "function": "values",
              "line": 269
            },
            {
              "function": "items",
              "line": 245
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "str",
              "line": 223
            }
          ]
        },
        "langgraph_system/extensions/persistent_memory.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 35,
              "async": false,
              "calls": [
                "_init_vector_store",
                "warning",
                "OpenAIEmbeddings",
                "_init_sqlite"
              ],
              "parameters": [
                "self",
                "agent_name",
                "db_path",
                "vector_store_path",
                "embedding_model"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_init_sqlite",
              "line": 71,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_init_vector_store",
              "line": 136,
              "async": false,
              "calls": [
                "exists",
                "Path",
                "info",
                "error",
                "load_local",
                "_create_new_vector_store",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_create_new_vector_store",
              "line": 158,
              "async": false,
              "calls": [
                "now",
                "error",
                "info",
                "from_texts",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "store_memory",
              "line": 175,
              "async": false,
              "calls": [
                "execute",
                "now",
                "commit",
                "pop",
                "_save_vector_store",
                "close",
                "cursor",
                "dumps",
                "error",
                "connect",
                "len",
                "append",
                "add_texts",
                "str"
              ],
              "parameters": [
                "self",
                "content",
                "memory_type",
                "importance",
                "metadata",
                "session_id"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "recall_similar",
              "line": 240,
              "async": false,
              "calls": [
                "execute",
                "get",
                "loads",
                "now",
                "fromisoformat",
                "_update_access_counts",
                "join",
                "fetchall",
                "close",
                "cursor",
                "error",
                "similarity_search_with_score",
                "connect",
                "extend",
                "append",
                "len",
                "MemoryEntry",
                "str"
              ],
              "parameters": [
                "self",
                "query",
                "k",
                "memory_types",
                "min_importance"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "learn_pattern",
              "line": 367,
              "async": false,
              "calls": [
                "execute",
                "md5",
                "fetchone",
                "commit",
                "close",
                "cursor",
                "encode",
                "dumps",
                "connect",
                "hexdigest"
              ],
              "parameters": [
                "self",
                "pattern",
                "solution",
                "success",
                "metadata"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_learned_solution",
              "line": 426,
              "async": false,
              "calls": [
                "execute",
                "md5",
                "fetchone",
                "close",
                "cursor",
                "info",
                "encode",
                "connect",
                "hexdigest"
              ],
              "parameters": [
                "self",
                "pattern",
                "min_success_rate"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "record_agent_interaction",
              "line": 454,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self",
                "to_agent",
                "interaction_type",
                "content",
                "result",
                "session_id"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_interaction_history",
              "line": 475,
              "async": false,
              "calls": [
                "execute",
                "fetchall",
                "close",
                "cursor",
                "connect",
                "append"
              ],
              "parameters": [
                "self",
                "with_agent",
                "limit"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_update_access_counts",
              "line": 516,
              "async": false,
              "calls": [
                "execute",
                "commit",
                "close",
                "cursor",
                "connect"
              ],
              "parameters": [
                "self",
                "memory_ids"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "_save_vector_store",
              "line": 536,
              "async": false,
              "calls": [
                "mkdir",
                "Path",
                "error",
                "save_local",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "consolidate_memories",
              "line": 545,
              "async": false,
              "calls": [
                "execute",
                "now",
                "timedelta",
                "commit",
                "close",
                "cursor",
                "info",
                "connect"
              ],
              "parameters": [
                "self",
                "max_age_days"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            },
            {
              "name": "get_memory_stats",
              "line": 567,
              "async": false,
              "calls": [
                "execute",
                "fetchone",
                "fetchall",
                "close",
                "cursor",
                "connect",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            }
          ],
          "classes": [
            {
              "name": "PersistentAgentMemory",
              "line": 30,
              "methods": [
                "__init__",
                "_init_sqlite",
                "_init_vector_store",
                "_create_new_vector_store",
                "store_memory",
                "recall_similar",
                "learn_pattern",
                "get_learned_solution",
                "record_agent_interaction",
                "get_interaction_history",
                "_update_access_counts",
                "_save_vector_store",
                "consolidate_memories",
                "get_memory_stats"
              ],
              "bases": [],
              "file": "langgraph_system/extensions/persistent_memory.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sqlite3",
              "names": [
                "sqlite3"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "pickle",
              "names": [
                "pickle"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "Literal"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "numpy",
              "names": [
                "numpy"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "state",
              "names": [
                "MemoryEntry"
              ],
              "line": 25
            },
            {
              "type": "import",
              "module": "faiss",
              "names": [
                "faiss"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "langchain_openai",
              "names": [
                "OpenAIEmbeddings"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "langchain_community.vectorstores",
              "names": [
                "FAISS"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 380
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 432
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 27
            },
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "warning",
              "line": 23
            },
            {
              "function": "_init_sqlite",
              "line": 56
            },
            {
              "function": "connect",
              "line": 73
            },
            {
              "function": "cursor",
              "line": 74
            },
            {
              "function": "execute",
              "line": 77
            },
            {
              "function": "execute",
              "line": 93
            },
            {
              "function": "execute",
              "line": 109
            },
            {
              "function": "execute",
              "line": 123
            },
            {
              "function": "execute",
              "line": 128
            },
            {
              "function": "commit",
              "line": 133
            },
            {
              "function": "close",
              "line": 134
            },
            {
              "function": "Path",
              "line": 141
            },
            {
              "function": "exists",
              "line": 143
            },
            {
              "function": "connect",
              "line": 189
            },
            {
              "function": "cursor",
              "line": 190
            },
            {
              "function": "execute",
              "line": 192
            },
            {
              "function": "commit",
              "line": 206
            },
            {
              "function": "close",
              "line": 207
            },
            {
              "function": "append",
              "line": 227
            },
            {
              "function": "_update_access_counts",
              "line": 326
            },
            {
              "function": "recall_similar",
              "line": 351
            },
            {
              "function": "hexdigest",
              "line": 381
            },
            {
              "function": "connect",
              "line": 383
            },
            {
              "function": "cursor",
              "line": 384
            },
            {
              "function": "execute",
              "line": 387
            },
            {
              "function": "fetchone",
              "line": 393
            },
            {
              "function": "commit",
              "line": 422
            },
            {
              "function": "close",
              "line": 423
            },
            {
              "function": "hexdigest",
              "line": 433
            },
            {
              "function": "connect",
              "line": 435
            },
            {
              "function": "cursor",
              "line": 436
            },
            {
              "function": "execute",
              "line": 438
            },
            {
              "function": "fetchone",
              "line": 444
            },
            {
              "function": "close",
              "line": 445
            },
            {
              "function": "connect",
              "line": 463
            },
            {
              "function": "cursor",
              "line": 464
            },
            {
              "function": "execute",
              "line": 466
            },
            {
              "function": "commit",
              "line": 472
            },
            {
              "function": "close",
              "line": 473
            },
            {
              "function": "connect",
              "line": 481
            },
            {
              "function": "cursor",
              "line": 482
            },
            {
              "function": "fetchall",
              "line": 502
            },
            {
              "function": "close",
              "line": 513
            },
            {
              "function": "connect",
              "line": 521
            },
            {
              "function": "cursor",
              "line": 522
            },
            {
              "function": "commit",
              "line": 533
            },
            {
              "function": "close",
              "line": 534
            },
            {
              "function": "connect",
              "line": 547
            },
            {
              "function": "cursor",
              "line": 548
            },
            {
              "function": "execute",
              "line": 553
            },
            {
              "function": "commit",
              "line": 562
            },
            {
              "function": "close",
              "line": 563
            },
            {
              "function": "info",
              "line": 565
            },
            {
              "function": "connect",
              "line": 569
            },
            {
              "function": "cursor",
              "line": 570
            },
            {
              "function": "execute",
              "line": 575
            },
            {
              "function": "fetchall",
              "line": 583
            },
            {
              "function": "execute",
              "line": 590
            },
            {
              "function": "fetchone",
              "line": 596
            },
            {
              "function": "execute",
              "line": 604
            },
            {
              "function": "close",
              "line": 612
            },
            {
              "function": "len",
              "line": 621
            },
            {
              "function": "_create_new_vector_store",
              "line": 156
            },
            {
              "function": "from_texts",
              "line": 165
            },
            {
              "function": "info",
              "line": 170
            },
            {
              "function": "len",
              "line": 235
            },
            {
              "function": "pop",
              "line": 236
            },
            {
              "function": "len",
              "line": 290
            },
            {
              "function": "connect",
              "line": 291
            },
            {
              "function": "cursor",
              "line": 292
            },
            {
              "function": "append",
              "line": 302
            },
            {
              "function": "append",
              "line": 303
            },
            {
              "function": "execute",
              "line": 305
            },
            {
              "function": "fetchall",
              "line": 313
            },
            {
              "function": "close",
              "line": 323
            },
            {
              "function": "append",
              "line": 356
            },
            {
              "function": "execute",
              "line": 400
            },
            {
              "function": "execute",
              "line": 408
            },
            {
              "function": "info",
              "line": 449
            },
            {
              "function": "execute",
              "line": 485
            },
            {
              "function": "execute",
              "line": 493
            },
            {
              "function": "append",
              "line": 503
            },
            {
              "function": "now",
              "line": 550
            },
            {
              "function": "timedelta",
              "line": 550
            },
            {
              "function": "fetchone",
              "line": 610
            },
            {
              "function": "OpenAIEmbeddings",
              "line": 62
            },
            {
              "function": "_init_vector_store",
              "line": 63
            },
            {
              "function": "load_local",
              "line": 146
            },
            {
              "function": "info",
              "line": 151
            },
            {
              "function": "error",
              "line": 172
            },
            {
              "function": "dumps",
              "line": 201
            },
            {
              "function": "add_texts",
              "line": 212
            },
            {
              "function": "_save_vector_store",
              "line": 222
            },
            {
              "function": "now",
              "line": 231
            },
            {
              "function": "similarity_search_with_score",
              "line": 264
            },
            {
              "function": "join",
              "line": 298
            },
            {
              "function": "append",
              "line": 299
            },
            {
              "function": "extend",
              "line": 300
            },
            {
              "function": "append",
              "line": 314
            },
            {
              "function": "get",
              "line": 326
            },
            {
              "function": "md5",
              "line": 381
            },
            {
              "function": "md5",
              "line": 433
            },
            {
              "function": "execute",
              "line": 526
            },
            {
              "function": "mkdir",
              "line": 540
            },
            {
              "function": "save_local",
              "line": 541
            },
            {
              "function": "warning",
              "line": 65
            },
            {
              "function": "str",
              "line": 147
            },
            {
              "function": "error",
              "line": 153
            },
            {
              "function": "_create_new_vector_store",
              "line": 154
            },
            {
              "function": "error",
              "line": 224
            },
            {
              "function": "append",
              "line": 274
            },
            {
              "function": "error",
              "line": 287
            },
            {
              "function": "MemoryEntry",
              "line": 314
            },
            {
              "function": "encode",
              "line": 381
            },
            {
              "function": "dumps",
              "line": 419
            },
            {
              "function": "encode",
              "line": 433
            },
            {
              "function": "str",
              "line": 541
            },
            {
              "function": "error",
              "line": 543
            },
            {
              "function": "get",
              "line": 271
            },
            {
              "function": "MemoryEntry",
              "line": 274
            },
            {
              "function": "len",
              "line": 283
            },
            {
              "function": "len",
              "line": 298
            },
            {
              "function": "join",
              "line": 308
            },
            {
              "function": "isoformat",
              "line": 361
            },
            {
              "function": "get",
              "line": 362
            },
            {
              "function": "str",
              "line": 168
            },
            {
              "function": "get",
              "line": 269
            },
            {
              "function": "len",
              "line": 311
            },
            {
              "function": "fromisoformat",
              "line": 317
            },
            {
              "function": "loads",
              "line": 319
            },
            {
              "function": "Path",
              "line": 540
            },
            {
              "function": "now",
              "line": 168
            },
            {
              "function": "str",
              "line": 218
            },
            {
              "function": "get",
              "line": 276
            },
            {
              "function": "fromisoformat",
              "line": 277
            },
            {
              "function": "get",
              "line": 278
            },
            {
              "function": "get",
              "line": 280
            },
            {
              "function": "now",
              "line": 218
            },
            {
              "function": "get",
              "line": 277
            },
            {
              "function": "str",
              "line": 277
            },
            {
              "function": "now",
              "line": 277
            }
          ]
        },
        "api/settings_endpoint.py": {
          "functions": [],
          "classes": [
            {
              "name": "SettingsUpdateRequest",
              "line": 22,
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "file": "api/settings_endpoint.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "APIRouter",
                "HTTPException"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pydantic",
              "names": [
                "BaseModel"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Optional",
                "Dict",
                "Any"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "config.settings",
              "names": [
                "Settings"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 14
            },
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "APIRouter",
              "line": 19
            },
            {
              "function": "get",
              "line": 27
            },
            {
              "function": "post",
              "line": 45
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "post",
              "line": 136
            },
            {
              "function": "get",
              "line": 192
            },
            {
              "function": "dirname",
              "line": 14
            },
            {
              "function": "dirname",
              "line": 14
            },
            {
              "function": "update_from_vscode",
              "line": 64
            },
            {
              "function": "info",
              "line": 66
            },
            {
              "function": "info",
              "line": 180
            },
            {
              "function": "append",
              "line": 210
            },
            {
              "function": "append",
              "line": 212
            },
            {
              "function": "append",
              "line": 216
            },
            {
              "function": "append",
              "line": 218
            },
            {
              "function": "append",
              "line": 242
            },
            {
              "function": "append",
              "line": 244
            },
            {
              "function": "append",
              "line": 248
            },
            {
              "function": "append",
              "line": 250
            },
            {
              "function": "append",
              "line": 254
            },
            {
              "function": "to_dict",
              "line": 261
            },
            {
              "function": "abspath",
              "line": 14
            },
            {
              "function": "to_dict",
              "line": 38
            },
            {
              "function": "error",
              "line": 41
            },
            {
              "function": "HTTPException",
              "line": 42
            },
            {
              "function": "to_dict",
              "line": 71
            },
            {
              "function": "error",
              "line": 74
            },
            {
              "function": "HTTPException",
              "line": 75
            },
            {
              "function": "to_dict",
              "line": 185
            },
            {
              "function": "error",
              "line": 188
            },
            {
              "function": "HTTPException",
              "line": 189
            },
            {
              "function": "append",
              "line": 224
            },
            {
              "function": "append",
              "line": 228
            },
            {
              "function": "append",
              "line": 232
            },
            {
              "function": "append",
              "line": 234
            },
            {
              "function": "append",
              "line": 238
            },
            {
              "function": "len",
              "line": 257
            },
            {
              "function": "len",
              "line": 258
            },
            {
              "function": "str",
              "line": 42
            },
            {
              "function": "len",
              "line": 66
            },
            {
              "function": "len",
              "line": 70
            },
            {
              "function": "str",
              "line": 75
            },
            {
              "function": "str",
              "line": 189
            },
            {
              "function": "join",
              "line": 224
            }
          ]
        },
        "api/server_langgraph.py": {
          "functions": [
            {
              "name": "main",
              "line": 793,
              "async": false,
              "calls": [
                "socket",
                "warning",
                "range",
                "exit",
                "graceful_shutdown",
                "sleep",
                "check_server_running",
                "info",
                "run",
                "close",
                "error",
                "post",
                "connect_ex"
              ],
              "parameters": [],
              "decorators": [],
              "file": "api/server_langgraph.py"
            },
            {
              "name": "__init__",
              "line": 78,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "api/server_langgraph.py"
            },
            {
              "name": "disconnect",
              "line": 91,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "client_id"
              ],
              "decorators": [],
              "file": "api/server_langgraph.py"
            },
            {
              "name": "check_server_running",
              "line": 800,
              "async": false,
              "calls": [
                "close",
                "socket",
                "connect_ex"
              ],
              "parameters": [
                "port"
              ],
              "decorators": [],
              "file": "api/server_langgraph.py"
            },
            {
              "name": "graceful_shutdown",
              "line": 807,
              "async": false,
              "calls": [
                "info",
                "sleep",
                "post"
              ],
              "parameters": [
                "port"
              ],
              "decorators": [],
              "file": "api/server_langgraph.py"
            }
          ],
          "classes": [
            {
              "name": "ConnectionManager",
              "line": 77,
              "methods": [
                "__init__",
                "disconnect"
              ],
              "bases": [],
              "file": "api/server_langgraph.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "FastAPI",
                "WebSocket",
                "WebSocketDisconnect",
                "HTTPException"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "starlette.websockets",
              "names": [
                "WebSocketState"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "fastapi.middleware.cors",
              "names": [
                "CORSMiddleware"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "contextlib",
              "names": [
                "asynccontextmanager"
              ],
              "line": 23
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 25
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 26
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 27
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "Optional",
                "Set"
              ],
              "line": 28
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 29
            },
            {
              "type": "import",
              "module": "uvicorn",
              "names": [
                "uvicorn"
              ],
              "line": 30
            },
            {
              "type": "from_import",
              "module": "langgraph_system",
              "names": [
                "create_agent_workflow",
                "ExtendedAgentState",
                "ToolRegistry",
                "ApprovalManager",
                "PersistentAgentMemory",
                "DynamicWorkflowManager"
              ],
              "line": 33
            },
            {
              "type": "from_import",
              "module": "__version__",
              "names": [
                "__version__",
                "__version_display__",
                "__release_tag__"
              ],
              "line": 61
            },
            {
              "type": "from_import",
              "module": "models_endpoint",
              "names": [
                "router"
              ],
              "line": 44
            },
            {
              "type": "from_import",
              "module": "settings_endpoint",
              "names": [
                "router"
              ],
              "line": 53
            },
            {
              "type": "import",
              "module": "socket",
              "names": [
                "socket"
              ],
              "line": 795
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 796
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 797
            },
            {
              "type": "from_import",
              "module": "api.models_endpoint",
              "names": [
                "router"
              ],
              "line": 47
            },
            {
              "type": "from_import",
              "module": "api.settings_endpoint",
              "names": [
                "router"
              ],
              "line": 56
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 204
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 738
            },
            {
              "type": "from_import",
              "module": "backend.api.models_endpoint",
              "names": [
                "router"
              ],
              "line": 49
            },
            {
              "type": "from_import",
              "module": "backend.api.settings_endpoint",
              "names": [
                "router"
              ],
              "line": 58
            }
          ],
          "calls": [
            {
              "function": "dirname",
              "line": 10
            },
            {
              "function": "dirname",
              "line": 11
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "basicConfig",
              "line": 64
            },
            {
              "function": "getLogger",
              "line": 69
            },
            {
              "function": "info",
              "line": 72
            },
            {
              "function": "info",
              "line": 73
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "ConnectionManager",
              "line": 151
            },
            {
              "function": "FastAPI",
              "line": 210
            },
            {
              "function": "add_middleware",
              "line": 217
            },
            {
              "function": "include_router",
              "line": 226
            },
            {
              "function": "info",
              "line": 227
            },
            {
              "function": "include_router",
              "line": 230
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "get",
              "line": 234
            },
            {
              "function": "get",
              "line": 243
            },
            {
              "function": "get",
              "line": 263
            },
            {
              "function": "get",
              "line": 285
            },
            {
              "function": "get",
              "line": 295
            },
            {
              "function": "post",
              "line": 312
            },
            {
              "function": "websocket",
              "line": 327
            },
            {
              "function": "post",
              "line": 749
            },
            {
              "function": "post",
              "line": 762
            },
            {
              "function": "post",
              "line": 779
            },
            {
              "function": "abspath",
              "line": 10
            },
            {
              "function": "insert",
              "line": 16
            },
            {
              "function": "insert",
              "line": 18
            },
            {
              "function": "get_graph_info",
              "line": 292
            },
            {
              "function": "info",
              "line": 546
            },
            {
              "function": "get",
              "line": 579
            },
            {
              "function": "info",
              "line": 671
            },
            {
              "function": "info",
              "line": 674
            },
            {
              "function": "info",
              "line": 675
            },
            {
              "function": "info",
              "line": 676
            },
            {
              "function": "add_edge",
              "line": 769
            },
            {
              "function": "info",
              "line": 782
            },
            {
              "function": "create_task",
              "line": 783
            },
            {
              "function": "info",
              "line": 789
            },
            {
              "function": "_exit",
              "line": 790
            },
            {
              "function": "check_server_running",
              "line": 824
            },
            {
              "function": "info",
              "line": 843
            },
            {
              "function": "run",
              "line": 846
            },
            {
              "function": "main",
              "line": 857
            },
            {
              "function": "info",
              "line": 89
            },
            {
              "function": "list",
              "line": 131
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "info",
              "line": 164
            },
            {
              "function": "info",
              "line": 165
            },
            {
              "function": "info",
              "line": 168
            },
            {
              "function": "info",
              "line": 183
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "info",
              "line": 188
            },
            {
              "function": "info",
              "line": 192
            },
            {
              "function": "info",
              "line": 194
            },
            {
              "function": "info",
              "line": 195
            },
            {
              "function": "info",
              "line": 196
            },
            {
              "function": "info",
              "line": 201
            },
            {
              "function": "isoformat",
              "line": 238
            },
            {
              "function": "HTTPException",
              "line": 247
            },
            {
              "function": "discover_tools_for_agent",
              "line": 252
            },
            {
              "function": "HTTPException",
              "line": 267
            },
            {
              "function": "items",
              "line": 280
            },
            {
              "function": "HTTPException",
              "line": 289
            },
            {
              "function": "HTTPException",
              "line": 299
            },
            {
              "function": "visualize_graph",
              "line": 303
            },
            {
              "function": "HTTPException",
              "line": 316
            },
            {
              "function": "handle_user_response",
              "line": 319
            },
            {
              "function": "HTTPException",
              "line": 324
            },
            {
              "function": "connect",
              "line": 332
            },
            {
              "function": "str",
              "line": 337
            },
            {
              "function": "now",
              "line": 338
            },
            {
              "function": "info",
              "line": 347
            },
            {
              "function": "info",
              "line": 355
            },
            {
              "function": "get",
              "line": 530
            },
            {
              "function": "get",
              "line": 530
            },
            {
              "function": "info",
              "line": 535
            },
            {
              "function": "hasattr",
              "line": 552
            },
            {
              "function": "info",
              "line": 553
            },
            {
              "function": "get",
              "line": 554
            },
            {
              "function": "get",
              "line": 555
            },
            {
              "function": "get",
              "line": 559
            },
            {
              "function": "info",
              "line": 575
            },
            {
              "function": "info",
              "line": 580
            },
            {
              "function": "strip",
              "line": 583
            },
            {
              "function": "info",
              "line": 595
            },
            {
              "function": "info",
              "line": 605
            },
            {
              "function": "info",
              "line": 606
            },
            {
              "function": "update",
              "line": 612
            },
            {
              "function": "info",
              "line": 631
            },
            {
              "function": "error",
              "line": 664
            },
            {
              "function": "send_json",
              "line": 677
            },
            {
              "function": "info",
              "line": 685
            },
            {
              "function": "info",
              "line": 686
            },
            {
              "function": "info",
              "line": 687
            },
            {
              "function": "get",
              "line": 700
            },
            {
              "function": "append",
              "line": 726
            },
            {
              "function": "append",
              "line": 731
            },
            {
              "function": "HTTPException",
              "line": 753
            },
            {
              "function": "HTTPException",
              "line": 766
            },
            {
              "function": "HTTPException",
              "line": 777
            },
            {
              "function": "shutdown_server",
              "line": 783
            },
            {
              "function": "sleep",
              "line": 788
            },
            {
              "function": "socket",
              "line": 802
            },
            {
              "function": "connect_ex",
              "line": 803
            },
            {
              "function": "close",
              "line": 804
            },
            {
              "function": "info",
              "line": 825
            },
            {
              "function": "info",
              "line": 826
            },
            {
              "function": "graceful_shutdown",
              "line": 828
            },
            {
              "function": "accept",
              "line": 83
            },
            {
              "function": "now",
              "line": 86
            },
            {
              "function": "now",
              "line": 87
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "debug",
              "line": 103
            },
            {
              "function": "warning",
              "line": 110
            },
            {
              "function": "disconnect",
              "line": 111
            },
            {
              "function": "now",
              "line": 116
            },
            {
              "function": "debug",
              "line": 117
            },
            {
              "function": "keys",
              "line": 131
            },
            {
              "function": "disconnect",
              "line": 148
            },
            {
              "function": "create_agent_workflow",
              "line": 170
            },
            {
              "function": "error",
              "line": 180
            },
            {
              "function": "RuntimeError",
              "line": 181
            },
            {
              "function": "error",
              "line": 205
            },
            {
              "function": "error",
              "line": 206
            },
            {
              "function": "list_all_tools",
              "line": 259
            },
            {
              "function": "HTTPException",
              "line": 277
            },
            {
              "function": "get_memory_stats",
              "line": 281
            },
            {
              "function": "HTTPException",
              "line": 309
            },
            {
              "function": "uuid4",
              "line": 337
            },
            {
              "function": "send_json",
              "line": 348
            },
            {
              "function": "get",
              "line": 360
            },
            {
              "function": "info",
              "line": 362
            },
            {
              "function": "info",
              "line": 363
            },
            {
              "function": "info",
              "line": 364
            },
            {
              "function": "info",
              "line": 502
            },
            {
              "function": "disconnect",
              "line": 505
            },
            {
              "function": "error",
              "line": 521
            },
            {
              "function": "disconnect",
              "line": 523
            },
            {
              "function": "send_json",
              "line": 538
            },
            {
              "function": "info",
              "line": 556
            },
            {
              "function": "hasattr",
              "line": 560
            },
            {
              "function": "info",
              "line": 561
            },
            {
              "function": "get",
              "line": 562
            },
            {
              "function": "get",
              "line": 563
            },
            {
              "function": "get",
              "line": 567
            },
            {
              "function": "send_json",
              "line": 598
            },
            {
              "function": "copy",
              "line": 609
            },
            {
              "function": "info",
              "line": 625
            },
            {
              "function": "enumerate",
              "line": 626
            },
            {
              "function": "warning",
              "line": 629
            },
            {
              "function": "send_json",
              "line": 665
            },
            {
              "function": "execute",
              "line": 688
            },
            {
              "function": "send_json",
              "line": 711
            },
            {
              "function": "error",
              "line": 739
            },
            {
              "function": "error",
              "line": 740
            },
            {
              "function": "post",
              "line": 811
            },
            {
              "function": "info",
              "line": 829
            },
            {
              "function": "warning",
              "line": 831
            },
            {
              "function": "range",
              "line": 833
            },
            {
              "function": "send_json",
              "line": 115
            },
            {
              "function": "error",
              "line": 120
            },
            {
              "function": "disconnect",
              "line": 122
            },
            {
              "function": "debug",
              "line": 136
            },
            {
              "function": "append",
              "line": 137
            },
            {
              "function": "now",
              "line": 238
            },
            {
              "function": "get_tool_schema",
              "line": 255
            },
            {
              "function": "get_memory_stats",
              "line": 274
            },
            {
              "function": "receive_json",
              "line": 359
            },
            {
              "function": "info",
              "line": 367
            },
            {
              "function": "get",
              "line": 510
            },
            {
              "function": "info",
              "line": 518
            },
            {
              "function": "info",
              "line": 564
            },
            {
              "function": "hasattr",
              "line": 568
            },
            {
              "function": "hasattr",
              "line": 568
            },
            {
              "function": "info",
              "line": 569
            },
            {
              "function": "get",
              "line": 570
            },
            {
              "function": "get",
              "line": 571
            },
            {
              "function": "lower",
              "line": 583
            },
            {
              "function": "info",
              "line": 627
            },
            {
              "function": "ainvoke",
              "line": 635
            },
            {
              "function": "send_json",
              "line": 644
            },
            {
              "function": "error",
              "line": 656
            },
            {
              "function": "get",
              "line": 675
            },
            {
              "function": "get",
              "line": 675
            },
            {
              "function": "get",
              "line": 676
            },
            {
              "function": "isoformat",
              "line": 729
            },
            {
              "function": "get",
              "line": 733
            },
            {
              "function": "isoformat",
              "line": 734
            },
            {
              "function": "send_json",
              "line": 741
            },
            {
              "function": "info",
              "line": 813
            },
            {
              "function": "sleep",
              "line": 814
            },
            {
              "function": "error",
              "line": 839
            },
            {
              "function": "exit",
              "line": 840
            },
            {
              "function": "send_json",
              "line": 141
            },
            {
              "function": "error",
              "line": 143
            },
            {
              "function": "append",
              "line": 144
            },
            {
              "function": "len",
              "line": 188
            },
            {
              "function": "str",
              "line": 309
            },
            {
              "function": "uuid4",
              "line": 330
            },
            {
              "function": "get",
              "line": 366
            },
            {
              "function": "get",
              "line": 366
            },
            {
              "function": "handle_chat_message",
              "line": 370
            },
            {
              "function": "get",
              "line": 374
            },
            {
              "function": "get",
              "line": 375
            },
            {
              "function": "get",
              "line": 376
            },
            {
              "function": "info",
              "line": 378
            },
            {
              "function": "info",
              "line": 514
            },
            {
              "function": "len",
              "line": 553
            },
            {
              "function": "info",
              "line": 572
            },
            {
              "function": "len",
              "line": 587
            },
            {
              "function": "len",
              "line": 605
            },
            {
              "function": "send_json",
              "line": 657
            },
            {
              "function": "type",
              "line": 671
            },
            {
              "function": "get",
              "line": 687
            },
            {
              "function": "get",
              "line": 692
            },
            {
              "function": "get",
              "line": 693
            },
            {
              "function": "get",
              "line": 714
            },
            {
              "function": "check_server_running",
              "line": 834
            },
            {
              "function": "info",
              "line": 836
            },
            {
              "function": "type",
              "line": 184
            },
            {
              "function": "format_exc",
              "line": 206
            },
            {
              "function": "list",
              "line": 364
            },
            {
              "function": "error",
              "line": 381
            },
            {
              "function": "error",
              "line": 389
            },
            {
              "function": "hasattr",
              "line": 398
            },
            {
              "function": "items",
              "line": 401
            },
            {
              "function": "error",
              "line": 472
            },
            {
              "function": "info",
              "line": 481
            },
            {
              "function": "getattr",
              "line": 553
            },
            {
              "function": "len",
              "line": 561
            },
            {
              "function": "len",
              "line": 590
            },
            {
              "function": "len",
              "line": 625
            },
            {
              "function": "get",
              "line": 647
            },
            {
              "function": "get",
              "line": 695
            },
            {
              "function": "send_json",
              "line": 703
            },
            {
              "function": "get",
              "line": 719
            },
            {
              "function": "get",
              "line": 720
            },
            {
              "function": "get",
              "line": 721
            },
            {
              "function": "now",
              "line": 729
            },
            {
              "function": "now",
              "line": 734
            },
            {
              "function": "format_exc",
              "line": 740
            },
            {
              "function": "format_exc",
              "line": 744
            },
            {
              "function": "keys",
              "line": 364
            },
            {
              "function": "send_json",
              "line": 382
            },
            {
              "function": "send_json",
              "line": 390
            },
            {
              "function": "info",
              "line": 407
            },
            {
              "function": "info",
              "line": 418
            },
            {
              "function": "error",
              "line": 466
            },
            {
              "function": "send_json",
              "line": 473
            },
            {
              "function": "get",
              "line": 480
            },
            {
              "function": "get",
              "line": 480
            },
            {
              "function": "len",
              "line": 569
            },
            {
              "function": "get",
              "line": 649
            },
            {
              "function": "get",
              "line": 718
            },
            {
              "function": "total_seconds",
              "line": 716
            },
            {
              "function": "send_json",
              "line": 410
            },
            {
              "function": "info",
              "line": 434
            },
            {
              "function": "info",
              "line": 437
            },
            {
              "function": "info",
              "line": 457
            },
            {
              "function": "send_json",
              "line": 467
            },
            {
              "function": "send_json",
              "line": 486
            },
            {
              "function": "str",
              "line": 743
            },
            {
              "function": "ainvoke",
              "line": 438
            },
            {
              "function": "send_json",
              "line": 447
            },
            {
              "function": "error",
              "line": 460
            },
            {
              "function": "send_json",
              "line": 492
            },
            {
              "function": "send_json",
              "line": 495
            },
            {
              "function": "str",
              "line": 659
            },
            {
              "function": "send_json",
              "line": 461
            },
            {
              "function": "get",
              "line": 450
            },
            {
              "function": "get",
              "line": 452
            },
            {
              "function": "isoformat",
              "line": 453
            },
            {
              "function": "now",
              "line": 453
            },
            {
              "function": "str",
              "line": 463
            }
          ]
        },
        "api/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "api/models_endpoint.py": {
          "functions": [
            {
              "name": "load_models_from_config",
              "line": 19,
              "async": false,
              "calls": [
                "items",
                "dirname",
                "join",
                "open",
                "error",
                "get",
                "lower",
                "append",
                "safe_load"
              ],
              "parameters": [],
              "decorators": [],
              "file": "api/models_endpoint.py"
            },
            {
              "name": "load_models_from_available_json",
              "line": 83,
              "async": false,
              "calls": [
                "dirname",
                "load",
                "join",
                "open",
                "warning"
              ],
              "parameters": [],
              "decorators": [],
              "file": "api/models_endpoint.py"
            },
            {
              "name": "get_model_recommendations",
              "line": 102,
              "async": false,
              "calls": [
                "sorted",
                "lower",
                "replace"
              ],
              "parameters": [
                "provider",
                "models"
              ],
              "decorators": [],
              "file": "api/models_endpoint.py"
            },
            {
              "name": "get_latest_models",
              "line": 143,
              "async": false,
              "calls": [
                "sorted",
                "lower"
              ],
              "parameters": [
                "models",
                "limit"
              ],
              "decorators": [],
              "file": "api/models_endpoint.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "fastapi",
              "names": [
                "APIRouter",
                "HTTPException"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "yaml",
              "names": [
                "yaml"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Optional"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 14
            },
            {
              "function": "APIRouter",
              "line": 17
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "get",
              "line": 212
            },
            {
              "function": "get",
              "line": 240
            },
            {
              "function": "get",
              "line": 268
            },
            {
              "function": "post",
              "line": 294
            },
            {
              "function": "get",
              "line": 310
            },
            {
              "function": "join",
              "line": 21
            },
            {
              "function": "join",
              "line": 85
            },
            {
              "function": "sorted",
              "line": 146
            },
            {
              "function": "dirname",
              "line": 21
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "load_models_from_config",
              "line": 154
            },
            {
              "function": "load_models_from_available_json",
              "line": 155
            },
            {
              "function": "load_models_from_config",
              "line": 188
            },
            {
              "function": "load_models_from_available_json",
              "line": 189
            },
            {
              "function": "list",
              "line": 198
            },
            {
              "function": "load_models_from_config",
              "line": 216
            },
            {
              "function": "load_models_from_available_json",
              "line": 217
            },
            {
              "function": "list",
              "line": 226
            },
            {
              "function": "load_models_from_config",
              "line": 244
            },
            {
              "function": "load_models_from_available_json",
              "line": 245
            },
            {
              "function": "list",
              "line": 254
            },
            {
              "function": "load_models_from_config",
              "line": 272
            },
            {
              "function": "items",
              "line": 275
            },
            {
              "function": "info",
              "line": 581
            },
            {
              "function": "dirname",
              "line": 21
            },
            {
              "function": "open",
              "line": 24
            },
            {
              "function": "safe_load",
              "line": 25
            },
            {
              "function": "items",
              "line": 30
            },
            {
              "function": "items",
              "line": 63
            },
            {
              "function": "error",
              "line": 80
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "open",
              "line": 88
            },
            {
              "function": "load",
              "line": 89
            },
            {
              "function": "warning",
              "line": 99
            },
            {
              "function": "sorted",
              "line": 111
            },
            {
              "function": "list",
              "line": 171
            },
            {
              "function": "isoformat",
              "line": 174
            },
            {
              "function": "list",
              "line": 175
            },
            {
              "function": "sum",
              "line": 176
            },
            {
              "function": "error",
              "line": 181
            },
            {
              "function": "HTTPException",
              "line": 182
            },
            {
              "function": "extend",
              "line": 194
            },
            {
              "function": "extend",
              "line": 196
            },
            {
              "function": "set",
              "line": 198
            },
            {
              "function": "get_latest_models",
              "line": 203
            },
            {
              "function": "get_model_recommendations",
              "line": 204
            },
            {
              "function": "len",
              "line": 205
            },
            {
              "function": "error",
              "line": 209
            },
            {
              "function": "HTTPException",
              "line": 210
            },
            {
              "function": "extend",
              "line": 222
            },
            {
              "function": "extend",
              "line": 224
            },
            {
              "function": "set",
              "line": 226
            },
            {
              "function": "get_latest_models",
              "line": 231
            },
            {
              "function": "get_model_recommendations",
              "line": 232
            },
            {
              "function": "len",
              "line": 233
            },
            {
              "function": "error",
              "line": 237
            },
            {
              "function": "HTTPException",
              "line": 238
            },
            {
              "function": "extend",
              "line": 250
            },
            {
              "function": "extend",
              "line": 252
            },
            {
              "function": "set",
              "line": 254
            },
            {
              "function": "get_latest_models",
              "line": 259
            },
            {
              "function": "get_model_recommendations",
              "line": 260
            },
            {
              "function": "len",
              "line": 261
            },
            {
              "function": "error",
              "line": 265
            },
            {
              "function": "HTTPException",
              "line": 266
            },
            {
              "function": "len",
              "line": 287
            },
            {
              "function": "error",
              "line": 291
            },
            {
              "function": "HTTPException",
              "line": 292
            },
            {
              "function": "isoformat",
              "line": 302
            },
            {
              "function": "error",
              "line": 307
            },
            {
              "function": "HTTPException",
              "line": 308
            },
            {
              "function": "error",
              "line": 585
            },
            {
              "function": "HTTPException",
              "line": 586
            },
            {
              "function": "get",
              "line": 31
            },
            {
              "function": "dirname",
              "line": 85
            },
            {
              "function": "lower",
              "line": 146
            },
            {
              "function": "extend",
              "line": 164
            },
            {
              "function": "extend",
              "line": 168
            },
            {
              "function": "set",
              "line": 171
            },
            {
              "function": "keys",
              "line": 175
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "lower",
              "line": 108
            },
            {
              "function": "now",
              "line": 174
            },
            {
              "function": "len",
              "line": 176
            },
            {
              "function": "now",
              "line": 302
            },
            {
              "function": "lower",
              "line": 34
            },
            {
              "function": "append",
              "line": 48
            },
            {
              "function": "append",
              "line": 70
            },
            {
              "function": "replace",
              "line": 111
            },
            {
              "function": "lower",
              "line": 117
            },
            {
              "function": "lower",
              "line": 122
            },
            {
              "function": "values",
              "line": 176
            },
            {
              "function": "get",
              "line": 282
            },
            {
              "function": "lower",
              "line": 36
            },
            {
              "function": "lower",
              "line": 125
            },
            {
              "function": "lower",
              "line": 126
            },
            {
              "function": "str",
              "line": 182
            },
            {
              "function": "str",
              "line": 210
            },
            {
              "function": "str",
              "line": 238
            },
            {
              "function": "str",
              "line": 266
            },
            {
              "function": "str",
              "line": 292
            },
            {
              "function": "str",
              "line": 308
            },
            {
              "function": "str",
              "line": 586
            },
            {
              "function": "get",
              "line": 72
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "lower",
              "line": 111
            },
            {
              "function": "lower",
              "line": 38
            },
            {
              "function": "lower",
              "line": 38
            },
            {
              "function": "append",
              "line": 58
            }
          ]
        },
        "services/diagram_service.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 38,
              "async": false,
              "calls": [
                "info",
                "Path",
                "mkdir"
              ],
              "parameters": [
                "self",
                "output_dir"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_flowchart",
              "line": 51,
              "async": false,
              "calls": [
                "_generate_mermaid_flowchart",
                "warning",
                "_generate_ascii_flowchart"
              ],
              "parameters": [
                "self",
                "nodes",
                "format"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_dependency_graph",
              "line": 71,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "import_graph"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_state_diagram",
              "line": 77,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self",
                "states"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_sequence_diagram",
              "line": 83,
              "async": false,
              "calls": [
                "warning",
                "_generate_mermaid_sequence"
              ],
              "parameters": [
                "self",
                "interactions",
                "format"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_class_diagram",
              "line": 101,
              "async": false,
              "calls": [
                "warning",
                "_generate_mermaid_class"
              ],
              "parameters": [
                "self",
                "classes",
                "format"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "generate_architecture_diagram",
              "line": 119,
              "async": false,
              "calls": [
                "_generate_mermaid_architecture",
                "warning"
              ],
              "parameters": [
                "self",
                "components",
                "format"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_flowchart",
              "line": 137,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "nodes"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_sequence",
              "line": 163,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "interactions"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_class",
              "line": 180,
              "async": false,
              "calls": [
                "get",
                "join",
                "append"
              ],
              "parameters": [
                "self",
                "classes"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "_generate_mermaid_architecture",
              "line": 213,
              "async": false,
              "calls": [
                "isinstance",
                "join",
                "replace",
                "get",
                "append",
                "warning"
              ],
              "parameters": [
                "self",
                "components"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "_generate_ascii_flowchart",
              "line": 260,
              "async": false,
              "calls": [
                "join",
                "enumerate",
                "get",
                "append",
                "len"
              ],
              "parameters": [
                "self",
                "nodes"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            },
            {
              "name": "save_diagram",
              "line": 286,
              "async": false,
              "calls": [
                "open",
                "info",
                "error",
                "write",
                "warning"
              ],
              "parameters": [
                "self",
                "diagram",
                "filename"
              ],
              "decorators": [],
              "file": "services/diagram_service.py"
            }
          ],
          "classes": [
            {
              "name": "DiagramFormat",
              "line": 14,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "services/diagram_service.py"
            },
            {
              "name": "DiagramType",
              "line": 22,
              "methods": [],
              "bases": [
                "Enum"
              ],
              "file": "services/diagram_service.py"
            },
            {
              "name": "DiagramService",
              "line": 32,
              "methods": [
                "__init__",
                "generate_flowchart",
                "generate_dependency_graph",
                "generate_state_diagram",
                "generate_sequence_diagram",
                "generate_class_diagram",
                "generate_architecture_diagram",
                "_generate_mermaid_flowchart",
                "_generate_mermaid_sequence",
                "_generate_mermaid_class",
                "_generate_mermaid_architecture",
                "_generate_ascii_flowchart",
                "save_diagram"
              ],
              "bases": [],
              "file": "services/diagram_service.py"
            }
          ],
          "imports": [
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "enum",
              "names": [
                "Enum"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "info",
              "line": 49
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "info",
              "line": 80
            },
            {
              "function": "append",
              "line": 160
            },
            {
              "function": "join",
              "line": 161
            },
            {
              "function": "append",
              "line": 177
            },
            {
              "function": "join",
              "line": 178
            },
            {
              "function": "append",
              "line": 210
            },
            {
              "function": "join",
              "line": 211
            },
            {
              "function": "isinstance",
              "line": 218
            },
            {
              "function": "append",
              "line": 257
            },
            {
              "function": "join",
              "line": 258
            },
            {
              "function": "enumerate",
              "line": 264
            },
            {
              "function": "join",
              "line": 284
            },
            {
              "function": "Path",
              "line": 45
            },
            {
              "function": "mkdir",
              "line": 47
            },
            {
              "function": "_generate_mermaid_flowchart",
              "line": 64
            },
            {
              "function": "_generate_mermaid_sequence",
              "line": 96
            },
            {
              "function": "warning",
              "line": 98
            },
            {
              "function": "_generate_mermaid_sequence",
              "line": 99
            },
            {
              "function": "_generate_mermaid_class",
              "line": 114
            },
            {
              "function": "warning",
              "line": 116
            },
            {
              "function": "_generate_mermaid_class",
              "line": 117
            },
            {
              "function": "_generate_mermaid_architecture",
              "line": 132
            },
            {
              "function": "warning",
              "line": 134
            },
            {
              "function": "_generate_mermaid_architecture",
              "line": 135
            },
            {
              "function": "get",
              "line": 142
            },
            {
              "function": "get",
              "line": 143
            },
            {
              "function": "get",
              "line": 144
            },
            {
              "function": "get",
              "line": 168
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "append",
              "line": 172
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "append",
              "line": 186
            },
            {
              "function": "get",
              "line": 189
            },
            {
              "function": "get",
              "line": 193
            },
            {
              "function": "append",
              "line": 196
            },
            {
              "function": "get",
              "line": 199
            },
            {
              "function": "warning",
              "line": 219
            },
            {
              "function": "warning",
              "line": 222
            },
            {
              "function": "isinstance",
              "line": 228
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "get",
              "line": 232
            },
            {
              "function": "get",
              "line": 233
            },
            {
              "function": "isinstance",
              "line": 244
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 248
            },
            {
              "function": "get",
              "line": 265
            },
            {
              "function": "get",
              "line": 266
            },
            {
              "function": "warning",
              "line": 298
            },
            {
              "function": "info",
              "line": 307
            },
            {
              "function": "_generate_ascii_flowchart",
              "line": 66
            },
            {
              "function": "warning",
              "line": 68
            },
            {
              "function": "_generate_mermaid_flowchart",
              "line": 69
            },
            {
              "function": "append",
              "line": 148
            },
            {
              "function": "append",
              "line": 158
            },
            {
              "function": "append",
              "line": 175
            },
            {
              "function": "append",
              "line": 190
            },
            {
              "function": "append",
              "line": 194
            },
            {
              "function": "get",
              "line": 200
            },
            {
              "function": "get",
              "line": 201
            },
            {
              "function": "warning",
              "line": 229
            },
            {
              "function": "replace",
              "line": 231
            },
            {
              "function": "append",
              "line": 236
            },
            {
              "function": "replace",
              "line": 246
            },
            {
              "function": "len",
              "line": 269
            },
            {
              "function": "append",
              "line": 271
            },
            {
              "function": "append",
              "line": 272
            },
            {
              "function": "append",
              "line": 273
            },
            {
              "function": "append",
              "line": 275
            },
            {
              "function": "append",
              "line": 276
            },
            {
              "function": "append",
              "line": 277
            },
            {
              "function": "append",
              "line": 281
            },
            {
              "function": "append",
              "line": 282
            },
            {
              "function": "open",
              "line": 304
            },
            {
              "function": "write",
              "line": 305
            },
            {
              "function": "error",
              "line": 310
            },
            {
              "function": "append",
              "line": 150
            },
            {
              "function": "append",
              "line": 204
            },
            {
              "function": "append",
              "line": 238
            },
            {
              "function": "append",
              "line": 240
            },
            {
              "function": "isinstance",
              "line": 249
            },
            {
              "function": "get",
              "line": 249
            },
            {
              "function": "isinstance",
              "line": 250
            },
            {
              "function": "get",
              "line": 250
            },
            {
              "function": "append",
              "line": 253
            },
            {
              "function": "append",
              "line": 255
            },
            {
              "function": "len",
              "line": 280
            },
            {
              "function": "append",
              "line": 152
            },
            {
              "function": "append",
              "line": 154
            },
            {
              "function": "append",
              "line": 206
            },
            {
              "function": "append",
              "line": 208
            },
            {
              "function": "get",
              "line": 231
            },
            {
              "function": "get",
              "line": 246
            }
          ]
        },
        "services/__init__.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "from_import",
              "module": "project_cache",
              "names": [
                "ProjectCache"
              ],
              "line": 5
            },
            {
              "type": "from_import",
              "module": "smart_file_watcher",
              "names": [
                "SmartFileWatcher"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "code_search",
              "names": [
                "LightweightCodeSearch",
                "SearchResult"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "diagram_service",
              "names": [
                "DiagramService",
                "DiagramFormat",
                "DiagramType"
              ],
              "line": 8
            }
          ],
          "calls": []
        },
        "services/project_cache.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 22,
              "async": false,
              "calls": [
                "timedelta",
                "Path",
                "mkdir",
                "error",
                "info"
              ],
              "parameters": [
                "self",
                "project_root",
                "cache_duration_hours"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "_get_cache_key",
              "line": 43,
              "async": false,
              "calls": [
                "encode",
                "hexdigest",
                "md5"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "_get_cache_path",
              "line": 49,
              "async": false,
              "calls": [
                "_get_cache_key"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "get",
              "line": 53,
              "async": false,
              "calls": [
                "debug",
                "unlink",
                "exists",
                "load",
                "fromisoformat",
                "open",
                "now",
                "_get_cache_path",
                "warning"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "set",
              "line": 86,
              "async": false,
              "calls": [
                "debug",
                "now",
                "open",
                "dump",
                "_get_cache_path",
                "isoformat",
                "warning"
              ],
              "parameters": [
                "self",
                "key",
                "value"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "invalidate",
              "line": 111,
              "async": false,
              "calls": [
                "debug",
                "_get_cache_path",
                "exists",
                "unlink"
              ],
              "parameters": [
                "self",
                "key"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "clear_all",
              "line": 124,
              "async": false,
              "calls": [
                "info",
                "unlink",
                "glob"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            },
            {
              "name": "get_stats",
              "line": 130,
              "async": false,
              "calls": [
                "sum",
                "glob",
                "stat",
                "round",
                "list",
                "len",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/project_cache.py"
            }
          ],
          "classes": [
            {
              "name": "ProjectCache",
              "line": 16,
              "methods": [
                "__init__",
                "_get_cache_key",
                "_get_cache_path",
                "get",
                "set",
                "invalidate",
                "clear_all",
                "get_stats"
              ],
              "bases": [],
              "file": "services/project_cache.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "hashlib",
              "names": [
                "hashlib"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Any",
                "Dict",
                "Optional"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime",
                "timedelta"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 11
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 13
            },
            {
              "function": "Path",
              "line": 30
            },
            {
              "function": "timedelta",
              "line": 32
            },
            {
              "function": "hexdigest",
              "line": 46
            },
            {
              "function": "_get_cache_path",
              "line": 63
            },
            {
              "function": "_get_cache_path",
              "line": 94
            },
            {
              "function": "_get_cache_path",
              "line": 118
            },
            {
              "function": "exists",
              "line": 120
            },
            {
              "function": "glob",
              "line": 126
            },
            {
              "function": "info",
              "line": 128
            },
            {
              "function": "list",
              "line": 132
            },
            {
              "function": "sum",
              "line": 133
            },
            {
              "function": "mkdir",
              "line": 37
            },
            {
              "function": "info",
              "line": 38
            },
            {
              "function": "_get_cache_key",
              "line": 51
            },
            {
              "function": "exists",
              "line": 65
            },
            {
              "function": "fromisoformat",
              "line": 73
            },
            {
              "function": "debug",
              "line": 79
            },
            {
              "function": "debug",
              "line": 106
            },
            {
              "function": "unlink",
              "line": 121
            },
            {
              "function": "debug",
              "line": 122
            },
            {
              "function": "unlink",
              "line": 127
            },
            {
              "function": "glob",
              "line": 132
            },
            {
              "function": "len",
              "line": 136
            },
            {
              "function": "round",
              "line": 138
            },
            {
              "function": "str",
              "line": 139
            },
            {
              "function": "error",
              "line": 40
            },
            {
              "function": "md5",
              "line": 46
            },
            {
              "function": "open",
              "line": 69
            },
            {
              "function": "load",
              "line": 70
            },
            {
              "function": "debug",
              "line": 75
            },
            {
              "function": "unlink",
              "line": 76
            },
            {
              "function": "warning",
              "line": 83
            },
            {
              "function": "isoformat",
              "line": 98
            },
            {
              "function": "open",
              "line": 103
            },
            {
              "function": "dump",
              "line": 104
            },
            {
              "function": "warning",
              "line": 109
            },
            {
              "function": "encode",
              "line": 46
            },
            {
              "function": "now",
              "line": 74
            },
            {
              "function": "stat",
              "line": 133
            },
            {
              "function": "now",
              "line": 98
            }
          ]
        },
        "services/smart_file_watcher.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [
                "Path",
                "info"
              ],
              "parameters": [
                "self",
                "project_root",
                "cache",
                "debounce_seconds"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "watch_file",
              "line": 38,
              "async": false,
              "calls": [
                "debug",
                "exists",
                "stat",
                "set",
                "warning",
                "_resolve_path",
                "add"
              ],
              "parameters": [
                "self",
                "file_path",
                "callback"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "watch_directory",
              "line": 64,
              "async": false,
              "calls": [
                "glob",
                "is_dir",
                "info",
                "is_file",
                "warning",
                "watch_file",
                "_resolve_path",
                "str"
              ],
              "parameters": [
                "self",
                "dir_path",
                "pattern",
                "callback"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "check_changes",
              "line": 86,
              "async": false,
              "calls": [
                "items",
                "callback",
                "exists",
                "stat",
                "fromtimestamp",
                "info",
                "error",
                "list",
                "warning",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "stop_watching",
              "line": 120,
              "async": false,
              "calls": [
                "debug",
                "_resolve_path"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "stop_all",
              "line": 137,
              "async": false,
              "calls": [
                "info",
                "clear"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "get_watched_files",
              "line": 144,
              "async": false,
              "calls": [
                "keys",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "_resolve_path",
              "line": 148,
              "async": false,
              "calls": [
                "Path",
                "is_absolute",
                "resolve"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "start",
              "line": 155,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "stop",
              "line": 164,
              "async": false,
              "calls": [
                "info"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            },
            {
              "name": "start_monitoring",
              "line": 169,
              "async": false,
              "calls": [
                "info",
                "sleep",
                "check_changes"
              ],
              "parameters": [
                "self",
                "interval_seconds"
              ],
              "decorators": [],
              "file": "services/smart_file_watcher.py"
            }
          ],
          "classes": [
            {
              "name": "SmartFileWatcher",
              "line": 15,
              "methods": [
                "__init__",
                "watch_file",
                "watch_directory",
                "check_changes",
                "stop_watching",
                "stop_all",
                "get_watched_files",
                "_resolve_path",
                "start",
                "stop",
                "start_monitoring"
              ],
              "bases": [],
              "file": "services/smart_file_watcher.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Set",
                "Optional",
                "Callable"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 12
            },
            {
              "function": "Path",
              "line": 30
            },
            {
              "function": "info",
              "line": 36
            },
            {
              "function": "_resolve_path",
              "line": 46
            },
            {
              "function": "debug",
              "line": 62
            },
            {
              "function": "_resolve_path",
              "line": 74
            },
            {
              "function": "glob",
              "line": 80
            },
            {
              "function": "info",
              "line": 84
            },
            {
              "function": "list",
              "line": 95
            },
            {
              "function": "_resolve_path",
              "line": 127
            },
            {
              "function": "debug",
              "line": 135
            },
            {
              "function": "clear",
              "line": 139
            },
            {
              "function": "clear",
              "line": 140
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "Path",
              "line": 150
            },
            {
              "function": "resolve",
              "line": 153
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 167
            },
            {
              "function": "info",
              "line": 177
            },
            {
              "function": "exists",
              "line": 48
            },
            {
              "function": "warning",
              "line": 49
            },
            {
              "function": "stat",
              "line": 53
            },
            {
              "function": "add",
              "line": 60
            },
            {
              "function": "is_dir",
              "line": 76
            },
            {
              "function": "warning",
              "line": 77
            },
            {
              "function": "is_file",
              "line": 81
            },
            {
              "function": "items",
              "line": 95
            },
            {
              "function": "str",
              "line": 146
            },
            {
              "function": "is_absolute",
              "line": 151
            },
            {
              "function": "set",
              "line": 59
            },
            {
              "function": "watch_file",
              "line": 82
            },
            {
              "function": "exists",
              "line": 96
            },
            {
              "function": "warning",
              "line": 97
            },
            {
              "function": "stat",
              "line": 101
            },
            {
              "function": "fromtimestamp",
              "line": 105
            },
            {
              "function": "info",
              "line": 116
            },
            {
              "function": "keys",
              "line": 146
            },
            {
              "function": "check_changes",
              "line": 181
            },
            {
              "function": "sleep",
              "line": 182
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "str",
              "line": 82
            },
            {
              "function": "str",
              "line": 105
            },
            {
              "function": "callback",
              "line": 112
            },
            {
              "function": "str",
              "line": 112
            },
            {
              "function": "error",
              "line": 114
            }
          ]
        },
        "services/code_search.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "file_path",
                "line_number",
                "line_content",
                "context_before",
                "context_after"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "to_dict",
              "line": 25,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "__init__",
              "line": 42,
              "async": false,
              "calls": [
                "Path",
                "info"
              ],
              "parameters": [
                "self",
                "project_root"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "search",
              "line": 57,
              "async": false,
              "calls": [
                "error",
                "info",
                "_find_files",
                "extend",
                "len",
                "warning",
                "compile",
                "_search_file"
              ],
              "parameters": [
                "self",
                "pattern",
                "file_pattern",
                "case_sensitive",
                "context_lines",
                "max_results"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "search_definition",
              "line": 99,
              "async": false,
              "calls": [
                "get",
                "search"
              ],
              "parameters": [
                "self",
                "symbol_name",
                "symbol_type",
                "file_pattern"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "search_usage",
              "line": 122,
              "async": false,
              "calls": [
                "search",
                "escape"
              ],
              "parameters": [
                "self",
                "symbol_name",
                "file_pattern"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "_find_files",
              "line": 137,
              "async": false,
              "calls": [
                "_should_ignore",
                "is_file",
                "append",
                "glob"
              ],
              "parameters": [
                "self",
                "file_pattern"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "_should_ignore",
              "line": 151,
              "async": false,
              "calls": [
                "match"
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "_search_file",
              "line": 167,
              "async": false,
              "calls": [
                "SearchResult",
                "len",
                "max",
                "open",
                "append",
                "enumerate",
                "relative_to",
                "rstrip",
                "search",
                "readlines",
                "warning",
                "min",
                "str"
              ],
              "parameters": [
                "self",
                "file_path",
                "regex",
                "context_lines",
                "max_results"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "add_ignore_pattern",
              "line": 202,
              "async": false,
              "calls": [
                "add"
              ],
              "parameters": [
                "self",
                "pattern"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            },
            {
              "name": "remove_ignore_pattern",
              "line": 206,
              "async": false,
              "calls": [
                "discard"
              ],
              "parameters": [
                "self",
                "pattern"
              ],
              "decorators": [],
              "file": "services/code_search.py"
            }
          ],
          "classes": [
            {
              "name": "SearchResult",
              "line": 14,
              "methods": [
                "__init__",
                "to_dict"
              ],
              "bases": [],
              "file": "services/code_search.py"
            },
            {
              "name": "LightweightCodeSearch",
              "line": 36,
              "methods": [
                "__init__",
                "search",
                "search_definition",
                "search_usage",
                "_find_files",
                "_should_ignore",
                "_search_file",
                "add_ignore_pattern",
                "remove_ignore_pattern"
              ],
              "bases": [],
              "file": "services/code_search.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any",
                "Optional",
                "Set"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "getLogger",
              "line": 11
            },
            {
              "function": "Path",
              "line": 49
            },
            {
              "function": "info",
              "line": 55
            },
            {
              "function": "_find_files",
              "line": 83
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "search",
              "line": 120
            },
            {
              "function": "search",
              "line": 135
            },
            {
              "function": "glob",
              "line": 141
            },
            {
              "function": "add",
              "line": 204
            },
            {
              "function": "discard",
              "line": 208
            },
            {
              "function": "compile",
              "line": 77
            },
            {
              "function": "_should_ignore",
              "line": 143
            },
            {
              "function": "is_file",
              "line": 146
            },
            {
              "function": "enumerate",
              "line": 176
            },
            {
              "function": "error",
              "line": 79
            },
            {
              "function": "len",
              "line": 86
            },
            {
              "function": "extend",
              "line": 90
            },
            {
              "function": "escape",
              "line": 134
            },
            {
              "function": "append",
              "line": 147
            },
            {
              "function": "match",
              "line": 158
            },
            {
              "function": "open",
              "line": 173
            },
            {
              "function": "readlines",
              "line": 174
            },
            {
              "function": "search",
              "line": 180
            },
            {
              "function": "warning",
              "line": 198
            },
            {
              "function": "_search_file",
              "line": 90
            },
            {
              "function": "warning",
              "line": 94
            },
            {
              "function": "len",
              "line": 96
            },
            {
              "function": "len",
              "line": 177
            },
            {
              "function": "max",
              "line": 182
            },
            {
              "function": "min",
              "line": 183
            },
            {
              "function": "SearchResult",
              "line": 188
            },
            {
              "function": "append",
              "line": 195
            },
            {
              "function": "len",
              "line": 183
            },
            {
              "function": "rstrip",
              "line": 185
            },
            {
              "function": "rstrip",
              "line": 186
            },
            {
              "function": "len",
              "line": 91
            },
            {
              "function": "str",
              "line": 189
            },
            {
              "function": "rstrip",
              "line": 191
            },
            {
              "function": "relative_to",
              "line": 189
            }
          ]
        },
        "agent_projects/test_safe_executor_552.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "backend.__version__",
              "names": [
                "__version__"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.query_classifier",
              "names": [
                "EnhancedQueryClassifier",
                "DetailedClassification"
              ],
              "line": 26
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.development_query_handler",
              "names": [
                "DevelopmentQueryHandler"
              ],
              "line": 33
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.safe_orchestrator_executor",
              "names": [
                "SafeOrchestratorExecutor"
              ],
              "line": 40
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.state",
              "names": [
                "create_initial_state"
              ],
              "line": 124
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 13
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 50
            },
            {
              "function": "DevelopmentQueryHandler",
              "line": 51
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "run",
              "line": 163
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "join",
              "line": 13
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "classify_query",
              "line": 86
            },
            {
              "function": "SafeOrchestratorExecutor",
              "line": 121
            },
            {
              "function": "create_initial_state",
              "line": 125
            },
            {
              "function": "get_execution_stats",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "test_safe_executor",
              "line": 163
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "exit",
              "line": 30
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "exit",
              "line": 37
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "exit",
              "line": 44
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "len",
              "line": 112
            },
            {
              "function": "execute_safely",
              "line": 139
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "str",
              "line": 149
            }
          ]
        },
        "agent_projects/test_no_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 93
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "run",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "test_direct",
              "line": 98
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "connect",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "set",
              "line": 37
            },
            {
              "function": "now",
              "line": 39
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print_exc",
              "line": 94
            },
            {
              "function": "recv",
              "line": 22
            },
            {
              "function": "send",
              "line": 32
            },
            {
              "function": "len",
              "line": 79
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "dumps",
              "line": 32
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "str",
              "line": 55
            },
            {
              "function": "strftime",
              "line": 28
            },
            {
              "function": "now",
              "line": 42
            },
            {
              "function": "wait_for",
              "line": 44
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "lower",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "lower",
              "line": 63
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "join",
              "line": 75
            },
            {
              "function": "len",
              "line": 76
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "add",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "sorted",
              "line": 75
            },
            {
              "function": "len",
              "line": 87
            },
            {
              "function": "now",
              "line": 28
            },
            {
              "function": "str",
              "line": 61
            },
            {
              "function": "str",
              "line": 63
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "capitalize",
              "line": 85
            },
            {
              "function": "upper",
              "line": 52
            }
          ]
        },
        "agent_projects/test_architecture_proposal_workflow.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 16
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "langgraph_system.workflow",
              "names": [
                "AgentWorkflow"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "langgraph_system.state",
              "names": [
                "create_initial_state"
              ],
              "line": 24
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 249
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 21
            },
            {
              "function": "join",
              "line": 21
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "AgentWorkflow",
              "line": 37
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 266
            },
            {
              "function": "print",
              "line": 267
            },
            {
              "function": "print",
              "line": 268
            },
            {
              "function": "run",
              "line": 277
            },
            {
              "function": "dirname",
              "line": 21
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "get",
              "line": 152
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "get",
              "line": 180
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "print",
              "line": 200
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "print",
              "line": 202
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "print",
              "line": 204
            },
            {
              "function": "get",
              "line": 205
            },
            {
              "function": "print",
              "line": 208
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 217
            },
            {
              "function": "print",
              "line": 218
            },
            {
              "function": "print",
              "line": 219
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "bool",
              "line": 222
            },
            {
              "function": "all",
              "line": 224
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "get",
              "line": 241
            },
            {
              "function": "endswith",
              "line": 271
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "test_tetris_proposal_workflow",
              "line": 277
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "exit",
              "line": 281
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "exit",
              "line": 284
            },
            {
              "function": "execute",
              "line": 54
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 143
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "enumerate",
              "line": 154
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "enumerate",
              "line": 172
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 181
            },
            {
              "function": "enumerate",
              "line": 182
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "get",
              "line": 211
            },
            {
              "function": "get",
              "line": 211
            },
            {
              "function": "total_seconds",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "get",
              "line": 222
            },
            {
              "function": "get",
              "line": 223
            },
            {
              "function": "print",
              "line": 235
            },
            {
              "function": "print",
              "line": 237
            },
            {
              "function": "print",
              "line": 245
            },
            {
              "function": "print",
              "line": 246
            },
            {
              "function": "print",
              "line": 250
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "print",
              "line": 252
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "print",
              "line": 254
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 257
            },
            {
              "function": "print",
              "line": 258
            },
            {
              "function": "print",
              "line": 259
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "get",
              "line": 125
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "get",
              "line": 155
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "len",
              "line": 175
            },
            {
              "function": "print",
              "line": 176
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "len",
              "line": 185
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "open",
              "line": 243
            },
            {
              "function": "dump",
              "line": 244
            },
            {
              "function": "format_exc",
              "line": 258
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "get",
              "line": 194
            },
            {
              "function": "get",
              "line": 195
            },
            {
              "function": "get",
              "line": 196
            },
            {
              "function": "get",
              "line": 197
            },
            {
              "function": "get",
              "line": 198
            },
            {
              "function": "get",
              "line": 200
            },
            {
              "function": "get",
              "line": 201
            },
            {
              "function": "get",
              "line": 202
            },
            {
              "function": "len",
              "line": 204
            },
            {
              "function": "get",
              "line": 225
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "str",
              "line": 165
            },
            {
              "function": "get",
              "line": 204
            },
            {
              "function": "len",
              "line": 91
            },
            {
              "function": "len",
              "line": 97
            },
            {
              "function": "len",
              "line": 103
            },
            {
              "function": "len",
              "line": 109
            },
            {
              "function": "len",
              "line": 115
            },
            {
              "function": "len",
              "line": 121
            },
            {
              "function": "upper",
              "line": 162
            },
            {
              "function": "get",
              "line": 173
            },
            {
              "function": "get",
              "line": 173
            },
            {
              "function": "get",
              "line": 183
            },
            {
              "function": "get",
              "line": 207
            },
            {
              "function": "get",
              "line": 207
            },
            {
              "function": "get",
              "line": 174
            },
            {
              "function": "len",
              "line": 176
            },
            {
              "function": "get",
              "line": 183
            },
            {
              "function": "get",
              "line": 184
            },
            {
              "function": "len",
              "line": 186
            }
          ]
        },
        "agent_projects/test_tetris_websocket_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 21,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_websocket_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "TetrisWorkflowTest",
              "line": 20,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "agent_projects/test_tetris_websocket_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 14
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 15
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "subprocess",
              "names": [
                "subprocess"
              ],
              "line": 311
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 297
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 216
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 306
            },
            {
              "function": "print",
              "line": 307
            },
            {
              "function": "print",
              "line": 308
            },
            {
              "function": "run",
              "line": 312
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "print",
              "line": 328
            },
            {
              "function": "TetrisWorkflowTest",
              "line": 331
            },
            {
              "function": "print",
              "line": 334
            },
            {
              "function": "run",
              "line": 344
            },
            {
              "function": "exit",
              "line": 345
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "print",
              "line": 320
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "print",
              "line": 322
            },
            {
              "function": "print",
              "line": 323
            },
            {
              "function": "print",
              "line": 324
            },
            {
              "function": "connect_and_test",
              "line": 332
            },
            {
              "function": "print",
              "line": 336
            },
            {
              "function": "print",
              "line": 339
            },
            {
              "function": "main",
              "line": 344
            },
            {
              "function": "connect",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "print",
              "line": 226
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "print",
              "line": 234
            },
            {
              "function": "enumerate",
              "line": 236
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "print",
              "line": 241
            },
            {
              "function": "print",
              "line": 242
            },
            {
              "function": "any",
              "line": 244
            },
            {
              "function": "any",
              "line": 245
            },
            {
              "function": "any",
              "line": 246
            },
            {
              "function": "any",
              "line": 247
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 250
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "print",
              "line": 252
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "print",
              "line": 278
            },
            {
              "function": "print",
              "line": 279
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 281
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "print",
              "line": 283
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "print",
              "line": 292
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "print",
              "line": 294
            },
            {
              "function": "print",
              "line": 295
            },
            {
              "function": "print",
              "line": 296
            },
            {
              "function": "print",
              "line": 298
            },
            {
              "function": "print",
              "line": 299
            },
            {
              "function": "print",
              "line": 300
            },
            {
              "function": "print",
              "line": 301
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "send",
              "line": 62
            },
            {
              "function": "send",
              "line": 72
            },
            {
              "function": "get",
              "line": 235
            },
            {
              "function": "print",
              "line": 237
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 257
            },
            {
              "function": "print",
              "line": 258
            },
            {
              "function": "print",
              "line": 259
            },
            {
              "function": "print",
              "line": 260
            },
            {
              "function": "print",
              "line": 261
            },
            {
              "function": "print",
              "line": 262
            },
            {
              "function": "print",
              "line": 263
            },
            {
              "function": "print",
              "line": 264
            },
            {
              "function": "print",
              "line": 265
            },
            {
              "function": "print",
              "line": 268
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "format_exc",
              "line": 300
            },
            {
              "function": "dumps",
              "line": 62
            },
            {
              "function": "dumps",
              "line": 72
            },
            {
              "function": "wait_for",
              "line": 84
            },
            {
              "function": "loads",
              "line": 93
            },
            {
              "function": "get",
              "line": 94
            },
            {
              "function": "append",
              "line": 96
            },
            {
              "function": "strftime",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 200
            },
            {
              "function": "print",
              "line": 271
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "recv",
              "line": 85
            },
            {
              "function": "receive_with_timeout",
              "line": 91
            },
            {
              "function": "get",
              "line": 103
            },
            {
              "function": "get",
              "line": 104
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 208
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print_exc",
              "line": 217
            },
            {
              "function": "print",
              "line": 218
            },
            {
              "function": "get",
              "line": 244
            },
            {
              "function": "get",
              "line": 245
            },
            {
              "function": "get",
              "line": 246
            },
            {
              "function": "get",
              "line": 247
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "now",
              "line": 98
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "get",
              "line": 120
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "send",
              "line": 142
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "replace",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "dumps",
              "line": 142
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "get",
              "line": 160
            },
            {
              "function": "get",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "get",
              "line": 169
            },
            {
              "function": "get",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "get",
              "line": 178
            },
            {
              "function": "get",
              "line": 179
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "get",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "get",
              "line": 192
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "len",
              "line": 126
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "str",
              "line": 173
            },
            {
              "function": "str",
              "line": 198
            }
          ]
        },
        "agent_projects/test_stub_fixed.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "uuid",
              "names": [
                "uuid"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "run",
              "line": 93
            },
            {
              "function": "exit",
              "line": 94
            },
            {
              "function": "test_no_stubs",
              "line": 93
            },
            {
              "function": "strftime",
              "line": 14
            },
            {
              "function": "connect",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "time",
              "line": 42
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "send",
              "line": 35
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "now",
              "line": 14
            },
            {
              "function": "dumps",
              "line": 35
            },
            {
              "function": "get_event_loop",
              "line": 42
            },
            {
              "function": "time",
              "line": 44
            },
            {
              "function": "loads",
              "line": 47
            },
            {
              "function": "wait_for",
              "line": 46
            },
            {
              "function": "any",
              "line": 52
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "get_event_loop",
              "line": 44
            },
            {
              "function": "recv",
              "line": 46
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "get",
              "line": 61
            },
            {
              "function": "lower",
              "line": 57
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "lower",
              "line": 52
            },
            {
              "function": "get",
              "line": 63
            },
            {
              "function": "lower",
              "line": 63
            },
            {
              "function": "get",
              "line": 63
            }
          ]
        },
        "agent_projects/test_simple_chat.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "run",
              "line": 53
            },
            {
              "function": "connect",
              "line": 17
            },
            {
              "function": "loads",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "range",
              "line": 34
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "test_simple_chat",
              "line": 53
            },
            {
              "function": "recv",
              "line": 19
            },
            {
              "function": "send",
              "line": 31
            },
            {
              "function": "dumps",
              "line": 31
            },
            {
              "function": "loads",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "get",
              "line": 21
            },
            {
              "function": "wait_for",
              "line": 36
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "recv",
              "line": 36
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "get",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "get",
              "line": 45
            }
          ]
        },
        "agent_projects/test_new_features.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "backend.core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "backend.core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 41
            },
            {
              "type": "from_import",
              "module": "backend.core.analysis.call_graph_analyzer",
              "names": [
                "CallGraphAnalyzer"
              ],
              "line": 42
            },
            {
              "type": "from_import",
              "module": "backend.core.indexing.code_indexer",
              "names": [
                "CodeIndexer"
              ],
              "line": 69
            },
            {
              "type": "from_import",
              "module": "backend.core.analysis.layer_analyzer",
              "names": [
                "LayerAnalyzer"
              ],
              "line": 70
            },
            {
              "type": "from_import",
              "module": "backend.agents.tools.browser_tester",
              "names": [
                "PLAYWRIGHT_AVAILABLE",
                "BrowserTester"
              ],
              "line": 99
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 126
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.reviewer_gpt_agent",
              "names": [
                "ReviewerGPTAgent"
              ],
              "line": 141
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 60
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 90
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 116
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 132
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 147
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 13
            },
            {
              "function": "getLogger",
              "line": 17
            },
            {
              "function": "info",
              "line": 21
            },
            {
              "function": "info",
              "line": 38
            },
            {
              "function": "info",
              "line": 66
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "info",
              "line": 122
            },
            {
              "function": "info",
              "line": 138
            },
            {
              "function": "info",
              "line": 153
            },
            {
              "function": "info",
              "line": 154
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "info",
              "line": 173
            },
            {
              "function": "info",
              "line": 174
            },
            {
              "function": "info",
              "line": 175
            },
            {
              "function": "sum",
              "line": 177
            },
            {
              "function": "len",
              "line": 178
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "info",
              "line": 185
            },
            {
              "function": "run",
              "line": 195
            },
            {
              "function": "exit",
              "line": 196
            },
            {
              "function": "CodeIndexer",
              "line": 26
            },
            {
              "function": "get",
              "line": 29
            },
            {
              "function": "info",
              "line": 30
            },
            {
              "function": "CodeIndexer",
              "line": 45
            },
            {
              "function": "CallGraphAnalyzer",
              "line": 49
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "info",
              "line": 55
            },
            {
              "function": "info",
              "line": 56
            },
            {
              "function": "CodeIndexer",
              "line": 73
            },
            {
              "function": "LayerAnalyzer",
              "line": 77
            },
            {
              "function": "info",
              "line": 80
            },
            {
              "function": "info",
              "line": 81
            },
            {
              "function": "info",
              "line": 82
            },
            {
              "function": "info",
              "line": 128
            },
            {
              "function": "info",
              "line": 143
            },
            {
              "function": "append",
              "line": 169
            },
            {
              "function": "info",
              "line": 170
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "info",
              "line": 188
            },
            {
              "function": "error",
              "line": 191
            },
            {
              "function": "main",
              "line": 195
            },
            {
              "function": "build_full_index",
              "line": 27
            },
            {
              "function": "error",
              "line": 33
            },
            {
              "function": "build_full_index",
              "line": 46
            },
            {
              "function": "build_call_graph",
              "line": 50
            },
            {
              "function": "error",
              "line": 59
            },
            {
              "function": "error",
              "line": 61
            },
            {
              "function": "build_full_index",
              "line": 74
            },
            {
              "function": "detect_system_layers",
              "line": 78
            },
            {
              "function": "info",
              "line": 85
            },
            {
              "function": "error",
              "line": 89
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "warning",
              "line": 102
            },
            {
              "function": "BrowserTester",
              "line": 106
            },
            {
              "function": "info",
              "line": 107
            },
            {
              "function": "info",
              "line": 111
            },
            {
              "function": "error",
              "line": 115
            },
            {
              "function": "error",
              "line": 117
            },
            {
              "function": "error",
              "line": 131
            },
            {
              "function": "error",
              "line": 133
            },
            {
              "function": "error",
              "line": 146
            },
            {
              "function": "error",
              "line": 148
            },
            {
              "function": "test_func",
              "line": 168
            },
            {
              "function": "format_exc",
              "line": 61
            },
            {
              "function": "format_exc",
              "line": 91
            },
            {
              "function": "get_page_info",
              "line": 110
            },
            {
              "function": "format_exc",
              "line": 117
            },
            {
              "function": "format_exc",
              "line": 133
            },
            {
              "function": "format_exc",
              "line": 148
            },
            {
              "function": "get",
              "line": 30
            },
            {
              "function": "get",
              "line": 30
            },
            {
              "function": "len",
              "line": 54
            },
            {
              "function": "len",
              "line": 55
            },
            {
              "function": "get",
              "line": 111
            }
          ]
        },
        "agent_projects/chart_renderer.py": {
          "functions": [],
          "classes": [],
          "imports": [],
          "calls": []
        },
        "agent_projects/test_self_diagnosis.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.workflow_self_diagnosis",
              "names": [
                "WorkflowSelfDiagnosisSystem",
                "KnownAntiPatternsDatabase",
                "WorkflowInvariants",
                "PreExecutionValidator",
                "PatternRecognitionEngine",
                "SelfTestFramework"
              ],
              "line": 37
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.state",
              "names": [
                "ExecutionStep",
                "ExtendedAgentState"
              ],
              "line": 45
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 337
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 18
            },
            {
              "function": "append",
              "line": 19
            },
            {
              "function": "basicConfig",
              "line": 22
            },
            {
              "function": "getLogger",
              "line": 26
            },
            {
              "function": "dirname",
              "line": 18
            },
            {
              "function": "join",
              "line": 19
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "WorkflowSelfDiagnosisSystem",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "WorkflowInvariants",
              "line": 82
            },
            {
              "function": "check_all",
              "line": 83
            },
            {
              "function": "KnownAntiPatternsDatabase",
              "line": 93
            },
            {
              "function": "detect_patterns",
              "line": 94
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "detect_patterns",
              "line": 138
            },
            {
              "function": "any",
              "line": 139
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "PatternRecognitionEngine",
              "line": 190
            },
            {
              "function": "analyze_patterns",
              "line": 191
            },
            {
              "function": "any",
              "line": 193
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "print",
              "line": 202
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "detect_patterns",
              "line": 212
            },
            {
              "function": "any",
              "line": 213
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 260
            },
            {
              "function": "print",
              "line": 261
            },
            {
              "function": "print",
              "line": 262
            },
            {
              "function": "items",
              "line": 263
            },
            {
              "function": "print",
              "line": 271
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "PreExecutionValidator",
              "line": 288
            },
            {
              "function": "print",
              "line": 300
            },
            {
              "function": "print",
              "line": 303
            },
            {
              "function": "print",
              "line": 304
            },
            {
              "function": "print",
              "line": 305
            },
            {
              "function": "print",
              "line": 307
            },
            {
              "function": "get_diagnosis_report",
              "line": 322
            },
            {
              "function": "print",
              "line": 323
            },
            {
              "function": "print",
              "line": 324
            },
            {
              "function": "print",
              "line": 325
            },
            {
              "function": "print",
              "line": 326
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "print",
              "line": 331
            },
            {
              "function": "abspath",
              "line": 18
            },
            {
              "function": "dirname",
              "line": 19
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "pre_execution_check",
              "line": 152
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "print",
              "line": 218
            },
            {
              "function": "real_time_monitoring",
              "line": 258
            },
            {
              "function": "print",
              "line": 264
            },
            {
              "function": "print",
              "line": 267
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "_validate_performance",
              "line": 289
            },
            {
              "function": "print",
              "line": 298
            },
            {
              "function": "run",
              "line": 333
            },
            {
              "function": "print",
              "line": 334
            },
            {
              "function": "abspath",
              "line": 19
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "ExecutionStep",
              "line": 64
            },
            {
              "function": "ExecutionStep",
              "line": 70
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "ExecutionStep",
              "line": 113
            },
            {
              "function": "ExecutionStep",
              "line": 120
            },
            {
              "function": "ExecutionStep",
              "line": 127
            },
            {
              "function": "ExecutionStep",
              "line": 208
            },
            {
              "function": "ExecutionStep",
              "line": 230
            },
            {
              "function": "ExecutionStep",
              "line": 237
            },
            {
              "function": "ExecutionStep",
              "line": 245
            },
            {
              "function": "ExecutionStep",
              "line": 280
            },
            {
              "function": "ExecutionStep",
              "line": 281
            },
            {
              "function": "ExecutionStep",
              "line": 282
            },
            {
              "function": "ExecutionStep",
              "line": 283
            },
            {
              "function": "lower",
              "line": 293
            },
            {
              "function": "print",
              "line": 294
            },
            {
              "function": "test_self_diagnosis",
              "line": 333
            },
            {
              "function": "print",
              "line": 336
            },
            {
              "function": "print_exc",
              "line": 338
            },
            {
              "function": "range",
              "line": 207
            },
            {
              "function": "range",
              "line": 208
            },
            {
              "function": "len",
              "line": 326
            },
            {
              "function": "len",
              "line": 327
            },
            {
              "function": "len",
              "line": 215
            },
            {
              "function": "len",
              "line": 216
            },
            {
              "function": "now",
              "line": 243
            },
            {
              "function": "get",
              "line": 269
            },
            {
              "function": "get",
              "line": 293
            }
          ]
        },
        "agent_projects/test_indexing_progress.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "run",
              "line": 110
            },
            {
              "function": "test_indexing_progress",
              "line": 110
            },
            {
              "function": "connect",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "time",
              "line": 36
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "send",
              "line": 31
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "dumps",
              "line": 31
            },
            {
              "function": "get_event_loop",
              "line": 36
            },
            {
              "function": "time",
              "line": 43
            },
            {
              "function": "loads",
              "line": 46
            },
            {
              "function": "wait_for",
              "line": 45
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "strftime",
              "line": 50
            },
            {
              "function": "append",
              "line": 75
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "len",
              "line": 93
            },
            {
              "function": "get_event_loop",
              "line": 43
            },
            {
              "function": "recv",
              "line": 45
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "now",
              "line": 50
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "lower",
              "line": 60
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "lower",
              "line": 64
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "any",
              "line": 72
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "lower",
              "line": 68
            },
            {
              "function": "print",
              "line": 73
            }
          ]
        },
        "agent_projects/test_available_models.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "openai",
              "names": [
                "AsyncOpenAI"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "openai",
              "names": [
                "AsyncOpenAI"
              ],
              "line": 166
            },
            {
              "type": "import",
              "module": "anthropic",
              "names": [
                "anthropic"
              ],
              "line": 64
            },
            {
              "type": "from_import",
              "module": "openai",
              "names": [
                "AsyncOpenAI"
              ],
              "line": 124
            }
          ],
          "calls": [
            {
              "function": "getenv",
              "line": 15
            },
            {
              "function": "getenv",
              "line": 58
            },
            {
              "function": "getenv",
              "line": 118
            },
            {
              "function": "getenv",
              "line": 168
            },
            {
              "function": "AsyncOpenAI",
              "line": 172
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 206
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "print",
              "line": 234
            },
            {
              "function": "run",
              "line": 237
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "AsyncOpenAI",
              "line": 21
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "sort",
              "line": 35
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "AsyncAnthropic",
              "line": 80
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "AsyncOpenAI",
              "line": 127
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "test_openai_models",
              "line": 210
            },
            {
              "function": "test_gpt5_specifically",
              "line": 211
            },
            {
              "function": "test_anthropic_models",
              "line": 212
            },
            {
              "function": "test_perplexity_models",
              "line": 213
            },
            {
              "function": "isoformat",
              "line": 217
            },
            {
              "function": "open",
              "line": 230
            },
            {
              "function": "dump",
              "line": 231
            },
            {
              "function": "main",
              "line": 237
            },
            {
              "function": "list",
              "line": 22
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "any",
              "line": 220
            },
            {
              "function": "lower",
              "line": 29
            },
            {
              "function": "append",
              "line": 30
            },
            {
              "function": "strftime",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "append",
              "line": 95
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "create",
              "line": 190
            },
            {
              "function": "str",
              "line": 197
            },
            {
              "function": "now",
              "line": 217
            },
            {
              "function": "lower",
              "line": 42
            },
            {
              "function": "create",
              "line": 89
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "append",
              "line": 100
            },
            {
              "function": "create",
              "line": 145
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "fromtimestamp",
              "line": 31
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "lower",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "lower",
              "line": 198
            },
            {
              "function": "lower",
              "line": 198
            },
            {
              "function": "lower",
              "line": 200
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "lower",
              "line": 220
            },
            {
              "function": "lower",
              "line": 102
            },
            {
              "function": "lower",
              "line": 102
            },
            {
              "function": "str",
              "line": 153
            },
            {
              "function": "str",
              "line": 102
            },
            {
              "function": "str",
              "line": 102
            }
          ]
        },
        "agent_projects/test_dashboard_auto_approve.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 236
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 16
            },
            {
              "function": "getLogger",
              "line": 23
            },
            {
              "function": "print",
              "line": 240
            },
            {
              "function": "print",
              "line": 241
            },
            {
              "function": "print",
              "line": 242
            },
            {
              "function": "print",
              "line": 243
            },
            {
              "function": "print",
              "line": 244
            },
            {
              "function": "run",
              "line": 246
            },
            {
              "function": "dashboard_test_with_auto_approve",
              "line": 246
            },
            {
              "function": "StreamHandler",
              "line": 20
            },
            {
              "function": "connect",
              "line": 31
            },
            {
              "function": "info",
              "line": 32
            },
            {
              "function": "info",
              "line": 33
            },
            {
              "function": "info",
              "line": 34
            },
            {
              "function": "loads",
              "line": 38
            },
            {
              "function": "get",
              "line": 39
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "info",
              "line": 45
            },
            {
              "function": "info",
              "line": 46
            },
            {
              "function": "info",
              "line": 47
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "info",
              "line": 57
            },
            {
              "function": "info",
              "line": 58
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "info",
              "line": 197
            },
            {
              "function": "info",
              "line": 198
            },
            {
              "function": "info",
              "line": 199
            },
            {
              "function": "info",
              "line": 200
            },
            {
              "function": "info",
              "line": 201
            },
            {
              "function": "info",
              "line": 202
            },
            {
              "function": "info",
              "line": 203
            },
            {
              "function": "info",
              "line": 204
            },
            {
              "function": "exists",
              "line": 208
            },
            {
              "function": "info",
              "line": 230
            },
            {
              "function": "info",
              "line": 231
            },
            {
              "function": "info",
              "line": 232
            },
            {
              "function": "error",
              "line": 235
            },
            {
              "function": "error",
              "line": 237
            },
            {
              "function": "recv",
              "line": 37
            },
            {
              "function": "send",
              "line": 62
            },
            {
              "function": "listdir",
              "line": 209
            },
            {
              "function": "info",
              "line": 210
            },
            {
              "function": "info",
              "line": 217
            },
            {
              "function": "warning",
              "line": 228
            },
            {
              "function": "format_exc",
              "line": 237
            },
            {
              "function": "strftime",
              "line": 43
            },
            {
              "function": "dumps",
              "line": 62
            },
            {
              "function": "loads",
              "line": 75
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "join",
              "line": 213
            },
            {
              "function": "getsize",
              "line": 214
            },
            {
              "function": "info",
              "line": 216
            },
            {
              "function": "info",
              "line": 223
            },
            {
              "function": "wait_for",
              "line": 74
            },
            {
              "function": "append",
              "line": 82
            },
            {
              "function": "info",
              "line": 83
            },
            {
              "function": "info",
              "line": 87
            },
            {
              "function": "warning",
              "line": 193
            },
            {
              "function": "len",
              "line": 200
            },
            {
              "function": "join",
              "line": 200
            },
            {
              "function": "len",
              "line": 203
            },
            {
              "function": "endswith",
              "line": 220
            },
            {
              "function": "open",
              "line": 224
            },
            {
              "function": "info",
              "line": 226
            },
            {
              "function": "now",
              "line": 43
            },
            {
              "function": "recv",
              "line": 74
            },
            {
              "function": "len",
              "line": 217
            },
            {
              "function": "join",
              "line": 224
            },
            {
              "function": "read",
              "line": 225
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "info",
              "line": 97
            },
            {
              "function": "info",
              "line": 100
            },
            {
              "function": "info",
              "line": 101
            },
            {
              "function": "info",
              "line": 103
            },
            {
              "function": "info",
              "line": 104
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 116
            },
            {
              "function": "get",
              "line": 177
            },
            {
              "function": "info",
              "line": 178
            },
            {
              "function": "info",
              "line": 179
            },
            {
              "function": "info",
              "line": 180
            },
            {
              "function": "upper",
              "line": 83
            },
            {
              "function": "upper",
              "line": 87
            },
            {
              "function": "sleep",
              "line": 107
            },
            {
              "function": "send",
              "line": 117
            },
            {
              "function": "info",
              "line": 121
            },
            {
              "function": "info",
              "line": 182
            },
            {
              "function": "info",
              "line": 184
            },
            {
              "function": "error",
              "line": 189
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "dumps",
              "line": 117
            },
            {
              "function": "len",
              "line": 122
            },
            {
              "function": "info",
              "line": 123
            },
            {
              "function": "info",
              "line": 128
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "info",
              "line": 133
            },
            {
              "function": "lower",
              "line": 127
            },
            {
              "function": "lower",
              "line": 127
            },
            {
              "function": "split",
              "line": 137
            },
            {
              "function": "info",
              "line": 144
            },
            {
              "function": "info",
              "line": 145
            },
            {
              "function": "get",
              "line": 189
            },
            {
              "function": "lower",
              "line": 135
            },
            {
              "function": "lower",
              "line": 135
            },
            {
              "function": "info",
              "line": 147
            },
            {
              "function": "info",
              "line": 154
            },
            {
              "function": "info",
              "line": 155
            },
            {
              "function": "str",
              "line": 182
            },
            {
              "function": "append",
              "line": 140
            },
            {
              "function": "info",
              "line": 141
            },
            {
              "function": "lower",
              "line": 146
            },
            {
              "function": "lower",
              "line": 146
            },
            {
              "function": "info",
              "line": 149
            },
            {
              "function": "info",
              "line": 151
            },
            {
              "function": "info",
              "line": 158
            },
            {
              "function": "info",
              "line": 159
            },
            {
              "function": "strip",
              "line": 140
            },
            {
              "function": "lower",
              "line": 148
            },
            {
              "function": "lower",
              "line": 148
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "info",
              "line": 163
            },
            {
              "function": "strip",
              "line": 141
            },
            {
              "function": "info",
              "line": 167
            },
            {
              "function": "info",
              "line": 169
            },
            {
              "function": "info",
              "line": 173
            },
            {
              "function": "lower",
              "line": 166
            },
            {
              "function": "lower",
              "line": 166
            },
            {
              "function": "upper",
              "line": 173
            }
          ]
        },
        "agent_projects/test_button_implementation.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "backend.agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 12
            },
            {
              "function": "join",
              "line": 12
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "CodeSmithAgent",
              "line": 27
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "_validate_workspace_context",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "TaskRequest",
              "line": 47
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 96
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "CodeSmithAgent",
              "line": 149
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "run",
              "line": 186
            },
            {
              "function": "run",
              "line": 187
            },
            {
              "function": "run",
              "line": 188
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "_check_for_hallucination",
              "line": 62
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "enumerate",
              "line": 117
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "test_button_implementation",
              "line": 186
            },
            {
              "function": "test_orchestrator_decomposition",
              "line": 187
            },
            {
              "function": "test_ai_detection",
              "line": 188
            },
            {
              "function": "execute",
              "line": 56
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "_decompose_task_with_ai",
              "line": 105
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "getcwd",
              "line": 49
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "lower",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "_ai_detect_implementation_request",
              "line": 163
            },
            {
              "function": "print",
              "line": 169
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "len",
              "line": 115
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "any",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "_ai_determine_file_path",
              "line": 168
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "getcwd",
              "line": 168
            },
            {
              "function": "lower",
              "line": 135
            }
          ]
        },
        "agent_projects/test_routing_debug.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "langgraph_system.workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 19
            },
            {
              "type": "from_import",
              "module": "langgraph_system.state",
              "names": [
                "create_initial_state"
              ],
              "line": 28
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 11
            },
            {
              "function": "insert",
              "line": 16
            },
            {
              "function": "join",
              "line": 16
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "create_agent_workflow",
              "line": 22
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "create_initial_state",
              "line": 30
            },
            {
              "function": "append",
              "line": 34
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "enumerate",
              "line": 46
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "run",
              "line": 53
            },
            {
              "function": "exit",
              "line": 54
            },
            {
              "function": "dirname",
              "line": 16
            },
            {
              "function": "_create_execution_plan",
              "line": 43
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "main",
              "line": 53
            },
            {
              "function": "len",
              "line": 45
            }
          ]
        },
        "agent_projects/test_perplexity_integration.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "backend.utils.perplexity_service",
              "names": [
                "PerplexityService"
              ],
              "line": 38
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.research_agent",
              "names": [
                "ResearchAgent"
              ],
              "line": 77
            },
            {
              "type": "from_import",
              "module": "backend.agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 78
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 106
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 13
            },
            {
              "function": "load_dotenv",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "str",
              "line": 13
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "getenv",
              "line": 28
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "run",
              "line": 140
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "PerplexityService",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "test_connection",
              "line": 45
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "ResearchAgent",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "TaskRequest",
              "line": 86
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "test_perplexity_service",
              "line": 116
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "main",
              "line": 140
            },
            {
              "function": "Path",
              "line": 17
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "search_web",
              "line": 53
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "execute",
              "line": 92
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print_exc",
              "line": 107
            },
            {
              "function": "test_research_agent",
              "line": 121
            },
            {
              "function": "getenv",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "Path",
              "line": 13
            },
            {
              "function": "len",
              "line": 57
            },
            {
              "function": "len",
              "line": 58
            },
            {
              "function": "len",
              "line": 96
            },
            {
              "function": "get",
              "line": 58
            }
          ]
        },
        "agent_projects/test_self_diagnosis_simple.py": {
          "functions": [
            {
              "name": "__post_init__",
              "line": 69,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_self_diagnosis_simple.py"
            }
          ],
          "classes": [
            {
              "name": "MockStep",
              "line": 62,
              "methods": [
                "__post_init__"
              ],
              "bases": [],
              "file": "agent_projects/test_self_diagnosis_simple.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "dataclasses",
              "names": [
                "dataclass"
              ],
              "line": 58
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Optional",
                "Any"
              ],
              "line": 59
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.workflow_self_diagnosis",
              "names": [
                "AntiPatternType",
                "KnownAntiPattern",
                "KnownAntiPatternsDatabase",
                "WorkflowInvariants"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "backend.__version__",
              "names": [
                "__version__",
                "__release_tag__"
              ],
              "line": 120
            }
          ],
          "calls": [
            {
              "function": "append",
              "line": 12
            },
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "KnownAntiPatternsDatabase",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "WorkflowInvariants",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "detect_patterns",
              "line": 84
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "detect_patterns",
              "line": 107
            },
            {
              "function": "any",
              "line": 108
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "join",
              "line": 12
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "exit",
              "line": 33
            },
            {
              "function": "MockStep",
              "line": 75
            },
            {
              "function": "MockStep",
              "line": 76
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "MockStep",
              "line": 99
            },
            {
              "function": "MockStep",
              "line": 100
            },
            {
              "function": "MockStep",
              "line": 101
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "abspath",
              "line": 12
            },
            {
              "function": "len",
              "line": 40
            },
            {
              "function": "len",
              "line": 49
            }
          ]
        },
        "agent_projects/test_show_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "run",
              "line": 123
            },
            {
              "function": "connect",
              "line": 15
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "show_architecture_proposal",
              "line": 123
            },
            {
              "function": "send",
              "line": 25
            },
            {
              "function": "dumps",
              "line": 25
            },
            {
              "function": "loads",
              "line": 32
            },
            {
              "function": "get",
              "line": 33
            },
            {
              "function": "wait_for",
              "line": 31
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "items",
              "line": 57
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "get",
              "line": 61
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "enumerate",
              "line": 65
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "recv",
              "line": 31
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "sleep",
              "line": 85
            },
            {
              "function": "send",
              "line": 96
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "dumps",
              "line": 96
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "get",
              "line": 108
            },
            {
              "function": "get",
              "line": 62
            },
            {
              "function": "get",
              "line": 62
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "lower",
              "line": 109
            },
            {
              "function": "str",
              "line": 109
            },
            {
              "function": "open",
              "line": 110
            },
            {
              "function": "write",
              "line": 111
            },
            {
              "function": "str",
              "line": 111
            },
            {
              "function": "str",
              "line": 109
            }
          ]
        },
        "agent_projects/approve_architecture.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "run",
              "line": 50
            },
            {
              "function": "connect",
              "line": 18
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "range",
              "line": 32
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "approve_architecture",
              "line": 50
            },
            {
              "function": "send",
              "line": 28
            },
            {
              "function": "dumps",
              "line": 28
            },
            {
              "function": "loads",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "wait_for",
              "line": 34
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "recv",
              "line": 34
            },
            {
              "function": "get",
              "line": 36
            }
          ]
        },
        "agent_projects/test_intelligent_agents.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "backend.agents.specialized.orchestrator_agent_v2",
              "names": [
                "OrchestratorAgentV2"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "backend.agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 12
            },
            {
              "function": "join",
              "line": 12
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "CodeSmithAgent",
              "line": 49
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "OrchestratorAgentV2",
              "line": 105
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "TaskRequest",
              "line": 112
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "run",
              "line": 148
            },
            {
              "function": "run",
              "line": 149
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "TaskRequest",
              "line": 57
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "enumerate",
              "line": 126
            },
            {
              "function": "test_intelligent_file_creation",
              "line": 148
            },
            {
              "function": "test_orchestrator_decomposition",
              "line": 149
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "_decompose_task_with_ai",
              "line": 119
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "_ai_detect_implementation_request",
              "line": 64
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "_ai_detect_implementation_request",
              "line": 89
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "getcwd",
              "line": 114
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "getcwd",
              "line": 59
            },
            {
              "function": "_ai_determine_file_path",
              "line": 69
            },
            {
              "function": "_enforce_asimov_rule_1",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "len",
              "line": 124
            },
            {
              "function": "any",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "getcwd",
              "line": 69
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "lower",
              "line": 133
            }
          ]
        },
        "agent_projects/send_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "run",
              "line": 56
            },
            {
              "function": "connect",
              "line": 18
            },
            {
              "function": "loads",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "len",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "exit",
              "line": 51
            },
            {
              "function": "send_approval",
              "line": 56
            },
            {
              "function": "recv",
              "line": 20
            },
            {
              "function": "send",
              "line": 31
            },
            {
              "function": "loads",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "len",
              "line": 54
            },
            {
              "function": "dumps",
              "line": 31
            },
            {
              "function": "wait_for",
              "line": 36
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "get",
              "line": 22
            },
            {
              "function": "recv",
              "line": 36
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "get",
              "line": 40
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "get",
              "line": 43
            }
          ]
        },
        "agent_projects/test_architect_progress.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "run",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "test_architect_progress",
              "line": 120
            },
            {
              "function": "connect",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "time",
              "line": 36
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "send",
              "line": 30
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "items",
              "line": 106
            },
            {
              "function": "len",
              "line": 121
            },
            {
              "function": "dumps",
              "line": 30
            },
            {
              "function": "get_event_loop",
              "line": 36
            },
            {
              "function": "time",
              "line": 39
            },
            {
              "function": "loads",
              "line": 42
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "wait_for",
              "line": 41
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "strftime",
              "line": 49
            },
            {
              "function": "append",
              "line": 50
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "len",
              "line": 85
            },
            {
              "function": "get",
              "line": 92
            },
            {
              "function": "get_event_loop",
              "line": 39
            },
            {
              "function": "recv",
              "line": 41
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "get",
              "line": 94
            },
            {
              "function": "now",
              "line": 49
            },
            {
              "function": "split",
              "line": 58
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "any",
              "line": 66
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "get",
              "line": 96
            },
            {
              "function": "len",
              "line": 59
            },
            {
              "function": "strip",
              "line": 60
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 71
            },
            {
              "function": "get",
              "line": 100
            },
            {
              "function": "len",
              "line": 61
            },
            {
              "function": "get",
              "line": 102
            }
          ]
        },
        "agent_projects/test_connection.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 3
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 4
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 5
            }
          ],
          "calls": [
            {
              "function": "run",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "test_connection",
              "line": 34
            },
            {
              "function": "connect",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "loads",
              "line": 25
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "send",
              "line": 20
            },
            {
              "function": "wait_for",
              "line": 24
            },
            {
              "function": "dumps",
              "line": 20
            },
            {
              "function": "recv",
              "line": 24
            },
            {
              "function": "get",
              "line": 26
            },
            {
              "function": "str",
              "line": 26
            },
            {
              "function": "get",
              "line": 26
            }
          ]
        },
        "agent_projects/test_chat_approval.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 13,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_chat_approval.py"
            },
            {
              "name": "print_summary",
              "line": 117,
              "async": false,
              "calls": [
                "print",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_chat_approval.py"
            }
          ],
          "classes": [
            {
              "name": "ChatApprovalTest",
              "line": 12,
              "methods": [
                "__init__",
                "print_summary"
              ],
              "bases": [],
              "file": "agent_projects/test_chat_approval.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            }
          ],
          "calls": [
            {
              "function": "ChatApprovalTest",
              "line": 143
            },
            {
              "function": "run",
              "line": 153
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print_summary",
              "line": 150
            },
            {
              "function": "main",
              "line": 153
            },
            {
              "function": "connect",
              "line": 27
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "test_chat_approval",
              "line": 146
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "send",
              "line": 37
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "dumps",
              "line": 37
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "append",
              "line": 46
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "len",
              "line": 127
            },
            {
              "function": "strftime",
              "line": 32
            },
            {
              "function": "wait_for",
              "line": 44
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "now",
              "line": 32
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "sleep",
              "line": 73
            },
            {
              "function": "send",
              "line": 82
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "dumps",
              "line": 82
            },
            {
              "function": "lower",
              "line": 91
            },
            {
              "function": "lower",
              "line": 91
            },
            {
              "function": "get",
              "line": 102
            }
          ]
        },
        "agent_projects/test_reviewer_validation.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 265
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 292
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 16
            },
            {
              "function": "getLogger",
              "line": 21
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "run",
              "line": 296
            },
            {
              "function": "reviewer_validation_test",
              "line": 296
            },
            {
              "function": "StreamHandler",
              "line": 19
            },
            {
              "function": "connect",
              "line": 40
            },
            {
              "function": "info",
              "line": 41
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "info",
              "line": 49
            },
            {
              "function": "info",
              "line": 58
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "info",
              "line": 61
            },
            {
              "function": "info",
              "line": 62
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "print",
              "line": 233
            },
            {
              "function": "print",
              "line": 234
            },
            {
              "function": "print",
              "line": 235
            },
            {
              "function": "print",
              "line": 236
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "print",
              "line": 241
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 258
            },
            {
              "function": "items",
              "line": 259
            },
            {
              "function": "print",
              "line": 262
            },
            {
              "function": "exists",
              "line": 267
            },
            {
              "function": "print",
              "line": 286
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print",
              "line": 288
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "send",
              "line": 64
            },
            {
              "function": "print",
              "line": 243
            },
            {
              "function": "set",
              "line": 244
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "print",
              "line": 260
            },
            {
              "function": "listdir",
              "line": 268
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "print",
              "line": 284
            },
            {
              "function": "format_exc",
              "line": 293
            },
            {
              "function": "strftime",
              "line": 46
            },
            {
              "function": "dumps",
              "line": 64
            },
            {
              "function": "loads",
              "line": 81
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "get",
              "line": 84
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "print",
              "line": 245
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "getsize",
              "line": 271
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 276
            },
            {
              "function": "wait_for",
              "line": 80
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "len",
              "line": 236
            },
            {
              "function": "len",
              "line": 239
            },
            {
              "function": "len",
              "line": 256
            },
            {
              "function": "join",
              "line": 271
            },
            {
              "function": "any",
              "line": 278
            },
            {
              "function": "now",
              "line": 46
            },
            {
              "function": "recv",
              "line": 80
            },
            {
              "function": "get",
              "line": 89
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "len",
              "line": 243
            },
            {
              "function": "any",
              "line": 279
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "get",
              "line": 102
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "set",
              "line": 243
            },
            {
              "function": "title",
              "line": 245
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "lower",
              "line": 117
            },
            {
              "function": "split",
              "line": 118
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "print",
              "line": 214
            },
            {
              "function": "print",
              "line": 217
            },
            {
              "function": "print",
              "line": 221
            },
            {
              "function": "lower",
              "line": 278
            },
            {
              "function": "any",
              "line": 119
            },
            {
              "function": "any",
              "line": 130
            },
            {
              "function": "replace",
              "line": 245
            },
            {
              "function": "lower",
              "line": 279
            },
            {
              "function": "append",
              "line": 120
            },
            {
              "function": "len",
              "line": 122
            },
            {
              "function": "append",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "lower",
              "line": 151
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "any",
              "line": 185
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "strip",
              "line": 120
            },
            {
              "function": "lower",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "append",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "append",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "append",
              "line": 165
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "append",
              "line": 169
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "append",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "append",
              "line": 177
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "append",
              "line": 181
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "any",
              "line": 188
            },
            {
              "function": "append",
              "line": 198
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "lower",
              "line": 119
            },
            {
              "function": "lower",
              "line": 130
            },
            {
              "function": "lower",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "print",
              "line": 205
            },
            {
              "function": "print",
              "line": 206
            },
            {
              "function": "len",
              "line": 132
            },
            {
              "function": "lower",
              "line": 137
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "lower",
              "line": 204
            },
            {
              "function": "lower",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "len",
              "line": 199
            },
            {
              "function": "lower",
              "line": 141
            },
            {
              "function": "print",
              "line": 142
            }
          ]
        },
        "agent_projects/test_complex_workflow_simulation.py": {
          "functions": [
            {
              "name": "simulate_query_classification",
              "line": 45,
              "async": false,
              "calls": [],
              "parameters": [
                "query"
              ],
              "decorators": [],
              "file": "agent_projects/test_complex_workflow_simulation.py"
            },
            {
              "name": "simulate_execution_plan",
              "line": 60,
              "async": false,
              "calls": [],
              "parameters": [
                "query"
              ],
              "decorators": [],
              "file": "agent_projects/test_complex_workflow_simulation.py"
            },
            {
              "name": "simulate_workflow_execution",
              "line": 137,
              "async": false,
              "calls": [
                "simulate_query_classification",
                "join",
                "set",
                "enumerate",
                "simulate_execution_plan",
                "upper",
                "print",
                "len",
                "all",
                "append"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_complex_workflow_simulation.py"
            },
            {
              "name": "evaluate_complexity",
              "line": 235,
              "async": false,
              "calls": [
                "print",
                "isinstance",
                "items",
                "join"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_complex_workflow_simulation.py"
            },
            {
              "name": "main",
              "line": 277,
              "async": false,
              "calls": [
                "print",
                "evaluate_complexity",
                "simulate_workflow_execution",
                "len"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_complex_workflow_simulation.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any",
                "List"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "backend.__version__",
              "names": [
                "__version__"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 14
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "join",
              "line": 14
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 144
            },
            {
              "function": "simulate_query_classification",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "simulate_execution_plan",
              "line": 154
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "enumerate",
              "line": 174
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 211
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "items",
              "line": 260
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "print",
              "line": 275
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 281
            },
            {
              "function": "simulate_workflow_execution",
              "line": 284
            },
            {
              "function": "evaluate_complexity",
              "line": 287
            },
            {
              "function": "print",
              "line": 290
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "print",
              "line": 294
            },
            {
              "function": "print",
              "line": 295
            },
            {
              "function": "print",
              "line": 296
            },
            {
              "function": "print",
              "line": 297
            },
            {
              "function": "print",
              "line": 299
            },
            {
              "function": "print",
              "line": 300
            },
            {
              "function": "print",
              "line": 301
            },
            {
              "function": "print",
              "line": 302
            },
            {
              "function": "print",
              "line": 303
            },
            {
              "function": "print",
              "line": 305
            },
            {
              "function": "print",
              "line": 306
            },
            {
              "function": "print",
              "line": 307
            },
            {
              "function": "print",
              "line": 308
            },
            {
              "function": "print",
              "line": 309
            },
            {
              "function": "print",
              "line": 310
            },
            {
              "function": "print",
              "line": 312
            },
            {
              "function": "print",
              "line": 313
            },
            {
              "function": "print",
              "line": 314
            },
            {
              "function": "print",
              "line": 315
            },
            {
              "function": "print",
              "line": 316
            },
            {
              "function": "print",
              "line": 318
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "print",
              "line": 320
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "main",
              "line": 324
            },
            {
              "function": "dirname",
              "line": 14
            },
            {
              "function": "all",
              "line": 176
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "print",
              "line": 180
            },
            {
              "function": "print",
              "line": 181
            },
            {
              "function": "print",
              "line": 226
            },
            {
              "function": "len",
              "line": 231
            },
            {
              "function": "len",
              "line": 232
            },
            {
              "function": "print",
              "line": 261
            },
            {
              "function": "print",
              "line": 262
            },
            {
              "function": "isinstance",
              "line": 264
            },
            {
              "function": "join",
              "line": 162
            },
            {
              "function": "append",
              "line": 165
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "append",
              "line": 205
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "items",
              "line": 265
            },
            {
              "function": "len",
              "line": 155
            },
            {
              "function": "len",
              "line": 156
            },
            {
              "function": "len",
              "line": 167
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 266
            },
            {
              "function": "len",
              "line": 295
            },
            {
              "function": "set",
              "line": 156
            },
            {
              "function": "len",
              "line": 178
            },
            {
              "function": "upper",
              "line": 178
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "join",
              "line": 266
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "print",
              "line": 200
            },
            {
              "function": "print",
              "line": 202
            },
            {
              "function": "print",
              "line": 203
            }
          ]
        },
        "agent_projects/test_architect_json.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "run",
              "line": 115
            },
            {
              "function": "exit",
              "line": 116
            },
            {
              "function": "test_architect_json",
              "line": 115
            },
            {
              "function": "strftime",
              "line": 14
            },
            {
              "function": "connect",
              "line": 24
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "time",
              "line": 41
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "send",
              "line": 35
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "now",
              "line": 14
            },
            {
              "function": "dumps",
              "line": 35
            },
            {
              "function": "get_event_loop",
              "line": 41
            },
            {
              "function": "time",
              "line": 46
            },
            {
              "function": "loads",
              "line": 49
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "wait_for",
              "line": 48
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "isinstance",
              "line": 60
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "get",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "get_event_loop",
              "line": 46
            },
            {
              "function": "recv",
              "line": 48
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "lower",
              "line": 65
            },
            {
              "function": "len",
              "line": 58
            },
            {
              "function": "type",
              "line": 59
            },
            {
              "function": "str",
              "line": 58
            },
            {
              "function": "list",
              "line": 61
            },
            {
              "function": "keys",
              "line": 61
            }
          ]
        },
        "agent_projects/test_no_cache.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "run",
              "line": 107
            },
            {
              "function": "test_no_cache",
              "line": 107
            },
            {
              "function": "connect",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "isoformat",
              "line": 20
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "time",
              "line": 35
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "send",
              "line": 30
            },
            {
              "function": "get",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "now",
              "line": 20
            },
            {
              "function": "dumps",
              "line": 30
            },
            {
              "function": "get_event_loop",
              "line": 35
            },
            {
              "function": "time",
              "line": 40
            },
            {
              "function": "loads",
              "line": 43
            },
            {
              "function": "wait_for",
              "line": 42
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "strftime",
              "line": 47
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "get_event_loop",
              "line": 40
            },
            {
              "function": "recv",
              "line": 42
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "get",
              "line": 92
            },
            {
              "function": "get",
              "line": 93
            },
            {
              "function": "get",
              "line": 94
            },
            {
              "function": "get",
              "line": 95
            },
            {
              "function": "now",
              "line": 47
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 74
            }
          ]
        },
        "agent_projects/test_simple_workflow.py": {
          "functions": [
            {
              "name": "log",
              "line": 13,
              "async": false,
              "calls": [
                "print",
                "strftime",
                "now"
              ],
              "parameters": [
                "msg",
                "emoji"
              ],
              "decorators": [],
              "file": "agent_projects/test_simple_workflow.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 109
            }
          ],
          "calls": [
            {
              "function": "run",
              "line": 113
            },
            {
              "function": "strftime",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "log",
              "line": 18
            },
            {
              "function": "test_workflow",
              "line": 113
            },
            {
              "function": "connect",
              "line": 19
            },
            {
              "function": "log",
              "line": 20
            },
            {
              "function": "loads",
              "line": 24
            },
            {
              "function": "get",
              "line": 25
            },
            {
              "function": "log",
              "line": 26
            },
            {
              "function": "log",
              "line": 33
            },
            {
              "function": "log",
              "line": 40
            },
            {
              "function": "time",
              "line": 43
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "log",
              "line": 108
            },
            {
              "function": "print_exc",
              "line": 110
            },
            {
              "function": "now",
              "line": 14
            },
            {
              "function": "recv",
              "line": 23
            },
            {
              "function": "send",
              "line": 29
            },
            {
              "function": "send",
              "line": 36
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "dumps",
              "line": 29
            },
            {
              "function": "dumps",
              "line": 36
            },
            {
              "function": "get_event_loop",
              "line": 43
            },
            {
              "function": "time",
              "line": 48
            },
            {
              "function": "loads",
              "line": 51
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "wait_for",
              "line": 50
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "log",
              "line": 56
            },
            {
              "function": "log",
              "line": 89
            },
            {
              "function": "get_event_loop",
              "line": 48
            },
            {
              "function": "recv",
              "line": 50
            },
            {
              "function": "log",
              "line": 60
            },
            {
              "function": "log",
              "line": 68
            },
            {
              "function": "send",
              "line": 62
            },
            {
              "function": "log",
              "line": 71
            },
            {
              "function": "dumps",
              "line": 62
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "log",
              "line": 77
            },
            {
              "function": "log",
              "line": 81
            },
            {
              "function": "log",
              "line": 85
            },
            {
              "function": "get",
              "line": 85
            }
          ]
        },
        "agent_projects/test_progress_enhanced.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "run",
              "line": 138
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "test_infrastructure_progress",
              "line": 138
            },
            {
              "function": "connect",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "time",
              "line": 36
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "send",
              "line": 30
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "items",
              "line": 112
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "len",
              "line": 141
            },
            {
              "function": "dumps",
              "line": 30
            },
            {
              "function": "get_event_loop",
              "line": 36
            },
            {
              "function": "time",
              "line": 40
            },
            {
              "function": "loads",
              "line": 43
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "len",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "wait_for",
              "line": 42
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "append",
              "line": 52
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "len",
              "line": 107
            },
            {
              "function": "get_event_loop",
              "line": 40
            },
            {
              "function": "recv",
              "line": 42
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "strftime",
              "line": 51
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "lower",
              "line": 116
            },
            {
              "function": "len",
              "line": 118
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "now",
              "line": 51
            },
            {
              "function": "lower",
              "line": 78
            },
            {
              "function": "lower",
              "line": 78
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "len",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "len",
              "line": 123
            }
          ]
        },
        "agent_projects/test_playwright_review.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 181
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "exists",
              "line": 22
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "sleep",
              "line": 187
            },
            {
              "function": "run",
              "line": 189
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "remove",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "test_playwright_review",
              "line": 189
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "connect",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "set",
              "line": 46
            },
            {
              "function": "time",
              "line": 55
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "sorted",
              "line": 132
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "print",
              "line": 138
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "all",
              "line": 161
            },
            {
              "function": "items",
              "line": 163
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "print",
              "line": 180
            },
            {
              "function": "print_exc",
              "line": 182
            },
            {
              "function": "recv",
              "line": 31
            },
            {
              "function": "send",
              "line": 43
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "getsize",
              "line": 144
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "values",
              "line": 161
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 169
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "print",
              "line": 175
            },
            {
              "function": "strftime",
              "line": 34
            },
            {
              "function": "dumps",
              "line": 43
            },
            {
              "function": "time",
              "line": 60
            },
            {
              "function": "loads",
              "line": 63
            },
            {
              "function": "lower",
              "line": 85
            },
            {
              "function": "open",
              "line": 145
            },
            {
              "function": "len",
              "line": 146
            },
            {
              "function": "len",
              "line": 155
            },
            {
              "function": "wait_for",
              "line": 62
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "get",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "int",
              "line": 120
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "len",
              "line": 131
            },
            {
              "function": "readlines",
              "line": 146
            },
            {
              "function": "now",
              "line": 34
            },
            {
              "function": "recv",
              "line": 62
            },
            {
              "function": "add",
              "line": 69
            },
            {
              "function": "strftime",
              "line": 70
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "send",
              "line": 81
            },
            {
              "function": "str",
              "line": 85
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "exists",
              "line": 92
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "dumps",
              "line": 81
            },
            {
              "function": "sleep",
              "line": 91
            },
            {
              "function": "getsize",
              "line": 93
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "time",
              "line": 120
            },
            {
              "function": "now",
              "line": 70
            },
            {
              "function": "get",
              "line": 116
            },
            {
              "function": "upper",
              "line": 71
            },
            {
              "function": "len",
              "line": 122
            }
          ]
        },
        "agent_projects/test_orchestrator_steps.py": {
          "functions": [
            {
              "name": "test_development_task_detection",
              "line": 28,
              "async": false,
              "calls": [
                "enumerate",
                "info",
                "len",
                "_create_execution_steps"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_orchestrator_steps.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "langgraph_system.workflow",
              "names": [
                "_create_execution_steps"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 17
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 14
            },
            {
              "function": "basicConfig",
              "line": 20
            },
            {
              "function": "getLogger",
              "line": 25
            },
            {
              "function": "str",
              "line": 14
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "info",
              "line": 55
            },
            {
              "function": "info",
              "line": 56
            },
            {
              "function": "enumerate",
              "line": 58
            },
            {
              "function": "info",
              "line": 81
            },
            {
              "function": "test_development_task_detection",
              "line": 85
            },
            {
              "function": "Path",
              "line": 13
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "_create_execution_steps",
              "line": 62
            },
            {
              "function": "len",
              "line": 69
            },
            {
              "function": "info",
              "line": 74
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "enumerate",
              "line": 78
            },
            {
              "function": "info",
              "line": 79
            }
          ]
        },
        "agent_projects/test_agent_collaboration.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.state",
              "names": [
                "ExecutionStep"
              ],
              "line": 13
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 131
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 10
            },
            {
              "function": "dirname",
              "line": 10
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "create_agent_workflow",
              "line": 30
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "enumerate",
              "line": 50
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "create_agent_workflow",
              "line": 115
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "enumerate",
              "line": 127
            },
            {
              "function": "exists",
              "line": 135
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 150
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "create_agent_workflow",
              "line": 165
            },
            {
              "function": "any",
              "line": 174
            },
            {
              "function": "all",
              "line": 179
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "get",
              "line": 185
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "print",
              "line": 204
            },
            {
              "function": "print",
              "line": 205
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "print",
              "line": 224
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "print",
              "line": 226
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "print",
              "line": 236
            },
            {
              "function": "print",
              "line": 237
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "print",
              "line": 271
            },
            {
              "function": "print",
              "line": 272
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "items",
              "line": 275
            },
            {
              "function": "sum",
              "line": 279
            },
            {
              "function": "len",
              "line": 280
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "run",
              "line": 292
            },
            {
              "function": "abspath",
              "line": 10
            },
            {
              "function": "execute",
              "line": 40
            },
            {
              "function": "get",
              "line": 50
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "join",
              "line": 70
            },
            {
              "function": "index",
              "line": 79
            },
            {
              "function": "index",
              "line": 80
            },
            {
              "function": "execute",
              "line": 117
            },
            {
              "function": "get",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "walk",
              "line": 136
            },
            {
              "function": "print",
              "line": 143
            },
            {
              "function": "len",
              "line": 146
            },
            {
              "function": "get",
              "line": 147
            },
            {
              "function": "execute",
              "line": 167
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "exists",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "open",
              "line": 213
            },
            {
              "function": "read",
              "line": 214
            },
            {
              "function": "print",
              "line": 277
            },
            {
              "function": "values",
              "line": 279
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "main",
              "line": 292
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "test_reviewer_fixer_collaboration",
              "line": 244
            },
            {
              "function": "print",
              "line": 246
            },
            {
              "function": "test_tetris_workflow",
              "line": 251
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "test_workflow_completion_bug",
              "line": 258
            },
            {
              "function": "print",
              "line": 260
            },
            {
              "function": "test_settings_env_sync",
              "line": 265
            },
            {
              "function": "print",
              "line": 267
            },
            {
              "function": "print",
              "line": 287
            },
            {
              "function": "print",
              "line": 289
            },
            {
              "function": "str",
              "line": 61
            },
            {
              "function": "len",
              "line": 84
            },
            {
              "function": "endswith",
              "line": 138
            },
            {
              "function": "len",
              "line": 141
            },
            {
              "function": "get",
              "line": 176
            },
            {
              "function": "get",
              "line": 181
            },
            {
              "function": "upper",
              "line": 58
            },
            {
              "function": "append",
              "line": 139
            },
            {
              "function": "upper",
              "line": 277
            },
            {
              "function": "join",
              "line": 139
            }
          ]
        },
        "agent_projects/test_agents_fixed.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 109
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "run",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "test_multi_agents",
              "line": 114
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "connect",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "set",
              "line": 37
            },
            {
              "function": "now",
              "line": 39
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print_exc",
              "line": 110
            },
            {
              "function": "recv",
              "line": 22
            },
            {
              "function": "send",
              "line": 32
            },
            {
              "function": "len",
              "line": 90
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "dumps",
              "line": 32
            },
            {
              "function": "loads",
              "line": 46
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "strftime",
              "line": 28
            },
            {
              "function": "now",
              "line": 43
            },
            {
              "function": "wait_for",
              "line": 45
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "lower",
              "line": 72
            },
            {
              "function": "print",
              "line": 74
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "join",
              "line": 85
            },
            {
              "function": "len",
              "line": 86
            },
            {
              "function": "recv",
              "line": 45
            },
            {
              "function": "add",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "send",
              "line": 63
            },
            {
              "function": "lower",
              "line": 67
            },
            {
              "function": "lower",
              "line": 67
            },
            {
              "function": "sorted",
              "line": 85
            },
            {
              "function": "len",
              "line": 103
            },
            {
              "function": "now",
              "line": 28
            },
            {
              "function": "dumps",
              "line": 63
            },
            {
              "function": "str",
              "line": 72
            },
            {
              "function": "str",
              "line": 67
            },
            {
              "function": "str",
              "line": 67
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "upper",
              "line": 53
            }
          ]
        },
        "agent_projects/test_multi_agent_workflow.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "langgraph_system.workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "agents.specialized.orchestrator_agent",
              "names": [
                "OrchestratorAgent"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 22
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 23
            },
            {
              "type": "from_import",
              "module": "agents.specialized.reviewer_gpt_agent",
              "names": [
                "ReviewerGPTAgent"
              ],
              "line": 24
            },
            {
              "type": "from_import",
              "module": "agents.specialized.fixerbot_agent",
              "names": [
                "FixerBotAgent"
              ],
              "line": 25
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 107
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 92
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 18
            },
            {
              "function": "basicConfig",
              "line": 28
            },
            {
              "function": "getLogger",
              "line": 34
            },
            {
              "function": "str",
              "line": 18
            },
            {
              "function": "info",
              "line": 41
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "info",
              "line": 43
            },
            {
              "function": "info",
              "line": 46
            },
            {
              "function": "create_agent_workflow",
              "line": 47
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "info",
              "line": 52
            },
            {
              "function": "info",
              "line": 101
            },
            {
              "function": "info",
              "line": 102
            },
            {
              "function": "info",
              "line": 103
            },
            {
              "function": "OrchestratorAgent",
              "line": 105
            },
            {
              "function": "TaskRequest",
              "line": 109
            },
            {
              "function": "info",
              "line": 114
            },
            {
              "function": "info",
              "line": 118
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "info",
              "line": 138
            },
            {
              "function": "info",
              "line": 150
            },
            {
              "function": "info",
              "line": 151
            },
            {
              "function": "info",
              "line": 152
            },
            {
              "function": "info",
              "line": 153
            },
            {
              "function": "run",
              "line": 158
            },
            {
              "function": "Path",
              "line": 17
            },
            {
              "function": "info",
              "line": 62
            },
            {
              "function": "info",
              "line": 63
            },
            {
              "function": "info",
              "line": 64
            },
            {
              "function": "get",
              "line": 67
            },
            {
              "function": "info",
              "line": 68
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "info",
              "line": 76
            },
            {
              "function": "execute",
              "line": 116
            },
            {
              "function": "info",
              "line": 124
            },
            {
              "function": "warning",
              "line": 128
            },
            {
              "function": "test_simple_orchestration",
              "line": 141
            },
            {
              "function": "sleep",
              "line": 144
            },
            {
              "function": "main",
              "line": 158
            },
            {
              "function": "StreamHandler",
              "line": 31
            },
            {
              "function": "execute",
              "line": 55
            },
            {
              "function": "get",
              "line": 70
            },
            {
              "function": "info",
              "line": 72
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "get",
              "line": 79
            },
            {
              "function": "info",
              "line": 80
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "info",
              "line": 84
            },
            {
              "function": "error",
              "line": 87
            },
            {
              "function": "error",
              "line": 91
            },
            {
              "function": "print_exc",
              "line": 93
            },
            {
              "function": "info",
              "line": 126
            },
            {
              "function": "str",
              "line": 71
            },
            {
              "function": "len",
              "line": 68
            },
            {
              "function": "get",
              "line": 71
            },
            {
              "function": "len",
              "line": 76
            },
            {
              "function": "len",
              "line": 124
            },
            {
              "function": "get",
              "line": 87
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 126
            }
          ]
        },
        "agent_projects/test_final.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 2
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 3
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 4
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 5
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "run",
              "line": 79
            },
            {
              "function": "final_test",
              "line": 79
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "connect",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "set",
              "line": 31
            },
            {
              "function": "now",
              "line": 33
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "recv",
              "line": 18
            },
            {
              "function": "send",
              "line": 28
            },
            {
              "function": "len",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "dumps",
              "line": 28
            },
            {
              "function": "loads",
              "line": 38
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "strftime",
              "line": 24
            },
            {
              "function": "now",
              "line": 35
            },
            {
              "function": "wait_for",
              "line": 37
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "print",
              "line": 47
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "recv",
              "line": 37
            },
            {
              "function": "add",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "send",
              "line": 53
            },
            {
              "function": "join",
              "line": 63
            },
            {
              "function": "now",
              "line": 24
            },
            {
              "function": "dumps",
              "line": 53
            },
            {
              "function": "get",
              "line": 57
            },
            {
              "function": "upper",
              "line": 44
            }
          ]
        },
        "agent_projects/test_tetris_workflow.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 17,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            },
            {
              "name": "record_agent",
              "line": 28,
              "async": false,
              "calls": [
                "print",
                "isoformat",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "agent_name",
                "timestamp"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            },
            {
              "name": "record_output",
              "line": 38,
              "async": false,
              "calls": [],
              "parameters": [
                "self",
                "agent_name",
                "output"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            },
            {
              "name": "record_quality_score",
              "line": 42,
              "async": false,
              "calls": [
                "print",
                "isoformat",
                "append",
                "now"
              ],
              "parameters": [
                "self",
                "score",
                "agent"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            },
            {
              "name": "record_message",
              "line": 51,
              "async": false,
              "calls": [
                "append"
              ],
              "parameters": [
                "self",
                "msg"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            },
            {
              "name": "generate_report",
              "line": 55,
              "async": false,
              "calls": [
                "items",
                "total_seconds",
                "isinstance",
                "enumerate",
                "dumps",
                "upper",
                "len",
                "str"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_workflow.py"
            }
          ],
          "classes": [
            {
              "name": "WorkflowTracker",
              "line": 14,
              "methods": [
                "__init__",
                "record_agent",
                "record_output",
                "record_quality_score",
                "record_message",
                "generate_report"
              ],
              "bases": [],
              "file": "agent_projects/test_tetris_workflow.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "List",
                "Dict",
                "Any"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 261
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 249
            }
          ],
          "calls": [
            {
              "function": "WorkflowTracker",
              "line": 124
            },
            {
              "function": "now",
              "line": 125
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 129
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 274
            },
            {
              "function": "run",
              "line": 276
            },
            {
              "function": "append",
              "line": 32
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "append",
              "line": 44
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "append",
              "line": 53
            },
            {
              "function": "enumerate",
              "line": 76
            },
            {
              "function": "items",
              "line": 89
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "makedirs",
              "line": 262
            },
            {
              "function": "print",
              "line": 265
            },
            {
              "function": "test_tetris_workflow",
              "line": 276
            },
            {
              "function": "isoformat",
              "line": 31
            },
            {
              "function": "total_seconds",
              "line": 57
            },
            {
              "function": "enumerate",
              "line": 81
            },
            {
              "function": "isinstance",
              "line": 91
            },
            {
              "function": "connect",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 166
            },
            {
              "function": "print",
              "line": 168
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "print",
              "line": 171
            },
            {
              "function": "print",
              "line": 248
            },
            {
              "function": "print_exc",
              "line": 250
            },
            {
              "function": "generate_report",
              "line": 256
            },
            {
              "function": "dirname",
              "line": 262
            },
            {
              "function": "open",
              "line": 263
            },
            {
              "function": "write",
              "line": 264
            },
            {
              "function": "print",
              "line": 267
            },
            {
              "function": "isoformat",
              "line": 47
            },
            {
              "function": "len",
              "line": 67
            },
            {
              "function": "len",
              "line": 71
            },
            {
              "function": "len",
              "line": 98
            },
            {
              "function": "isoformat",
              "line": 129
            },
            {
              "function": "isoformat",
              "line": 163
            },
            {
              "function": "send",
              "line": 167
            },
            {
              "function": "now",
              "line": 245
            },
            {
              "function": "now",
              "line": 253
            },
            {
              "function": "generate_report",
              "line": 264
            },
            {
              "function": "now",
              "line": 31
            },
            {
              "function": "upper",
              "line": 90
            },
            {
              "function": "len",
              "line": 106
            },
            {
              "function": "dumps",
              "line": 167
            },
            {
              "function": "loads",
              "line": 179
            },
            {
              "function": "record_message",
              "line": 180
            },
            {
              "function": "get",
              "line": 182
            },
            {
              "function": "now",
              "line": 47
            },
            {
              "function": "dumps",
              "line": 92
            },
            {
              "function": "str",
              "line": 94
            },
            {
              "function": "now",
              "line": 163
            },
            {
              "function": "len",
              "line": 166
            },
            {
              "function": "wait_for",
              "line": 177
            },
            {
              "function": "get",
              "line": 186
            },
            {
              "function": "get",
              "line": 187
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "record_agent",
              "line": 189
            },
            {
              "function": "print",
              "line": 234
            },
            {
              "function": "print",
              "line": 237
            },
            {
              "function": "print",
              "line": 241
            },
            {
              "function": "recv",
              "line": 177
            },
            {
              "function": "get",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "record_agent",
              "line": 194
            },
            {
              "function": "get",
              "line": 197
            },
            {
              "function": "get",
              "line": 198
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "record_output",
              "line": 200
            },
            {
              "function": "get",
              "line": 198
            },
            {
              "function": "get",
              "line": 203
            },
            {
              "function": "get",
              "line": 204
            },
            {
              "function": "record_quality_score",
              "line": 205
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "dumps",
              "line": 234
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "str",
              "line": 199
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "now",
              "line": 217
            },
            {
              "function": "get",
              "line": 221
            },
            {
              "function": "print",
              "line": 222
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "len",
              "line": 229
            },
            {
              "function": "print",
              "line": 230
            },
            {
              "function": "len",
              "line": 228
            }
          ]
        },
        "agent_projects/test_query_class.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 2
            },
            {
              "type": "from_import",
              "module": "langgraph_system.query_classifier",
              "names": [
                "EnhancedQueryClassifier"
              ],
              "line": 5
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 3
            },
            {
              "function": "EnhancedQueryClassifier",
              "line": 7
            },
            {
              "function": "classify_query",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            }
          ]
        },
        "agent_projects/test_system.py": {
          "functions": [
            {
              "name": "print_test",
              "line": 30,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "name",
                "status",
                "message"
              ],
              "decorators": [],
              "file": "agent_projects/test_system.py"
            },
            {
              "name": "print_section",
              "line": 36,
              "async": false,
              "calls": [
                "print"
              ],
              "parameters": [
                "title"
              ],
              "decorators": [],
              "file": "agent_projects/test_system.py"
            },
            {
              "name": "__init__",
              "line": 206,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_system.py"
            }
          ],
          "classes": [
            {
              "name": "Colors",
              "line": 22,
              "methods": [],
              "bases": [],
              "file": "agent_projects/test_system.py"
            },
            {
              "name": "MockAgent",
              "line": 205,
              "methods": [
                "__init__"
              ],
              "bases": [],
              "file": "agent_projects/test_system.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "orchestration.master_dispatcher",
              "names": [
                "MasterDispatcher"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "orchestration.intent_classifier",
              "names": [
                "IntentClassifier"
              ],
              "line": 16
            },
            {
              "type": "from_import",
              "module": "orchestration.workflow_generator",
              "names": [
                "WorkflowGenerator"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "orchestration.execution_engine",
              "names": [
                "ExecutionEngine"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "orchestration.learning_system",
              "names": [
                "LearningSystem"
              ],
              "line": 19
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 13
            },
            {
              "function": "dirname",
              "line": 13
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print_section",
              "line": 44
            },
            {
              "function": "IntentClassifier",
              "line": 46
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print_section",
              "line": 76
            },
            {
              "function": "WorkflowGenerator",
              "line": 78
            },
            {
              "function": "print_test",
              "line": 111
            },
            {
              "function": "print_test",
              "line": 112
            },
            {
              "function": "print_test",
              "line": 113
            },
            {
              "function": "print_test",
              "line": 114
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print_section",
              "line": 131
            },
            {
              "function": "LearningSystem",
              "line": 133
            },
            {
              "function": "print_test",
              "line": 151
            },
            {
              "function": "suggest_workflow",
              "line": 155
            },
            {
              "function": "print_test",
              "line": 157
            },
            {
              "function": "print_test",
              "line": 162
            },
            {
              "function": "get_intent_statistics",
              "line": 166
            },
            {
              "function": "print_test",
              "line": 168
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print_section",
              "line": 177
            },
            {
              "function": "ExecutionEngine",
              "line": 179
            },
            {
              "function": "len",
              "line": 226
            },
            {
              "function": "get",
              "line": 227
            },
            {
              "function": "print_test",
              "line": 229
            },
            {
              "function": "print_test",
              "line": 231
            },
            {
              "function": "print_test",
              "line": 233
            },
            {
              "function": "print_test",
              "line": 235
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "print_section",
              "line": 244
            },
            {
              "function": "print",
              "line": 277
            },
            {
              "function": "print",
              "line": 278
            },
            {
              "function": "print",
              "line": 279
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 281
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "append",
              "line": 287
            },
            {
              "function": "append",
              "line": 288
            },
            {
              "function": "append",
              "line": 289
            },
            {
              "function": "append",
              "line": 290
            },
            {
              "function": "append",
              "line": 291
            },
            {
              "function": "print_section",
              "line": 294
            },
            {
              "function": "sum",
              "line": 296
            },
            {
              "function": "len",
              "line": 297
            },
            {
              "function": "print",
              "line": 305
            },
            {
              "function": "print",
              "line": 308
            },
            {
              "function": "print",
              "line": 322
            },
            {
              "function": "print",
              "line": 323
            },
            {
              "function": "run",
              "line": 328
            },
            {
              "function": "exit",
              "line": 329
            },
            {
              "function": "abspath",
              "line": 13
            },
            {
              "function": "print_test",
              "line": 65
            },
            {
              "function": "len",
              "line": 72
            },
            {
              "function": "generate",
              "line": 98
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "get",
              "line": 111
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "record_execution",
              "line": 147
            },
            {
              "function": "len",
              "line": 150
            },
            {
              "function": "get_agent_performance",
              "line": 161
            },
            {
              "function": "len",
              "line": 167
            },
            {
              "function": "MockAgent",
              "line": 218
            },
            {
              "function": "execute",
              "line": 221
            },
            {
              "function": "get",
              "line": 226
            },
            {
              "function": "MasterDispatcher",
              "line": 250
            },
            {
              "function": "print_test",
              "line": 258
            },
            {
              "function": "print_test",
              "line": 259
            },
            {
              "function": "print_test",
              "line": 260
            },
            {
              "function": "print_test",
              "line": 261
            },
            {
              "function": "len",
              "line": 264
            },
            {
              "function": "print_test",
              "line": 265
            },
            {
              "function": "print",
              "line": 268
            },
            {
              "function": "print",
              "line": 301
            },
            {
              "function": "print",
              "line": 303
            },
            {
              "function": "print",
              "line": 320
            },
            {
              "function": "main",
              "line": 328
            },
            {
              "function": "classify",
              "line": 61
            },
            {
              "function": "len",
              "line": 107
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "len",
              "line": 122
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print_test",
              "line": 272
            },
            {
              "function": "test_intent_classifier",
              "line": 287
            },
            {
              "function": "test_workflow_generator",
              "line": 288
            },
            {
              "function": "test_learning_system",
              "line": 289
            },
            {
              "function": "test_execution_engine",
              "line": 290
            },
            {
              "function": "test_master_dispatcher",
              "line": 291
            },
            {
              "function": "len",
              "line": 71
            },
            {
              "function": "get",
              "line": 109
            },
            {
              "function": "len",
              "line": 112
            },
            {
              "function": "get",
              "line": 115
            },
            {
              "function": "len",
              "line": 152
            },
            {
              "function": "len",
              "line": 163
            },
            {
              "function": "len",
              "line": 169
            },
            {
              "function": "sleep",
              "line": 210
            },
            {
              "function": "get",
              "line": 230
            },
            {
              "function": "len",
              "line": 232
            },
            {
              "function": "str",
              "line": 272
            },
            {
              "function": "strftime",
              "line": 282
            },
            {
              "function": "strftime",
              "line": 323
            },
            {
              "function": "get",
              "line": 112
            },
            {
              "function": "get",
              "line": 232
            },
            {
              "function": "get",
              "line": 115
            },
            {
              "function": "now",
              "line": 282
            },
            {
              "function": "now",
              "line": 323
            },
            {
              "function": "len",
              "line": 123
            }
          ]
        },
        "agent_projects/test_websocket_debug.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 98
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 14
            },
            {
              "function": "getLogger",
              "line": 18
            },
            {
              "function": "info",
              "line": 102
            },
            {
              "function": "info",
              "line": 103
            },
            {
              "function": "run",
              "line": 104
            },
            {
              "function": "info",
              "line": 105
            },
            {
              "function": "info",
              "line": 106
            },
            {
              "function": "test_dashboard_request",
              "line": 104
            },
            {
              "function": "connect",
              "line": 26
            },
            {
              "function": "info",
              "line": 27
            },
            {
              "function": "info",
              "line": 31
            },
            {
              "function": "info",
              "line": 40
            },
            {
              "function": "info",
              "line": 91
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "info",
              "line": 94
            },
            {
              "function": "error",
              "line": 97
            },
            {
              "function": "error",
              "line": 99
            },
            {
              "function": "recv",
              "line": 30
            },
            {
              "function": "send",
              "line": 41
            },
            {
              "function": "format_exc",
              "line": 99
            },
            {
              "function": "dumps",
              "line": 41
            },
            {
              "function": "loads",
              "line": 50
            },
            {
              "function": "append",
              "line": 52
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "info",
              "line": 88
            },
            {
              "function": "strftime",
              "line": 37
            },
            {
              "function": "wait_for",
              "line": 49
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "info",
              "line": 57
            },
            {
              "function": "info",
              "line": 58
            },
            {
              "function": "get",
              "line": 60
            },
            {
              "function": "get",
              "line": 61
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "info",
              "line": 76
            },
            {
              "function": "get",
              "line": 77
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "error",
              "line": 84
            },
            {
              "function": "len",
              "line": 92
            },
            {
              "function": "set",
              "line": 93
            },
            {
              "function": "recv",
              "line": 49
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "info",
              "line": 63
            },
            {
              "function": "info",
              "line": 67
            },
            {
              "function": "info",
              "line": 79
            },
            {
              "function": "now",
              "line": 37
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "sleep",
              "line": 66
            },
            {
              "function": "send",
              "line": 68
            },
            {
              "function": "lower",
              "line": 78
            },
            {
              "function": "dumps",
              "line": 68
            },
            {
              "function": "get",
              "line": 84
            },
            {
              "function": "get",
              "line": 58
            },
            {
              "function": "str",
              "line": 78
            }
          ]
        },
        "agent_projects/test_code_verification.py": {
          "functions": [
            {
              "name": "test_routing_replan_check",
              "line": 8,
              "async": false,
              "calls": [
                "print",
                "open",
                "read"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_routing_in_progress_check",
              "line": 27,
              "async": false,
              "calls": [
                "print",
                "open",
                "read"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_orchestrator_replan_logic",
              "line": 46,
              "async": false,
              "calls": [
                "print",
                "open",
                "all",
                "read"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_reviewer_collaboration",
              "line": 69,
              "async": false,
              "calls": [
                "print",
                "open",
                "all",
                "read"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_conditional_edges",
              "line": 90,
              "async": false,
              "calls": [
                "print",
                "open",
                "read"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_settings_sync_code",
              "line": 108,
              "async": false,
              "calls": [
                "read",
                "exists",
                "open",
                "print",
                "all"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "test_instruction_files",
              "line": 134,
              "async": false,
              "calls": [
                "exists",
                "join",
                "print",
                "append",
                "all"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            },
            {
              "name": "main",
              "line": 158,
              "async": false,
              "calls": [
                "sum",
                "zip",
                "print",
                "append",
                "len",
                "test"
              ],
              "parameters": [],
              "decorators": [],
              "file": "agent_projects/test_code_verification.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "re",
              "names": [
                "re"
              ],
              "line": 6
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "all",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "all",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "all",
              "line": 130
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "all",
              "line": 154
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "sum",
              "line": 187
            },
            {
              "function": "len",
              "line": 188
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "zip",
              "line": 211
            },
            {
              "function": "main",
              "line": 215
            },
            {
              "function": "open",
              "line": 13
            },
            {
              "function": "read",
              "line": 14
            },
            {
              "function": "open",
              "line": 32
            },
            {
              "function": "read",
              "line": 33
            },
            {
              "function": "open",
              "line": 51
            },
            {
              "function": "read",
              "line": 52
            },
            {
              "function": "open",
              "line": 74
            },
            {
              "function": "read",
              "line": 75
            },
            {
              "function": "open",
              "line": 95
            },
            {
              "function": "read",
              "line": 96
            },
            {
              "function": "exists",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "open",
              "line": 119
            },
            {
              "function": "read",
              "line": 120
            },
            {
              "function": "join",
              "line": 149
            },
            {
              "function": "exists",
              "line": 150
            },
            {
              "function": "append",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 212
            },
            {
              "function": "append",
              "line": 177
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "test",
              "line": 177
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "append",
              "line": 180
            }
          ]
        },
        "agent_projects/test_research_api.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "run",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "connect",
              "line": 16
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "test_research_agent",
              "line": 60
            },
            {
              "function": "send",
              "line": 26
            },
            {
              "function": "dumps",
              "line": 26
            },
            {
              "function": "loads",
              "line": 32
            },
            {
              "function": "wait_for",
              "line": 31
            },
            {
              "function": "get",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "recv",
              "line": 31
            },
            {
              "function": "len",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "get",
              "line": 37
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "get",
              "line": 48
            }
          ]
        },
        "agent_projects/test_workflow_analysis.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 141
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "run",
              "line": 145
            },
            {
              "function": "test_workflow",
              "line": 145
            },
            {
              "function": "connect",
              "line": 23
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "time",
              "line": 50
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "enumerate",
              "line": 114
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print_exc",
              "line": 142
            },
            {
              "function": "recv",
              "line": 27
            },
            {
              "function": "send",
              "line": 39
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "strftime",
              "line": 30
            },
            {
              "function": "dumps",
              "line": 39
            },
            {
              "function": "time",
              "line": 55
            },
            {
              "function": "loads",
              "line": 58
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "wait_for",
              "line": 57
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "lower",
              "line": 75
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "len",
              "line": 113
            },
            {
              "function": "join",
              "line": 125
            },
            {
              "function": "now",
              "line": 30
            },
            {
              "function": "recv",
              "line": 57
            },
            {
              "function": "append",
              "line": 64
            },
            {
              "function": "strftime",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "any",
              "line": 78
            },
            {
              "function": "any",
              "line": 85
            },
            {
              "function": "any",
              "line": 92
            },
            {
              "function": "strftime",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "get",
              "line": 97
            },
            {
              "function": "str",
              "line": 97
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "str",
              "line": 75
            },
            {
              "function": "strftime",
              "line": 81
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "strftime",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "now",
              "line": 65
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "now",
              "line": 93
            },
            {
              "function": "upper",
              "line": 66
            },
            {
              "function": "now",
              "line": 81
            },
            {
              "function": "now",
              "line": 88
            },
            {
              "function": "time",
              "line": 100
            }
          ]
        },
        "agent_projects/test_dashboard_generation.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 13,
              "async": false,
              "calls": [
                "set"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_dashboard_generation.py"
            },
            {
              "name": "print_summary",
              "line": 114,
              "async": false,
              "calls": [
                "sorted",
                "get",
                "issubset",
                "print",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_dashboard_generation.py"
            }
          ],
          "classes": [
            {
              "name": "DashboardTestClient",
              "line": 12,
              "methods": [
                "__init__",
                "print_summary"
              ],
              "bases": [],
              "file": "agent_projects/test_dashboard_generation.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "List",
                "Set"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 61
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 146
            },
            {
              "function": "DashboardTestClient",
              "line": 148
            },
            {
              "function": "run",
              "line": 158
            },
            {
              "function": "set",
              "line": 14
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "sorted",
              "line": 121
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "issubset",
              "line": 132
            },
            {
              "function": "print_summary",
              "line": 155
            },
            {
              "function": "main",
              "line": 158
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "loads",
              "line": 67
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "append",
              "line": 109
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "print",
              "line": 126
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "test_dashboard_creation",
              "line": 151
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "connect",
              "line": 25
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "time",
              "line": 40
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print_exc",
              "line": 62
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "send",
              "line": 35
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "add",
              "line": 77
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "isinstance",
              "line": 81
            },
            {
              "function": "len",
              "line": 120
            },
            {
              "function": "len",
              "line": 124
            },
            {
              "function": "len",
              "line": 128
            },
            {
              "function": "len",
              "line": 135
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "dumps",
              "line": 35
            },
            {
              "function": "get_event_loop",
              "line": 40
            },
            {
              "function": "time",
              "line": 42
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "get",
              "line": 86
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "get",
              "line": 126
            },
            {
              "function": "wait_for",
              "line": 45
            },
            {
              "function": "handle_message",
              "line": 46
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "get",
              "line": 99
            },
            {
              "function": "get_event_loop",
              "line": 42
            },
            {
              "function": "recv",
              "line": 45
            },
            {
              "function": "len",
              "line": 82
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "len",
              "line": 88
            },
            {
              "function": "len",
              "line": 91
            },
            {
              "function": "lower",
              "line": 100
            },
            {
              "function": "str",
              "line": 100
            },
            {
              "function": "open",
              "line": 102
            },
            {
              "function": "write",
              "line": 103
            },
            {
              "function": "get",
              "line": 90
            },
            {
              "function": "get",
              "line": 90
            },
            {
              "function": "get",
              "line": 90
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "str",
              "line": 103
            },
            {
              "function": "str",
              "line": 100
            },
            {
              "function": "get",
              "line": 107
            }
          ]
        },
        "agent_projects/test_query_classifier_simple.py": {
          "functions": [
            {
              "name": "simple_classify",
              "line": 72,
              "async": false,
              "calls": [
                "sum",
                "split",
                "any",
                "lower",
                "len"
              ],
              "parameters": [
                "query"
              ],
              "decorators": [],
              "file": "agent_projects/test_query_classifier_simple.py"
            }
          ],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "backend.__version__",
              "names": [
                "__version__"
              ],
              "line": 17
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 11
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 70
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 122
            },
            {
              "function": "items",
              "line": 132
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "join",
              "line": 11
            },
            {
              "function": "lower",
              "line": 51
            },
            {
              "function": "lower",
              "line": 74
            },
            {
              "function": "any",
              "line": 77
            },
            {
              "function": "len",
              "line": 81
            },
            {
              "function": "sum",
              "line": 82
            },
            {
              "function": "any",
              "line": 87
            },
            {
              "function": "any",
              "line": 90
            },
            {
              "function": "any",
              "line": 93
            },
            {
              "function": "simple_classify",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 115
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "dirname",
              "line": 11
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "split",
              "line": 81
            }
          ]
        },
        "agent_projects/test_manual_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 206
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 219
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "run",
              "line": 223
            },
            {
              "function": "manual_approval_test",
              "line": 223
            },
            {
              "function": "StreamHandler",
              "line": 18
            },
            {
              "function": "connect",
              "line": 38
            },
            {
              "function": "info",
              "line": 39
            },
            {
              "function": "loads",
              "line": 43
            },
            {
              "function": "info",
              "line": 46
            },
            {
              "function": "info",
              "line": 47
            },
            {
              "function": "info",
              "line": 56
            },
            {
              "function": "print",
              "line": 179
            },
            {
              "function": "print",
              "line": 180
            },
            {
              "function": "print",
              "line": 181
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "exists",
              "line": 208
            },
            {
              "function": "error",
              "line": 218
            },
            {
              "function": "error",
              "line": 220
            },
            {
              "function": "recv",
              "line": 42
            },
            {
              "function": "send",
              "line": 57
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 201
            },
            {
              "function": "listdir",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "format_exc",
              "line": 220
            },
            {
              "function": "strftime",
              "line": 44
            },
            {
              "function": "dumps",
              "line": 57
            },
            {
              "function": "loads",
              "line": 70
            },
            {
              "function": "get",
              "line": 71
            },
            {
              "function": "get",
              "line": 72
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "lower",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "lower",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "lower",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "lower",
              "line": 195
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "lower",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "getsize",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "wait_for",
              "line": 69
            },
            {
              "function": "append",
              "line": 77
            },
            {
              "function": "info",
              "line": 81
            },
            {
              "function": "info",
              "line": 175
            },
            {
              "function": "len",
              "line": 182
            },
            {
              "function": "join",
              "line": 212
            },
            {
              "function": "now",
              "line": 44
            },
            {
              "function": "recv",
              "line": 69
            },
            {
              "function": "set",
              "line": 182
            },
            {
              "function": "len",
              "line": 201
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "print",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 103
            },
            {
              "function": "strftime",
              "line": 77
            },
            {
              "function": "upper",
              "line": 81
            },
            {
              "function": "info",
              "line": 109
            },
            {
              "function": "info",
              "line": 160
            },
            {
              "function": "info",
              "line": 161
            },
            {
              "function": "info",
              "line": 165
            },
            {
              "function": "info",
              "line": 166
            },
            {
              "function": "get",
              "line": 85
            },
            {
              "function": "lower",
              "line": 158
            },
            {
              "function": "lower",
              "line": 158
            },
            {
              "function": "error",
              "line": 171
            },
            {
              "function": "split",
              "line": 182
            },
            {
              "function": "now",
              "line": 77
            },
            {
              "function": "info",
              "line": 114
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 127
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "lower",
              "line": 113
            },
            {
              "function": "lower",
              "line": 113
            },
            {
              "function": "print",
              "line": 125
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "append",
              "line": 138
            },
            {
              "function": "info",
              "line": 139
            },
            {
              "function": "lower",
              "line": 124
            },
            {
              "function": "lower",
              "line": 124
            },
            {
              "function": "lower",
              "line": 124
            },
            {
              "function": "lower",
              "line": 129
            },
            {
              "function": "lower",
              "line": 129
            },
            {
              "function": "lower",
              "line": 129
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "info",
              "line": 145
            },
            {
              "function": "get",
              "line": 171
            },
            {
              "function": "lower",
              "line": 131
            },
            {
              "function": "lower",
              "line": 131
            },
            {
              "function": "lower",
              "line": 131
            },
            {
              "function": "info",
              "line": 149
            },
            {
              "function": "lower",
              "line": 153
            },
            {
              "function": "info",
              "line": 154
            }
          ]
        },
        "agent_projects/test_websocket_messages.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "run",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "test_progress_messages",
              "line": 99
            },
            {
              "function": "connect",
              "line": 17
            },
            {
              "function": "print",
              "line": 18
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "time",
              "line": 35
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "sorted",
              "line": 77
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "send",
              "line": 29
            },
            {
              "function": "get",
              "line": 73
            },
            {
              "function": "items",
              "line": 77
            },
            {
              "function": "get",
              "line": 78
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "open",
              "line": 86
            },
            {
              "function": "dump",
              "line": 87
            },
            {
              "function": "dumps",
              "line": 29
            },
            {
              "function": "get_event_loop",
              "line": 35
            },
            {
              "function": "time",
              "line": 36
            },
            {
              "function": "loads",
              "line": 39
            },
            {
              "function": "append",
              "line": 40
            },
            {
              "function": "get",
              "line": 43
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "wait_for",
              "line": 38
            },
            {
              "function": "strftime",
              "line": 44
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "len",
              "line": 68
            },
            {
              "function": "get_event_loop",
              "line": 36
            },
            {
              "function": "recv",
              "line": 38
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "get",
              "line": 51
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "now",
              "line": 44
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "len",
              "line": 55
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "get",
              "line": 55
            },
            {
              "function": "dumps",
              "line": 58
            }
          ]
        },
        "agent_projects/test_complex_app_request.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "from_import",
              "module": "typing",
              "names": [
                "Dict",
                "Any"
              ],
              "line": 12
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.workflow",
              "names": [
                "create_extended_workflow"
              ],
              "line": 17
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.state",
              "names": [
                "create_initial_state"
              ],
              "line": 18
            },
            {
              "type": "from_import",
              "module": "backend.__version__",
              "names": [
                "__version__"
              ],
              "line": 19
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 179
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 15
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "join",
              "line": 15
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "print",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 68
            },
            {
              "function": "create_extended_workflow",
              "line": 69
            },
            {
              "function": "create_initial_state",
              "line": 72
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 101
            },
            {
              "function": "now",
              "line": 183
            },
            {
              "function": "total_seconds",
              "line": 184
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "print",
              "line": 192
            },
            {
              "function": "print",
              "line": 193
            },
            {
              "function": "print",
              "line": 194
            },
            {
              "function": "print",
              "line": 196
            },
            {
              "function": "print",
              "line": 197
            },
            {
              "function": "print",
              "line": 198
            },
            {
              "function": "print",
              "line": 200
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "print",
              "line": 208
            },
            {
              "function": "print",
              "line": 209
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "items",
              "line": 221
            },
            {
              "function": "all",
              "line": 225
            },
            {
              "function": "print",
              "line": 227
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "print",
              "line": 238
            },
            {
              "function": "print",
              "line": 239
            },
            {
              "function": "print",
              "line": 240
            },
            {
              "function": "new_event_loop",
              "line": 243
            },
            {
              "function": "set_event_loop",
              "line": 244
            },
            {
              "function": "print",
              "line": 251
            },
            {
              "function": "print",
              "line": 252
            },
            {
              "function": "print",
              "line": 253
            },
            {
              "function": "print",
              "line": 254
            },
            {
              "function": "print",
              "line": 255
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "print",
              "line": 257
            },
            {
              "function": "print",
              "line": 258
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "now",
              "line": 92
            },
            {
              "function": "set",
              "line": 93
            },
            {
              "function": "astream",
              "line": 114
            },
            {
              "function": "print",
              "line": 205
            },
            {
              "function": "print",
              "line": 223
            },
            {
              "function": "values",
              "line": 225
            },
            {
              "function": "print",
              "line": 229
            },
            {
              "function": "print",
              "line": 231
            },
            {
              "function": "run_until_complete",
              "line": 247
            },
            {
              "function": "close",
              "line": 249
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "isinstance",
              "line": 121
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "append",
              "line": 178
            },
            {
              "function": "print_exc",
              "line": 180
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "len",
              "line": 215
            },
            {
              "function": "any",
              "line": 216
            },
            {
              "function": "test_complex_app_generation",
              "line": 247
            },
            {
              "function": "items",
              "line": 122
            },
            {
              "function": "print",
              "line": 173
            },
            {
              "function": "str",
              "line": 178
            },
            {
              "function": "len",
              "line": 198
            },
            {
              "function": "len",
              "line": 210
            },
            {
              "function": "strftime",
              "line": 240
            },
            {
              "function": "strftime",
              "line": 73
            },
            {
              "function": "print",
              "line": 123
            },
            {
              "function": "add",
              "line": 124
            },
            {
              "function": "isinstance",
              "line": 126
            },
            {
              "function": "join",
              "line": 194
            },
            {
              "function": "title",
              "line": 223
            },
            {
              "function": "lower",
              "line": 216
            },
            {
              "function": "now",
              "line": 240
            },
            {
              "function": "now",
              "line": 73
            },
            {
              "function": "print",
              "line": 139
            },
            {
              "function": "append",
              "line": 144
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "len",
              "line": 151
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "extend",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "replace",
              "line": 223
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "enumerate",
              "line": 132
            },
            {
              "function": "str",
              "line": 216
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "len",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "isinstance",
              "line": 162
            },
            {
              "function": "len",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "print",
              "line": 167
            },
            {
              "function": "len",
              "line": 131
            },
            {
              "function": "len",
              "line": 135
            }
          ]
        },
        "agent_projects/test_quick_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 91
            }
          ],
          "calls": [
            {
              "function": "run",
              "line": 95
            },
            {
              "function": "test_approval",
              "line": 95
            },
            {
              "function": "connect",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "loads",
              "line": 19
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "get",
              "line": 21
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "print_exc",
              "line": 92
            },
            {
              "function": "recv",
              "line": 18
            },
            {
              "function": "send",
              "line": 24
            },
            {
              "function": "send",
              "line": 30
            },
            {
              "function": "dumps",
              "line": 24
            },
            {
              "function": "dumps",
              "line": 30
            },
            {
              "function": "loads",
              "line": 41
            },
            {
              "function": "get",
              "line": 42
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "get",
              "line": 20
            },
            {
              "function": "wait_for",
              "line": 40
            },
            {
              "function": "get",
              "line": 48
            },
            {
              "function": "print",
              "line": 49
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "recv",
              "line": 40
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "get",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "send",
              "line": 57
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "dumps",
              "line": 57
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "get",
              "line": 74
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "get",
              "line": 75
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "get",
              "line": 54
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "str",
              "line": 71
            }
          ]
        },
        "agent_projects/test_quick_fix.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "run",
              "line": 52
            },
            {
              "function": "test_after_fix",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "connect",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "range",
              "line": 32
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "recv",
              "line": 19
            },
            {
              "function": "send",
              "line": 29
            },
            {
              "function": "dumps",
              "line": 29
            },
            {
              "function": "loads",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "wait_for",
              "line": 34
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "recv",
              "line": 34
            },
            {
              "function": "get",
              "line": 36
            },
            {
              "function": "get",
              "line": 39
            }
          ]
        },
        "agent_projects/test_instructions_learning.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 13
            },
            {
              "type": "from_import",
              "module": "agents.specialized.codesmith_agent",
              "names": [
                "CodeSmithAgent"
              ],
              "line": 14
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 15
            },
            {
              "type": "from_import",
              "module": "core.memory_manager",
              "names": [
                "MemoryManager"
              ],
              "line": 16
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 11
            },
            {
              "function": "join",
              "line": 11
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 50
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "MemoryManager",
              "line": 55
            },
            {
              "function": "ArchitectAgent",
              "line": 58
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "clear",
              "line": 94
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "print",
              "line": 110
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "ArchitectAgent",
              "line": 113
            },
            {
              "function": "get_system_prompt",
              "line": 116
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 124
            },
            {
              "function": "TaskRequest",
              "line": 125
            },
            {
              "function": "print",
              "line": 141
            },
            {
              "function": "print",
              "line": 152
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "run",
              "line": 166
            },
            {
              "function": "dirname",
              "line": 11
            },
            {
              "function": "ArchitectAgent",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "CodeSmithAgent",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "initialize_systems",
              "line": 59
            },
            {
              "function": "learn_from_task",
              "line": 63
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "apply_learnings",
              "line": 77
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "save_learnings_to_disk",
              "line": 84
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "load_learnings_from_disk",
              "line": 97
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "test_instruction_loading",
              "line": 144
            },
            {
              "function": "test_learning_system",
              "line": 147
            },
            {
              "function": "test_instruction_integration",
              "line": 150
            },
            {
              "function": "main",
              "line": 166
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "execute",
              "line": 133
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "len",
              "line": 78
            },
            {
              "function": "len",
              "line": 121
            },
            {
              "function": "len",
              "line": 120
            },
            {
              "function": "len",
              "line": 30
            },
            {
              "function": "len",
              "line": 41
            },
            {
              "function": "str",
              "line": 136
            }
          ]
        },
        "agent_projects/test_tetris_now.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 4
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "backend.langgraph_system.workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 17
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 117
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 10
            },
            {
              "function": "insert",
              "line": 15
            },
            {
              "function": "dirname",
              "line": 15
            },
            {
              "function": "print",
              "line": 20
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "print",
              "line": 22
            },
            {
              "function": "create_agent_workflow",
              "line": 25
            },
            {
              "function": "join",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "run",
              "line": 121
            },
            {
              "function": "abspath",
              "line": 15
            },
            {
              "function": "getcwd",
              "line": 28
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "enumerate",
              "line": 46
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "exists",
              "line": 70
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 89
            },
            {
              "function": "get",
              "line": 91
            },
            {
              "function": "len",
              "line": 92
            },
            {
              "function": "sum",
              "line": 93
            },
            {
              "function": "sum",
              "line": 94
            },
            {
              "function": "print",
              "line": 96
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 98
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "print",
              "line": 100
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "main",
              "line": 121
            },
            {
              "function": "execute",
              "line": 35
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 55
            },
            {
              "function": "walk",
              "line": 72
            },
            {
              "function": "print",
              "line": 84
            },
            {
              "function": "get",
              "line": 92
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "print",
              "line": 113
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print_exc",
              "line": 118
            },
            {
              "function": "print",
              "line": 59
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 82
            },
            {
              "function": "get",
              "line": 103
            },
            {
              "function": "str",
              "line": 58
            },
            {
              "function": "join",
              "line": 74
            },
            {
              "function": "getsize",
              "line": 75
            },
            {
              "function": "append",
              "line": 76
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "get",
              "line": 93
            },
            {
              "function": "get",
              "line": 94
            },
            {
              "function": "join",
              "line": 104
            },
            {
              "function": "upper",
              "line": 54
            },
            {
              "function": "len",
              "line": 100
            },
            {
              "function": "count",
              "line": 112
            },
            {
              "function": "count",
              "line": 113
            },
            {
              "function": "locals",
              "line": 100
            }
          ]
        },
        "agent_projects/test_reviewer_with_auto_approval.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 307
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 343
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 20
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 33
            },
            {
              "function": "print",
              "line": 34
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "run",
              "line": 347
            },
            {
              "function": "reviewer_test_auto",
              "line": 347
            },
            {
              "function": "StreamHandler",
              "line": 18
            },
            {
              "function": "connect",
              "line": 39
            },
            {
              "function": "info",
              "line": 40
            },
            {
              "function": "loads",
              "line": 44
            },
            {
              "function": "info",
              "line": 47
            },
            {
              "function": "info",
              "line": 48
            },
            {
              "function": "info",
              "line": 57
            },
            {
              "function": "info",
              "line": 58
            },
            {
              "function": "info",
              "line": 59
            },
            {
              "function": "info",
              "line": 60
            },
            {
              "function": "info",
              "line": 61
            },
            {
              "function": "info",
              "line": 62
            },
            {
              "function": "info",
              "line": 63
            },
            {
              "function": "info",
              "line": 64
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print",
              "line": 264
            },
            {
              "function": "print",
              "line": 265
            },
            {
              "function": "print",
              "line": 266
            },
            {
              "function": "print",
              "line": 269
            },
            {
              "function": "print",
              "line": 270
            },
            {
              "function": "print",
              "line": 276
            },
            {
              "function": "print",
              "line": 277
            },
            {
              "function": "print",
              "line": 280
            },
            {
              "function": "print",
              "line": 296
            },
            {
              "function": "print",
              "line": 297
            },
            {
              "function": "print",
              "line": 300
            },
            {
              "function": "items",
              "line": 301
            },
            {
              "function": "print",
              "line": 304
            },
            {
              "function": "exists",
              "line": 309
            },
            {
              "function": "print",
              "line": 332
            },
            {
              "function": "print",
              "line": 339
            },
            {
              "function": "print",
              "line": 342
            },
            {
              "function": "print",
              "line": 344
            },
            {
              "function": "recv",
              "line": 43
            },
            {
              "function": "send",
              "line": 66
            },
            {
              "function": "print",
              "line": 282
            },
            {
              "function": "items",
              "line": 283
            },
            {
              "function": "print",
              "line": 293
            },
            {
              "function": "print",
              "line": 302
            },
            {
              "function": "listdir",
              "line": 310
            },
            {
              "function": "print",
              "line": 311
            },
            {
              "function": "print",
              "line": 329
            },
            {
              "function": "get",
              "line": 333
            },
            {
              "function": "print",
              "line": 334
            },
            {
              "function": "format_exc",
              "line": 344
            },
            {
              "function": "strftime",
              "line": 45
            },
            {
              "function": "dumps",
              "line": 66
            },
            {
              "function": "loads",
              "line": 81
            },
            {
              "function": "get",
              "line": 82
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "get",
              "line": 84
            },
            {
              "function": "print",
              "line": 273
            },
            {
              "function": "print",
              "line": 289
            },
            {
              "function": "print",
              "line": 291
            },
            {
              "function": "any",
              "line": 315
            },
            {
              "function": "len",
              "line": 333
            },
            {
              "function": "print",
              "line": 336
            },
            {
              "function": "print",
              "line": 338
            },
            {
              "function": "wait_for",
              "line": 80
            },
            {
              "function": "print",
              "line": 260
            },
            {
              "function": "len",
              "line": 270
            },
            {
              "function": "len",
              "line": 277
            },
            {
              "function": "print",
              "line": 285
            },
            {
              "function": "len",
              "line": 297
            },
            {
              "function": "next",
              "line": 317
            },
            {
              "function": "getsize",
              "line": 318
            },
            {
              "function": "print",
              "line": 319
            },
            {
              "function": "print",
              "line": 321
            },
            {
              "function": "any",
              "line": 325
            },
            {
              "function": "getsize",
              "line": 326
            },
            {
              "function": "print",
              "line": 327
            },
            {
              "function": "len",
              "line": 335
            },
            {
              "function": "now",
              "line": 45
            },
            {
              "function": "recv",
              "line": 80
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "len",
              "line": 282
            },
            {
              "function": "len",
              "line": 311
            },
            {
              "function": "join",
              "line": 318
            },
            {
              "function": "join",
              "line": 326
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "get",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "split",
              "line": 111
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "print",
              "line": 117
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 128
            },
            {
              "function": "print",
              "line": 131
            },
            {
              "function": "print",
              "line": 132
            },
            {
              "function": "lower",
              "line": 315
            },
            {
              "function": "print",
              "line": 99
            },
            {
              "function": "any",
              "line": 112
            },
            {
              "function": "sleep",
              "line": 120
            },
            {
              "function": "send",
              "line": 129
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 247
            },
            {
              "function": "print",
              "line": 248
            },
            {
              "function": "print",
              "line": 249
            },
            {
              "function": "print",
              "line": 252
            },
            {
              "function": "print",
              "line": 256
            },
            {
              "function": "lower",
              "line": 325
            },
            {
              "function": "get",
              "line": 105
            },
            {
              "function": "append",
              "line": 113
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "dumps",
              "line": 129
            },
            {
              "function": "lower",
              "line": 140
            },
            {
              "function": "any",
              "line": 141
            },
            {
              "function": "lower",
              "line": 317
            },
            {
              "function": "strip",
              "line": 113
            },
            {
              "function": "len",
              "line": 116
            },
            {
              "function": "append",
              "line": 142
            },
            {
              "function": "len",
              "line": 143
            },
            {
              "function": "print",
              "line": 145
            },
            {
              "function": "print",
              "line": 163
            },
            {
              "function": "print",
              "line": 164
            },
            {
              "function": "print",
              "line": 165
            },
            {
              "function": "lower",
              "line": 167
            },
            {
              "function": "print",
              "line": 210
            },
            {
              "function": "any",
              "line": 211
            },
            {
              "function": "print",
              "line": 220
            },
            {
              "function": "lower",
              "line": 112
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 177
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 195
            },
            {
              "function": "print",
              "line": 199
            },
            {
              "function": "print",
              "line": 203
            },
            {
              "function": "print",
              "line": 207
            },
            {
              "function": "print",
              "line": 212
            },
            {
              "function": "print",
              "line": 213
            },
            {
              "function": "any",
              "line": 214
            },
            {
              "function": "append",
              "line": 224
            },
            {
              "function": "print",
              "line": 225
            },
            {
              "function": "get",
              "line": 256
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 215
            },
            {
              "function": "print",
              "line": 216
            },
            {
              "function": "print",
              "line": 218
            },
            {
              "function": "print",
              "line": 228
            },
            {
              "function": "print",
              "line": 232
            },
            {
              "function": "strip",
              "line": 114
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 236
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "len",
              "line": 225
            },
            {
              "function": "list",
              "line": 227
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "keys",
              "line": 227
            },
            {
              "function": "lower",
              "line": 240
            },
            {
              "function": "print",
              "line": 241
            }
          ]
        },
        "agent_projects/test_interactive_dashboard.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 165
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 178
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 15
            },
            {
              "function": "getLogger",
              "line": 22
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "print",
              "line": 184
            },
            {
              "function": "print",
              "line": 185
            },
            {
              "function": "print",
              "line": 186
            },
            {
              "function": "print",
              "line": 187
            },
            {
              "function": "print",
              "line": 188
            },
            {
              "function": "print",
              "line": 189
            },
            {
              "function": "print",
              "line": 190
            },
            {
              "function": "print",
              "line": 191
            },
            {
              "function": "input",
              "line": 192
            },
            {
              "function": "run",
              "line": 194
            },
            {
              "function": "interactive_dashboard_test",
              "line": 194
            },
            {
              "function": "StreamHandler",
              "line": 19
            },
            {
              "function": "connect",
              "line": 30
            },
            {
              "function": "info",
              "line": 31
            },
            {
              "function": "info",
              "line": 32
            },
            {
              "function": "info",
              "line": 33
            },
            {
              "function": "loads",
              "line": 37
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "get",
              "line": 39
            },
            {
              "function": "info",
              "line": 41
            },
            {
              "function": "info",
              "line": 42
            },
            {
              "function": "info",
              "line": 43
            },
            {
              "function": "info",
              "line": 52
            },
            {
              "function": "info",
              "line": 53
            },
            {
              "function": "info",
              "line": 54
            },
            {
              "function": "info",
              "line": 55
            },
            {
              "function": "info",
              "line": 157
            },
            {
              "function": "info",
              "line": 158
            },
            {
              "function": "info",
              "line": 159
            },
            {
              "function": "info",
              "line": 160
            },
            {
              "function": "info",
              "line": 161
            },
            {
              "function": "info",
              "line": 162
            },
            {
              "function": "exists",
              "line": 167
            },
            {
              "function": "error",
              "line": 177
            },
            {
              "function": "error",
              "line": 179
            },
            {
              "function": "recv",
              "line": 36
            },
            {
              "function": "send",
              "line": 57
            },
            {
              "function": "listdir",
              "line": 168
            },
            {
              "function": "info",
              "line": 169
            },
            {
              "function": "info",
              "line": 174
            },
            {
              "function": "format_exc",
              "line": 179
            },
            {
              "function": "dumps",
              "line": 57
            },
            {
              "function": "loads",
              "line": 67
            },
            {
              "function": "get",
              "line": 68
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "getsize",
              "line": 171
            },
            {
              "function": "info",
              "line": 172
            },
            {
              "function": "strftime",
              "line": 49
            },
            {
              "function": "wait_for",
              "line": 66
            },
            {
              "function": "append",
              "line": 73
            },
            {
              "function": "info",
              "line": 77
            },
            {
              "function": "warning",
              "line": 153
            },
            {
              "function": "len",
              "line": 160
            },
            {
              "function": "join",
              "line": 160
            },
            {
              "function": "join",
              "line": 171
            },
            {
              "function": "recv",
              "line": 66
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "now",
              "line": 49
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "info",
              "line": 85
            },
            {
              "function": "info",
              "line": 86
            },
            {
              "function": "info",
              "line": 87
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "info",
              "line": 92
            },
            {
              "function": "info",
              "line": 93
            },
            {
              "function": "info",
              "line": 94
            },
            {
              "function": "info",
              "line": 95
            },
            {
              "function": "info",
              "line": 96
            },
            {
              "function": "info",
              "line": 97
            },
            {
              "function": "info",
              "line": 98
            },
            {
              "function": "strip",
              "line": 101
            },
            {
              "function": "info",
              "line": 110
            },
            {
              "function": "get",
              "line": 140
            },
            {
              "function": "info",
              "line": 141
            },
            {
              "function": "info",
              "line": 142
            },
            {
              "function": "info",
              "line": 143
            },
            {
              "function": "info",
              "line": 144
            },
            {
              "function": "upper",
              "line": 77
            },
            {
              "function": "send",
              "line": 111
            },
            {
              "function": "info",
              "line": 114
            },
            {
              "function": "error",
              "line": 149
            },
            {
              "function": "get",
              "line": 83
            },
            {
              "function": "input",
              "line": 101
            },
            {
              "function": "dumps",
              "line": 111
            },
            {
              "function": "info",
              "line": 117
            },
            {
              "function": "info",
              "line": 119
            },
            {
              "function": "info",
              "line": 122
            },
            {
              "function": "lower",
              "line": 118
            },
            {
              "function": "lower",
              "line": 118
            },
            {
              "function": "info",
              "line": 124
            },
            {
              "function": "info",
              "line": 126
            },
            {
              "function": "info",
              "line": 129
            },
            {
              "function": "info",
              "line": 130
            },
            {
              "function": "get",
              "line": 149
            },
            {
              "function": "lower",
              "line": 123
            },
            {
              "function": "lower",
              "line": 123
            },
            {
              "function": "info",
              "line": 133
            },
            {
              "function": "info",
              "line": 136
            },
            {
              "function": "upper",
              "line": 136
            }
          ]
        },
        "agent_projects/test_dashboard_simple.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 8
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "run",
              "line": 74
            },
            {
              "function": "connect",
              "line": 15
            },
            {
              "function": "print",
              "line": 24
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "set",
              "line": 29
            },
            {
              "function": "range",
              "line": 31
            },
            {
              "function": "print",
              "line": 64
            },
            {
              "function": "issubset",
              "line": 68
            },
            {
              "function": "test_workflow",
              "line": 74
            },
            {
              "function": "send",
              "line": 25
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "dumps",
              "line": 25
            },
            {
              "function": "loads",
              "line": 34
            },
            {
              "function": "get",
              "line": 35
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "wait_for",
              "line": 33
            },
            {
              "function": "add",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "print",
              "line": 45
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "recv",
              "line": 33
            },
            {
              "function": "send",
              "line": 53
            },
            {
              "function": "dumps",
              "line": 53
            }
          ]
        },
        "agent_projects/test_tetris_complete.py": {
          "functions": [
            {
              "name": "__init__",
              "line": 13,
              "async": false,
              "calls": [],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_complete.py"
            },
            {
              "name": "log",
              "line": 30,
              "async": false,
              "calls": [
                "print",
                "strftime",
                "now"
              ],
              "parameters": [
                "self",
                "message",
                "emoji"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_complete.py"
            },
            {
              "name": "print_summary",
              "line": 146,
              "async": false,
              "calls": [
                "sorted",
                "get",
                "items",
                "print",
                "len"
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "file": "agent_projects/test_tetris_complete.py"
            }
          ],
          "classes": [
            {
              "name": "TetrisWorkflowTest",
              "line": 12,
              "methods": [
                "__init__",
                "log",
                "print_summary"
              ],
              "bases": [],
              "file": "agent_projects/test_tetris_complete.py"
            }
          ],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "time",
              "names": [
                "time"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 10
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 140
            }
          ],
          "calls": [
            {
              "function": "TetrisWorkflowTest",
              "line": 186
            },
            {
              "function": "run",
              "line": 187
            },
            {
              "function": "strftime",
              "line": 31
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 35
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print_summary",
              "line": 144
            },
            {
              "function": "print",
              "line": 147
            },
            {
              "function": "print",
              "line": 148
            },
            {
              "function": "print",
              "line": 149
            },
            {
              "function": "print",
              "line": 151
            },
            {
              "function": "print",
              "line": 153
            },
            {
              "function": "print",
              "line": 154
            },
            {
              "function": "print",
              "line": 155
            },
            {
              "function": "print",
              "line": 156
            },
            {
              "function": "print",
              "line": 157
            },
            {
              "function": "print",
              "line": 158
            },
            {
              "function": "print",
              "line": 159
            },
            {
              "function": "print",
              "line": 160
            },
            {
              "function": "print",
              "line": 161
            },
            {
              "function": "print",
              "line": 162
            },
            {
              "function": "print",
              "line": 170
            },
            {
              "function": "sorted",
              "line": 171
            },
            {
              "function": "print",
              "line": 174
            },
            {
              "function": "print",
              "line": 183
            },
            {
              "function": "run_test",
              "line": 187
            },
            {
              "function": "get",
              "line": 167
            },
            {
              "function": "items",
              "line": 171
            },
            {
              "function": "print",
              "line": 172
            },
            {
              "function": "print",
              "line": 178
            },
            {
              "function": "now",
              "line": 31
            },
            {
              "function": "connect",
              "line": 40
            },
            {
              "function": "log",
              "line": 41
            },
            {
              "function": "loads",
              "line": 45
            },
            {
              "function": "get",
              "line": 46
            },
            {
              "function": "get",
              "line": 47
            },
            {
              "function": "log",
              "line": 48
            },
            {
              "function": "log",
              "line": 57
            },
            {
              "function": "time",
              "line": 64
            },
            {
              "function": "log",
              "line": 139
            },
            {
              "function": "print_exc",
              "line": 141
            },
            {
              "function": "get",
              "line": 168
            },
            {
              "function": "print",
              "line": 180
            },
            {
              "function": "print",
              "line": 182
            },
            {
              "function": "recv",
              "line": 44
            },
            {
              "function": "send",
              "line": 51
            },
            {
              "function": "send",
              "line": 58
            },
            {
              "function": "len",
              "line": 151
            },
            {
              "function": "dumps",
              "line": 51
            },
            {
              "function": "dumps",
              "line": 58
            },
            {
              "function": "time",
              "line": 67
            },
            {
              "function": "loads",
              "line": 70
            },
            {
              "function": "get",
              "line": 71
            },
            {
              "function": "append",
              "line": 72
            },
            {
              "function": "wait_for",
              "line": 69
            },
            {
              "function": "get",
              "line": 76
            },
            {
              "function": "log",
              "line": 77
            },
            {
              "function": "log",
              "line": 135
            },
            {
              "function": "recv",
              "line": 69
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "log",
              "line": 82
            },
            {
              "function": "get",
              "line": 81
            },
            {
              "function": "log",
              "line": 96
            },
            {
              "function": "get",
              "line": 98
            },
            {
              "function": "get",
              "line": 101
            },
            {
              "function": "log",
              "line": 102
            },
            {
              "function": "log",
              "line": 105
            },
            {
              "function": "upper",
              "line": 77
            },
            {
              "function": "send",
              "line": 106
            },
            {
              "function": "log",
              "line": 114
            },
            {
              "function": "upper",
              "line": 82
            },
            {
              "function": "dumps",
              "line": 106
            },
            {
              "function": "get",
              "line": 117
            },
            {
              "function": "get",
              "line": 118
            },
            {
              "function": "get",
              "line": 119
            },
            {
              "function": "get",
              "line": 124
            },
            {
              "function": "log",
              "line": 122
            },
            {
              "function": "log",
              "line": 127
            },
            {
              "function": "get",
              "line": 131
            },
            {
              "function": "log",
              "line": 132
            },
            {
              "function": "str",
              "line": 122
            }
          ]
        },
        "agent_projects/test_simple_review.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 10
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 11
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 12
            }
          ],
          "calls": [
            {
              "function": "basicConfig",
              "line": 14
            },
            {
              "function": "getLogger",
              "line": 19
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 29
            },
            {
              "function": "print",
              "line": 30
            },
            {
              "function": "run",
              "line": 124
            },
            {
              "function": "simple_review_test",
              "line": 124
            },
            {
              "function": "StreamHandler",
              "line": 17
            },
            {
              "function": "connect",
              "line": 33
            },
            {
              "function": "info",
              "line": 34
            },
            {
              "function": "loads",
              "line": 38
            },
            {
              "function": "info",
              "line": 41
            },
            {
              "function": "info",
              "line": 50
            },
            {
              "function": "info",
              "line": 51
            },
            {
              "function": "info",
              "line": 52
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 106
            },
            {
              "function": "print",
              "line": 107
            },
            {
              "function": "print",
              "line": 108
            },
            {
              "function": "items",
              "line": 109
            },
            {
              "function": "print",
              "line": 118
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "recv",
              "line": 37
            },
            {
              "function": "send",
              "line": 54
            },
            {
              "function": "print",
              "line": 111
            },
            {
              "function": "print",
              "line": 114
            },
            {
              "function": "print",
              "line": 116
            },
            {
              "function": "strftime",
              "line": 39
            },
            {
              "function": "dumps",
              "line": 54
            },
            {
              "function": "loads",
              "line": 63
            },
            {
              "function": "get",
              "line": 64
            },
            {
              "function": "get",
              "line": 65
            },
            {
              "function": "get",
              "line": 66
            },
            {
              "function": "wait_for",
              "line": 62
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 102
            },
            {
              "function": "len",
              "line": 108
            },
            {
              "function": "now",
              "line": 39
            },
            {
              "function": "recv",
              "line": 62
            },
            {
              "function": "get",
              "line": 69
            },
            {
              "function": "print",
              "line": 77
            },
            {
              "function": "print",
              "line": 93
            },
            {
              "function": "upper",
              "line": 73
            },
            {
              "function": "print",
              "line": 79
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "get",
              "line": 80
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 87
            },
            {
              "function": "print",
              "line": 88
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "get",
              "line": 97
            }
          ]
        },
        "agent_projects/test_infrastructure_analysis.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 8
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 9
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "ArchitectAgent"
              ],
              "line": 20
            },
            {
              "type": "from_import",
              "module": "agents.base.base_agent",
              "names": [
                "TaskRequest"
              ],
              "line": 21
            },
            {
              "type": "from_import",
              "module": "agents.specialized.architect_agent",
              "names": [
                "INDEXING_AVAILABLE",
                "ANALYSIS_AVAILABLE",
                "DIAGRAM_AVAILABLE"
              ],
              "line": 35
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 82
            }
          ],
          "calls": [
            {
              "function": "join",
              "line": 12
            },
            {
              "function": "insert",
              "line": 13
            },
            {
              "function": "getcwd",
              "line": 16
            },
            {
              "function": "chdir",
              "line": 17
            },
            {
              "function": "dirname",
              "line": 12
            },
            {
              "function": "chdir",
              "line": 23
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "print",
              "line": 28
            },
            {
              "function": "print",
              "line": 31
            },
            {
              "function": "ArchitectAgent",
              "line": 32
            },
            {
              "function": "print",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "TaskRequest",
              "line": 43
            },
            {
              "function": "print",
              "line": 86
            },
            {
              "function": "print",
              "line": 91
            },
            {
              "function": "print",
              "line": 92
            },
            {
              "function": "ArchitectAgent",
              "line": 94
            },
            {
              "function": "TaskRequest",
              "line": 96
            },
            {
              "function": "print",
              "line": 119
            },
            {
              "function": "print",
              "line": 120
            },
            {
              "function": "print",
              "line": 121
            },
            {
              "function": "print",
              "line": 133
            },
            {
              "function": "print",
              "line": 134
            },
            {
              "function": "print",
              "line": 135
            },
            {
              "function": "print",
              "line": 136
            },
            {
              "function": "print",
              "line": 137
            },
            {
              "function": "run",
              "line": 145
            },
            {
              "function": "print",
              "line": 52
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 54
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 61
            },
            {
              "function": "print",
              "line": 62
            },
            {
              "function": "print",
              "line": 63
            },
            {
              "function": "hasattr",
              "line": 76
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "print",
              "line": 104
            },
            {
              "function": "print",
              "line": 105
            },
            {
              "function": "print",
              "line": 109
            },
            {
              "function": "test_basic_execution",
              "line": 124
            },
            {
              "function": "print",
              "line": 130
            },
            {
              "function": "print",
              "line": 140
            },
            {
              "function": "print",
              "line": 142
            },
            {
              "function": "main",
              "line": 145
            },
            {
              "function": "execute_with_memory",
              "line": 57
            },
            {
              "function": "print",
              "line": 66
            },
            {
              "function": "print",
              "line": 67
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 73
            },
            {
              "function": "print",
              "line": 81
            },
            {
              "function": "print_exc",
              "line": 83
            },
            {
              "function": "execute_with_memory",
              "line": 102
            },
            {
              "function": "print",
              "line": 112
            },
            {
              "function": "test_infrastructure_analysis",
              "line": 128
            },
            {
              "function": "dirname",
              "line": 46
            },
            {
              "function": "len",
              "line": 70
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "len",
              "line": 71
            }
          ]
        },
        "agent_projects/test_tetris_simple.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 5
            },
            {
              "type": "import",
              "module": "sys",
              "names": [
                "sys"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "langgraph_system.workflow",
              "names": [
                "create_agent_workflow"
              ],
              "line": 18
            },
            {
              "type": "import",
              "module": "logging",
              "names": [
                "logging"
              ],
              "line": 29
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 77
            }
          ],
          "calls": [
            {
              "function": "insert",
              "line": 8
            },
            {
              "function": "print",
              "line": 10
            },
            {
              "function": "print",
              "line": 11
            },
            {
              "function": "print",
              "line": 12
            },
            {
              "function": "print",
              "line": 13
            },
            {
              "function": "join",
              "line": 8
            },
            {
              "function": "run",
              "line": 82
            },
            {
              "function": "exit",
              "line": 83
            },
            {
              "function": "dirname",
              "line": 8
            },
            {
              "function": "print",
              "line": 17
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "print",
              "line": 21
            },
            {
              "function": "create_agent_workflow",
              "line": 22
            },
            {
              "function": "print",
              "line": 23
            },
            {
              "function": "print",
              "line": 25
            },
            {
              "function": "print",
              "line": 26
            },
            {
              "function": "print",
              "line": 27
            },
            {
              "function": "basicConfig",
              "line": 30
            },
            {
              "function": "print",
              "line": 32
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "print",
              "line": 42
            },
            {
              "function": "get",
              "line": 45
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "get",
              "line": 49
            },
            {
              "function": "get",
              "line": 56
            },
            {
              "function": "exists",
              "line": 64
            },
            {
              "function": "print",
              "line": 71
            },
            {
              "function": "main",
              "line": 82
            },
            {
              "function": "execute",
              "line": 33
            },
            {
              "function": "print",
              "line": 51
            },
            {
              "function": "print",
              "line": 58
            },
            {
              "function": "enumerate",
              "line": 59
            },
            {
              "function": "print",
              "line": 65
            },
            {
              "function": "walk",
              "line": 66
            },
            {
              "function": "print",
              "line": 76
            },
            {
              "function": "print_exc",
              "line": 78
            },
            {
              "function": "print",
              "line": 53
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "get",
              "line": 38
            },
            {
              "function": "join",
              "line": 68
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "len",
              "line": 51
            },
            {
              "function": "len",
              "line": 58
            }
          ]
        },
        "agent_projects/test_perplexity_raw.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "os",
              "names": [
                "os"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "requests",
              "names": [
                "requests"
              ],
              "line": 7
            },
            {
              "type": "from_import",
              "module": "pathlib",
              "names": [
                "Path"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "dotenv",
              "names": [
                "load_dotenv"
              ],
              "line": 9
            },
            {
              "type": "import",
              "module": "traceback",
              "names": [
                "traceback"
              ],
              "line": 49
            }
          ],
          "calls": [
            {
              "function": "load_dotenv",
              "line": 13
            },
            {
              "function": "getenv",
              "line": 15
            },
            {
              "function": "print",
              "line": 16
            },
            {
              "function": "post",
              "line": 37
            },
            {
              "function": "print",
              "line": 38
            },
            {
              "function": "print",
              "line": 39
            },
            {
              "function": "json",
              "line": 42
            },
            {
              "function": "print",
              "line": 43
            },
            {
              "function": "print",
              "line": 44
            },
            {
              "function": "print",
              "line": 46
            },
            {
              "function": "print",
              "line": 48
            },
            {
              "function": "print_exc",
              "line": 50
            },
            {
              "function": "Path",
              "line": 12
            },
            {
              "function": "dict",
              "line": 39
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 44
            },
            {
              "function": "get",
              "line": 44
            }
          ]
        },
        "agent_projects/test_whiteboard_real.py": {
          "functions": [],
          "classes": [],
          "imports": [
            {
              "type": "import",
              "module": "asyncio",
              "names": [
                "asyncio"
              ],
              "line": 6
            },
            {
              "type": "import",
              "module": "websockets",
              "names": [
                "websockets"
              ],
              "line": 7
            },
            {
              "type": "import",
              "module": "json",
              "names": [
                "json"
              ],
              "line": 8
            },
            {
              "type": "from_import",
              "module": "datetime",
              "names": [
                "datetime"
              ],
              "line": 9
            }
          ],
          "calls": [
            {
              "function": "print",
              "line": 14
            },
            {
              "function": "print",
              "line": 15
            },
            {
              "function": "run",
              "line": 94
            },
            {
              "function": "generate_real_app",
              "line": 94
            },
            {
              "function": "print",
              "line": 95
            },
            {
              "function": "print",
              "line": 97
            },
            {
              "function": "connect",
              "line": 18
            },
            {
              "function": "print",
              "line": 19
            },
            {
              "function": "loads",
              "line": 23
            },
            {
              "function": "print",
              "line": 36
            },
            {
              "function": "print",
              "line": 40
            },
            {
              "function": "print",
              "line": 41
            },
            {
              "function": "set",
              "line": 43
            },
            {
              "function": "now",
              "line": 45
            },
            {
              "function": "print",
              "line": 80
            },
            {
              "function": "print",
              "line": 90
            },
            {
              "function": "recv",
              "line": 22
            },
            {
              "function": "send",
              "line": 37
            },
            {
              "function": "print",
              "line": 83
            },
            {
              "function": "print",
              "line": 85
            },
            {
              "function": "len",
              "line": 87
            },
            {
              "function": "dumps",
              "line": 37
            },
            {
              "function": "loads",
              "line": 50
            },
            {
              "function": "get",
              "line": 52
            },
            {
              "function": "strftime",
              "line": 33
            },
            {
              "function": "now",
              "line": 47
            },
            {
              "function": "wait_for",
              "line": 49
            },
            {
              "function": "add",
              "line": 56
            },
            {
              "function": "print",
              "line": 57
            },
            {
              "function": "print",
              "line": 60
            },
            {
              "function": "print",
              "line": 69
            },
            {
              "function": "print",
              "line": 78
            },
            {
              "function": "join",
              "line": 80
            },
            {
              "function": "recv",
              "line": 49
            },
            {
              "function": "send",
              "line": 68
            },
            {
              "function": "print",
              "line": 72
            },
            {
              "function": "now",
              "line": 33
            },
            {
              "function": "dumps",
              "line": 68
            },
            {
              "function": "print",
              "line": 75
            },
            {
              "function": "upper",
              "line": 57
            },
            {
              "function": "get",
              "line": 75
            }
          ]
        }
      }
    },
    "import_graph": {
      "hello.py": [],
      "setup_project.py": [],
      "verify_reviewer_test.py": [
        "os",
        "sys",
        "json",
        "datetime"
      ],
      "test_system_understanding.py": [
        "asyncio",
        "logging",
        "sys",
        "pathlib",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "traceback",
        "traceback"
      ],
      "test_dashboard_create.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime",
        "traceback"
      ],
      "send_approval.py": [
        "asyncio",
        "websockets",
        "json",
        "sys"
      ],
      "__version__.py": [],
      "test_dashboard_request.py": [
        "asyncio",
        "websockets",
        "json",
        "sys"
      ],
      "test_infrastructure_comprehensive.py": [
        "asyncio",
        "sys",
        "os",
        "json",
        "agents.specialized.architect_agent",
        "agents.base.base_agent"
      ],
      "test_api_keys.py": [
        "os",
        "sys",
        "asyncio",
        "dotenv",
        "utils.openai_service",
        "utils.anthropic_service",
        "requests"
      ],
      "real_whiteboard_request.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "traceback"
      ],
      "cli.py": [
        "asyncio",
        "sys",
        "os",
        "json",
        "typing",
        "datetime",
        "argparse",
        "rich.console",
        "rich.table",
        "rich.panel",
        "rich.progress",
        "rich.prompt",
        "rich.syntax",
        "rich",
        "orchestration.master_dispatcher",
        "agents",
        "re"
      ],
      "test_websocket_debug.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "sys",
        "time",
        "datetime"
      ],
      "test_quick_infra.py": [
        "asyncio",
        "sys",
        "os",
        "agents.base.base_agent",
        "agents.specialized.architect_agent"
      ],
      "quick_test_key.py": [
        "openai",
        "subprocess",
        "openai"
      ],
      "test_v4_features.py": [
        "sys",
        "os",
        "agents.specialized.architect_agent"
      ],
      "test_execution_time_fix.py": [
        "asyncio",
        "sys",
        "os",
        "agents.agent_registry",
        "agents.specialized.orchestrator_agent_v2",
        "agents.specialized.architect_agent"
      ],
      "test_langgraph_system.py": [
        "asyncio",
        "sys",
        "os",
        "datetime",
        "langgraph_system",
        "langgraph_system.extensions"
      ],
      "send_real_request.py": [
        "asyncio",
        "websockets",
        "json",
        "time",
        "datetime"
      ],
      "fixes/orchestrator_file_write_fix.py": [
        "re",
        "re"
      ],
      "fixes/task_request_enhancement.py": [
        "dataclasses",
        "typing"
      ],
      "claude_web_proxy/claude_browser.py": [
        "asyncio",
        "json",
        "os",
        "typing",
        "pathlib",
        "structlog",
        "playwright.async_api"
      ],
      "claude_web_proxy/quick_test.py": [
        "asyncio",
        "aiohttp",
        "sys",
        "pathlib",
        "time",
        "claude_web_proxy.crewai_integration"
      ],
      "claude_web_proxy/fastapi_server.py": [
        "asyncio",
        "json",
        "contextlib",
        "typing",
        "datetime",
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.responses",
        "pydantic",
        "structlog",
        "uvicorn",
        "claude_browser"
      ],
      "claude_web_proxy/crewai_integration.py": [
        "asyncio",
        "aiohttp",
        "json",
        "typing",
        "structlog",
        "crewai.llm",
        "crewai.agent",
        "concurrent.futures",
        "threading",
        "warnings"
      ],
      "claude_web_proxy/setup_and_test.py": [
        "asyncio",
        "json",
        "os",
        "sys",
        "time",
        "pathlib",
        "typing",
        "aiohttp",
        "structlog",
        "claude_web_proxy.claude_browser",
        "claude_web_proxy.fastapi_server",
        "multiprocessing",
        "subprocess",
        "signal",
        "argparse",
        "playwright",
        "fastapi",
        "uvicorn",
        "aiohttp",
        "claude_web_proxy.crewai_integration"
      ],
      "claude_web_proxy/__init__.py": [
        "claude_browser",
        "crewai_integration"
      ],
      "claude_web_proxy/debug_browser_api.py": [
        "asyncio",
        "sys",
        "pathlib",
        "traceback",
        "playwright.async_api",
        "structlog"
      ],
      "core/memory_manager.py": [
        "enum",
        "typing",
        "logging"
      ],
      "core/pause_handler.py": [
        "enum",
        "typing",
        "logging"
      ],
      "core/cache_manager.py": [
        "asyncio",
        "hashlib",
        "json",
        "typing",
        "logging",
        "functools",
        "datetime",
        "aioredis"
      ],
      "core/__init__.py": [
        "memory_manager",
        "shared_context_manager",
        "conversation_context_manager",
        "pause_handler",
        "git_checkpoint_manager"
      ],
      "core/shared_context_manager.py": [
        "typing",
        "logging"
      ],
      "core/conversation_context_manager.py": [
        "typing",
        "logging"
      ],
      "core/git_checkpoint_manager.py": [
        "typing",
        "logging"
      ],
      "core/exceptions.py": [],
      "core/analysis/semgrep_analyzer.py": [
        "logging",
        "typing"
      ],
      "core/analysis/vulture_analyzer.py": [
        "logging",
        "typing"
      ],
      "core/analysis/__init__.py": [],
      "core/analysis/radon_metrics.py": [
        "logging",
        "typing"
      ],
      "core/analysis/layer_analyzer.py": [
        "os",
        "logging",
        "typing",
        "collections"
      ],
      "core/analysis/call_graph_analyzer.py": [
        "logging",
        "typing",
        "collections"
      ],
      "core/indexing/tree_sitter_indexer.py": [
        "os",
        "ast",
        "typing",
        "logging"
      ],
      "core/indexing/__init__.py": [],
      "core/indexing/code_indexer.py": [
        "os",
        "asyncio",
        "typing",
        "pathlib",
        "logging",
        "tree_sitter_indexer"
      ],
      "config/capabilities_loader.py": [
        "os",
        "yaml",
        "logging",
        "typing",
        "pathlib",
        "pathlib",
        "fnmatch"
      ],
      "config/settings.py": [
        "os",
        "pathlib"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py": [
        "typing",
        "base_agent"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py": [
        "typing",
        "base_agent",
        "re"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py": [
        "abc",
        "typing",
        "os",
        "datetime",
        "re",
        "ast"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py": [
        "os",
        "aiohttp",
        "asyncio",
        "typing",
        "base_agent",
        "re"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py": [
        "base_agent",
        "architect_gpt",
        "codesmith_claude",
        "docu_bot",
        "reviewer_gpt",
        "fixer_bot",
        "trade_strat",
        "research_bot",
        "opus_arbitrator"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py": [
        "typing",
        "base_agent",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.crewai_integration"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py": [
        "typing",
        "base_agent",
        "re"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py": [
        "typing",
        "base_agent",
        "re",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.crewai_integration"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py": [
        "typing",
        "base_agent",
        "re"
      ],
      "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py": [
        "typing",
        "base_agent",
        "re",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.crewai_integration"
      ],
      "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py": [
        "asyncio",
        "os",
        "sys",
        "pathlib",
        "subprocess",
        "time",
        "typing",
        "claude_web_proxy.crewai_integration",
        "orchestration.master_dispatcher",
        "orchestration.intent_classifier",
        "argparse"
      ],
      "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py": [
        "asyncio",
        "sys",
        "pathlib",
        "claude_web_proxy.claude_browser",
        "structlog"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py": [
        "asyncio",
        "typing",
        "datetime",
        "time",
        "traceback"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py": [
        "typing",
        "dataclasses",
        "datetime",
        "json"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/__init__.py": [
        "master_dispatcher",
        "intent_classifier",
        "workflow_generator",
        "execution_engine",
        "learning_system"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py": [
        "re",
        "typing",
        "enum",
        "dataclasses"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py": [
        "asyncio",
        "typing",
        "dataclasses",
        "yaml",
        "json",
        "re",
        "datetime",
        "intent_classifier",
        "workflow_generator",
        "execution_engine",
        "learning_system",
        "shared_context",
        "agents"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py": [
        "abc",
        "typing",
        "dataclasses",
        "datetime",
        "json",
        "project_contexts",
        "project_contexts.base_project_context"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py": [
        "json",
        "os",
        "datetime",
        "pathlib",
        "typing",
        "statistics"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py": [
        "typing",
        "dataclasses",
        "json",
        "datetime"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py": [
        "re",
        "time",
        "typing",
        "base_quality_gate"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py": [
        "re",
        "time",
        "typing",
        "base_quality_gate"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py": [
        "re",
        "typing",
        "dataclasses",
        "abc",
        "json",
        "enum"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py": [
        "re",
        "time",
        "typing",
        "base_quality_gate"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py": [
        "re",
        "time",
        "typing",
        "base_quality_gate"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/__init__.py": [
        "base_quality_gate",
        "trading_quality_gate",
        "ron_strategy_quality_gate",
        "engine_parity_quality_gate",
        "security_quality_gate"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py": [
        "abc",
        "typing",
        "datetime",
        "logging",
        "base_workflow",
        "shared_context"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py": [
        "typing",
        "datetime",
        "logging",
        "base_workflow",
        "shared_context"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py": [
        "base_workflow",
        "generic_software_workflow",
        "trading_system_workflow"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py": [
        "abc",
        "typing",
        "datetime",
        "logging"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py": [
        "typing",
        "base_project_context",
        "json"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/__init__.py": [
        "base_project_context",
        "trading_project_context",
        "web_app_context"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py": [
        "typing",
        "base_project_context",
        "json"
      ],
      "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py": [
        "abc",
        "typing",
        "dataclasses"
      ],
      "tests/test_cache_manager.py": [
        "pytest",
        "asyncio",
        "json",
        "unittest.mock"
      ],
      "tests/test_server_auto.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys"
      ],
      "tests/test_file_capabilities_simple.py": [
        "os",
        "sys",
        "asyncio",
        "tempfile",
        "shutil",
        "agents.tools.file_tools",
        "config.capabilities_loader",
        "traceback"
      ],
      "tests/test_direct_file_write.py": [
        "asyncio",
        "sys",
        "os",
        "agents.specialized.codesmith_agent",
        "traceback"
      ],
      "tests/test_real_agent.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys"
      ],
      "tests/test_server.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys",
        "datetime"
      ],
      "tests/test_agent_write_integration.py": [
        "asyncio",
        "json",
        "os",
        "sys",
        "tempfile",
        "shutil",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.base.base_agent",
        "aiohttp",
        "traceback"
      ],
      "tests/test_agent_file_capabilities.py": [
        "os",
        "sys",
        "asyncio",
        "tempfile",
        "shutil",
        "pytest",
        "pathlib",
        "typing",
        "agents.base.base_agent",
        "agents.tools.file_tools",
        "agents.specialized.codesmith_agent",
        "agents.specialized.architect_agent",
        "config.capabilities_loader"
      ],
      "tests/test_integration.py": [
        "asyncio",
        "json",
        "sys",
        "aiohttp",
        "datetime",
        "typing"
      ],
      "agents/agent_registry.py": [
        "logging",
        "typing",
        "dataclasses",
        "enum",
        "base.base_agent",
        "specialized.orchestrator_agent_v2",
        "config.capabilities_loader",
        "specialized.research_agent",
        "specialized.fixer_gpt_agent"
      ],
      "agents/tools/__init__.py": [
        "file_tools"
      ],
      "agents/tools/file_tools.py": [
        "os",
        "shutil",
        "json",
        "logging",
        "pathlib",
        "typing",
        "datetime",
        "dataclasses",
        "fnmatch"
      ],
      "agents/tools/browser_tester.py": [
        "asyncio",
        "logging",
        "os",
        "typing",
        "pathlib",
        "playwright.async_api",
        "subprocess",
        "socket"
      ],
      "agents/specialized/fixerbot_agent.py": [
        "logging",
        "os",
        "re",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service",
        "subprocess"
      ],
      "agents/specialized/reviewer_gpt_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "base.prime_directives",
        "utils.openai_service",
        "tools.browser_tester",
        "re",
        "re"
      ],
      "agents/specialized/tradestrat_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service"
      ],
      "agents/specialized/docubot_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service"
      ],
      "agents/specialized/architect_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "config",
        "sys",
        "os",
        "core.exceptions",
        "services.project_cache",
        "services.smart_file_watcher",
        "services.code_search",
        "core.indexing.tree_sitter_indexer",
        "core.indexing.code_indexer",
        "core.analysis.semgrep_analyzer",
        "core.analysis.vulture_analyzer",
        "core.analysis.radon_metrics",
        "core.analysis.call_graph_analyzer",
        "core.analysis.layer_analyzer",
        "services.diagram_service",
        "config.capabilities_loader",
        "datetime",
        "core.exceptions",
        "traceback",
        "core.exceptions",
        "api.server"
      ],
      "agents/specialized/codesmith_agent.py": [
        "asyncio",
        "json",
        "re",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service",
        "sys",
        "os",
        "core.exceptions",
        "core.indexing.tree_sitter_indexer",
        "core.indexing.code_indexer",
        "core.analysis.vulture_analyzer",
        "core.analysis.radon_metrics",
        "services.diagram_service",
        "os",
        "re",
        "re",
        "config.capabilities_loader",
        "agents.agent_registry",
        "subprocess",
        "traceback"
      ],
      "agents/specialized/fixer_gpt_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "backend.config.settings"
      ],
      "agents/specialized/performance_bot.py": [
        "asyncio",
        "cProfile",
        "pstats",
        "io",
        "tracemalloc",
        "time",
        "subprocess",
        "tempfile",
        "os",
        "json",
        "shutil",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "re"
      ],
      "agents/specialized/research_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "sys",
        "os",
        "utils.perplexity_service"
      ],
      "agents/specialized/orchestrator_agent_v2.py": [
        "asyncio",
        "json",
        "os",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "os",
        "re",
        "agents.agent_registry",
        "datetime",
        "asyncio",
        "api.server",
        "json"
      ],
      "agents/specialized/opus_arbitrator_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service"
      ],
      "agents/specialized/orchestrator_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "base.base_agent",
        "json",
        "core.memory_manager"
      ],
      "agents/base/base_agent.py": [
        "abc",
        "typing",
        "dataclasses",
        "datetime",
        "asyncio",
        "logging",
        "json",
        "os",
        "sys",
        "enum",
        "config.settings",
        "core.memory_manager",
        "core.shared_context_manager",
        "core.conversation_context_manager",
        "prime_directives",
        "core.pause_handler",
        "core.git_checkpoint_manager",
        "agents.tools.file_tools",
        "json",
        "os",
        "json",
        "os",
        "dataclasses",
        "pathlib",
        "agents.specialized.research_agent",
        "core.memory_manager",
        "core.memory_manager",
        "core.memory_manager"
      ],
      "agents/base/prime_directives.py": [
        "logging",
        "re",
        "typing",
        "dataclasses",
        "subprocess",
        "os"
      ],
      "agents/base/chat_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base_agent"
      ],
      "utils/perplexity_service.py": [
        "os",
        "logging",
        "typing",
        "aiohttp",
        "json",
        "datetime",
        "requests"
      ],
      "utils/claude_code_service.py": [
        "asyncio",
        "json",
        "logging",
        "subprocess",
        "re",
        "typing",
        "dataclasses"
      ],
      "utils/openai_service.py": [
        "os",
        "asyncio",
        "logging",
        "typing",
        "dataclasses",
        "openai",
        "dotenv",
        "json",
        "asyncio"
      ],
      "utils/anthropic_service.py": [
        "os",
        "asyncio",
        "logging",
        "typing",
        "dataclasses",
        "anthropic",
        "dotenv"
      ],
      "backend/test_system_understanding.py": [
        "asyncio",
        "logging",
        "sys",
        "pathlib",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "traceback",
        "traceback"
      ],
      "backend/__version__.py": [],
      "backend/test_infrastructure_comprehensive.py": [
        "asyncio",
        "sys",
        "os",
        "json",
        "agents.specialized.architect_agent",
        "agents.base.base_agent"
      ],
      "backend/test_api_keys.py": [
        "os",
        "sys",
        "asyncio",
        "dotenv",
        "utils.openai_service",
        "utils.anthropic_service",
        "requests"
      ],
      "backend/test_websocket_debug.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "sys",
        "time",
        "datetime"
      ],
      "backend/test_quick_infra.py": [
        "asyncio",
        "sys",
        "os",
        "agents.base.base_agent",
        "agents.specialized.architect_agent"
      ],
      "backend/quick_test_key.py": [
        "openai",
        "subprocess",
        "openai"
      ],
      "backend/test_v4_features.py": [
        "sys",
        "os",
        "agents.specialized.architect_agent"
      ],
      "backend/test_execution_time_fix.py": [
        "asyncio",
        "sys",
        "os",
        "agents.agent_registry",
        "agents.specialized.orchestrator_agent_v2",
        "agents.specialized.architect_agent"
      ],
      "backend/test_langgraph_system.py": [
        "asyncio",
        "sys",
        "os",
        "datetime",
        "langgraph_system",
        "langgraph_system.extensions"
      ],
      "backend/fixes/orchestrator_file_write_fix.py": [
        "re",
        "re"
      ],
      "backend/fixes/task_request_enhancement.py": [
        "dataclasses",
        "typing"
      ],
      "backend/core/memory_manager.py": [
        "enum",
        "typing",
        "logging"
      ],
      "backend/core/pause_handler.py": [
        "enum",
        "typing",
        "logging"
      ],
      "backend/core/cache_manager.py": [
        "asyncio",
        "hashlib",
        "json",
        "typing",
        "logging",
        "functools",
        "datetime",
        "aioredis"
      ],
      "backend/core/__init__.py": [
        "memory_manager",
        "shared_context_manager",
        "conversation_context_manager",
        "pause_handler",
        "git_checkpoint_manager"
      ],
      "backend/core/shared_context_manager.py": [
        "typing",
        "logging"
      ],
      "backend/core/conversation_context_manager.py": [
        "typing",
        "logging"
      ],
      "backend/core/git_checkpoint_manager.py": [
        "typing",
        "logging"
      ],
      "backend/core/exceptions.py": [],
      "backend/core/analysis/semgrep_analyzer.py": [
        "logging",
        "subprocess",
        "json",
        "shutil",
        "typing",
        "pathlib"
      ],
      "backend/core/analysis/vulture_analyzer.py": [
        "logging",
        "typing",
        "pathlib",
        "vulture"
      ],
      "backend/core/analysis/__init__.py": [],
      "backend/core/analysis/radon_metrics.py": [
        "logging",
        "typing",
        "pathlib",
        "radon.complexity",
        "radon.metrics",
        "radon.raw"
      ],
      "backend/core/analysis/layer_analyzer.py": [
        "os",
        "logging",
        "typing",
        "collections"
      ],
      "backend/core/analysis/call_graph_analyzer.py": [
        "logging",
        "typing",
        "collections"
      ],
      "backend/core/indexing/tree_sitter_indexer.py": [
        "os",
        "ast",
        "typing",
        "logging"
      ],
      "backend/core/indexing/__init__.py": [],
      "backend/core/indexing/code_indexer.py": [
        "os",
        "asyncio",
        "typing",
        "pathlib",
        "logging",
        "tree_sitter_indexer"
      ],
      "backend/config/capabilities_loader.py": [
        "os",
        "yaml",
        "logging",
        "typing",
        "pathlib",
        "pathlib",
        "fnmatch"
      ],
      "backend/config/settings.py": [
        "os",
        "pathlib"
      ],
      "backend/tests/test_cache_manager.py": [
        "pytest",
        "asyncio",
        "json",
        "unittest.mock"
      ],
      "backend/tests/test_server_auto.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys"
      ],
      "backend/tests/test_file_capabilities_simple.py": [
        "os",
        "sys",
        "asyncio",
        "tempfile",
        "shutil",
        "agents.tools.file_tools",
        "config.capabilities_loader",
        "traceback"
      ],
      "backend/tests/test_direct_file_write.py": [
        "asyncio",
        "sys",
        "os",
        "agents.specialized.codesmith_agent",
        "traceback"
      ],
      "backend/tests/test_real_agent.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys"
      ],
      "backend/tests/test_server.py": [
        "asyncio",
        "json",
        "aiohttp",
        "sys",
        "datetime"
      ],
      "backend/tests/test_agent_write_integration.py": [
        "asyncio",
        "json",
        "os",
        "sys",
        "tempfile",
        "shutil",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.base.base_agent",
        "aiohttp",
        "traceback"
      ],
      "backend/tests/test_agent_file_capabilities.py": [
        "os",
        "sys",
        "asyncio",
        "tempfile",
        "shutil",
        "pytest",
        "pathlib",
        "typing",
        "agents.base.base_agent",
        "agents.tools.file_tools",
        "agents.specialized.codesmith_agent",
        "agents.specialized.architect_agent",
        "config.capabilities_loader"
      ],
      "backend/tests/test_integration.py": [
        "asyncio",
        "json",
        "sys",
        "aiohttp",
        "datetime",
        "typing"
      ],
      "backend/agents/agent_registry.py": [
        "logging",
        "typing",
        "dataclasses",
        "enum",
        "base.base_agent",
        "specialized.orchestrator_agent_v2",
        "config.capabilities_loader",
        "specialized.research_agent",
        "specialized.fixer_gpt_agent"
      ],
      "backend/agents/tools/__init__.py": [
        "file_tools"
      ],
      "backend/agents/tools/file_tools.py": [
        "os",
        "shutil",
        "json",
        "logging",
        "pathlib",
        "typing",
        "datetime",
        "dataclasses",
        "fnmatch"
      ],
      "backend/agents/tools/browser_tester.py": [
        "asyncio",
        "logging",
        "os",
        "typing",
        "pathlib",
        "playwright.async_api",
        "subprocess",
        "socket"
      ],
      "backend/agents/specialized/video_agent.py": [
        "os",
        "sys",
        "json",
        "logging",
        "pathlib",
        "typing",
        "datetime",
        "agents.base.chat_agent",
        "agents.base.base_agent",
        "services.gemini_video_service",
        "config.settings",
        "utils.openai_service",
        "agents.base.base_agent"
      ],
      "backend/agents/specialized/fixerbot_agent.py": [
        "logging",
        "os",
        "re",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service",
        "subprocess"
      ],
      "backend/agents/specialized/reviewer_gpt_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "base.prime_directives",
        "utils.openai_service",
        "tools.browser_tester",
        "re",
        "re"
      ],
      "backend/agents/specialized/tradestrat_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service"
      ],
      "backend/agents/specialized/docubot_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service"
      ],
      "backend/agents/specialized/architect_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "config",
        "sys",
        "os",
        "core.exceptions",
        "services.project_cache",
        "services.smart_file_watcher",
        "services.code_search",
        "core.indexing.tree_sitter_indexer",
        "core.indexing.code_indexer",
        "core.analysis.semgrep_analyzer",
        "core.analysis.vulture_analyzer",
        "core.analysis.radon_metrics",
        "core.analysis.call_graph_analyzer",
        "core.analysis.layer_analyzer",
        "services.diagram_service",
        "config.capabilities_loader",
        "datetime",
        "core.exceptions",
        "traceback",
        "core.exceptions",
        "api.server"
      ],
      "backend/agents/specialized/codesmith_agent.py": [
        "asyncio",
        "json",
        "re",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service",
        "sys",
        "os",
        "core.exceptions",
        "core.indexing.tree_sitter_indexer",
        "core.indexing.code_indexer",
        "core.analysis.vulture_analyzer",
        "core.analysis.radon_metrics",
        "services.diagram_service",
        "re",
        "re",
        "config.capabilities_loader",
        "agents.agent_registry",
        "traceback",
        "traceback"
      ],
      "backend/agents/specialized/fixer_gpt_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "backend.config.settings"
      ],
      "backend/agents/specialized/performance_bot.py": [
        "asyncio",
        "cProfile",
        "pstats",
        "io",
        "tracemalloc",
        "time",
        "subprocess",
        "tempfile",
        "os",
        "json",
        "shutil",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "re"
      ],
      "backend/agents/specialized/research_agent.py": [
        "logging",
        "os",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "sys",
        "os",
        "utils.perplexity_service"
      ],
      "backend/agents/specialized/orchestrator_agent_v2.py": [
        "asyncio",
        "json",
        "os",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "os",
        "re",
        "agents.agent_registry",
        "datetime",
        "asyncio",
        "api.server",
        "json"
      ],
      "backend/agents/specialized/opus_arbitrator_agent.py": [
        "logging",
        "typing",
        "datetime",
        "base.chat_agent",
        "base.base_agent",
        "utils.claude_code_service"
      ],
      "backend/agents/specialized/orchestrator_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base.chat_agent",
        "base.base_agent",
        "utils.openai_service",
        "base.base_agent",
        "json",
        "core.memory_manager"
      ],
      "backend/agents/base/base_agent.py": [
        "abc",
        "typing",
        "dataclasses",
        "datetime",
        "asyncio",
        "logging",
        "json",
        "os",
        "sys",
        "enum",
        "config.settings",
        "core.memory_manager",
        "core.shared_context_manager",
        "core.conversation_context_manager",
        "prime_directives",
        "core.pause_handler",
        "core.git_checkpoint_manager",
        "agents.tools.file_tools",
        "json",
        "os",
        "json",
        "os",
        "pathlib",
        "agents.tools.file_tools",
        "agents.specialized.research_agent",
        "core.memory_manager",
        "core.memory_manager",
        "core.memory_manager"
      ],
      "backend/agents/base/prime_directives.py": [
        "logging",
        "re",
        "typing",
        "dataclasses",
        "subprocess",
        "os"
      ],
      "backend/agents/base/chat_agent.py": [
        "asyncio",
        "json",
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "base_agent"
      ],
      "backend/utils/perplexity_service.py": [
        "os",
        "logging",
        "typing",
        "aiohttp",
        "json",
        "datetime",
        "requests"
      ],
      "backend/utils/claude_code_service.py": [
        "asyncio",
        "json",
        "logging",
        "subprocess",
        "re",
        "typing",
        "dataclasses"
      ],
      "backend/utils/openai_service.py": [
        "os",
        "asyncio",
        "logging",
        "typing",
        "dataclasses",
        "openai",
        "dotenv",
        "json",
        "asyncio"
      ],
      "backend/utils/anthropic_service.py": [
        "os",
        "asyncio",
        "logging",
        "typing",
        "dataclasses",
        "anthropic",
        "dotenv"
      ],
      "backend/langgraph_system/intelligent_query_handler.py": [
        "logging",
        "typing",
        "dataclasses",
        "state"
      ],
      "backend/langgraph_system/cache_manager.py": [
        "subprocess",
        "time",
        "logging",
        "redis",
        "os",
        "sys",
        "typing",
        "__version__"
      ],
      "backend/langgraph_system/development_query_handler.py": [
        "logging",
        "typing",
        "dataclasses",
        "re"
      ],
      "backend/langgraph_system/__init__.py": [
        "state",
        "workflow",
        "extensions"
      ],
      "backend/langgraph_system/query_classifier.py": [
        "logging",
        "re",
        "hashlib",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "backend/langgraph_system/workflow_self_diagnosis.py": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "re",
        "json",
        "collections",
        "state"
      ],
      "backend/langgraph_system/workflow.py": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "langgraph.graph",
        "langgraph.checkpoint.memory",
        "state",
        "extensions",
        "cache_manager",
        "sys",
        "os",
        "langgraph.checkpoint.sqlite.aio",
        "intelligent_query_handler",
        "workflow_self_diagnosis",
        "safe_orchestrator_executor",
        "query_classifier",
        "development_query_handler",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.specialized.reviewer_gpt_agent",
        "agents.specialized.fixerbot_agent",
        "agents.base.base_agent",
        "agents.specialized.orchestrator_agent",
        "agents.specialized.research_agent",
        "agents.specialized.docubot_agent",
        "agents.specialized.performance_bot",
        "agents.specialized.tradestrat_agent",
        "agents.specialized.opus_arbitrator_agent",
        "config.settings",
        "langgraph.checkpoint.sqlite",
        "agents.specialized.video_agent",
        "agents.specialized.fixer_gpt_agent",
        "config.settings",
        "sys",
        "os",
        "config.settings",
        "json",
        "re",
        "json",
        "re",
        "traceback",
        "traceback"
      ],
      "backend/langgraph_system/state.py": [
        "typing",
        "dataclasses",
        "datetime",
        "uuid",
        "operator",
        "os"
      ],
      "backend/langgraph_system/safe_orchestrator_executor.py": [
        "logging",
        "asyncio",
        "hashlib",
        "typing",
        "datetime",
        "dataclasses",
        "json",
        "query_classifier",
        "development_query_handler",
        "state"
      ],
      "backend/langgraph_system/extensions/dynamic_workflow.py": [
        "logging",
        "typing",
        "dataclasses",
        "langgraph.graph"
      ],
      "backend/langgraph_system/extensions/__init__.py": [
        "tool_discovery",
        "approval_manager",
        "persistent_memory",
        "dynamic_workflow"
      ],
      "backend/langgraph_system/extensions/approval_manager.py": [
        "asyncio",
        "uuid",
        "logging",
        "typing",
        "datetime",
        "dataclasses"
      ],
      "backend/langgraph_system/extensions/tool_discovery.py": [
        "inspect",
        "json",
        "logging",
        "typing",
        "functools",
        "dataclasses",
        "state",
        "time",
        "time",
        "yaml",
        "yaml"
      ],
      "backend/langgraph_system/extensions/persistent_memory.py": [
        "json",
        "sqlite3",
        "logging",
        "pickle",
        "typing",
        "datetime",
        "pathlib",
        "numpy",
        "state",
        "faiss",
        "langchain_openai",
        "langchain_community.vectorstores",
        "hashlib",
        "hashlib"
      ],
      "backend/api/settings_endpoint.py": [
        "fastapi",
        "pydantic",
        "typing",
        "logging",
        "sys",
        "os",
        "config.settings"
      ],
      "backend/api/server_langgraph.py": [
        "sys",
        "os",
        "fastapi",
        "starlette.websockets",
        "fastapi.middleware.cors",
        "contextlib",
        "asyncio",
        "json",
        "logging",
        "uuid",
        "typing",
        "datetime",
        "uvicorn",
        "langgraph_system",
        "__version__",
        "models_endpoint",
        "settings_endpoint",
        "socket",
        "requests",
        "time",
        "api.models_endpoint",
        "api.settings_endpoint",
        "traceback",
        "traceback",
        "backend.api.models_endpoint",
        "backend.api.settings_endpoint"
      ],
      "backend/api/__init__.py": [],
      "backend/api/models_endpoint.py": [
        "fastapi",
        "yaml",
        "json",
        "os",
        "logging",
        "typing",
        "datetime"
      ],
      "backend/services/diagram_service.py": [
        "typing",
        "pathlib",
        "enum",
        "logging"
      ],
      "backend/services/__init__.py": [
        "project_cache",
        "smart_file_watcher",
        "code_search",
        "diagram_service"
      ],
      "backend/services/project_cache.py": [
        "json",
        "hashlib",
        "pathlib",
        "typing",
        "datetime",
        "logging"
      ],
      "backend/services/smart_file_watcher.py": [
        "time",
        "pathlib",
        "typing",
        "datetime",
        "logging"
      ],
      "backend/services/gemini_video_service.py": [
        "os",
        "asyncio",
        "logging",
        "pathlib",
        "typing",
        "google.generativeai"
      ],
      "backend/services/code_search.py": [
        "re",
        "pathlib",
        "typing",
        "logging"
      ],
      "examples/claude_web_integration_example.py": [
        "asyncio",
        "os",
        "sys",
        "pathlib",
        "typing",
        "claude_web_proxy.crewai_integration",
        "claude_web_proxy.fastapi_server",
        "subprocess",
        "time",
        "signal",
        "argparse"
      ],
      "examples/video_analysis_demo.py": [
        "os",
        "sys",
        "time",
        "google.generativeai",
        "pathlib",
        "traceback"
      ],
      "examples/video_batch_demo.py": [
        "asyncio",
        "os",
        "sys",
        "pathlib",
        "agents.specialized.video_agent",
        "agents.base.base_agent",
        "traceback"
      ],
      "examples/multi_agent_claude_web_demo.py": [
        "asyncio",
        "sys",
        "pathlib",
        "typing",
        "subprocess",
        "time",
        "signal",
        "claude_web_proxy.crewai_integration",
        "orchestration.master_dispatcher",
        "argparse"
      ],
      "scripts/create_version_info.py": [
        "json",
        "os",
        "sys",
        "datetime",
        "pathlib",
        "argparse",
        "traceback"
      ],
      "scripts/update_instructions.py": [
        "os",
        "shutil",
        "hashlib",
        "json",
        "pathlib",
        "datetime",
        "typing",
        "difflib",
        "argparse",
        "sys",
        "traceback"
      ],
      "langgraph_system/intelligent_query_handler.py": [
        "logging",
        "typing",
        "dataclasses",
        "state"
      ],
      "langgraph_system/cache_manager.py": [
        "subprocess",
        "time",
        "logging",
        "redis",
        "os",
        "sys",
        "typing",
        "__version__"
      ],
      "langgraph_system/development_query_handler.py": [
        "logging",
        "typing",
        "dataclasses",
        "re"
      ],
      "langgraph_system/__init__.py": [
        "state",
        "workflow",
        "extensions"
      ],
      "langgraph_system/query_classifier.py": [
        "logging",
        "re",
        "hashlib",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "langgraph_system/workflow_self_diagnosis.py": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "re",
        "json",
        "collections",
        "state"
      ],
      "langgraph_system/workflow.py": [
        "logging",
        "asyncio",
        "typing",
        "datetime",
        "langgraph.graph",
        "langgraph.checkpoint.memory",
        "state",
        "extensions",
        "cache_manager",
        "sys",
        "os",
        "langgraph.checkpoint.sqlite.aio",
        "intelligent_query_handler",
        "workflow_self_diagnosis",
        "safe_orchestrator_executor",
        "query_classifier",
        "development_query_handler",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.specialized.reviewer_gpt_agent",
        "agents.specialized.fixerbot_agent",
        "agents.base.base_agent",
        "agents.specialized.orchestrator_agent",
        "agents.specialized.research_agent",
        "agents.specialized.docubot_agent",
        "agents.specialized.performance_bot",
        "agents.specialized.tradestrat_agent",
        "agents.specialized.opus_arbitrator_agent",
        "langgraph.checkpoint.sqlite",
        "agents.specialized.fixer_gpt_agent",
        "config.settings",
        "sys",
        "os",
        "config.settings",
        "json",
        "re",
        "json",
        "re",
        "traceback"
      ],
      "langgraph_system/state.py": [
        "typing",
        "dataclasses",
        "datetime",
        "uuid",
        "operator",
        "os"
      ],
      "langgraph_system/safe_orchestrator_executor.py": [
        "logging",
        "asyncio",
        "hashlib",
        "typing",
        "datetime",
        "dataclasses",
        "json",
        "query_classifier",
        "development_query_handler",
        "state"
      ],
      "langgraph_system/extensions/dynamic_workflow.py": [
        "logging",
        "typing",
        "dataclasses",
        "langgraph.graph"
      ],
      "langgraph_system/extensions/__init__.py": [
        "tool_discovery",
        "approval_manager",
        "persistent_memory",
        "dynamic_workflow"
      ],
      "langgraph_system/extensions/approval_manager.py": [
        "asyncio",
        "uuid",
        "logging",
        "typing",
        "datetime",
        "dataclasses"
      ],
      "langgraph_system/extensions/tool_discovery.py": [
        "inspect",
        "json",
        "logging",
        "typing",
        "functools",
        "dataclasses",
        "state",
        "time",
        "time",
        "yaml",
        "yaml"
      ],
      "langgraph_system/extensions/persistent_memory.py": [
        "json",
        "sqlite3",
        "logging",
        "pickle",
        "typing",
        "datetime",
        "pathlib",
        "numpy",
        "state",
        "faiss",
        "langchain_openai",
        "langchain_community.vectorstores",
        "hashlib",
        "hashlib"
      ],
      "api/settings_endpoint.py": [
        "fastapi",
        "pydantic",
        "typing",
        "logging",
        "sys",
        "os",
        "config.settings"
      ],
      "api/server_langgraph.py": [
        "sys",
        "os",
        "fastapi",
        "starlette.websockets",
        "fastapi.middleware.cors",
        "contextlib",
        "asyncio",
        "json",
        "logging",
        "uuid",
        "typing",
        "datetime",
        "uvicorn",
        "langgraph_system",
        "__version__",
        "models_endpoint",
        "settings_endpoint",
        "socket",
        "requests",
        "time",
        "api.models_endpoint",
        "api.settings_endpoint",
        "traceback",
        "traceback",
        "backend.api.models_endpoint",
        "backend.api.settings_endpoint"
      ],
      "api/__init__.py": [],
      "api/models_endpoint.py": [
        "fastapi",
        "yaml",
        "json",
        "os",
        "logging",
        "typing",
        "datetime"
      ],
      "services/diagram_service.py": [
        "typing",
        "pathlib",
        "enum",
        "logging"
      ],
      "services/__init__.py": [
        "project_cache",
        "smart_file_watcher",
        "code_search",
        "diagram_service"
      ],
      "services/project_cache.py": [
        "json",
        "hashlib",
        "pathlib",
        "typing",
        "datetime",
        "logging"
      ],
      "services/smart_file_watcher.py": [
        "time",
        "pathlib",
        "typing",
        "datetime",
        "logging"
      ],
      "services/code_search.py": [
        "re",
        "pathlib",
        "typing",
        "logging"
      ],
      "agent_projects/test_safe_executor_552.py": [
        "sys",
        "os",
        "asyncio",
        "datetime",
        "backend.__version__",
        "backend.langgraph_system.query_classifier",
        "backend.langgraph_system.development_query_handler",
        "backend.langgraph_system.safe_orchestrator_executor",
        "backend.langgraph_system.state"
      ],
      "agent_projects/test_no_approval.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "traceback"
      ],
      "agent_projects/test_architecture_proposal_workflow.py": [
        "asyncio",
        "sys",
        "os",
        "json",
        "datetime",
        "langgraph_system.workflow",
        "langgraph_system.state",
        "traceback"
      ],
      "agent_projects/test_tetris_websocket_workflow.py": [
        "asyncio",
        "websockets",
        "json",
        "sys",
        "datetime",
        "subprocess",
        "traceback",
        "traceback"
      ],
      "agent_projects/test_stub_fixed.py": [
        "asyncio",
        "json",
        "websockets",
        "uuid",
        "datetime"
      ],
      "agent_projects/test_simple_chat.py": [
        "asyncio",
        "json",
        "websockets"
      ],
      "agent_projects/test_new_features.py": [
        "asyncio",
        "logging",
        "sys",
        "backend.core.indexing.code_indexer",
        "backend.core.indexing.code_indexer",
        "backend.core.analysis.call_graph_analyzer",
        "backend.core.indexing.code_indexer",
        "backend.core.analysis.layer_analyzer",
        "backend.agents.tools.browser_tester",
        "backend.agents.specialized.architect_agent",
        "backend.agents.specialized.reviewer_gpt_agent",
        "traceback",
        "traceback",
        "traceback",
        "traceback",
        "traceback"
      ],
      "agent_projects/chart_renderer.py": [],
      "agent_projects/test_self_diagnosis.py": [
        "asyncio",
        "sys",
        "os",
        "logging",
        "datetime",
        "backend.langgraph_system.workflow_self_diagnosis",
        "backend.langgraph_system.state",
        "traceback"
      ],
      "agent_projects/test_indexing_progress.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_available_models.py": [
        "asyncio",
        "os",
        "json",
        "datetime",
        "openai",
        "openai",
        "anthropic",
        "openai"
      ],
      "agent_projects/test_dashboard_auto_approve.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys",
        "os",
        "traceback"
      ],
      "agent_projects/test_button_implementation.py": [
        "asyncio",
        "sys",
        "os",
        "backend.agents.specialized.codesmith_agent",
        "backend.agents.specialized.orchestrator_agent_v2",
        "backend.agents.base.base_agent"
      ],
      "agent_projects/test_routing_debug.py": [
        "asyncio",
        "sys",
        "os",
        "logging",
        "langgraph_system.workflow",
        "langgraph_system.state"
      ],
      "agent_projects/test_perplexity_integration.py": [
        "asyncio",
        "os",
        "sys",
        "pathlib",
        "dotenv",
        "backend.utils.perplexity_service",
        "backend.agents.specialized.research_agent",
        "backend.agents.base.base_agent",
        "traceback"
      ],
      "agent_projects/test_self_diagnosis_simple.py": [
        "sys",
        "os",
        "datetime",
        "dataclasses",
        "typing",
        "backend.langgraph_system.workflow_self_diagnosis",
        "backend.__version__"
      ],
      "agent_projects/test_show_approval.py": [
        "asyncio",
        "json",
        "websockets"
      ],
      "agent_projects/approve_architecture.py": [
        "asyncio",
        "json",
        "websockets"
      ],
      "agent_projects/test_intelligent_agents.py": [
        "asyncio",
        "sys",
        "os",
        "backend.agents.specialized.codesmith_agent",
        "backend.agents.specialized.orchestrator_agent_v2",
        "backend.agents.base.base_agent"
      ],
      "agent_projects/send_approval.py": [
        "asyncio",
        "websockets",
        "json",
        "sys"
      ],
      "agent_projects/test_architect_progress.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_connection.py": [
        "asyncio",
        "websockets",
        "json"
      ],
      "agent_projects/test_chat_approval.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_reviewer_validation.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys",
        "os",
        "traceback"
      ],
      "agent_projects/test_complex_workflow_simulation.py": [
        "json",
        "sys",
        "os",
        "datetime",
        "typing",
        "backend.__version__"
      ],
      "agent_projects/test_architect_json.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime"
      ],
      "agent_projects/test_no_cache.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_simple_workflow.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "traceback"
      ],
      "agent_projects/test_progress_enhanced.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_playwright_review.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "os",
        "time",
        "traceback"
      ],
      "agent_projects/test_orchestrator_steps.py": [
        "asyncio",
        "logging",
        "sys",
        "pathlib",
        "langgraph_system.workflow",
        "agents.base.base_agent"
      ],
      "agent_projects/test_agent_collaboration.py": [
        "asyncio",
        "sys",
        "os",
        "backend.langgraph_system.workflow",
        "backend.langgraph_system.state",
        "os"
      ],
      "agent_projects/test_agents_fixed.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "traceback"
      ],
      "agent_projects/test_multi_agent_workflow.py": [
        "asyncio",
        "logging",
        "sys",
        "pathlib",
        "langgraph_system.workflow",
        "agents.specialized.orchestrator_agent",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.specialized.reviewer_gpt_agent",
        "agents.specialized.fixerbot_agent",
        "agents.base.base_agent",
        "traceback"
      ],
      "agent_projects/test_final.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime"
      ],
      "agent_projects/test_tetris_workflow.py": [
        "asyncio",
        "websockets",
        "json",
        "sys",
        "datetime",
        "typing",
        "os",
        "traceback"
      ],
      "agent_projects/test_query_class.py": [
        "sys",
        "langgraph_system.query_classifier"
      ],
      "agent_projects/test_system.py": [
        "asyncio",
        "sys",
        "os",
        "datetime",
        "orchestration.master_dispatcher",
        "orchestration.intent_classifier",
        "orchestration.workflow_generator",
        "orchestration.execution_engine",
        "orchestration.learning_system"
      ],
      "agent_projects/test_websocket_debug.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "traceback"
      ],
      "agent_projects/test_code_verification.py": [
        "os",
        "re"
      ],
      "agent_projects/test_research_api.py": [
        "asyncio",
        "websockets",
        "json"
      ],
      "agent_projects/test_workflow_analysis.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime",
        "time",
        "traceback"
      ],
      "agent_projects/test_dashboard_generation.py": [
        "asyncio",
        "json",
        "websockets",
        "typing",
        "traceback"
      ],
      "agent_projects/test_query_classifier_simple.py": [
        "sys",
        "os",
        "datetime",
        "backend.__version__"
      ],
      "agent_projects/test_manual_approval.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys",
        "os",
        "traceback"
      ],
      "agent_projects/test_websocket_messages.py": [
        "asyncio",
        "json",
        "websockets",
        "datetime"
      ],
      "agent_projects/test_complex_app_request.py": [
        "asyncio",
        "json",
        "sys",
        "os",
        "datetime",
        "typing",
        "backend.langgraph_system.workflow",
        "backend.langgraph_system.state",
        "backend.__version__",
        "traceback"
      ],
      "agent_projects/test_quick_approval.py": [
        "asyncio",
        "websockets",
        "json",
        "sys",
        "traceback"
      ],
      "agent_projects/test_quick_fix.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime"
      ],
      "agent_projects/test_instructions_learning.py": [
        "asyncio",
        "sys",
        "os",
        "agents.specialized.architect_agent",
        "agents.specialized.codesmith_agent",
        "agents.base.base_agent",
        "core.memory_manager"
      ],
      "agent_projects/test_tetris_now.py": [
        "asyncio",
        "sys",
        "os",
        "logging",
        "backend.langgraph_system.workflow",
        "traceback"
      ],
      "agent_projects/test_reviewer_with_auto_approval.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys",
        "os",
        "traceback"
      ],
      "agent_projects/test_interactive_dashboard.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys",
        "os",
        "traceback"
      ],
      "agent_projects/test_dashboard_simple.py": [
        "asyncio",
        "json",
        "websockets"
      ],
      "agent_projects/test_tetris_complete.py": [
        "asyncio",
        "websockets",
        "json",
        "time",
        "datetime",
        "traceback"
      ],
      "agent_projects/test_simple_review.py": [
        "asyncio",
        "json",
        "logging",
        "websockets",
        "datetime",
        "sys"
      ],
      "agent_projects/test_infrastructure_analysis.py": [
        "asyncio",
        "sys",
        "os",
        "agents.specialized.architect_agent",
        "agents.base.base_agent",
        "agents.specialized.architect_agent",
        "traceback"
      ],
      "agent_projects/test_tetris_simple.py": [
        "asyncio",
        "sys",
        "os",
        "langgraph_system.workflow",
        "logging",
        "traceback"
      ],
      "agent_projects/test_perplexity_raw.py": [
        "os",
        "requests",
        "pathlib",
        "dotenv",
        "traceback"
      ],
      "agent_projects/test_whiteboard_real.py": [
        "asyncio",
        "websockets",
        "json",
        "datetime"
      ]
    },
    "statistics": {
      "total_files": 290,
      "total_functions": 1180,
      "total_classes": 297,
      "total_imports": 1949,
      "lines_of_code": 88139
    },
    "all_functions": [
      {
        "name": "get_version",
        "line": 18,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "__version__.py"
      },
      {
        "name": "get_version_tuple",
        "line": 22,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "__version__.py"
      },
      {
        "name": "is_compatible",
        "line": 26,
        "async": false,
        "calls": [
          "isinstance",
          "split",
          "map",
          "tuple"
        ],
        "parameters": [
          "required_version"
        ],
        "decorators": [],
        "file": "__version__.py"
      },
      {
        "name": "main",
        "line": 394,
        "async": false,
        "calls": [
          "add_argument",
          "ArgumentParser",
          "initialize",
          "_process_task",
          "run_tests",
          "_run_test_scenarios",
          "KIAutoAgentCLI",
          "run",
          "run_task",
          "parse_args"
        ],
        "parameters": [],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_show_welcome",
        "line": 67,
        "async": false,
        "calls": [
          "print",
          "Panel"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_display_results",
        "line": 198,
        "async": false,
        "calls": [
          "findall",
          "join",
          "Panel",
          "print",
          "Syntax",
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "result"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_show_help",
        "line": 257,
        "async": false,
        "calls": [
          "Table",
          "add_row",
          "print",
          "add_column"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_show_agents",
        "line": 275,
        "async": false,
        "calls": [
          "Table",
          "add_row",
          "print",
          "add_column"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_show_history",
        "line": 299,
        "async": false,
        "calls": [
          "add_column",
          "get",
          "fromisoformat",
          "add_row",
          "strftime",
          "Table",
          "enumerate",
          "print",
          "len",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_load_history",
        "line": 375,
        "async": false,
        "calls": [
          "open",
          "load",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "_save_history",
        "line": 385,
        "async": false,
        "calls": [
          "open",
          "dump"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "cli.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "test_websocket_debug.py"
      },
      {
        "name": "test_v4_features",
        "line": 14,
        "async": false,
        "calls": [
          "read",
          "open",
          "join",
          "split",
          "print",
          "append",
          "all"
        ],
        "parameters": [],
        "decorators": [],
        "file": "test_v4_features.py"
      },
      {
        "name": "print_test_header",
        "line": 40,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "title"
        ],
        "decorators": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "print_success",
        "line": 47,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "print_error",
        "line": 52,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "print_info",
        "line": 57,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "test_node",
        "line": 188,
        "async": false,
        "calls": [],
        "parameters": [
          "state"
        ],
        "decorators": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "_extract_file_path",
        "line": 64,
        "async": false,
        "calls": [
          "search",
          "group"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "_determine_file_path",
        "line": 84,
        "async": false,
        "calls": [
          "lower",
          "_extract_feature_name"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "_extract_feature_name",
        "line": 123,
        "async": false,
        "calls": [
          "lower",
          "len",
          "replace",
          "split"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "enhance_subtask_for_file_writing",
        "line": 27,
        "async": false,
        "calls": [
          "get",
          "lower",
          "any"
        ],
        "parameters": [
          "subtask"
        ],
        "decorators": [],
        "file": "fixes/task_request_enhancement.py"
      },
      {
        "name": "to_file_task",
        "line": 17,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "fixes/task_request_enhancement.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [
          "mkdir",
          "home",
          "Path",
          "str"
        ],
        "parameters": [
          "self",
          "user_data_dir",
          "headless"
        ],
        "decorators": [],
        "file": "claude_web_proxy/claude_browser.py"
      },
      {
        "name": "print_instructions",
        "line": 159,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [],
        "decorators": [],
        "file": "claude_web_proxy/quick_test.py"
      },
      {
        "name": "run_server",
        "line": 295,
        "async": false,
        "calls": [
          "run"
        ],
        "parameters": [
          "host",
          "port",
          "reload"
        ],
        "decorators": [],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "check_browser_context_status",
        "line": 114,
        "async": false,
        "calls": [
          "len",
          "debug",
          "is_closed",
          "str"
        ],
        "parameters": [],
        "decorators": [],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "create_claude_web_agent",
        "line": 286,
        "async": false,
        "calls": [
          "ClaudeWebLLM",
          "ImportError",
          "Agent"
        ],
        "parameters": [
          "role",
          "goal",
          "backstory",
          "server_url"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "create_claude_web_llm",
        "line": 320,
        "async": false,
        "calls": [
          "ClaudeWebLLM"
        ],
        "parameters": [
          "server_url"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "info",
          "__init__",
          "super",
          "rstrip"
        ],
        "parameters": [
          "self",
          "server_url",
          "timeout",
          "new_conversation_per_agent"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "generate",
        "line": 171,
        "async": false,
        "calls": [
          "result",
          "_send_message_async",
          "run_until_complete",
          "is_running",
          "submit",
          "close",
          "error",
          "run",
          "ThreadPoolExecutor",
          "new_event_loop",
          "get",
          "set_event_loop",
          "get_running_loop",
          "str"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "stream_generate",
        "line": 227,
        "async": false,
        "calls": [
          "generate"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "get_model_info",
        "line": 241,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "__del__",
        "line": 257,
        "async": false,
        "calls": [
          "create_task",
          "is_closed",
          "catch_warnings",
          "simplefilter",
          "hasattr",
          "close",
          "get_running_loop"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "__init__",
        "line": 19,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "generate",
        "line": 22,
        "async": false,
        "calls": [
          "NotImplementedError"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "run_in_thread",
        "line": 200,
        "async": false,
        "calls": [
          "_send_message_async",
          "run_until_complete",
          "close",
          "new_event_loop",
          "set_event_loop"
        ],
        "parameters": [],
        "decorators": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "__init__",
        "line": 31,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "install_playwright_browsers",
        "line": 65,
        "async": false,
        "calls": [
          "error",
          "info",
          "run",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "start_server",
        "line": 87,
        "async": false,
        "calls": [
          "Popen",
          "Path",
          "poll",
          "sleep",
          "error",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "stop_server",
        "line": 108,
        "async": false,
        "calls": [
          "wait",
          "terminate",
          "kill"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "generate_setup_report",
        "line": 296,
        "async": false,
        "calls": [
          "items",
          "strftime"
        ],
        "parameters": [
          "self",
          "results"
        ],
        "decorators": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "recommended_browser_status_check",
        "line": 132,
        "async": false,
        "calls": [
          "hasattr",
          "len",
          "is_closed"
        ],
        "parameters": [],
        "decorators": [],
        "file": "claude_web_proxy/debug_browser_api.py"
      },
      {
        "name": "get_memory_manager",
        "line": 171,
        "async": false,
        "calls": [
          "MemoryManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "__init__",
        "line": 31,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "store",
        "line": 39,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "memory_type",
          "data"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "retrieve",
        "line": 43,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "memory_type",
          "query"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "clear",
        "line": 47,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "memory_type"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "store_code_pattern",
        "line": 98,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "name",
          "description",
          "language",
          "code",
          "use_cases"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "store_learning",
        "line": 121,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "description",
          "lesson",
          "context",
          "impact"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "get_relevant_learnings",
        "line": 145,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "context",
          "limit"
        ],
        "decorators": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "learning_entries",
        "line": 163,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "file": "core/memory_manager.py"
      },
      {
        "name": "__init__",
        "line": 31,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "project_path"
        ],
        "decorators": [],
        "file": "core/pause_handler.py"
      },
      {
        "name": "pause",
        "line": 42,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "task_id",
          "state",
          "reason"
        ],
        "decorators": [],
        "file": "core/pause_handler.py"
      },
      {
        "name": "resume",
        "line": 50,
        "async": false,
        "calls": [
          "get",
          "info",
          "pop"
        ],
        "parameters": [
          "self",
          "task_id"
        ],
        "decorators": [],
        "file": "core/pause_handler.py"
      },
      {
        "name": "is_paused",
        "line": 58,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "task_id"
        ],
        "decorators": [],
        "file": "core/pause_handler.py"
      },
      {
        "name": "cache_agent_response",
        "line": 83,
        "async": false,
        "calls": [
          "wraps",
          "set",
          "hasattr",
          "info",
          "encode",
          "hexdigest",
          "md5",
          "get",
          "connect",
          "func",
          "CacheManager"
        ],
        "parameters": [
          "ttl"
        ],
        "decorators": [],
        "file": "core/cache_manager.py"
      },
      {
        "name": "__init__",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "redis_url"
        ],
        "decorators": [],
        "file": "core/cache_manager.py"
      },
      {
        "name": "decorator",
        "line": 93,
        "async": false,
        "calls": [
          "wraps",
          "set",
          "hasattr",
          "info",
          "encode",
          "hexdigest",
          "md5",
          "get",
          "connect",
          "func",
          "CacheManager"
        ],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "file": "core/cache_manager.py"
      },
      {
        "name": "get_shared_context",
        "line": 51,
        "async": false,
        "calls": [
          "SharedContextManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "set",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "key",
          "value"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "get",
        "line": 31,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "key",
          "default"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "update",
        "line": 35,
        "async": false,
        "calls": [
          "update"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "clear",
        "line": 39,
        "async": false,
        "calls": [
          "clear"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "get_all",
        "line": 43,
        "async": false,
        "calls": [
          "copy"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "get_conversation_context",
        "line": 50,
        "async": false,
        "calls": [
          "ConversationContextManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "add_message",
        "line": 27,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "conversation_id",
          "role",
          "content"
        ],
        "decorators": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "get_conversation",
        "line": 37,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "conversation_id"
        ],
        "decorators": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "clear_conversation",
        "line": 41,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "conversation_id"
        ],
        "decorators": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "project_path"
        ],
        "decorators": [],
        "file": "core/git_checkpoint_manager.py"
      },
      {
        "name": "create_checkpoint",
        "line": 34,
        "async": false,
        "calls": [
          "info",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "name",
          "message"
        ],
        "decorators": [],
        "file": "core/git_checkpoint_manager.py"
      },
      {
        "name": "list_checkpoints",
        "line": 45,
        "async": false,
        "calls": [
          "copy"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/git_checkpoint_manager.py"
      },
      {
        "name": "rollback_to",
        "line": 49,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "checkpoint_id"
        ],
        "decorators": [],
        "file": "core/git_checkpoint_manager.py"
      },
      {
        "name": "__init__",
        "line": 13,
        "async": false,
        "calls": [
          "join",
          "__init__",
          "super",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "dependencies"
        ],
        "decorators": [],
        "file": "core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 40,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "component",
          "file",
          "line"
        ],
        "decorators": [],
        "file": "core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 65,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "component",
          "reason",
          "solution",
          "file",
          "line"
        ],
        "decorators": [],
        "file": "core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/semgrep_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/vulture_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/radon_metrics.py"
      },
      {
        "name": "__init__",
        "line": 56,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_classify_files_into_layers",
        "line": 139,
        "async": false,
        "calls": [
          "keys",
          "_detect_file_layer"
        ],
        "parameters": [
          "self",
          "ast_data"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_detect_file_layer",
        "line": 154,
        "async": false,
        "calls": [
          "items",
          "max",
          "basename",
          "lower",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_build_layer_structure",
        "line": 193,
        "async": false,
        "calls": [
          "items",
          "sort",
          "get",
          "len",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_detect_layer_violations",
        "line": 221,
        "async": false,
        "calls": [
          "items",
          "_check_layer_violation",
          "_resolve_import_to_file",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "file_layers",
          "import_graph"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_resolve_import_to_file",
        "line": 254,
        "async": false,
        "calls": [
          "keys",
          "replace"
        ],
        "parameters": [
          "self",
          "import_name",
          "file_layers"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_check_layer_violation",
        "line": 274,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "from_file",
          "from_layer",
          "to_file",
          "to_layer"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_calculate_quality_score",
        "line": 331,
        "async": false,
        "calls": [
          "values",
          "max",
          "round",
          "len",
          "min",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers",
          "violations",
          "ast_data"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_calculate_metrics",
        "line": 373,
        "async": false,
        "calls": [
          "len",
          "dict",
          "values",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers",
          "violations",
          "ast_data"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "_empty_layer_analysis",
        "line": 405,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_function_registry",
        "line": 120,
        "async": false,
        "calls": [
          "get",
          "items"
        ],
        "parameters": [
          "self",
          "ast_data"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_call_relationships",
        "line": 144,
        "async": false,
        "calls": [
          "_resolve_function_id",
          "items",
          "dict",
          "get",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "ast_data",
          "function_registry"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_resolve_function_id",
        "line": 179,
        "async": false,
        "calls": [
          "endswith"
        ],
        "parameters": [
          "self",
          "func_name",
          "current_file",
          "function_registry"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_detect_entry_points",
        "line": 206,
        "async": false,
        "calls": [
          "append",
          "items",
          "len",
          "any"
        ],
        "parameters": [
          "self",
          "function_registry",
          "reverse_call_graph"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_find_unused_functions",
        "line": 240,
        "async": false,
        "calls": [
          "items",
          "endswith",
          "len",
          "append",
          "startswith"
        ],
        "parameters": [
          "self",
          "function_registry",
          "reverse_call_graph",
          "entry_points"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_detect_hot_paths",
        "line": 275,
        "async": false,
        "calls": [
          "append",
          "len",
          "sort",
          "_bfs_paths"
        ],
        "parameters": [
          "self",
          "call_graph",
          "entry_points"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_bfs_paths",
        "line": 304,
        "async": false,
        "calls": [
          "get",
          "deque",
          "set",
          "popleft",
          "len",
          "append",
          "add"
        ],
        "parameters": [
          "self",
          "start",
          "call_graph",
          "max_depth"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_nodes",
        "line": 336,
        "async": false,
        "calls": [
          "get",
          "len",
          "items",
          "append"
        ],
        "parameters": [
          "self",
          "function_registry",
          "call_graph",
          "reverse_call_graph"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_edges",
        "line": 367,
        "async": false,
        "calls": [
          "get",
          "append",
          "items",
          "split"
        ],
        "parameters": [
          "self",
          "call_graph",
          "ast_data"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_analyze_clusters",
        "line": 399,
        "async": false,
        "calls": [
          "items",
          "sort",
          "split",
          "round",
          "enumerate",
          "get",
          "len",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "call_graph",
          "function_registry"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_calculate_metrics",
        "line": 446,
        "async": false,
        "calls": [
          "max",
          "len",
          "_calculate_call_depth",
          "round"
        ],
        "parameters": [
          "self",
          "nodes",
          "edges",
          "call_graph"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_calculate_call_depth",
        "line": 477,
        "async": false,
        "calls": [
          "max",
          "set",
          "copy",
          "get",
          "_calculate_call_depth",
          "add"
        ],
        "parameters": [
          "self",
          "func_id",
          "call_graph",
          "visited"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_empty_call_graph",
        "line": 505,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_extract_function_calls",
        "line": 94,
        "async": false,
        "calls": [
          "isinstance",
          "walk",
          "set",
          "_get_call_name",
          "list",
          "append"
        ],
        "parameters": [
          "self",
          "func_node"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_call_name",
        "line": 104,
        "async": false,
        "calls": [
          "isinstance"
        ],
        "parameters": [
          "self",
          "call_node"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_name",
        "line": 113,
        "async": false,
        "calls": [
          "isinstance",
          "_get_attribute_path",
          "str"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_attribute_path",
        "line": 121,
        "async": false,
        "calls": [
          "isinstance",
          "append",
          "join",
          "reversed"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_decorator_name",
        "line": 132,
        "async": false,
        "calls": [
          "isinstance",
          "_get_call_name",
          "str"
        ],
        "parameters": [
          "self",
          "decorator"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_extract_import",
        "line": 140,
        "async": false,
        "calls": [
          "isinstance"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "__init__",
        "line": 22,
        "async": false,
        "calls": [
          "TreeSitterIndexer"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "core/indexing/code_indexer.py"
      },
      {
        "name": "_find_python_files",
        "line": 108,
        "async": false,
        "calls": [
          "join",
          "walk",
          "append",
          "endswith"
        ],
        "parameters": [
          "self",
          "root_path"
        ],
        "decorators": [],
        "file": "core/indexing/code_indexer.py"
      },
      {
        "name": "_count_total_lines",
        "line": 123,
        "async": false,
        "calls": [
          "open",
          "len",
          "readlines"
        ],
        "parameters": [
          "self",
          "files"
        ],
        "decorators": [],
        "file": "core/indexing/code_indexer.py"
      },
      {
        "name": "get_capabilities_loader",
        "line": 187,
        "async": false,
        "calls": [
          "CapabilitiesLoader"
        ],
        "parameters": [],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "apply_capabilities_to_agent",
        "line": 194,
        "async": false,
        "calls": [
          "get_capabilities_loader",
          "apply_to_config"
        ],
        "parameters": [
          "agent_config"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [
          "_load_capabilities",
          "join",
          "dirname"
        ],
        "parameters": [
          "self",
          "config_path"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "_load_capabilities",
        "line": 32,
        "async": false,
        "calls": [
          "warning",
          "exists",
          "open",
          "info",
          "error",
          "get",
          "len",
          "safe_load"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "get_agent_capabilities",
        "line": 49,
        "async": false,
        "calls": [
          "get",
          "info",
          "replace"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "apply_to_config",
        "line": 83,
        "async": false,
        "calls": [
          "debug",
          "isinstance",
          "get_agent_capabilities",
          "get",
          "getattr"
        ],
        "parameters": [
          "self",
          "agent_config"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "can_agent_write",
        "line": 113,
        "async": false,
        "calls": [
          "split",
          "abspath",
          "get_agent_capabilities",
          "lstrip",
          "fnmatch",
          "rstrip",
          "get",
          "len",
          "startswith"
        ],
        "parameters": [
          "self",
          "agent_name",
          "file_path"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "get_all_capabilities",
        "line": 180,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "get_language_directive",
        "line": 124,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "config/settings.py"
      },
      {
        "name": "get_timeout",
        "line": 129,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "cls",
          "task_type"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "config/settings.py"
      },
      {
        "name": "update_from_vscode",
        "line": 139,
        "async": false,
        "calls": [
          "_auto_detect_provider"
        ],
        "parameters": [
          "cls",
          "vscode_settings"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "config/settings.py"
      },
      {
        "name": "_auto_detect_provider",
        "line": 229,
        "async": false,
        "calls": [
          "lower",
          "startswith"
        ],
        "parameters": [
          "cls",
          "model"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "config/settings.py"
      },
      {
        "name": "to_dict",
        "line": 251,
        "async": false,
        "calls": [],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "config/settings.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "get_capabilities",
        "line": 66,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "_build_arbitration_prompt",
        "line": 134,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "enumerate"
        ],
        "parameters": [
          "self",
          "task",
          "conflicting_outputs",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "_extract_decision_components",
        "line": 354,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "decision"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "is_conflict_resolvable",
        "line": 371,
        "async": false,
        "calls": [
          "get",
          "len",
          "str"
        ],
        "parameters": [
          "self",
          "conflicting_outputs"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "get_conflict_complexity",
        "line": 386,
        "async": false,
        "calls": [
          "get",
          "sum",
          "len",
          "str"
        ],
        "parameters": [
          "self",
          "conflicting_outputs"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
      },
      {
        "name": "get_capabilities",
        "line": 51,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
      },
      {
        "name": "_build_documentation_prompt",
        "line": 100,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
      },
      {
        "name": "_structure_documentation",
        "line": 371,
        "async": false,
        "calls": [
          "keys",
          "join",
          "lower",
          "split",
          "replace",
          "list",
          "append",
          "len",
          "startswith"
        ],
        "parameters": [
          "self",
          "documentation"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
      },
      {
        "name": "__init__",
        "line": 15,
        "async": false,
        "calls": [
          "getenv",
          "print"
        ],
        "parameters": [
          "self",
          "name",
          "role",
          "model"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "get_capabilities",
        "line": 33,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "_build_prompt",
        "line": 48,
        "async": false,
        "calls": [
          "items",
          "join",
          "len",
          "append",
          "str"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "_extract_code",
        "line": 87,
        "async": false,
        "calls": [
          "join",
          "findall"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "_validate_code",
        "line": 102,
        "async": false,
        "calls": [
          "append",
          "parse",
          "str"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "get_stats",
        "line": 132,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "reset_stats",
        "line": 148,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "__repr__",
        "line": 155,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "get_capabilities",
        "line": 66,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "_mock_research_for_testing",
        "line": 186,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "_create_research_plan",
        "line": 296,
        "async": false,
        "calls": [
          "get",
          "lower",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "_build_research_prompt",
        "line": 339,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context",
          "research_plan"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "_synthesize_findings",
        "line": 383,
        "async": false,
        "calls": [
          "findall",
          "split",
          "lower",
          "startswith",
          "strip"
        ],
        "parameters": [
          "self",
          "research_results"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "_generate_recommendations",
        "line": 419,
        "async": false,
        "calls": [
          "extend",
          "append",
          "get"
        ],
        "parameters": [
          "self",
          "synthesis"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "get_capabilities",
        "line": 51,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_build_code_review_prompt",
        "line": 134,
        "async": false,
        "calls": [
          "read",
          "join",
          "open",
          "print",
          "get",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_build_previous_analysis_prompt",
        "line": 258,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_build_final_review_prompt",
        "line": 287,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_build_review_prompt",
        "line": 365,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_categorize_issues",
        "line": 562,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "review_result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_generate_recommendations",
        "line": 620,
        "async": false,
        "calls": [
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "issues"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "_calculate_quality_score",
        "line": 652,
        "async": false,
        "calls": [
          "max",
          "len",
          "items",
          "min"
        ],
        "parameters": [
          "self",
          "issues"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
      },
      {
        "name": "get_capabilities",
        "line": 51,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
      },
      {
        "name": "_build_architecture_prompt",
        "line": 100,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
      },
      {
        "name": "_extract_artifacts",
        "line": 242,
        "async": false,
        "calls": [
          "findall"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "get_capabilities",
        "line": 62,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_build_validation_prompt",
        "line": 154,
        "async": false,
        "calls": [
          "read",
          "join",
          "open",
          "print",
          "get",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_build_improvement_prompt",
        "line": 242,
        "async": false,
        "calls": [
          "read",
          "join",
          "open",
          "print",
          "get",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_analyze_requirements",
        "line": 386,
        "async": false,
        "calls": [
          "get",
          "lower"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_build_strategy_prompt",
        "line": 429,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context",
          "requirements"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_create_backtest_framework",
        "line": 902,
        "async": false,
        "calls": [
          "search",
          "group"
        ],
        "parameters": [
          "self",
          "strategy"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "_generate_performance_metrics",
        "line": 962,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "strategy"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "get_capabilities",
        "line": 58,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "_analyze_problem",
        "line": 117,
        "async": false,
        "calls": [
          "get",
          "lower"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "_build_fix_prompt",
        "line": 152,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context",
          "analysis"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "_validate_fixes",
        "line": 537,
        "async": false,
        "calls": [
          "enumerate",
          "append",
          "compile",
          "findall"
        ],
        "parameters": [
          "self",
          "fixes"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "_create_fix_summary",
        "line": 567,
        "async": false,
        "calls": [
          "len",
          "sum"
        ],
        "parameters": [
          "self",
          "validated_fixes"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "__init__",
        "line": 14,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "get_capabilities",
        "line": 52,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "_build_analysis_prompt",
        "line": 146,
        "async": false,
        "calls": [
          "read",
          "join",
          "open",
          "print",
          "get",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "_build_coding_prompt",
        "line": 240,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "task",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "_build_implementation_prompt",
        "line": 572,
        "async": false,
        "calls": [
          "read",
          "join",
          "open",
          "print",
          "get",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "_organize_code",
        "line": 654,
        "async": false,
        "calls": [
          "findall"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "__init__",
        "line": 26,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
      },
      {
        "name": "start_claude_web_server",
        "line": 31,
        "async": false,
        "calls": [
          "print",
          "Popen",
          "sleep"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
      },
      {
        "name": "stop_claude_web_server",
        "line": 51,
        "async": false,
        "calls": [
          "print",
          "wait",
          "terminate",
          "kill"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
      },
      {
        "name": "main",
        "line": 131,
        "async": false,
        "calls": [
          "test_login_detection",
          "input",
          "run",
          "print",
          "test_comprehensive_checks",
          "strip"
        ],
        "parameters": [],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py"
      },
      {
        "name": "__init__",
        "line": 16,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "_group_steps_for_execution",
        "line": 101,
        "async": false,
        "calls": [
          "sorted",
          "items",
          "dict",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "_compile_final_output",
        "line": 216,
        "async": false,
        "calls": [
          "join",
          "get",
          "len",
          "append",
          "str"
        ],
        "parameters": [
          "self",
          "result",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "get_current_status",
        "line": 257,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "get_execution_history",
        "line": 269,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "limit"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [
          "now"
        ],
        "parameters": [
          "self",
          "max_iterations"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "record_iteration",
        "line": 41,
        "async": false,
        "calls": [
          "len",
          "append",
          "IterationReason"
        ],
        "parameters": [
          "self",
          "reason",
          "agent",
          "quality_score",
          "critical_issues"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_generate_iteration_summary",
        "line": 87,
        "async": false,
        "calls": [
          "sorted",
          "get",
          "items",
          "_identify_problem_areas",
          "_generate_recommendation",
          "total_seconds",
          "now",
          "IterationSummary",
          "set",
          "list",
          "extend",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_identify_problem_areas",
        "line": 151,
        "async": false,
        "calls": [
          "items",
          "sum",
          "join",
          "extend",
          "lower",
          "append"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_generate_recommendation",
        "line": 178,
        "async": false,
        "calls": [
          "sum",
          "len",
          "items",
          "any"
        ],
        "parameters": [
          "self",
          "common_issues",
          "agent_performance"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_generate_user_options",
        "line": 207,
        "async": false,
        "calls": [
          "sorted",
          "len",
          "startswith"
        ],
        "parameters": [
          "self",
          "summary"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_get_primary_recommendation",
        "line": 257,
        "async": false,
        "calls": [
          "next",
          "_generate_user_options"
        ],
        "parameters": [
          "self",
          "summary"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "__init__",
        "line": 269,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_display_iteration_analysis",
        "line": 295,
        "async": false,
        "calls": [
          "display_panel",
          "_format_iteration_timeline",
          "_format_problematic_areas",
          "_format_common_issues",
          "print",
          "_format_agent_performance"
        ],
        "parameters": [
          "self",
          "summary",
          "cli_interface"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_format_common_issues",
        "line": 329,
        "async": false,
        "calls": [
          "enumerate",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "common_issues"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_format_agent_performance",
        "line": 340,
        "async": false,
        "calls": [
          "join",
          "items",
          "append"
        ],
        "parameters": [
          "self",
          "agent_performance"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_format_problematic_areas",
        "line": 359,
        "async": false,
        "calls": [
          "join"
        ],
        "parameters": [
          "self",
          "problematic_areas"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "_format_iteration_timeline",
        "line": 366,
        "async": false,
        "calls": [
          "join",
          "split",
          "len",
          "append",
          "insert"
        ],
        "parameters": [
          "self",
          "reasons"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "__init__",
        "line": 422,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "__init__",
        "line": 530,
        "async": false,
        "calls": [
          "IterationDecisionExecutor",
          "UserInteractionHandler",
          "IterationController"
        ],
        "parameters": [
          "self",
          "max_iterations"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "get_iteration_statistics",
        "line": 566,
        "async": false,
        "calls": [
          "isoformat",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "__init__",
        "line": 37,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "_calculate_intent_score",
        "line": 275,
        "async": false,
        "calls": [
          "search",
          "len",
          "min"
        ],
        "parameters": [
          "self",
          "text",
          "config"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "_calculate_enhanced_intent_score",
        "line": 306,
        "async": false,
        "calls": [
          "lower",
          "min",
          "any",
          "_calculate_intent_score"
        ],
        "parameters": [
          "self",
          "text",
          "config",
          "intent_type"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "_extract_entities",
        "line": 343,
        "async": false,
        "calls": [
          "items",
          "findall",
          "list",
          "lower",
          "fromkeys"
        ],
        "parameters": [
          "self",
          "text"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "_assess_complexity",
        "line": 355,
        "async": false,
        "calls": [
          "len",
          "split"
        ],
        "parameters": [
          "self",
          "text",
          "intent"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "get_intent_description",
        "line": 378,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "intent_type"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "__post_init__",
        "line": 26,
        "async": false,
        "calls": [
          "isoformat",
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [
          "ExecutionEngine",
          "_initialize_agents",
          "IntentClassifier",
          "LearningSystem",
          "print",
          "WorkflowGenerator"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_detect_project_type",
        "line": 160,
        "async": false,
        "calls": [
          "sum",
          "values",
          "max",
          "print",
          "lower",
          "search"
        ],
        "parameters": [
          "self",
          "user_input",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_initialize_agents",
        "line": 239,
        "async": false,
        "calls": [
          "ResearchBot",
          "CodeSmithClaude",
          "ArchitectGPT",
          "TradeStrat",
          "DocuBot",
          "ReviewerGPT",
          "print",
          "len",
          "FixerBot"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_get_agent_capabilities",
        "line": 263,
        "async": false,
        "calls": [
          "hasattr",
          "items",
          "get_capabilities"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_optimize_workflow",
        "line": 276,
        "async": false,
        "calls": [
          "enumerate",
          "get"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_get_quality_gates_for_context",
        "line": 294,
        "async": false,
        "calls": [
          "hasattr",
          "get_quality_gates",
          "get"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "_format_response",
        "line": 317,
        "async": false,
        "calls": [
          "get_project_specifics",
          "hasattr",
          "get",
          "len",
          "getattr"
        ],
        "parameters": [
          "self",
          "result",
          "workflow",
          "intent"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "__post_init__",
        "line": 19,
        "async": false,
        "calls": [
          "isoformat",
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_context_for_agent",
        "line": 26,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_agent_instruction_summary",
        "line": 31,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "add_agent_output",
        "line": 35,
        "async": false,
        "calls": [
          "isoformat",
          "now"
        ],
        "parameters": [
          "self",
          "agent_name",
          "step_id",
          "output"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_iteration_summary",
        "line": 46,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "start_new_iteration",
        "line": 56,
        "async": false,
        "calls": [
          "isoformat",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "reason"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_relevant_outputs",
        "line": 65,
        "async": false,
        "calls": [
          "items",
          "range"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "create_project_context",
        "line": 83,
        "async": false,
        "calls": [
          "get",
          "lower",
          "context_class",
          "GenericProjectContext"
        ],
        "parameters": [
          "project_type",
          "project_name"
        ],
        "decorators": [
          "staticmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_available_project_types",
        "line": 119,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [
          "staticmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "create_shared_context",
        "line": 136,
        "async": false,
        "calls": [
          "create_project_context",
          "ProjectSharedContext"
        ],
        "parameters": [
          "project_type",
          "user_request",
          "project_name"
        ],
        "decorators": [
          "staticmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "__init__",
        "line": 165,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "project_name",
          "project_type"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_domain_instructions",
        "line": 169,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_quality_gates",
        "line": 193,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_project_specifics",
        "line": 196,
        "async": false,
        "calls": [
          "ProjectSpecification"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "create_context",
        "line": 215,
        "async": false,
        "calls": [
          "create_shared_context"
        ],
        "parameters": [
          "project_type",
          "user_request"
        ],
        "decorators": [
          "staticmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_context_for_agent",
        "line": 229,
        "async": false,
        "calls": [
          "get_relevant_outputs"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_agent_instruction_summary",
        "line": 238,
        "async": false,
        "calls": [
          "dumps",
          "get_relevant_outputs"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "__init__",
        "line": 257,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "update_context",
        "line": 261,
        "async": false,
        "calls": [
          "isoformat",
          "append",
          "add_agent_output",
          "now"
        ],
        "parameters": [
          "self",
          "agent_name",
          "step_id",
          "output"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "should_continue_iteration",
        "line": 273,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "quality_result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "prepare_agent_context",
        "line": 280,
        "async": false,
        "calls": [
          "len",
          "get_context_for_agent",
          "update"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_context_statistics",
        "line": 293,
        "async": false,
        "calls": [
          "sum",
          "values",
          "max",
          "get",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_context_for_agent",
        "line": 322,
        "async": false,
        "calls": [
          "get_quality_gates",
          "get_project_specifics",
          "get_domain_instructions",
          "get_relevant_outputs",
          "update",
          "getattr"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "get_agent_instruction_summary",
        "line": 342,
        "async": false,
        "calls": [
          "get_agent_enhancement_instructions",
          "get_domain_instructions",
          "hasattr",
          "dumps",
          "get_relevant_outputs",
          "getattr"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [
          "Path",
          "mkdir",
          "_load_metrics",
          "_load_patterns",
          "print",
          "len",
          "_load_history"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "suggest_workflow",
        "line": 75,
        "async": false,
        "calls": [
          "max",
          "print",
          "_find_similar_executions"
        ],
        "parameters": [
          "self",
          "intent"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "get_intent_statistics",
        "line": 129,
        "async": false,
        "calls": [
          "get",
          "append",
          "items",
          "mean"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_load_history",
        "line": 176,
        "async": false,
        "calls": [
          "print",
          "open",
          "load",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_load_patterns",
        "line": 186,
        "async": false,
        "calls": [
          "print",
          "open",
          "load",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_load_metrics",
        "line": 196,
        "async": false,
        "calls": [
          "print",
          "open",
          "load",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_save_all",
        "line": 206,
        "async": false,
        "calls": [
          "print",
          "open",
          "dump"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_calculate_metrics",
        "line": 224,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_was_successful",
        "line": 251,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_record_success_pattern",
        "line": 255,
        "async": false,
        "calls": [
          "get",
          "append",
          "sorted"
        ],
        "parameters": [
          "self",
          "execution_record"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_update_performance_metrics",
        "line": 279,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "execution_record"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_find_similar_executions",
        "line": 303,
        "async": false,
        "calls": [
          "get",
          "append",
          "sort"
        ],
        "parameters": [
          "self",
          "intent"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_extract_agents_used",
        "line": 319,
        "async": false,
        "calls": [
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "_calculate_agent_rating",
        "line": 328,
        "async": false,
        "calls": [
          "get",
          "min"
        ],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "_load_templates"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_load_templates",
        "line": 66,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_select_template",
        "line": 360,
        "async": false,
        "calls": [
          "get",
          "copy",
          "print"
        ],
        "parameters": [
          "self",
          "intent_type"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_customize_workflow",
        "line": 369,
        "async": false,
        "calls": [
          "enumerate",
          "WorkflowStep",
          "get",
          "len",
          "append",
          "insert"
        ],
        "parameters": [
          "self",
          "template",
          "intent",
          "context",
          "user_input"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_optimize_parallel_execution",
        "line": 418,
        "async": false,
        "calls": [
          "range",
          "max",
          "any",
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_validate_agents",
        "line": 453,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "workflow",
          "agent_capabilities"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "_estimate_total_time",
        "line": 472,
        "async": false,
        "calls": [
          "get",
          "sum",
          "max",
          "values"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "get_workflow_summary",
        "line": 491,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "get_default_thresholds",
        "line": 21,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "_analyze_unified_engine",
        "line": 264,
        "async": false,
        "calls": [
          "len",
          "sum",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "_analyze_future_leak_prevention",
        "line": 293,
        "async": false,
        "calls": [
          "sum",
          "search",
          "max",
          "len",
          "append",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "_analyze_iterative_processing",
        "line": 331,
        "async": false,
        "calls": [
          "len",
          "sum",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "_analyze_engine_chart_decoupling",
        "line": 360,
        "async": false,
        "calls": [
          "sum",
          "search",
          "max",
          "len",
          "append",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
      },
      {
        "name": "get_default_thresholds",
        "line": 21,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
      },
      {
        "name": "__init__",
        "line": 63,
        "async": false,
        "calls": [
          "get_default_thresholds"
        ],
        "parameters": [
          "self",
          "gate_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "get_default_thresholds",
        "line": 68,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "create_quality_check",
        "line": 86,
        "async": false,
        "calls": [
          "max",
          "min",
          "QualityCheck"
        ],
        "parameters": [
          "self",
          "name",
          "passed",
          "score",
          "details",
          "recommendations",
          "level",
          "category",
          "file_path",
          "line_numbers"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "calculate_overall_score",
        "line": 111,
        "async": false,
        "calls": [
          "get",
          "values"
        ],
        "parameters": [
          "self",
          "checks"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "determine_pass_status",
        "line": 135,
        "async": false,
        "calls": [
          "get",
          "values"
        ],
        "parameters": [
          "self",
          "overall_score",
          "checks"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "generate_summary",
        "line": 151,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "generate_recommendations",
        "line": 162,
        "async": false,
        "calls": [
          "append",
          "sort",
          "values"
        ],
        "parameters": [
          "self",
          "checks"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "find_pattern_matches",
        "line": 182,
        "async": false,
        "calls": [
          "group",
          "split",
          "sub",
          "enumerate",
          "search",
          "append",
          "strip"
        ],
        "parameters": [
          "self",
          "code",
          "patterns",
          "ignore_comments"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "check_imports",
        "line": 209,
        "async": false,
        "calls": [
          "findall",
          "max",
          "join",
          "create_quality_check",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "code",
          "required",
          "forbidden"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "check_function_complexity",
        "line": 242,
        "async": false,
        "calls": [
          "findall",
          "max",
          "split",
          "create_quality_check",
          "len",
          "append",
          "startswith",
          "strip"
        ],
        "parameters": [
          "self",
          "code",
          "max_lines"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "get_default_thresholds",
        "line": 21,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_vwap_fibonacci_condition",
        "line": 325,
        "async": false,
        "calls": [
          "len",
          "sum",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_ema9_logic",
        "line": 354,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_new_high_logic",
        "line": 374,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_crv_requirement",
        "line": 394,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_space_to_382",
        "line": 414,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "_analyze_ron_trading_hours",
        "line": 434,
        "async": false,
        "calls": [
          "len",
          "sum",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "__init__",
        "line": 18,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "get_default_thresholds",
        "line": 21,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_decimal_precision",
        "line": 296,
        "async": false,
        "calls": [
          "append",
          "len",
          "findall"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_pnl_calculations",
        "line": 317,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_crv_calculations",
        "line": 336,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_position_validation",
        "line": 356,
        "async": false,
        "calls": [
          "search",
          "sum",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_stop_loss_logic",
        "line": 376,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_exposure_limits",
        "line": 395,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_market_hours",
        "line": 414,
        "async": false,
        "calls": [
          "search",
          "sum",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_audit_trail",
        "line": 433,
        "async": false,
        "calls": [
          "len",
          "sum",
          "search",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_type_annotations",
        "line": 452,
        "async": false,
        "calls": [
          "max",
          "len",
          "findall"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_exception_patterns",
        "line": 467,
        "async": false,
        "calls": [
          "append",
          "len",
          "findall"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_graceful_degradation",
        "line": 496,
        "async": false,
        "calls": [
          "search",
          "sum",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_docstring_coverage",
        "line": 515,
        "async": false,
        "calls": [
          "max",
          "len",
          "findall"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_fallback_policy",
        "line": 530,
        "async": false,
        "calls": [
          "search",
          "len",
          "append"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "_check_live_data_policy",
        "line": 555,
        "async": false,
        "calls": [
          "search",
          "sum",
          "min"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "__init__",
        "line": 22,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "get_workflow_steps",
        "line": 35,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "get_step_agents",
        "line": 39,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "get_step_instructions",
        "line": 53,
        "async": false,
        "calls": [
          "get",
          "getattr"
        ],
        "parameters": [
          "self",
          "step",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "validate_step_completion",
        "line": 319,
        "async": false,
        "calls": [
          "get",
          "lower",
          "sum",
          "len"
        ],
        "parameters": [
          "self",
          "step",
          "step_output"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "get_workflow_description",
        "line": 361,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "get_success_criteria",
        "line": 381,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_workflow_steps",
        "line": 38,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_step_agents",
        "line": 42,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_step_instructions",
        "line": 60,
        "async": false,
        "calls": [
          "get",
          "getattr"
        ],
        "parameters": [
          "self",
          "step",
          "context"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "validate_step_completion",
        "line": 580,
        "async": false,
        "calls": [
          "get",
          "lower",
          "sum",
          "len"
        ],
        "parameters": [
          "self",
          "step",
          "step_output"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_workflow_description",
        "line": 634,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_success_criteria",
        "line": 659,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "get_workflow_for_project_type",
        "line": 43,
        "async": false,
        "calls": [
          "get",
          "lower",
          "workflow_class"
        ],
        "parameters": [
          "project_type"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
      },
      {
        "name": "get_available_workflows",
        "line": 63,
        "async": false,
        "calls": [
          "items",
          "len",
          "workflow_class",
          "get_workflow_steps",
          "get_workflow_description"
        ],
        "parameters": [],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "now"
        ],
        "parameters": [
          "self",
          "name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_workflow_steps",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_step_agents",
        "line": 37,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_step_instructions",
        "line": 50,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step",
          "context"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "validate_step_completion",
        "line": 64,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step",
          "step_output"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_workflow_description",
        "line": 78,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_success_criteria",
        "line": 88,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_workflow_info",
        "line": 97,
        "async": false,
        "calls": [
          "get_workflow_description",
          "isoformat",
          "len",
          "get_workflow_steps",
          "get_success_criteria"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "log_execution",
        "line": 113,
        "async": false,
        "calls": [
          "now",
          "info",
          "isoformat",
          "get",
          "len",
          "append",
          "str"
        ],
        "parameters": [
          "self",
          "step",
          "agent",
          "result"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_next_step",
        "line": 135,
        "async": false,
        "calls": [
          "len",
          "warning",
          "get_workflow_steps",
          "index"
        ],
        "parameters": [
          "self",
          "current_step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_step_position",
        "line": 159,
        "async": false,
        "calls": [
          "len",
          "get_workflow_steps",
          "index"
        ],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "is_workflow_complete",
        "line": 176,
        "async": false,
        "calls": [
          "get_workflow_steps"
        ],
        "parameters": [
          "self",
          "current_step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_workflow_progress",
        "line": 189,
        "async": false,
        "calls": [
          "get_step_position"
        ],
        "parameters": [
          "self",
          "current_step"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "get_execution_statistics",
        "line": 202,
        "async": false,
        "calls": [
          "get",
          "sum",
          "len",
          "max"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "__init__",
        "line": 180,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "project_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "get_domain_instructions",
        "line": 183,
        "async": false,
        "calls": [
          "get_agent_enhancement_instructions",
          "dumps"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "get_quality_gates",
        "line": 214,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "get_project_specifics",
        "line": 224,
        "async": false,
        "calls": [
          "ProjectSpecification"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "get_agent_enhancement_instructions",
        "line": 254,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "get_iteration_limits",
        "line": 334,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "__init__",
        "line": 103,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "project_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "get_domain_instructions",
        "line": 106,
        "async": false,
        "calls": [
          "get_agent_enhancement_instructions",
          "dumps"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "get_quality_gates",
        "line": 143,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "get_project_specifics",
        "line": 153,
        "async": false,
        "calls": [
          "ProjectSpecification"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "get_agent_enhancement_instructions",
        "line": 193,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "get_iteration_limits",
        "line": 276,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "project_name"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_domain_instructions",
        "line": 38,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_quality_gates",
        "line": 54,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_project_specifics",
        "line": 67,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "abstractmethod"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_agent_enhancement_instructions",
        "line": 76,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_iteration_limits",
        "line": 88,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "get_conflict_resolution_priorities",
        "line": 103,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "validate_context",
        "line": 122,
        "async": false,
        "calls": [
          "get_quality_gates",
          "isinstance",
          "get_project_specifics",
          "get_domain_instructions",
          "len",
          "strip"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "main",
        "line": 273,
        "async": false,
        "calls": [
          "print",
          "main"
        ],
        "parameters": [],
        "decorators": [],
        "file": "tests/test_agent_file_capabilities.py"
      },
      {
        "name": "setup_method",
        "line": 28,
        "async": false,
        "calls": [
          "mkdtemp"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "tests/test_agent_file_capabilities.py"
      },
      {
        "name": "teardown_method",
        "line": 33,
        "async": false,
        "calls": [
          "rmtree",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "tests/test_agent_file_capabilities.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "tests/test_integration.py"
      },
      {
        "name": "record_result",
        "line": 382,
        "async": false,
        "calls": [
          "print",
          "isoformat",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "test_name",
          "success",
          "details"
        ],
        "decorators": [],
        "file": "tests/test_integration.py"
      },
      {
        "name": "print_summary",
        "line": 406,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "tests/test_integration.py"
      },
      {
        "name": "get_agent_registry",
        "line": 317,
        "async": false,
        "calls": [
          "AgentRegistry"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "__new__",
        "line": 56,
        "async": false,
        "calls": [
          "super",
          "__new__"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "__init__",
        "line": 62,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "get_agent",
        "line": 167,
        "async": false,
        "calls": [
          "warning"
        ],
        "parameters": [
          "self",
          "agent_id"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "get_available_agents",
        "line": 177,
        "async": false,
        "calls": [
          "append",
          "items"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "find_agent_by_capability",
        "line": 247,
        "async": false,
        "calls": [
          "items"
        ],
        "parameters": [
          "self",
          "capability"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "get_agents_by_capability",
        "line": 257,
        "async": false,
        "calls": [
          "append",
          "items"
        ],
        "parameters": [
          "self",
          "capability"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "get_status",
        "line": 283,
        "async": false,
        "calls": [
          "sum",
          "len",
          "get_available_agents",
          "values"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "join",
          "makedirs",
          "getcwd"
        ],
        "parameters": [
          "self",
          "workspace_path"
        ],
        "decorators": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "_validate_path",
        "line": 55,
        "async": false,
        "calls": [
          "isabs",
          "join",
          "Path",
          "abspath",
          "lstrip",
          "fnmatch",
          "relative_to",
          "startswith",
          "match",
          "str"
        ],
        "parameters": [
          "self",
          "file_path",
          "agent_name",
          "allowed_paths"
        ],
        "decorators": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "_create_backup",
        "line": 118,
        "async": false,
        "calls": [
          "exists",
          "now",
          "join",
          "strftime",
          "copy2",
          "basename",
          "info",
          "error"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "_log_operation",
        "line": 143,
        "async": false,
        "calls": [
          "dirname",
          "asdict",
          "join",
          "open",
          "info",
          "error",
          "dumps",
          "write",
          "append",
          "makedirs"
        ],
        "parameters": [
          "self",
          "operation"
        ],
        "decorators": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "get_audit_log",
        "line": 449,
        "async": false,
        "calls": [
          "asdict"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [
          "ImportError"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/tools/browser_tester.py"
      },
      {
        "name": "__init__",
        "line": 63,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "_match_pattern",
        "line": 187,
        "async": false,
        "calls": [
          "search",
          "items",
          "any"
        ],
        "parameters": [
          "self",
          "error_text",
          "files"
        ],
        "decorators": [],
        "file": "agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "__init__",
        "line": 37,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "check_asimov_violations",
        "line": 221,
        "async": false,
        "calls": [
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_calculate_html_app_quality_score",
        "line": 445,
        "async": false,
        "calls": [
          "get",
          "len",
          "min",
          "max"
        ],
        "parameters": [
          "self",
          "test_result"
        ],
        "decorators": [],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_get_recommendation",
        "line": 479,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "quality_score",
          "test_result"
        ],
        "decorators": [],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_format_metrics",
        "line": 494,
        "async": false,
        "calls": [
          "join",
          "items",
          "append",
          "isinstance"
        ],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/tradestrat_agent.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/docubot_agent.py"
      },
      {
        "name": "__init__",
        "line": 116,
        "async": false,
        "calls": [
          "AgentConfig",
          "getcwd",
          "_load_architecture_patterns",
          "LayerAnalyzer",
          "__init__",
          "TreeSitterIndexer",
          "info",
          "CodeIndexer",
          "CallGraphAnalyzer",
          "SemgrepAnalyzer",
          "warning",
          "DiagramService",
          "SmartFileWatcher",
          "start",
          "abspath",
          "VultureAnalyzer",
          "ProjectCache",
          "getenv",
          "LightweightCodeSearch",
          "CacheNotAvailableError",
          "dirname",
          "OpenAIService",
          "basename",
          "RadonMetrics",
          "super",
          "_load_tech_stacks",
          "apply_capabilities_to_agent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_parse_architecture_response",
        "line": 484,
        "async": false,
        "calls": [
          "upper",
          "get",
          "lower",
          "append",
          "ArchitectureDesign",
          "capitalize"
        ],
        "parameters": [
          "self",
          "response",
          "requirements"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_extract_features",
        "line": 600,
        "async": false,
        "calls": [
          "lower",
          "append"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_load_architecture_patterns",
        "line": 619,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "__del__",
        "line": 742,
        "async": false,
        "calls": [
          "hasattr",
          "stop",
          "info",
          "error"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_load_tech_stacks",
        "line": 754,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_generate_redis_config",
        "line": 845,
        "async": false,
        "calls": [
          "now",
          "keys",
          "join",
          "isoformat",
          "get"
        ],
        "parameters": [
          "self",
          "params"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_generate_docker_compose",
        "line": 912,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "services"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "_detect_request_type",
        "line": 1391,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "__init__",
        "line": 89,
        "async": false,
        "calls": [
          "warning",
          "AgentConfig",
          "_load_language_configs",
          "__init__",
          "TreeSitterIndexer",
          "ClaudeCodeService",
          "error",
          "CodeIndexer",
          "RadonMetrics",
          "super",
          "is_available",
          "VultureAnalyzer",
          "_load_code_patterns",
          "ClaudeCodeConfig",
          "DiagramService",
          "apply_capabilities_to_agent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "format_implementation",
        "line": 890,
        "async": false,
        "calls": [
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "implementation"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_detect_language",
        "line": 926,
        "async": false,
        "calls": [
          "lower",
          "items"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_functionality",
        "line": 953,
        "async": false,
        "calls": [
          "lower",
          "split",
          "strip"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_assess_complexity",
        "line": 965,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_generate_filename",
        "line": 978,
        "async": false,
        "calls": [
          "join",
          "split",
          "get",
          "lower",
          "len"
        ],
        "parameters": [
          "self",
          "prompt",
          "language"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_dependencies",
        "line": 1004,
        "async": false,
        "calls": [
          "findall",
          "set",
          "split",
          "list",
          "startswith"
        ],
        "parameters": [
          "self",
          "code",
          "language"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_get_test_framework",
        "line": 1027,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "language"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_load_code_patterns",
        "line": 1046,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_load_language_configs",
        "line": 1068,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_generate_fix_suggestion",
        "line": 1681,
        "async": false,
        "calls": [
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "issues",
          "line_content"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_check_for_hallucination",
        "line": 1769,
        "async": false,
        "calls": [
          "error",
          "lower"
        ],
        "parameters": [
          "self",
          "content"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_validate_workspace_context",
        "line": 1791,
        "async": false,
        "calls": [
          "getcwd",
          "exists",
          "join",
          "info",
          "warning"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_enforce_asimov_rule_1",
        "line": 1825,
        "async": false,
        "calls": [
          "ValueError",
          "info",
          "any",
          "lower",
          "warning"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_file_path",
        "line": 1978,
        "async": false,
        "calls": [
          "search",
          "group"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_generate_file_path",
        "line": 1995,
        "async": false,
        "calls": [
          "lower",
          "_extract_feature_name"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_feature_name",
        "line": 2028,
        "async": false,
        "calls": [
          "lower",
          "len",
          "replace",
          "findall"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "__init__",
        "line": 38,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "OpenAIService",
          "info",
          "super",
          "getattr"
        ],
        "parameters": [
          "self",
          "model"
        ],
        "decorators": [],
        "file": "agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_create_fresh_perspective_prompt",
        "line": 70,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "issue",
          "previous_attempts",
          "research_results"
        ],
        "decorators": [],
        "file": "agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_format_previous_attempts",
        "line": 110,
        "async": false,
        "calls": [
          "enumerate",
          "get"
        ],
        "parameters": [
          "self",
          "attempts"
        ],
        "decorators": [],
        "file": "agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_format_research_results",
        "line": 124,
        "async": false,
        "calls": [
          "enumerate",
          "get"
        ],
        "parameters": [
          "self",
          "research"
        ],
        "decorators": [],
        "file": "agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "__init__",
        "line": 48,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "_extract_bottlenecks",
        "line": 194,
        "async": false,
        "calls": [
          "items",
          "round",
          "sort_stats",
          "list",
          "append"
        ],
        "parameters": [
          "self",
          "stats"
        ],
        "decorators": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "_parse_profile_stats",
        "line": 275,
        "async": false,
        "calls": [
          "join",
          "split",
          "replace",
          "splitlines",
          "len",
          "append",
          "isdigit"
        ],
        "parameters": [
          "self",
          "stats_output"
        ],
        "decorators": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "_format_profile_results",
        "line": 296,
        "async": false,
        "calls": [
          "items",
          "title",
          "join",
          "enumerate",
          "replace",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "profile"
        ],
        "decorators": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "_format_package_analysis",
        "line": 437,
        "async": false,
        "calls": [
          "join",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "package_name",
          "analysis"
        ],
        "decorators": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "info",
          "error",
          "super",
          "PerplexityService"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/research_agent.py"
      },
      {
        "name": "__init__",
        "line": 50,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "set_planning_mode",
        "line": 154,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self",
          "mode"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/opus_arbitrator_agent.py"
      },
      {
        "name": "__init__",
        "line": 75,
        "async": false,
        "calls": [
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_calculate_critical_path_duration",
        "line": 538,
        "async": false,
        "calls": [
          "max",
          "sum",
          "_get_chain_duration"
        ],
        "parameters": [
          "self",
          "subtasks"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_get_chain_duration",
        "line": 553,
        "async": false,
        "calls": [
          "max",
          "_get_chain_duration"
        ],
        "parameters": [
          "self",
          "start_task",
          "all_tasks"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_group_by_dependency_level",
        "line": 697,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_dependencies_met",
        "line": 718,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step",
          "completed",
          "workflow"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "format_orchestration_result",
        "line": 770,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "str"
        ],
        "parameters": [
          "self",
          "decomposition",
          "results"
        ],
        "decorators": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "__init__",
        "line": 138,
        "async": false,
        "calls": [
          "getcwd",
          "PauseHandler",
          "get_memory_manager",
          "FileSystemTools",
          "set",
          "cwd",
          "isinstance",
          "_load_instructions",
          "hasattr",
          "info",
          "get_shared_context",
          "GitCheckpointManager",
          "get_conversation_context",
          "get",
          "_get_language_directive",
          "getattr",
          "str"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "_load_instructions",
        "line": 223,
        "async": false,
        "calls": [
          "dirname",
          "exists",
          "getcwd",
          "read",
          "join",
          "open",
          "abspath",
          "info",
          "replace",
          "extend",
          "append",
          "warning",
          "startswith"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "_get_language_directive",
        "line": 256,
        "async": false,
        "calls": [
          "get_language_directive"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "get_system_prompt",
        "line": 268,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "calculate_dynamic_timeout",
        "line": 562,
        "async": false,
        "calls": [
          "items",
          "max",
          "info",
          "get",
          "lower",
          "len",
          "min"
        ],
        "parameters": [
          "self",
          "prompt",
          "context"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "_compile_research_summary",
        "line": 857,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "extend"
        ],
        "parameters": [
          "self",
          "findings"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "set_websocket_callback",
        "line": 1035,
        "async": false,
        "calls": [
          "set_websocket_callback"
        ],
        "parameters": [
          "self",
          "callback"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "get_status",
        "line": 1041,
        "async": false,
        "calls": [
          "isoformat",
          "len",
          "get_pause_state"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "__repr__",
        "line": 1211,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "validate_request",
        "line": 126,
        "async": false,
        "calls": [
          "get",
          "check_research_requirements",
          "_check_violations"
        ],
        "parameters": [
          "cls",
          "request"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "_check_violations",
        "line": 173,
        "async": false,
        "calls": [
          "items",
          "len",
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "cls",
          "prompt",
          "context"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "check_research_requirements",
        "line": 247,
        "async": false,
        "calls": [
          "items",
          "len",
          "findall",
          "join",
          "set",
          "list",
          "get",
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "cls",
          "prompt",
          "context"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "format_challenge_response",
        "line": 316,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "enumerate"
        ],
        "parameters": [
          "cls",
          "validation_result"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "get_directive_prompt",
        "line": 344,
        "async": false,
        "calls": [
          "join",
          "append"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "check_global_error_search",
        "line": 365,
        "async": false,
        "calls": [],
        "parameters": [
          "cls",
          "error_found",
          "file_location"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "__post_init__",
        "line": 26,
        "async": false,
        "calls": [
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "to_dict",
        "line": 32,
        "async": false,
        "calls": [
          "isoformat"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "__init__",
        "line": 47,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "format_response",
        "line": 193,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "content",
          "status"
        ],
        "decorators": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "get_chat_status",
        "line": 203,
        "async": false,
        "calls": [
          "update",
          "len",
          "get_status"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "getenv",
          "info",
          "ValueError"
        ],
        "parameters": [
          "self",
          "model"
        ],
        "decorators": [],
        "file": "utils/perplexity_service.py"
      },
      {
        "name": "test_connection",
        "line": 314,
        "async": false,
        "calls": [
          "error",
          "post"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "utils/perplexity_service.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [
          "ClaudeCodeConfig",
          "_check_cli_availability"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "_check_cli_availability",
        "line": 40,
        "async": false,
        "calls": [
          "error",
          "run",
          "info",
          "strip"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "_parse_json_response",
        "line": 136,
        "async": false,
        "calls": [
          "loads",
          "type",
          "join",
          "isinstance",
          "split",
          "get",
          "append",
          "warning",
          "startswith",
          "strip"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "is_available",
        "line": 252,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "getenv",
          "OpenAIConfig",
          "info",
          "AsyncOpenAI",
          "warning"
        ],
        "parameters": [
          "self",
          "config",
          "model"
        ],
        "decorators": [],
        "file": "utils/openai_service.py"
      },
      {
        "name": "is_available",
        "line": 266,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "utils/openai_service.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "getenv",
          "info",
          "AnthropicConfig",
          "AsyncAnthropic",
          "warning"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "utils/anthropic_service.py"
      },
      {
        "name": "_format_outputs",
        "line": 241,
        "async": false,
        "calls": [
          "enumerate",
          "join",
          "append",
          "get"
        ],
        "parameters": [
          "self",
          "outputs"
        ],
        "decorators": [],
        "file": "utils/anthropic_service.py"
      },
      {
        "name": "is_available",
        "line": 251,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "utils/anthropic_service.py"
      },
      {
        "name": "get_version",
        "line": 18,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "backend/__version__.py"
      },
      {
        "name": "get_version_tuple",
        "line": 22,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "backend/__version__.py"
      },
      {
        "name": "is_compatible",
        "line": 26,
        "async": false,
        "calls": [
          "isinstance",
          "split",
          "map",
          "tuple"
        ],
        "parameters": [
          "required_version"
        ],
        "decorators": [],
        "file": "backend/__version__.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/test_websocket_debug.py"
      },
      {
        "name": "test_v4_features",
        "line": 14,
        "async": false,
        "calls": [
          "read",
          "open",
          "join",
          "split",
          "print",
          "append",
          "all"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/test_v4_features.py"
      },
      {
        "name": "print_test_header",
        "line": 40,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "title"
        ],
        "decorators": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "print_success",
        "line": 47,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "print_error",
        "line": 52,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "print_info",
        "line": 57,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "message"
        ],
        "decorators": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "test_node",
        "line": 188,
        "async": false,
        "calls": [],
        "parameters": [
          "state"
        ],
        "decorators": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "_extract_file_path",
        "line": 64,
        "async": false,
        "calls": [
          "search",
          "group"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "backend/fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "_determine_file_path",
        "line": 84,
        "async": false,
        "calls": [
          "lower",
          "_extract_feature_name"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "backend/fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "_extract_feature_name",
        "line": 123,
        "async": false,
        "calls": [
          "lower",
          "len",
          "replace",
          "split"
        ],
        "parameters": [
          "self",
          "description"
        ],
        "decorators": [],
        "file": "backend/fixes/orchestrator_file_write_fix.py"
      },
      {
        "name": "enhance_subtask_for_file_writing",
        "line": 27,
        "async": false,
        "calls": [
          "get",
          "lower",
          "any"
        ],
        "parameters": [
          "subtask"
        ],
        "decorators": [],
        "file": "backend/fixes/task_request_enhancement.py"
      },
      {
        "name": "to_file_task",
        "line": 17,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/fixes/task_request_enhancement.py"
      },
      {
        "name": "get_memory_manager",
        "line": 171,
        "async": false,
        "calls": [
          "MemoryManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "__init__",
        "line": 31,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "store",
        "line": 39,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "memory_type",
          "data"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "retrieve",
        "line": 43,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "memory_type",
          "query"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "clear",
        "line": 47,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "memory_type"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "store_code_pattern",
        "line": 98,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "name",
          "description",
          "language",
          "code",
          "use_cases"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "store_learning",
        "line": 121,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "description",
          "lesson",
          "context",
          "impact"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "get_relevant_learnings",
        "line": 145,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "context",
          "limit"
        ],
        "decorators": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "learning_entries",
        "line": 163,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "__init__",
        "line": 31,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "project_path"
        ],
        "decorators": [],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "pause",
        "line": 42,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "task_id",
          "state",
          "reason"
        ],
        "decorators": [],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "resume",
        "line": 50,
        "async": false,
        "calls": [
          "get",
          "info",
          "pop"
        ],
        "parameters": [
          "self",
          "task_id"
        ],
        "decorators": [],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "is_paused",
        "line": 58,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "task_id"
        ],
        "decorators": [],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "cache_agent_response",
        "line": 83,
        "async": false,
        "calls": [
          "wraps",
          "set",
          "hasattr",
          "info",
          "encode",
          "hexdigest",
          "md5",
          "get",
          "connect",
          "func",
          "CacheManager"
        ],
        "parameters": [
          "ttl"
        ],
        "decorators": [],
        "file": "backend/core/cache_manager.py"
      },
      {
        "name": "__init__",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "redis_url"
        ],
        "decorators": [],
        "file": "backend/core/cache_manager.py"
      },
      {
        "name": "decorator",
        "line": 93,
        "async": false,
        "calls": [
          "wraps",
          "set",
          "hasattr",
          "info",
          "encode",
          "hexdigest",
          "md5",
          "get",
          "connect",
          "func",
          "CacheManager"
        ],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "file": "backend/core/cache_manager.py"
      },
      {
        "name": "get_shared_context",
        "line": 51,
        "async": false,
        "calls": [
          "SharedContextManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "set",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "key",
          "value"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "get",
        "line": 31,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "key",
          "default"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "update",
        "line": 35,
        "async": false,
        "calls": [
          "update"
        ],
        "parameters": [
          "self",
          "context"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "clear",
        "line": 39,
        "async": false,
        "calls": [
          "clear"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "get_all",
        "line": 43,
        "async": false,
        "calls": [
          "copy"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "get_conversation_context",
        "line": 50,
        "async": false,
        "calls": [
          "ConversationContextManager"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "add_message",
        "line": 27,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "conversation_id",
          "role",
          "content"
        ],
        "decorators": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "get_conversation",
        "line": 37,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "conversation_id"
        ],
        "decorators": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "clear_conversation",
        "line": 41,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "conversation_id"
        ],
        "decorators": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "__init__",
        "line": 23,
        "async": false,
        "calls": [
          "debug"
        ],
        "parameters": [
          "self",
          "project_path"
        ],
        "decorators": [],
        "file": "backend/core/git_checkpoint_manager.py"
      },
      {
        "name": "create_checkpoint",
        "line": 34,
        "async": false,
        "calls": [
          "info",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "name",
          "message"
        ],
        "decorators": [],
        "file": "backend/core/git_checkpoint_manager.py"
      },
      {
        "name": "list_checkpoints",
        "line": 45,
        "async": false,
        "calls": [
          "copy"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/git_checkpoint_manager.py"
      },
      {
        "name": "rollback_to",
        "line": 49,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "checkpoint_id"
        ],
        "decorators": [],
        "file": "backend/core/git_checkpoint_manager.py"
      },
      {
        "name": "__init__",
        "line": 13,
        "async": false,
        "calls": [
          "join",
          "__init__",
          "super",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "dependencies"
        ],
        "decorators": [],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 40,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "component",
          "file",
          "line"
        ],
        "decorators": [],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 65,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "component",
          "reason",
          "solution",
          "file",
          "line"
        ],
        "decorators": [],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "__init__",
        "line": 22,
        "async": false,
        "calls": [
          "which",
          "info",
          "warning"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/semgrep_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 26,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/vulture_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/radon_metrics.py"
      },
      {
        "name": "_complexity_rank",
        "line": 215,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "complexity"
        ],
        "decorators": [],
        "file": "backend/core/analysis/radon_metrics.py"
      },
      {
        "name": "_calculate_quality_score",
        "line": 230,
        "async": false,
        "calls": [
          "max",
          "min"
        ],
        "parameters": [
          "self",
          "avg_complexity",
          "avg_maintainability"
        ],
        "decorators": [],
        "file": "backend/core/analysis/radon_metrics.py"
      },
      {
        "name": "__init__",
        "line": 56,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_classify_files_into_layers",
        "line": 139,
        "async": false,
        "calls": [
          "keys",
          "_detect_file_layer"
        ],
        "parameters": [
          "self",
          "ast_data"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_detect_file_layer",
        "line": 154,
        "async": false,
        "calls": [
          "items",
          "max",
          "basename",
          "lower",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_build_layer_structure",
        "line": 193,
        "async": false,
        "calls": [
          "items",
          "sort",
          "get",
          "len",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_detect_layer_violations",
        "line": 221,
        "async": false,
        "calls": [
          "items",
          "_check_layer_violation",
          "_resolve_import_to_file",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "file_layers",
          "import_graph"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_resolve_import_to_file",
        "line": 254,
        "async": false,
        "calls": [
          "keys",
          "replace"
        ],
        "parameters": [
          "self",
          "import_name",
          "file_layers"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_check_layer_violation",
        "line": 274,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "from_file",
          "from_layer",
          "to_file",
          "to_layer"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_calculate_quality_score",
        "line": 331,
        "async": false,
        "calls": [
          "values",
          "max",
          "round",
          "len",
          "min",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers",
          "violations",
          "ast_data"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_calculate_metrics",
        "line": 373,
        "async": false,
        "calls": [
          "len",
          "dict",
          "values",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "file_layers",
          "violations",
          "ast_data"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "_empty_layer_analysis",
        "line": 405,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_function_registry",
        "line": 120,
        "async": false,
        "calls": [
          "get",
          "items"
        ],
        "parameters": [
          "self",
          "ast_data"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_call_relationships",
        "line": 144,
        "async": false,
        "calls": [
          "_resolve_function_id",
          "items",
          "dict",
          "get",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "ast_data",
          "function_registry"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_resolve_function_id",
        "line": 179,
        "async": false,
        "calls": [
          "endswith"
        ],
        "parameters": [
          "self",
          "func_name",
          "current_file",
          "function_registry"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_detect_entry_points",
        "line": 206,
        "async": false,
        "calls": [
          "append",
          "items",
          "len",
          "any"
        ],
        "parameters": [
          "self",
          "function_registry",
          "reverse_call_graph"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_find_unused_functions",
        "line": 240,
        "async": false,
        "calls": [
          "items",
          "endswith",
          "len",
          "append",
          "startswith"
        ],
        "parameters": [
          "self",
          "function_registry",
          "reverse_call_graph",
          "entry_points"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_detect_hot_paths",
        "line": 275,
        "async": false,
        "calls": [
          "append",
          "len",
          "sort",
          "_bfs_paths"
        ],
        "parameters": [
          "self",
          "call_graph",
          "entry_points"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_bfs_paths",
        "line": 304,
        "async": false,
        "calls": [
          "get",
          "deque",
          "set",
          "popleft",
          "len",
          "append",
          "add"
        ],
        "parameters": [
          "self",
          "start",
          "call_graph",
          "max_depth"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_nodes",
        "line": 336,
        "async": false,
        "calls": [
          "get",
          "len",
          "items",
          "append"
        ],
        "parameters": [
          "self",
          "function_registry",
          "call_graph",
          "reverse_call_graph"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_build_edges",
        "line": 367,
        "async": false,
        "calls": [
          "get",
          "append",
          "items",
          "split"
        ],
        "parameters": [
          "self",
          "call_graph",
          "ast_data"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_analyze_clusters",
        "line": 399,
        "async": false,
        "calls": [
          "items",
          "sort",
          "split",
          "round",
          "enumerate",
          "get",
          "len",
          "append",
          "defaultdict"
        ],
        "parameters": [
          "self",
          "call_graph",
          "function_registry"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_calculate_metrics",
        "line": 446,
        "async": false,
        "calls": [
          "max",
          "len",
          "_calculate_call_depth",
          "round"
        ],
        "parameters": [
          "self",
          "nodes",
          "edges",
          "call_graph"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_calculate_call_depth",
        "line": 477,
        "async": false,
        "calls": [
          "max",
          "set",
          "copy",
          "get",
          "_calculate_call_depth",
          "add"
        ],
        "parameters": [
          "self",
          "func_id",
          "call_graph",
          "visited"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "_empty_call_graph",
        "line": 505,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_extract_function_calls",
        "line": 94,
        "async": false,
        "calls": [
          "isinstance",
          "walk",
          "set",
          "_get_call_name",
          "list",
          "append"
        ],
        "parameters": [
          "self",
          "func_node"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_call_name",
        "line": 104,
        "async": false,
        "calls": [
          "isinstance"
        ],
        "parameters": [
          "self",
          "call_node"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_name",
        "line": 113,
        "async": false,
        "calls": [
          "isinstance",
          "_get_attribute_path",
          "str"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_attribute_path",
        "line": 121,
        "async": false,
        "calls": [
          "isinstance",
          "append",
          "join",
          "reversed"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_get_decorator_name",
        "line": 132,
        "async": false,
        "calls": [
          "isinstance",
          "_get_call_name",
          "str"
        ],
        "parameters": [
          "self",
          "decorator"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "_extract_import",
        "line": 140,
        "async": false,
        "calls": [
          "isinstance"
        ],
        "parameters": [
          "self",
          "node"
        ],
        "decorators": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "__init__",
        "line": 22,
        "async": false,
        "calls": [
          "TreeSitterIndexer"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/core/indexing/code_indexer.py"
      },
      {
        "name": "_find_python_files",
        "line": 108,
        "async": false,
        "calls": [
          "join",
          "walk",
          "append",
          "endswith"
        ],
        "parameters": [
          "self",
          "root_path"
        ],
        "decorators": [],
        "file": "backend/core/indexing/code_indexer.py"
      },
      {
        "name": "_count_total_lines",
        "line": 123,
        "async": false,
        "calls": [
          "open",
          "len",
          "readlines"
        ],
        "parameters": [
          "self",
          "files"
        ],
        "decorators": [],
        "file": "backend/core/indexing/code_indexer.py"
      },
      {
        "name": "get_capabilities_loader",
        "line": 187,
        "async": false,
        "calls": [
          "CapabilitiesLoader"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "apply_capabilities_to_agent",
        "line": 194,
        "async": false,
        "calls": [
          "get_capabilities_loader",
          "apply_to_config"
        ],
        "parameters": [
          "agent_config"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [
          "_load_capabilities",
          "join",
          "dirname"
        ],
        "parameters": [
          "self",
          "config_path"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "_load_capabilities",
        "line": 32,
        "async": false,
        "calls": [
          "warning",
          "exists",
          "open",
          "info",
          "error",
          "get",
          "len",
          "safe_load"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "get_agent_capabilities",
        "line": 49,
        "async": false,
        "calls": [
          "get",
          "info",
          "replace"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "apply_to_config",
        "line": 83,
        "async": false,
        "calls": [
          "debug",
          "isinstance",
          "get_agent_capabilities",
          "get",
          "getattr"
        ],
        "parameters": [
          "self",
          "agent_config"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "can_agent_write",
        "line": 113,
        "async": false,
        "calls": [
          "split",
          "abspath",
          "get_agent_capabilities",
          "lstrip",
          "fnmatch",
          "rstrip",
          "get",
          "len",
          "startswith"
        ],
        "parameters": [
          "self",
          "agent_name",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "get_all_capabilities",
        "line": 180,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "get_language_directive",
        "line": 137,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/config/settings.py"
      },
      {
        "name": "get_timeout",
        "line": 142,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "cls",
          "task_type"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/config/settings.py"
      },
      {
        "name": "update_from_vscode",
        "line": 152,
        "async": false,
        "calls": [
          "_auto_detect_provider"
        ],
        "parameters": [
          "cls",
          "vscode_settings"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/config/settings.py"
      },
      {
        "name": "_auto_detect_provider",
        "line": 258,
        "async": false,
        "calls": [
          "lower",
          "startswith"
        ],
        "parameters": [
          "cls",
          "model"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/config/settings.py"
      },
      {
        "name": "to_dict",
        "line": 280,
        "async": false,
        "calls": [],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/config/settings.py"
      },
      {
        "name": "main",
        "line": 273,
        "async": false,
        "calls": [
          "print",
          "main"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/tests/test_agent_file_capabilities.py"
      },
      {
        "name": "setup_method",
        "line": 28,
        "async": false,
        "calls": [
          "mkdtemp"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/tests/test_agent_file_capabilities.py"
      },
      {
        "name": "teardown_method",
        "line": 33,
        "async": false,
        "calls": [
          "rmtree",
          "exists"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/tests/test_agent_file_capabilities.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/tests/test_integration.py"
      },
      {
        "name": "record_result",
        "line": 382,
        "async": false,
        "calls": [
          "print",
          "isoformat",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "test_name",
          "success",
          "details"
        ],
        "decorators": [],
        "file": "backend/tests/test_integration.py"
      },
      {
        "name": "print_summary",
        "line": 406,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/tests/test_integration.py"
      },
      {
        "name": "get_agent_registry",
        "line": 317,
        "async": false,
        "calls": [
          "AgentRegistry"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "__new__",
        "line": 56,
        "async": false,
        "calls": [
          "super",
          "__new__"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "__init__",
        "line": 62,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "get_agent",
        "line": 167,
        "async": false,
        "calls": [
          "warning"
        ],
        "parameters": [
          "self",
          "agent_id"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "get_available_agents",
        "line": 177,
        "async": false,
        "calls": [
          "append",
          "items"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "find_agent_by_capability",
        "line": 247,
        "async": false,
        "calls": [
          "items"
        ],
        "parameters": [
          "self",
          "capability"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "get_agents_by_capability",
        "line": 257,
        "async": false,
        "calls": [
          "append",
          "items"
        ],
        "parameters": [
          "self",
          "capability"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "get_status",
        "line": 283,
        "async": false,
        "calls": [
          "sum",
          "len",
          "get_available_agents",
          "values"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "getcwd",
          "Path",
          "join",
          "resolve",
          "makedirs",
          "str"
        ],
        "parameters": [
          "self",
          "workspace_path"
        ],
        "decorators": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "_validate_path",
        "line": 56,
        "async": false,
        "calls": [
          "isabs",
          "Path",
          "resolve",
          "lstrip",
          "fnmatch",
          "relative_to",
          "startswith",
          "match",
          "str"
        ],
        "parameters": [
          "self",
          "file_path",
          "agent_name",
          "allowed_paths"
        ],
        "decorators": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "_create_backup",
        "line": 120,
        "async": false,
        "calls": [
          "exists",
          "now",
          "join",
          "strftime",
          "copy2",
          "basename",
          "info",
          "error"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "_log_operation",
        "line": 145,
        "async": false,
        "calls": [
          "dirname",
          "asdict",
          "join",
          "open",
          "info",
          "error",
          "dumps",
          "write",
          "append",
          "makedirs"
        ],
        "parameters": [
          "self",
          "operation"
        ],
        "decorators": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "get_audit_log",
        "line": 467,
        "async": false,
        "calls": [
          "asdict"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [
          "ImportError"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/tools/browser_tester.py"
      },
      {
        "name": "__init__",
        "line": 62,
        "async": false,
        "calls": [
          "AgentConfig",
          "getcwd",
          "mkdir",
          "Path",
          "__init__",
          "home",
          "OpenAIService",
          "info",
          "error",
          "GeminiVideoService",
          "replace",
          "super",
          "warning",
          "str"
        ],
        "parameters": [
          "self",
          "workspace_path"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/video_agent.py"
      },
      {
        "name": "_format_analysis_result",
        "line": 581,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "video_data"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/video_agent.py"
      },
      {
        "name": "_detect_language",
        "line": 594,
        "async": false,
        "calls": [
          "lower",
          "sum"
        ],
        "parameters": [
          "self",
          "text"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/video_agent.py"
      },
      {
        "name": "__init__",
        "line": 63,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "_match_pattern",
        "line": 187,
        "async": false,
        "calls": [
          "search",
          "items",
          "any"
        ],
        "parameters": [
          "self",
          "error_text",
          "files"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "__init__",
        "line": 37,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "check_asimov_violations",
        "line": 221,
        "async": false,
        "calls": [
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "self",
          "code"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_calculate_html_app_quality_score",
        "line": 445,
        "async": false,
        "calls": [
          "get",
          "len",
          "min",
          "max"
        ],
        "parameters": [
          "self",
          "test_result"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_get_recommendation",
        "line": 479,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "quality_score",
          "test_result"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "_format_metrics",
        "line": 494,
        "async": false,
        "calls": [
          "join",
          "items",
          "append",
          "isinstance"
        ],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/tradestrat_agent.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/docubot_agent.py"
      },
      {
        "name": "__init__",
        "line": 116,
        "async": false,
        "calls": [
          "AgentConfig",
          "getcwd",
          "_load_architecture_patterns",
          "LayerAnalyzer",
          "__init__",
          "TreeSitterIndexer",
          "info",
          "CodeIndexer",
          "CallGraphAnalyzer",
          "SemgrepAnalyzer",
          "warning",
          "DiagramService",
          "SmartFileWatcher",
          "start",
          "join",
          "abspath",
          "VultureAnalyzer",
          "ProjectCache",
          "getenv",
          "LightweightCodeSearch",
          "CacheNotAvailableError",
          "makedirs",
          "dirname",
          "OpenAIService",
          "basename",
          "RadonMetrics",
          "super",
          "_load_tech_stacks",
          "apply_capabilities_to_agent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_parse_architecture_response",
        "line": 496,
        "async": false,
        "calls": [
          "upper",
          "get",
          "lower",
          "append",
          "ArchitectureDesign",
          "capitalize"
        ],
        "parameters": [
          "self",
          "response",
          "requirements"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_extract_features",
        "line": 612,
        "async": false,
        "calls": [
          "lower",
          "append"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_load_architecture_patterns",
        "line": 631,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "__del__",
        "line": 754,
        "async": false,
        "calls": [
          "hasattr",
          "stop",
          "info",
          "error"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_load_tech_stacks",
        "line": 766,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_generate_redis_config",
        "line": 857,
        "async": false,
        "calls": [
          "now",
          "keys",
          "join",
          "isoformat",
          "get"
        ],
        "parameters": [
          "self",
          "params"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_generate_docker_compose",
        "line": 924,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "services"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "_detect_request_type",
        "line": 1403,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "__init__",
        "line": 89,
        "async": false,
        "calls": [
          "warning",
          "AgentConfig",
          "_load_language_configs",
          "__init__",
          "TreeSitterIndexer",
          "ClaudeCodeService",
          "error",
          "CodeIndexer",
          "RadonMetrics",
          "super",
          "is_available",
          "VultureAnalyzer",
          "_load_code_patterns",
          "ClaudeCodeConfig",
          "DiagramService",
          "apply_capabilities_to_agent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "format_implementation",
        "line": 784,
        "async": false,
        "calls": [
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "implementation"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_detect_language",
        "line": 820,
        "async": false,
        "calls": [
          "lower",
          "items"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_functionality",
        "line": 847,
        "async": false,
        "calls": [
          "lower",
          "split",
          "strip"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_assess_complexity",
        "line": 859,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_generate_filename",
        "line": 872,
        "async": false,
        "calls": [
          "join",
          "split",
          "get",
          "lower",
          "len"
        ],
        "parameters": [
          "self",
          "prompt",
          "language"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_dependencies",
        "line": 898,
        "async": false,
        "calls": [
          "findall",
          "set",
          "split",
          "list",
          "startswith"
        ],
        "parameters": [
          "self",
          "code",
          "language"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_get_test_framework",
        "line": 921,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "language"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_load_code_patterns",
        "line": 940,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_load_language_configs",
        "line": 962,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_check_for_hallucination",
        "line": 1289,
        "async": false,
        "calls": [
          "error",
          "lower"
        ],
        "parameters": [
          "self",
          "content"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_enforce_asimov_rule_1",
        "line": 1312,
        "async": false,
        "calls": [
          "ValueError",
          "info",
          "any",
          "lower",
          "warning"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_file_path",
        "line": 1465,
        "async": false,
        "calls": [
          "search",
          "group"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_generate_file_path",
        "line": 1482,
        "async": false,
        "calls": [
          "lower",
          "_extract_feature_name"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "_extract_feature_name",
        "line": 1515,
        "async": false,
        "calls": [
          "lower",
          "len",
          "replace",
          "findall"
        ],
        "parameters": [
          "self",
          "prompt"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "__init__",
        "line": 38,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "OpenAIService",
          "info",
          "super",
          "getattr"
        ],
        "parameters": [
          "self",
          "model"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_create_fresh_perspective_prompt",
        "line": 70,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "issue",
          "previous_attempts",
          "research_results"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_format_previous_attempts",
        "line": 110,
        "async": false,
        "calls": [
          "enumerate",
          "get"
        ],
        "parameters": [
          "self",
          "attempts"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "_format_research_results",
        "line": 124,
        "async": false,
        "calls": [
          "enumerate",
          "get"
        ],
        "parameters": [
          "self",
          "research"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "__init__",
        "line": 48,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "_extract_bottlenecks",
        "line": 194,
        "async": false,
        "calls": [
          "items",
          "round",
          "sort_stats",
          "list",
          "append"
        ],
        "parameters": [
          "self",
          "stats"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "_parse_profile_stats",
        "line": 275,
        "async": false,
        "calls": [
          "join",
          "split",
          "replace",
          "splitlines",
          "len",
          "append",
          "isdigit"
        ],
        "parameters": [
          "self",
          "stats_output"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "_format_profile_results",
        "line": 296,
        "async": false,
        "calls": [
          "items",
          "title",
          "join",
          "enumerate",
          "replace",
          "get",
          "append"
        ],
        "parameters": [
          "self",
          "profile"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "_format_package_analysis",
        "line": 437,
        "async": false,
        "calls": [
          "join",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "package_name",
          "analysis"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "info",
          "error",
          "super",
          "PerplexityService"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/research_agent.py"
      },
      {
        "name": "__init__",
        "line": 50,
        "async": false,
        "calls": [
          "OpenAIService",
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "set_planning_mode",
        "line": 154,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self",
          "mode"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "AgentConfig",
          "__init__",
          "ClaudeCodeService",
          "error",
          "super",
          "ClaudeCodeConfig",
          "is_available"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/opus_arbitrator_agent.py"
      },
      {
        "name": "__init__",
        "line": 75,
        "async": false,
        "calls": [
          "super",
          "__init__",
          "AgentConfig"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_calculate_critical_path_duration",
        "line": 538,
        "async": false,
        "calls": [
          "max",
          "sum",
          "_get_chain_duration"
        ],
        "parameters": [
          "self",
          "subtasks"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_get_chain_duration",
        "line": 553,
        "async": false,
        "calls": [
          "max",
          "_get_chain_duration"
        ],
        "parameters": [
          "self",
          "start_task",
          "all_tasks"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_group_by_dependency_level",
        "line": 697,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "workflow"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "_dependencies_met",
        "line": 718,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step",
          "completed",
          "workflow"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "format_orchestration_result",
        "line": 770,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "str"
        ],
        "parameters": [
          "self",
          "decomposition",
          "results"
        ],
        "decorators": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "__init__",
        "line": 138,
        "async": false,
        "calls": [
          "getcwd",
          "PauseHandler",
          "get_memory_manager",
          "FileSystemTools",
          "set",
          "cwd",
          "isinstance",
          "_load_instructions",
          "hasattr",
          "info",
          "get_shared_context",
          "GitCheckpointManager",
          "get_conversation_context",
          "get",
          "_get_language_directive",
          "getattr",
          "str"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "_load_instructions",
        "line": 226,
        "async": false,
        "calls": [
          "getenv",
          "read",
          "exists",
          "join",
          "open",
          "split",
          "basename",
          "info",
          "expanduser",
          "warning"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "_get_language_directive",
        "line": 308,
        "async": false,
        "calls": [
          "get_language_directive"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "get_system_prompt",
        "line": 320,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "calculate_dynamic_timeout",
        "line": 617,
        "async": false,
        "calls": [
          "items",
          "max",
          "info",
          "get",
          "lower",
          "len",
          "min"
        ],
        "parameters": [
          "self",
          "prompt",
          "context"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "_get_workspace_from_request",
        "line": 695,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "_get_file_tools_for_current_workspace",
        "line": 706,
        "async": false,
        "calls": [
          "FileSystemTools",
          "info",
          "_get_workspace_from_request"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "_compile_research_summary",
        "line": 944,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "extend"
        ],
        "parameters": [
          "self",
          "findings"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "set_websocket_callback",
        "line": 1122,
        "async": false,
        "calls": [
          "set_websocket_callback"
        ],
        "parameters": [
          "self",
          "callback"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "get_status",
        "line": 1128,
        "async": false,
        "calls": [
          "isoformat",
          "len",
          "get_pause_state"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "__repr__",
        "line": 1382,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "load_from_file",
        "line": 1330,
        "async": false,
        "calls": [
          "LearningEntry",
          "load",
          "exists",
          "open",
          "info",
          "error",
          "any",
          "get",
          "append"
        ],
        "parameters": [
          "file_path",
          "source_name"
        ],
        "decorators": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "validate_request",
        "line": 126,
        "async": false,
        "calls": [
          "get",
          "check_research_requirements",
          "_check_violations"
        ],
        "parameters": [
          "cls",
          "request"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "_check_violations",
        "line": 173,
        "async": false,
        "calls": [
          "items",
          "len",
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "cls",
          "prompt",
          "context"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "check_research_requirements",
        "line": 247,
        "async": false,
        "calls": [
          "items",
          "len",
          "findall",
          "join",
          "set",
          "list",
          "get",
          "lower",
          "append",
          "search"
        ],
        "parameters": [
          "cls",
          "prompt",
          "context"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "format_challenge_response",
        "line": 316,
        "async": false,
        "calls": [
          "get",
          "join",
          "append",
          "enumerate"
        ],
        "parameters": [
          "cls",
          "validation_result"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "get_directive_prompt",
        "line": 344,
        "async": false,
        "calls": [
          "join",
          "append"
        ],
        "parameters": [
          "cls"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "check_global_error_search",
        "line": 365,
        "async": false,
        "calls": [],
        "parameters": [
          "cls",
          "error_found",
          "file_location"
        ],
        "decorators": [
          "classmethod"
        ],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "__post_init__",
        "line": 26,
        "async": false,
        "calls": [
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "to_dict",
        "line": 32,
        "async": false,
        "calls": [
          "isoformat"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "__init__",
        "line": 47,
        "async": false,
        "calls": [
          "__init__",
          "super"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "format_response",
        "line": 193,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "content",
          "status"
        ],
        "decorators": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "get_chat_status",
        "line": 203,
        "async": false,
        "calls": [
          "update",
          "len",
          "get_status"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "getenv",
          "info",
          "ValueError"
        ],
        "parameters": [
          "self",
          "model"
        ],
        "decorators": [],
        "file": "backend/utils/perplexity_service.py"
      },
      {
        "name": "test_connection",
        "line": 314,
        "async": false,
        "calls": [
          "error",
          "post"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/utils/perplexity_service.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [
          "ClaudeCodeConfig",
          "_check_cli_availability"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "_check_cli_availability",
        "line": 40,
        "async": false,
        "calls": [
          "error",
          "run",
          "info",
          "strip"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "_parse_json_response",
        "line": 136,
        "async": false,
        "calls": [
          "loads",
          "type",
          "join",
          "isinstance",
          "split",
          "get",
          "append",
          "warning",
          "startswith",
          "strip"
        ],
        "parameters": [
          "self",
          "response"
        ],
        "decorators": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "is_available",
        "line": 252,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "getenv",
          "OpenAIConfig",
          "info",
          "AsyncOpenAI",
          "warning"
        ],
        "parameters": [
          "self",
          "config",
          "model"
        ],
        "decorators": [],
        "file": "backend/utils/openai_service.py"
      },
      {
        "name": "is_available",
        "line": 266,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/utils/openai_service.py"
      },
      {
        "name": "__init__",
        "line": 34,
        "async": false,
        "calls": [
          "getenv",
          "info",
          "AnthropicConfig",
          "AsyncAnthropic",
          "warning"
        ],
        "parameters": [
          "self",
          "config"
        ],
        "decorators": [],
        "file": "backend/utils/anthropic_service.py"
      },
      {
        "name": "_format_outputs",
        "line": 241,
        "async": false,
        "calls": [
          "enumerate",
          "join",
          "append",
          "get"
        ],
        "parameters": [
          "self",
          "outputs"
        ],
        "decorators": [],
        "file": "backend/utils/anthropic_service.py"
      },
      {
        "name": "is_available",
        "line": 251,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/utils/anthropic_service.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "_init_fallback_responses",
          "_init_query_patterns"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_init_fallback_responses",
        "line": 39,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_init_query_patterns",
        "line": 119,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "analyze_query",
        "line": 148,
        "async": false,
        "calls": [
          "QueryAnalysis",
          "split",
          "any",
          "get",
          "lower",
          "len"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "get_intelligent_response",
        "line": 219,
        "async": false,
        "calls": [
          "lower",
          "any",
          "analyze_query"
        ],
        "parameters": [
          "self",
          "query",
          "context"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "create_intelligent_execution_plan",
        "line": 256,
        "async": false,
        "calls": [
          "analyze_query",
          "ExecutionStep",
          "get_intelligent_response"
        ],
        "parameters": [
          "self",
          "query",
          "fallback_agent"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "enhance_orchestrator_step",
        "line": 344,
        "async": false,
        "calls": [
          "info",
          "len",
          "get_intelligent_response"
        ],
        "parameters": [
          "self",
          "step",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "integrate_with_classification",
        "line": 359,
        "async": false,
        "calls": [
          "get",
          "_get_development_guidance"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_get_development_guidance",
        "line": 389,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "__init__",
        "line": 24,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "check_docker_installed",
        "line": 28,
        "async": false,
        "calls": [
          "run"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "check_redis_running",
        "line": 41,
        "async": false,
        "calls": [
          "Redis",
          "ping"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "start_redis_container",
        "line": 51,
        "async": false,
        "calls": [
          "check_redis_running",
          "check_docker_installed",
          "sleep",
          "info",
          "run",
          "append",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "fill_caches",
        "line": 131,
        "async": false,
        "calls": [
          "start_redis_container",
          "join",
          "set",
          "extend",
          "append"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [
          "getLogger"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "analyze_context",
        "line": 36,
        "async": false,
        "calls": [
          "sum",
          "lower",
          "bool",
          "DevelopmentContext",
          "any",
          "search"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_performance_query",
        "line": 77,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_bug_query",
        "line": 116,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_refactoring_query",
        "line": 162,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_testing_query",
        "line": 204,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_implementation_query",
        "line": 253,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_technology_query",
        "line": 311,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_database_query",
        "line": 355,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_ai_integration_query",
        "line": 417,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_error_diagnosis_query",
        "line": 470,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_scope_clarification",
        "line": 546,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "get_handler_for_type",
        "line": 604,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_development_query",
        "line": 622,
        "async": false,
        "calls": [
          "handler",
          "get_handler_for_type"
        ],
        "parameters": [
          "self",
          "query",
          "dev_type",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "suggest_next_steps",
        "line": 647,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "query_type"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "summary",
        "line": 57,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 71,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "classify_query",
        "line": 161,
        "async": false,
        "calls": [
          "md5",
          "_has_context_reference",
          "_check_pattern",
          "_calculate_safety",
          "_calculate_confidence",
          "_calculate_coherence",
          "_prepare_responses",
          "encode",
          "_is_nonsense",
          "DetailedClassification",
          "_check_development_patterns",
          "_determine_action",
          "lower",
          "_is_greeting",
          "hexdigest",
          "strip"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_greeting",
        "line": 208,
        "async": false,
        "calls": [
          "lower",
          "startswith",
          "split"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_nonsense",
        "line": 228,
        "async": false,
        "calls": [
          "set",
          "split",
          "search",
          "len",
          "match"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_has_context_reference",
        "line": 249,
        "async": false,
        "calls": [
          "startswith"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_pattern",
        "line": 259,
        "async": false,
        "calls": [
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "patterns"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_development_patterns",
        "line": 263,
        "async": false,
        "calls": [
          "len",
          "_check_pattern",
          "_has_context_reference",
          "split"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_coherence",
        "line": 319,
        "async": false,
        "calls": [
          "max",
          "set",
          "split",
          "len",
          "min",
          "match"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_confidence",
        "line": 342,
        "async": false,
        "calls": [
          "max",
          "min"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_safety",
        "line": 364,
        "async": false,
        "calls": [
          "max",
          "get",
          "min"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_determine_action",
        "line": 386,
        "async": false,
        "calls": [
          "_get_dev_agent"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_get_dev_agent",
        "line": 436,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_prepare_responses",
        "line": 450,
        "async": false,
        "calls": [
          "split"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 527,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "is_safe",
        "line": 530,
        "async": false,
        "calls": [
          "warning",
          "_detect_loop_pattern",
          "get",
          "_check_resource_exhaustion",
          "_is_duplicate"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_duplicate",
        "line": 562,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query_hash"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_detect_loop_pattern",
        "line": 568,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_resource_exhaustion",
        "line": 577,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "record_execution",
        "line": 589,
        "async": false,
        "calls": [
          "len",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "query_hash"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 57,
        "async": false,
        "calls": [
          "_initialize_patterns",
          "deque"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_initialize_patterns",
        "line": 61,
        "async": false,
        "calls": [
          "KnownAntiPattern"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "detect_patterns",
        "line": 138,
        "async": false,
        "calls": [
          "_get_detection_reason",
          "_check_pattern",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_pattern",
        "line": 154,
        "async": false,
        "calls": [
          "get",
          "len",
          "_has_circular_dependencies"
        ],
        "parameters": [
          "self",
          "pattern",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_has_circular_dependencies",
        "line": 205,
        "async": false,
        "calls": [
          "remove",
          "next",
          "set",
          "has_cycle_from",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_get_detection_reason",
        "line": 231,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "pattern",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 254,
        "async": false,
        "calls": [
          "_define_invariants"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_define_invariants",
        "line": 258,
        "async": false,
        "calls": [
          "_check_unique_ids",
          "_check_dependencies_exist",
          "_check_valid_transitions",
          "any",
          "get",
          "len",
          "_check_agent_capabilities"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "check_all",
        "line": 328,
        "async": false,
        "calls": [
          "error",
          "append",
          "len",
          "now"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_valid_transitions",
        "line": 347,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_unique_ids",
        "line": 366,
        "async": false,
        "calls": [
          "get",
          "len",
          "set"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_dependencies_exist",
        "line": 372,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_agent_capabilities",
        "line": 383,
        "async": false,
        "calls": [
          "_suggest_better_agent",
          "any",
          "get",
          "lower",
          "warning"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_suggest_better_agent",
        "line": 422,
        "async": false,
        "calls": [
          "sum",
          "items"
        ],
        "parameters": [
          "self",
          "current_agent",
          "task",
          "agent_capabilities"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 454,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "known_patterns",
          "invariants"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_calculate_dependency_depth",
        "line": 715,
        "async": false,
        "calls": [
          "max",
          "get_depth",
          "get"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_find_parallelizable_steps",
        "line": 729,
        "async": false,
        "calls": [
          "set",
          "_has_dependency_conflict",
          "append",
          "len",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_has_dependency_conflict",
        "line": 752,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step1",
          "step2",
          "all_steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_is_in_cycle",
        "line": 757,
        "async": false,
        "calls": [
          "has_cycle",
          "remove",
          "next",
          "set",
          "add"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 791,
        "async": false,
        "calls": [
          "_initialize_patterns",
          "deque"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_initialize_patterns",
        "line": 796,
        "async": false,
        "calls": [
          "_detect_timeout_cluster",
          "_detect_stuck_progress",
          "_detect_collaboration_spiral",
          "_detect_routing_loop",
          "_detect_resource_spike"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "analyze_patterns",
        "line": 826,
        "async": false,
        "calls": [
          "items",
          "_detect_statistical_anomalies",
          "get",
          "append",
          "len",
          "min",
          "extend"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_routing_loop",
        "line": 867,
        "async": false,
        "calls": [
          "get",
          "len",
          "all"
        ],
        "parameters": [
          "self",
          "history"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_collaboration_spiral",
        "line": 876,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "history"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_stuck_progress",
        "line": 889,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_resource_spike",
        "line": 894,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_timeout_cluster",
        "line": 899,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "events"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_statistical_anomalies",
        "line": 904,
        "async": false,
        "calls": [
          "sum",
          "max",
          "get",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 946,
        "async": false,
        "calls": [
          "deque"
        ],
        "parameters": [
          "self",
          "invariants",
          "validator",
          "pattern_engine"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 1140,
        "async": false,
        "calls": [
          "KnownAntiPatternsDatabase",
          "WorkflowInvariants",
          "PatternRecognitionEngine",
          "info",
          "PreExecutionValidator",
          "SelfTestFramework"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "get_diagnosis_report",
        "line": 1211,
        "async": false,
        "calls": [
          "len",
          "list"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "has_cycle_from",
        "line": 208,
        "async": false,
        "calls": [
          "next",
          "has_cycle_from",
          "remove",
          "add"
        ],
        "parameters": [
          "step_id",
          "visited",
          "path"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "get_depth",
        "line": 717,
        "async": false,
        "calls": [
          "get",
          "get_depth",
          "max"
        ],
        "parameters": [
          "step_id",
          "steps_dict"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "has_cycle",
        "line": 762,
        "async": false,
        "calls": [
          "next",
          "has_cycle",
          "remove",
          "add"
        ],
        "parameters": [
          "s_id"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 172,
        "async": false,
        "calls": [
          "get_tool_registry",
          "_init_real_agents",
          "ApprovalManager",
          "IntelligentQueryHandler",
          "info",
          "error",
          "DynamicWorkflowManager",
          "WorkflowSelfDiagnosisSystem",
          "SafeOrchestratorExecutor",
          "DevelopmentQueryHandler",
          "EnhancedQueryClassifier",
          "_init_agent_memories"
        ],
        "parameters": [
          "self",
          "websocket_manager",
          "db_path",
          "memory_db_path"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_init_agent_memories",
        "line": 250,
        "async": false,
        "calls": [
          "PersistentAgentMemory"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_init_real_agents",
        "line": 272,
        "async": false,
        "calls": [
          "FixerBotAgent",
          "DocuBotAgent",
          "exception",
          "ResearchAgent",
          "PerformanceBot",
          "ReviewerGPTAgent",
          "info",
          "error",
          "OpusArbitratorAgent",
          "format_exc",
          "CodeSmithAgent",
          "VideoAgent",
          "TradeStratAgent",
          "ArchitectAgent",
          "len",
          "warning",
          "OrchestratorAgent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "create_task_ledger",
        "line": 379,
        "async": false,
        "calls": [
          "TaskLedger",
          "get",
          "extract_success_criteria",
          "now"
        ],
        "parameters": [
          "self",
          "task",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "extract_success_criteria",
        "line": 413,
        "async": false,
        "calls": [
          "lower",
          "append",
          "any"
        ],
        "parameters": [
          "self",
          "task"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "create_progress_ledger",
        "line": 437,
        "async": false,
        "calls": [
          "len",
          "ProgressLedger",
          "update_from_steps"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "identify_parallel_groups",
        "line": 500,
        "async": false,
        "calls": [
          "set",
          "_has_dependency_conflict",
          "append",
          "len",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_has_dependency_conflict",
        "line": 542,
        "async": false,
        "calls": [
          "_get_all_dependencies"
        ],
        "parameters": [
          "self",
          "step1",
          "step2",
          "all_steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_get_all_dependencies",
        "line": 560,
        "async": false,
        "calls": [
          "next",
          "set",
          "pop",
          "list",
          "append",
          "add"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_dependencies_met",
        "line": 2160,
        "async": false,
        "calls": [
          "next"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_get_current_step",
        "line": 2168,
        "async": false,
        "calls": [
          "get",
          "next"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_get_step_by_agent",
        "line": 2175,
        "async": false,
        "calls": [
          "reversed"
        ],
        "parameters": [
          "self",
          "state",
          "agent"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_check_escalation_needed",
        "line": 2182,
        "async": false,
        "calls": [
          "dirname",
          "join",
          "chr",
          "insert",
          "enumerate",
          "error",
          "info",
          "any",
          "get",
          "len",
          "getattr"
        ],
        "parameters": [
          "self",
          "state",
          "suggested_agent",
          "suggested_query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_calculate_agent_confidence",
        "line": 2635,
        "async": false,
        "calls": [
          "get",
          "items",
          "debug"
        ],
        "parameters": [
          "self",
          "task_lower"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_create_single_agent_step",
        "line": 2690,
        "async": false,
        "calls": [
          "ExecutionStep",
          "info",
          "enhance_orchestrator_step",
          "get_intelligent_response",
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "agent",
          "task"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_detect_task_complexity",
        "line": 2738,
        "async": false,
        "calls": [
          "endswith",
          "split",
          "info",
          "any",
          "count",
          "lower",
          "len",
          "strip"
        ],
        "parameters": [
          "self",
          "task"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_apply_plan_modifications",
        "line": 2975,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "plan",
          "modifications"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "_format_proposal_for_user",
        "line": 3241,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "proposal"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "create_workflow",
        "line": 3655,
        "async": false,
        "calls": [
          "add_conditional_edges",
          "add_node",
          "StateGraph",
          "set_entry_point",
          "add_edge"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "create_initial_state",
        "line": 245,
        "async": false,
        "calls": [
          "uuid4",
          "getcwd",
          "now",
          "ExtendedAgentState",
          "str"
        ],
        "parameters": [
          "session_id",
          "client_id",
          "workspace_path",
          "plan_first_mode",
          "debug_mode"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 70,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "is_timeout",
        "line": 77,
        "async": false,
        "calls": [
          "total_seconds",
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "can_retry",
        "line": 84,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "get_retry_delay",
        "line": 88,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 109,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 132,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "update_from_steps",
        "line": 139,
        "async": false,
        "calls": [
          "sum",
          "len"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "add_attempt",
        "line": 41,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "attempt"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "__init__",
        "line": 68,
        "async": false,
        "calls": [
          "ExecutionHistory",
          "ExecutionGuard",
          "getLogger",
          "DevelopmentQueryHandler",
          "EnhancedQueryClassifier"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_generate_query_hash",
        "line": 75,
        "async": false,
        "calls": [
          "encode",
          "hexdigest",
          "md5",
          "lower",
          "strip"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_detect_loop_pattern",
        "line": 80,
        "async": false,
        "calls": [
          "len",
          "warning",
          "min",
          "range"
        ],
        "parameters": [
          "self",
          "recent_hashes"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_get_safe_fallback_response",
        "line": 102,
        "async": false,
        "calls": [
          "handle_development_query"
        ],
        "parameters": [
          "self",
          "query",
          "classification"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "get_execution_stats",
        "line": 314,
        "async": false,
        "calls": [
          "sorted",
          "sum",
          "items",
          "split",
          "get",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "should_use_safe_execution",
        "line": 351,
        "async": false,
        "calls": [
          "isinstance",
          "set",
          "hasattr",
          "dict",
          "any",
          "get",
          "append",
          "len",
          "classify_query"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "reset_history",
        "line": 399,
        "async": false,
        "calls": [
          "ExecutionHistory",
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "__init__",
        "line": 48,
        "async": false,
        "calls": [
          "_extract_base_structure"
        ],
        "parameters": [
          "self",
          "base_graph"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "_extract_base_structure",
        "line": 75,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_node",
        "line": 81,
        "async": false,
        "calls": [
          "info",
          "DynamicNode",
          "warning"
        ],
        "parameters": [
          "self",
          "name",
          "func",
          "node_type",
          "description",
          "metadata"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "remove_node",
        "line": 118,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self",
          "name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_edge",
        "line": 149,
        "async": false,
        "calls": [
          "error",
          "info",
          "append",
          "DynamicEdge"
        ],
        "parameters": [
          "self",
          "source",
          "target",
          "condition",
          "metadata"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_conditional_routing",
        "line": 188,
        "async": false,
        "calls": [
          "info",
          "append",
          "ConditionalRoute"
        ],
        "parameters": [
          "self",
          "source",
          "condition",
          "routes",
          "metadata"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "compile_graph",
        "line": 218,
        "async": false,
        "calls": [
          "add_conditional_edges",
          "items",
          "add_node",
          "StateGraph",
          "add_edge",
          "info",
          "len",
          "append",
          "compile"
        ],
        "parameters": [
          "self",
          "state_class"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "create_template",
        "line": 272,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "name",
          "nodes",
          "edges",
          "routes",
          "description"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "apply_template",
        "line": 303,
        "async": false,
        "calls": [
          "items",
          "add_node",
          "add_conditional_routing",
          "add_edge",
          "error",
          "info"
        ],
        "parameters": [
          "self",
          "template_name",
          "node_prefix",
          "parameter_mapping"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "rollback",
        "line": 361,
        "async": false,
        "calls": [
          "max",
          "error",
          "info",
          "len",
          "warning"
        ],
        "parameters": [
          "self",
          "version"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "get_graph_info",
        "line": 387,
        "async": false,
        "calls": [
          "keys",
          "len",
          "list"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "visualize_graph",
        "line": 402,
        "async": false,
        "calls": [
          "join",
          "append",
          "items",
          "ValueError"
        ],
        "parameters": [
          "self",
          "format"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "websocket_manager",
          "timeout_seconds"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "_format_plan_for_ui",
        "line": 155,
        "async": false,
        "calls": [
          "asdict",
          "isinstance",
          "vars",
          "_format_step",
          "hasattr",
          "str"
        ],
        "parameters": [
          "self",
          "plan"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "_format_step",
        "line": 176,
        "async": false,
        "calls": [
          "asdict",
          "vars",
          "hasattr",
          "get",
          "str"
        ],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_approval_status",
        "line": 218,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "approval_id"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_approval_history",
        "line": 224,
        "async": false,
        "calls": [
          "sort"
        ],
        "parameters": [
          "self",
          "client_id",
          "limit"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "cleanup_expired",
        "line": 253,
        "async": false,
        "calls": [
          "items",
          "now",
          "cancel",
          "info",
          "done",
          "len",
          "append"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_pending_approvals",
        "line": 276,
        "async": false,
        "calls": [
          "values"
        ],
        "parameters": [
          "self",
          "client_id"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "tool",
        "line": 18,
        "async": false,
        "calls": [],
        "parameters": [
          "name",
          "description",
          "tags"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_tool_registry",
        "line": 313,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "decorator",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "__init__",
        "line": 41,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "auto_discover_tools",
        "line": 47,
        "async": false,
        "calls": [
          "_create_tool_from_decorated",
          "getmembers",
          "_create_tool_from_prefix",
          "hasattr",
          "info",
          "register_tool",
          "append",
          "startswith"
        ],
        "parameters": [
          "self",
          "agent_instance"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_create_tool_from_decorated",
        "line": 76,
        "async": false,
        "calls": [
          "_extract_parameters",
          "ToolDefinition",
          "getattr"
        ],
        "parameters": [
          "self",
          "method",
          "agent_name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_create_tool_from_prefix",
        "line": 87,
        "async": false,
        "calls": [
          "_extract_parameters",
          "ToolDefinition",
          "replace"
        ],
        "parameters": [
          "self",
          "method",
          "agent_name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_extract_parameters",
        "line": 99,
        "async": false,
        "calls": [
          "items",
          "signature",
          "get_type_hints",
          "_python_type_to_json_type"
        ],
        "parameters": [
          "self",
          "method"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_python_type_to_json_type",
        "line": 132,
        "async": false,
        "calls": [
          "hasattr",
          "get"
        ],
        "parameters": [
          "self",
          "python_type"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "register_tool",
        "line": 153,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "tool",
          "shared"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "discover_tools_for_agent",
        "line": 173,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_tool_schema",
        "line": 232,
        "async": false,
        "calls": [
          "get",
          "items"
        ],
        "parameters": [
          "self",
          "tool_name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "list_all_tools",
        "line": 253,
        "async": false,
        "calls": [
          "keys",
          "get_tool_schema"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_usage_stats",
        "line": 260,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "tool_name"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "export_tools",
        "line": 266,
        "async": false,
        "calls": [
          "ValueError",
          "values",
          "asdict",
          "dump",
          "dumps"
        ],
        "parameters": [
          "self",
          "format"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "import_tools",
        "line": 283,
        "async": false,
        "calls": [
          "ValueError",
          "loads",
          "ToolDefinition",
          "clear",
          "get",
          "safe_load"
        ],
        "parameters": [
          "self",
          "data",
          "format"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "_init_vector_store",
          "warning",
          "OpenAIEmbeddings",
          "_init_sqlite"
        ],
        "parameters": [
          "self",
          "agent_name",
          "db_path",
          "vector_store_path",
          "embedding_model"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_init_sqlite",
        "line": 71,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_init_vector_store",
        "line": 136,
        "async": false,
        "calls": [
          "exists",
          "Path",
          "info",
          "error",
          "load_local",
          "_create_new_vector_store",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_create_new_vector_store",
        "line": 158,
        "async": false,
        "calls": [
          "now",
          "error",
          "info",
          "from_texts",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "store_memory",
        "line": 175,
        "async": false,
        "calls": [
          "execute",
          "now",
          "commit",
          "pop",
          "_save_vector_store",
          "close",
          "cursor",
          "dumps",
          "error",
          "connect",
          "len",
          "append",
          "add_texts",
          "str"
        ],
        "parameters": [
          "self",
          "content",
          "memory_type",
          "importance",
          "metadata",
          "session_id"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "recall_similar",
        "line": 240,
        "async": false,
        "calls": [
          "execute",
          "get",
          "loads",
          "now",
          "fromisoformat",
          "_update_access_counts",
          "join",
          "fetchall",
          "close",
          "cursor",
          "error",
          "similarity_search_with_score",
          "connect",
          "extend",
          "append",
          "len",
          "MemoryEntry",
          "str"
        ],
        "parameters": [
          "self",
          "query",
          "k",
          "memory_types",
          "min_importance"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "learn_pattern",
        "line": 367,
        "async": false,
        "calls": [
          "execute",
          "md5",
          "fetchone",
          "commit",
          "close",
          "cursor",
          "encode",
          "dumps",
          "connect",
          "hexdigest"
        ],
        "parameters": [
          "self",
          "pattern",
          "solution",
          "success",
          "metadata"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_learned_solution",
        "line": 426,
        "async": false,
        "calls": [
          "execute",
          "md5",
          "fetchone",
          "close",
          "cursor",
          "info",
          "encode",
          "connect",
          "hexdigest"
        ],
        "parameters": [
          "self",
          "pattern",
          "min_success_rate"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "record_agent_interaction",
        "line": 454,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self",
          "to_agent",
          "interaction_type",
          "content",
          "result",
          "session_id"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_interaction_history",
        "line": 475,
        "async": false,
        "calls": [
          "execute",
          "fetchall",
          "close",
          "cursor",
          "connect",
          "append"
        ],
        "parameters": [
          "self",
          "with_agent",
          "limit"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_update_access_counts",
        "line": 516,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self",
          "memory_ids"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_save_vector_store",
        "line": 536,
        "async": false,
        "calls": [
          "mkdir",
          "Path",
          "error",
          "save_local",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "consolidate_memories",
        "line": 545,
        "async": false,
        "calls": [
          "execute",
          "now",
          "timedelta",
          "commit",
          "close",
          "cursor",
          "info",
          "connect"
        ],
        "parameters": [
          "self",
          "max_age_days"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_memory_stats",
        "line": 567,
        "async": false,
        "calls": [
          "execute",
          "fetchone",
          "fetchall",
          "close",
          "cursor",
          "connect",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "main",
        "line": 834,
        "async": false,
        "calls": [
          "socket",
          "warning",
          "range",
          "exit",
          "graceful_shutdown",
          "sleep",
          "check_server_running",
          "info",
          "run",
          "close",
          "error",
          "post",
          "connect_ex"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "__init__",
        "line": 78,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "disconnect",
        "line": 91,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "client_id"
        ],
        "decorators": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "check_server_running",
        "line": 841,
        "async": false,
        "calls": [
          "close",
          "socket",
          "connect_ex"
        ],
        "parameters": [
          "port"
        ],
        "decorators": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "graceful_shutdown",
        "line": 848,
        "async": false,
        "calls": [
          "info",
          "sleep",
          "post"
        ],
        "parameters": [
          "port"
        ],
        "decorators": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "load_models_from_config",
        "line": 19,
        "async": false,
        "calls": [
          "items",
          "dirname",
          "join",
          "open",
          "error",
          "get",
          "lower",
          "append",
          "safe_load"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/api/models_endpoint.py"
      },
      {
        "name": "load_models_from_available_json",
        "line": 83,
        "async": false,
        "calls": [
          "dirname",
          "load",
          "join",
          "open",
          "warning"
        ],
        "parameters": [],
        "decorators": [],
        "file": "backend/api/models_endpoint.py"
      },
      {
        "name": "get_model_recommendations",
        "line": 102,
        "async": false,
        "calls": [
          "sorted",
          "lower",
          "replace"
        ],
        "parameters": [
          "provider",
          "models"
        ],
        "decorators": [],
        "file": "backend/api/models_endpoint.py"
      },
      {
        "name": "get_latest_models",
        "line": 143,
        "async": false,
        "calls": [
          "sorted",
          "lower"
        ],
        "parameters": [
          "models",
          "limit"
        ],
        "decorators": [],
        "file": "backend/api/models_endpoint.py"
      },
      {
        "name": "__init__",
        "line": 38,
        "async": false,
        "calls": [
          "info",
          "Path",
          "mkdir"
        ],
        "parameters": [
          "self",
          "output_dir"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_flowchart",
        "line": 51,
        "async": false,
        "calls": [
          "_generate_mermaid_flowchart",
          "warning",
          "_generate_ascii_flowchart"
        ],
        "parameters": [
          "self",
          "nodes",
          "format"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_dependency_graph",
        "line": 71,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "import_graph"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_state_diagram",
        "line": 77,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "states"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_sequence_diagram",
        "line": 83,
        "async": false,
        "calls": [
          "warning",
          "_generate_mermaid_sequence"
        ],
        "parameters": [
          "self",
          "interactions",
          "format"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_class_diagram",
        "line": 101,
        "async": false,
        "calls": [
          "warning",
          "_generate_mermaid_class"
        ],
        "parameters": [
          "self",
          "classes",
          "format"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "generate_architecture_diagram",
        "line": 119,
        "async": false,
        "calls": [
          "_generate_mermaid_architecture",
          "warning"
        ],
        "parameters": [
          "self",
          "components",
          "format"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_flowchart",
        "line": 137,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "nodes"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_sequence",
        "line": 163,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "interactions"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_class",
        "line": 180,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "classes"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_architecture",
        "line": 213,
        "async": false,
        "calls": [
          "isinstance",
          "join",
          "replace",
          "get",
          "append",
          "warning"
        ],
        "parameters": [
          "self",
          "components"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "_generate_ascii_flowchart",
        "line": 260,
        "async": false,
        "calls": [
          "join",
          "enumerate",
          "get",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "nodes"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "save_diagram",
        "line": 286,
        "async": false,
        "calls": [
          "open",
          "info",
          "error",
          "write",
          "warning"
        ],
        "parameters": [
          "self",
          "diagram",
          "filename"
        ],
        "decorators": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "__init__",
        "line": 26,
        "async": false,
        "calls": [
          "timedelta",
          "Path",
          "mkdir",
          "error",
          "info"
        ],
        "parameters": [
          "self",
          "project_root",
          "cache_duration_hours"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "_get_cache_key",
        "line": 59,
        "async": false,
        "calls": [
          "encode",
          "hexdigest",
          "md5"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "_get_cache_path",
        "line": 65,
        "async": false,
        "calls": [
          "_get_cache_key"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "get",
        "line": 69,
        "async": false,
        "calls": [
          "debug",
          "unlink",
          "exists",
          "load",
          "fromisoformat",
          "open",
          "now",
          "_get_cache_path",
          "warning"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "set",
        "line": 102,
        "async": false,
        "calls": [
          "debug",
          "now",
          "open",
          "dump",
          "_get_cache_path",
          "isoformat",
          "warning"
        ],
        "parameters": [
          "self",
          "key",
          "value"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "invalidate",
        "line": 127,
        "async": false,
        "calls": [
          "debug",
          "_get_cache_path",
          "exists",
          "unlink"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "clear_all",
        "line": 140,
        "async": false,
        "calls": [
          "info",
          "unlink",
          "glob"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "get_stats",
        "line": 146,
        "async": false,
        "calls": [
          "sum",
          "glob",
          "stat",
          "round",
          "list",
          "len",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "Path",
          "info"
        ],
        "parameters": [
          "self",
          "project_root",
          "cache",
          "debounce_seconds"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "watch_file",
        "line": 38,
        "async": false,
        "calls": [
          "debug",
          "exists",
          "stat",
          "set",
          "warning",
          "_resolve_path",
          "add"
        ],
        "parameters": [
          "self",
          "file_path",
          "callback"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "watch_directory",
        "line": 64,
        "async": false,
        "calls": [
          "glob",
          "is_dir",
          "info",
          "is_file",
          "warning",
          "watch_file",
          "_resolve_path",
          "str"
        ],
        "parameters": [
          "self",
          "dir_path",
          "pattern",
          "callback"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "check_changes",
        "line": 86,
        "async": false,
        "calls": [
          "items",
          "callback",
          "exists",
          "stat",
          "fromtimestamp",
          "info",
          "error",
          "list",
          "warning",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "stop_watching",
        "line": 120,
        "async": false,
        "calls": [
          "debug",
          "_resolve_path"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "stop_all",
        "line": 137,
        "async": false,
        "calls": [
          "info",
          "clear"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "get_watched_files",
        "line": 144,
        "async": false,
        "calls": [
          "keys",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "_resolve_path",
        "line": 148,
        "async": false,
        "calls": [
          "Path",
          "is_absolute",
          "resolve"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "start",
        "line": 155,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "stop",
        "line": 164,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "start_monitoring",
        "line": 169,
        "async": false,
        "calls": [
          "info",
          "sleep",
          "check_changes"
        ],
        "parameters": [
          "self",
          "interval_seconds"
        ],
        "decorators": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "__init__",
        "line": 28,
        "async": false,
        "calls": [
          "getenv",
          "ValueError",
          "configure",
          "ImportError",
          "info",
          "GenerativeModel"
        ],
        "parameters": [
          "self",
          "api_key"
        ],
        "decorators": [],
        "file": "backend/services/gemini_video_service.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "file_path",
          "line_number",
          "line_content",
          "context_before",
          "context_after"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "to_dict",
        "line": 25,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "__init__",
        "line": 44,
        "async": false,
        "calls": [
          "Path",
          "info"
        ],
        "parameters": [
          "self",
          "project_root",
          "cache_dir"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "search",
        "line": 61,
        "async": false,
        "calls": [
          "error",
          "info",
          "_find_files",
          "extend",
          "len",
          "warning",
          "compile",
          "_search_file"
        ],
        "parameters": [
          "self",
          "pattern",
          "file_pattern",
          "case_sensitive",
          "context_lines",
          "max_results"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "search_definition",
        "line": 103,
        "async": false,
        "calls": [
          "get",
          "search"
        ],
        "parameters": [
          "self",
          "symbol_name",
          "symbol_type",
          "file_pattern"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "search_usage",
        "line": 126,
        "async": false,
        "calls": [
          "search",
          "escape"
        ],
        "parameters": [
          "self",
          "symbol_name",
          "file_pattern"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "_find_files",
        "line": 141,
        "async": false,
        "calls": [
          "_should_ignore",
          "is_file",
          "append",
          "glob"
        ],
        "parameters": [
          "self",
          "file_pattern"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "_should_ignore",
        "line": 155,
        "async": false,
        "calls": [
          "match"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "_search_file",
        "line": 171,
        "async": false,
        "calls": [
          "SearchResult",
          "len",
          "max",
          "open",
          "append",
          "enumerate",
          "relative_to",
          "rstrip",
          "search",
          "readlines",
          "warning",
          "min",
          "str"
        ],
        "parameters": [
          "self",
          "file_path",
          "regex",
          "context_lines",
          "max_results"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "add_ignore_pattern",
        "line": 206,
        "async": false,
        "calls": [
          "add"
        ],
        "parameters": [
          "self",
          "pattern"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "remove_ignore_pattern",
        "line": 210,
        "async": false,
        "calls": [
          "discard"
        ],
        "parameters": [
          "self",
          "pattern"
        ],
        "decorators": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "__init__",
        "line": 24,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/claude_web_integration_example.py"
      },
      {
        "name": "start_proxy_server",
        "line": 28,
        "async": false,
        "calls": [
          "print",
          "Path",
          "Popen",
          "sleep"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/claude_web_integration_example.py"
      },
      {
        "name": "stop_proxy_server",
        "line": 49,
        "async": false,
        "calls": [
          "print",
          "wait",
          "terminate",
          "kill"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/claude_web_integration_example.py"
      },
      {
        "name": "interactive_mode",
        "line": 222,
        "async": false,
        "calls": [
          "input",
          "create_claude_web_llm",
          "generate",
          "print",
          "lower",
          "strip"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/claude_web_integration_example.py"
      },
      {
        "name": "analyze_video",
        "line": 20,
        "async": false,
        "calls": [
          "getenv",
          "ValueError",
          "generate_content",
          "exists",
          "configure",
          "Path",
          "sleep",
          "hasattr",
          "upload_file",
          "FileNotFoundError",
          "print",
          "get_file",
          "GenerativeModel"
        ],
        "parameters": [
          "video_path",
          "query"
        ],
        "decorators": [],
        "file": "examples/video_analysis_demo.py"
      },
      {
        "name": "demo_bug_report",
        "line": 99,
        "async": false,
        "calls": [
          "len",
          "analyze_video"
        ],
        "parameters": [],
        "decorators": [],
        "file": "examples/video_analysis_demo.py"
      },
      {
        "name": "demo_code_walkthrough",
        "line": 120,
        "async": false,
        "calls": [
          "len",
          "analyze_video"
        ],
        "parameters": [],
        "decorators": [],
        "file": "examples/video_analysis_demo.py"
      },
      {
        "name": "demo_meeting_summary",
        "line": 140,
        "async": false,
        "calls": [
          "len",
          "analyze_video"
        ],
        "parameters": [],
        "decorators": [],
        "file": "examples/video_analysis_demo.py"
      },
      {
        "name": "__init__",
        "line": 24,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/multi_agent_claude_web_demo.py"
      },
      {
        "name": "start_claude_web_server",
        "line": 29,
        "async": false,
        "calls": [
          "print",
          "Path",
          "Popen",
          "sleep"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/multi_agent_claude_web_demo.py"
      },
      {
        "name": "stop_claude_web_server",
        "line": 50,
        "async": false,
        "calls": [
          "print",
          "wait",
          "terminate",
          "kill"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "examples/multi_agent_claude_web_demo.py"
      },
      {
        "name": "get_version_from_file",
        "line": 14,
        "async": false,
        "calls": [
          "exists",
          "Path",
          "open",
          "cwd",
          "split",
          "startswith",
          "strip"
        ],
        "parameters": [],
        "decorators": [],
        "file": "scripts/create_version_info.py"
      },
      {
        "name": "create_version_info",
        "line": 34,
        "async": false,
        "calls": [
          "exists",
          "load",
          "now",
          "Path",
          "open",
          "dump",
          "print",
          "isoformat",
          "get",
          "get_version_from_file"
        ],
        "parameters": [
          "install_dir",
          "is_update"
        ],
        "decorators": [],
        "file": "scripts/create_version_info.py"
      },
      {
        "name": "main",
        "line": 73,
        "async": false,
        "calls": [
          "add_argument",
          "exists",
          "print_exc",
          "ArgumentParser",
          "exit",
          "Path",
          "parse_args",
          "print",
          "create_version_info"
        ],
        "parameters": [],
        "decorators": [],
        "file": "scripts/create_version_info.py"
      },
      {
        "name": "main",
        "line": 303,
        "async": false,
        "calls": [
          "add_argument",
          "update_preserve",
          "exists",
          "glob",
          "ArgumentParser",
          "exit",
          "print_exc",
          "Path",
          "update_overwrite",
          "parse_args",
          "copy",
          "print",
          "update_backup",
          "InstructionsUpdater",
          "update_interactive"
        ],
        "parameters": [],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "__init__",
        "line": 20,
        "async": false,
        "calls": [
          "Path",
          "mkdir"
        ],
        "parameters": [
          "self",
          "source_dir",
          "target_dir"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "get_file_hash",
        "line": 29,
        "async": false,
        "calls": [
          "open",
          "read",
          "hexdigest",
          "md5"
        ],
        "parameters": [
          "self",
          "filepath"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "find_changes",
        "line": 34,
        "async": false,
        "calls": [
          "get_file_hash",
          "exists",
          "glob"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "show_diff",
        "line": 64,
        "async": false,
        "calls": [
          "unified_diff",
          "readlines",
          "join",
          "open"
        ],
        "parameters": [
          "self",
          "filename",
          "context_lines"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "show_summary_diff",
        "line": 86,
        "async": false,
        "calls": [
          "sum",
          "open",
          "unified_diff",
          "list",
          "readlines",
          "startswith"
        ],
        "parameters": [
          "self",
          "filename"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "update_interactive",
        "line": 104,
        "async": false,
        "calls": [
          "_save_as_new",
          "items",
          "show_summary_diff",
          "_backup_and_update",
          "show_diff",
          "input",
          "copy",
          "print",
          "lower",
          "len",
          "find_changes"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "_backup_and_update",
        "line": 197,
        "async": false,
        "calls": [
          "now",
          "exists",
          "mkdir",
          "strftime",
          "copy"
        ],
        "parameters": [
          "self",
          "filename"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "_save_as_new",
        "line": 210,
        "async": false,
        "calls": [
          "copy"
        ],
        "parameters": [
          "self",
          "filename"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "update_overwrite",
        "line": 216,
        "async": false,
        "calls": [
          "now",
          "glob",
          "mkdir",
          "strftime",
          "copy",
          "print"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "update_preserve",
        "line": 231,
        "async": false,
        "calls": [
          "items",
          "copy",
          "print",
          "len",
          "find_changes"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "update_backup",
        "line": 247,
        "async": false,
        "calls": [
          "sorted",
          "items",
          "show_summary_diff",
          "now",
          "glob",
          "mkdir",
          "open",
          "write",
          "strftime",
          "_get_version",
          "copy",
          "print",
          "len",
          "capitalize",
          "find_changes"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "_get_version",
        "line": 284,
        "async": false,
        "calls": [
          "exists",
          "Path",
          "open",
          "split",
          "startswith",
          "strip"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "_init_fallback_responses",
          "_init_query_patterns"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_init_fallback_responses",
        "line": 39,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_init_query_patterns",
        "line": 119,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "analyze_query",
        "line": 148,
        "async": false,
        "calls": [
          "QueryAnalysis",
          "split",
          "any",
          "get",
          "lower",
          "len"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "get_intelligent_response",
        "line": 219,
        "async": false,
        "calls": [
          "lower",
          "any",
          "analyze_query"
        ],
        "parameters": [
          "self",
          "query",
          "context"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "create_intelligent_execution_plan",
        "line": 256,
        "async": false,
        "calls": [
          "analyze_query",
          "ExecutionStep",
          "get_intelligent_response"
        ],
        "parameters": [
          "self",
          "query",
          "fallback_agent"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "enhance_orchestrator_step",
        "line": 344,
        "async": false,
        "calls": [
          "info",
          "len",
          "get_intelligent_response"
        ],
        "parameters": [
          "self",
          "step",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "integrate_with_classification",
        "line": 359,
        "async": false,
        "calls": [
          "get",
          "_get_development_guidance"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "_get_development_guidance",
        "line": 389,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "__init__",
        "line": 24,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "check_docker_installed",
        "line": 28,
        "async": false,
        "calls": [
          "run"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "check_redis_running",
        "line": 41,
        "async": false,
        "calls": [
          "Redis",
          "ping"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "start_redis_container",
        "line": 51,
        "async": false,
        "calls": [
          "check_redis_running",
          "check_docker_installed",
          "sleep",
          "info",
          "run",
          "append",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "fill_caches",
        "line": 131,
        "async": false,
        "calls": [
          "start_redis_container",
          "join",
          "set",
          "extend",
          "append"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "__init__",
        "line": 33,
        "async": false,
        "calls": [
          "getLogger"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "analyze_context",
        "line": 36,
        "async": false,
        "calls": [
          "sum",
          "lower",
          "bool",
          "DevelopmentContext",
          "any",
          "search"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_performance_query",
        "line": 77,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_bug_query",
        "line": 116,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_refactoring_query",
        "line": 162,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_testing_query",
        "line": 204,
        "async": false,
        "calls": [
          "analyze_context"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_implementation_query",
        "line": 253,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_technology_query",
        "line": 311,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_database_query",
        "line": 355,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_ai_integration_query",
        "line": 417,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_error_diagnosis_query",
        "line": 470,
        "async": false,
        "calls": [
          "lower",
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_scope_clarification",
        "line": 546,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "get_handler_for_type",
        "line": 604,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "handle_development_query",
        "line": 622,
        "async": false,
        "calls": [
          "handler",
          "get_handler_for_type"
        ],
        "parameters": [
          "self",
          "query",
          "dev_type",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "suggest_next_steps",
        "line": 647,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "query_type"
        ],
        "decorators": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "summary",
        "line": 57,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 71,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "classify_query",
        "line": 161,
        "async": false,
        "calls": [
          "md5",
          "_has_context_reference",
          "_check_pattern",
          "_calculate_safety",
          "_calculate_confidence",
          "_calculate_coherence",
          "_prepare_responses",
          "encode",
          "_is_nonsense",
          "DetailedClassification",
          "_check_development_patterns",
          "_determine_action",
          "lower",
          "_is_greeting",
          "hexdigest",
          "strip"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_greeting",
        "line": 208,
        "async": false,
        "calls": [
          "lower",
          "startswith",
          "split"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_nonsense",
        "line": 228,
        "async": false,
        "calls": [
          "set",
          "split",
          "search",
          "len",
          "match"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_has_context_reference",
        "line": 249,
        "async": false,
        "calls": [
          "startswith"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_pattern",
        "line": 259,
        "async": false,
        "calls": [
          "any"
        ],
        "parameters": [
          "self",
          "query",
          "patterns"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_development_patterns",
        "line": 263,
        "async": false,
        "calls": [
          "len",
          "_check_pattern",
          "_has_context_reference",
          "split"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_coherence",
        "line": 319,
        "async": false,
        "calls": [
          "max",
          "set",
          "split",
          "len",
          "min",
          "match"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_confidence",
        "line": 342,
        "async": false,
        "calls": [
          "max",
          "min"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_calculate_safety",
        "line": 364,
        "async": false,
        "calls": [
          "max",
          "get",
          "min"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_determine_action",
        "line": 386,
        "async": false,
        "calls": [
          "_get_dev_agent"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_get_dev_agent",
        "line": 436,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "dev_type"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_prepare_responses",
        "line": 450,
        "async": false,
        "calls": [
          "split"
        ],
        "parameters": [
          "self",
          "classification"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 527,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "is_safe",
        "line": 530,
        "async": false,
        "calls": [
          "warning",
          "_detect_loop_pattern",
          "get",
          "_check_resource_exhaustion",
          "_is_duplicate"
        ],
        "parameters": [
          "self",
          "classification",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_is_duplicate",
        "line": 562,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "query_hash"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_detect_loop_pattern",
        "line": 568,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "_check_resource_exhaustion",
        "line": 577,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "record_execution",
        "line": 589,
        "async": false,
        "calls": [
          "len",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "query_hash"
        ],
        "decorators": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "__init__",
        "line": 57,
        "async": false,
        "calls": [
          "_initialize_patterns",
          "deque"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_initialize_patterns",
        "line": 61,
        "async": false,
        "calls": [
          "KnownAntiPattern"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "detect_patterns",
        "line": 138,
        "async": false,
        "calls": [
          "_get_detection_reason",
          "_check_pattern",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_pattern",
        "line": 154,
        "async": false,
        "calls": [
          "get",
          "len",
          "_has_circular_dependencies"
        ],
        "parameters": [
          "self",
          "pattern",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_has_circular_dependencies",
        "line": 205,
        "async": false,
        "calls": [
          "remove",
          "next",
          "set",
          "has_cycle_from",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_get_detection_reason",
        "line": 231,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "pattern",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 254,
        "async": false,
        "calls": [
          "_define_invariants"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_define_invariants",
        "line": 258,
        "async": false,
        "calls": [
          "_check_unique_ids",
          "_check_dependencies_exist",
          "_check_valid_transitions",
          "any",
          "get",
          "len",
          "_check_agent_capabilities"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "check_all",
        "line": 328,
        "async": false,
        "calls": [
          "error",
          "append",
          "len",
          "now"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_valid_transitions",
        "line": 347,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_unique_ids",
        "line": 366,
        "async": false,
        "calls": [
          "get",
          "len",
          "set"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_dependencies_exist",
        "line": 372,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_check_agent_capabilities",
        "line": 383,
        "async": false,
        "calls": [
          "_suggest_better_agent",
          "any",
          "get",
          "lower",
          "warning"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_suggest_better_agent",
        "line": 422,
        "async": false,
        "calls": [
          "sum",
          "items"
        ],
        "parameters": [
          "self",
          "current_agent",
          "task",
          "agent_capabilities"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 454,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "known_patterns",
          "invariants"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_calculate_dependency_depth",
        "line": 715,
        "async": false,
        "calls": [
          "max",
          "get_depth",
          "get"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_find_parallelizable_steps",
        "line": 729,
        "async": false,
        "calls": [
          "set",
          "_has_dependency_conflict",
          "append",
          "len",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_has_dependency_conflict",
        "line": 752,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "step1",
          "step2",
          "all_steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_is_in_cycle",
        "line": 757,
        "async": false,
        "calls": [
          "has_cycle",
          "remove",
          "next",
          "set",
          "add"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 791,
        "async": false,
        "calls": [
          "_initialize_patterns",
          "deque"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_initialize_patterns",
        "line": 796,
        "async": false,
        "calls": [
          "_detect_timeout_cluster",
          "_detect_stuck_progress",
          "_detect_collaboration_spiral",
          "_detect_routing_loop",
          "_detect_resource_spike"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "analyze_patterns",
        "line": 826,
        "async": false,
        "calls": [
          "items",
          "_detect_statistical_anomalies",
          "get",
          "append",
          "len",
          "min",
          "extend"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_routing_loop",
        "line": 867,
        "async": false,
        "calls": [
          "get",
          "len",
          "all"
        ],
        "parameters": [
          "self",
          "history"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_collaboration_spiral",
        "line": 876,
        "async": false,
        "calls": [
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "history"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_stuck_progress",
        "line": 889,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_resource_spike",
        "line": 894,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "metrics"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_timeout_cluster",
        "line": 899,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "events"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "_detect_statistical_anomalies",
        "line": 904,
        "async": false,
        "calls": [
          "sum",
          "max",
          "get",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 946,
        "async": false,
        "calls": [
          "deque"
        ],
        "parameters": [
          "self",
          "invariants",
          "validator",
          "pattern_engine"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 1140,
        "async": false,
        "calls": [
          "KnownAntiPatternsDatabase",
          "WorkflowInvariants",
          "PatternRecognitionEngine",
          "info",
          "PreExecutionValidator",
          "SelfTestFramework"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "get_diagnosis_report",
        "line": 1211,
        "async": false,
        "calls": [
          "len",
          "list"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "has_cycle_from",
        "line": 208,
        "async": false,
        "calls": [
          "next",
          "has_cycle_from",
          "remove",
          "add"
        ],
        "parameters": [
          "step_id",
          "visited",
          "path"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "get_depth",
        "line": 717,
        "async": false,
        "calls": [
          "get",
          "get_depth",
          "max"
        ],
        "parameters": [
          "step_id",
          "steps_dict"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "has_cycle",
        "line": 762,
        "async": false,
        "calls": [
          "next",
          "has_cycle",
          "remove",
          "add"
        ],
        "parameters": [
          "s_id"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "__init__",
        "line": 148,
        "async": false,
        "calls": [
          "get_tool_registry",
          "_init_real_agents",
          "ApprovalManager",
          "IntelligentQueryHandler",
          "info",
          "error",
          "DynamicWorkflowManager",
          "WorkflowSelfDiagnosisSystem",
          "SafeOrchestratorExecutor",
          "DevelopmentQueryHandler",
          "EnhancedQueryClassifier",
          "_init_agent_memories"
        ],
        "parameters": [
          "self",
          "websocket_manager",
          "db_path",
          "memory_db_path"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_init_agent_memories",
        "line": 226,
        "async": false,
        "calls": [
          "PersistentAgentMemory"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_init_real_agents",
        "line": 247,
        "async": false,
        "calls": [
          "FixerBotAgent",
          "DocuBotAgent",
          "exception",
          "ResearchAgent",
          "PerformanceBot",
          "ReviewerGPTAgent",
          "info",
          "error",
          "OpusArbitratorAgent",
          "CodeSmithAgent",
          "TradeStratAgent",
          "ArchitectAgent",
          "len",
          "warning",
          "OrchestratorAgent"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "create_task_ledger",
        "line": 339,
        "async": false,
        "calls": [
          "TaskLedger",
          "get",
          "extract_success_criteria",
          "now"
        ],
        "parameters": [
          "self",
          "task",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "extract_success_criteria",
        "line": 373,
        "async": false,
        "calls": [
          "lower",
          "append",
          "any"
        ],
        "parameters": [
          "self",
          "task"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "create_progress_ledger",
        "line": 397,
        "async": false,
        "calls": [
          "len",
          "ProgressLedger",
          "update_from_steps"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "identify_parallel_groups",
        "line": 460,
        "async": false,
        "calls": [
          "set",
          "_has_dependency_conflict",
          "append",
          "len",
          "add"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_has_dependency_conflict",
        "line": 502,
        "async": false,
        "calls": [
          "_get_all_dependencies"
        ],
        "parameters": [
          "self",
          "step1",
          "step2",
          "all_steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_get_all_dependencies",
        "line": 520,
        "async": false,
        "calls": [
          "next",
          "set",
          "pop",
          "list",
          "append",
          "add"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_dependencies_met",
        "line": 1889,
        "async": false,
        "calls": [
          "next"
        ],
        "parameters": [
          "self",
          "step",
          "all_steps"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_get_current_step",
        "line": 1897,
        "async": false,
        "calls": [
          "get",
          "next"
        ],
        "parameters": [
          "self",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_get_step_by_agent",
        "line": 1904,
        "async": false,
        "calls": [
          "reversed"
        ],
        "parameters": [
          "self",
          "state",
          "agent"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_check_escalation_needed",
        "line": 1911,
        "async": false,
        "calls": [
          "dirname",
          "join",
          "chr",
          "insert",
          "enumerate",
          "error",
          "info",
          "any",
          "get",
          "len",
          "getattr"
        ],
        "parameters": [
          "self",
          "state",
          "suggested_agent",
          "suggested_query"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_calculate_agent_confidence",
        "line": 2364,
        "async": false,
        "calls": [
          "get",
          "items",
          "debug"
        ],
        "parameters": [
          "self",
          "task_lower"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_create_single_agent_step",
        "line": 2419,
        "async": false,
        "calls": [
          "ExecutionStep",
          "info",
          "enhance_orchestrator_step",
          "get_intelligent_response",
          "get",
          "len"
        ],
        "parameters": [
          "self",
          "agent",
          "task"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_detect_task_complexity",
        "line": 2467,
        "async": false,
        "calls": [
          "endswith",
          "split",
          "info",
          "any",
          "count",
          "lower",
          "len",
          "strip"
        ],
        "parameters": [
          "self",
          "task"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_apply_plan_modifications",
        "line": 2704,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "plan",
          "modifications"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "_format_proposal_for_user",
        "line": 2916,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "proposal"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "create_workflow",
        "line": 3330,
        "async": false,
        "calls": [
          "add_conditional_edges",
          "add_node",
          "StateGraph",
          "set_entry_point",
          "add_edge"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "create_initial_state",
        "line": 245,
        "async": false,
        "calls": [
          "uuid4",
          "getcwd",
          "now",
          "ExtendedAgentState",
          "str"
        ],
        "parameters": [
          "session_id",
          "client_id",
          "workspace_path",
          "plan_first_mode",
          "debug_mode"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 70,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "is_timeout",
        "line": 77,
        "async": false,
        "calls": [
          "total_seconds",
          "now"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "can_retry",
        "line": 84,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "get_retry_delay",
        "line": 88,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 109,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "__post_init__",
        "line": 132,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "update_from_steps",
        "line": 139,
        "async": false,
        "calls": [
          "sum",
          "len"
        ],
        "parameters": [
          "self",
          "steps"
        ],
        "decorators": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "add_attempt",
        "line": 41,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "attempt"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "__init__",
        "line": 68,
        "async": false,
        "calls": [
          "ExecutionHistory",
          "ExecutionGuard",
          "getLogger",
          "DevelopmentQueryHandler",
          "EnhancedQueryClassifier"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_generate_query_hash",
        "line": 75,
        "async": false,
        "calls": [
          "encode",
          "hexdigest",
          "md5",
          "lower",
          "strip"
        ],
        "parameters": [
          "self",
          "query"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_detect_loop_pattern",
        "line": 80,
        "async": false,
        "calls": [
          "len",
          "warning",
          "min",
          "range"
        ],
        "parameters": [
          "self",
          "recent_hashes"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "_get_safe_fallback_response",
        "line": 102,
        "async": false,
        "calls": [
          "handle_development_query"
        ],
        "parameters": [
          "self",
          "query",
          "classification"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "get_execution_stats",
        "line": 314,
        "async": false,
        "calls": [
          "sorted",
          "sum",
          "items",
          "split",
          "get",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "should_use_safe_execution",
        "line": 351,
        "async": false,
        "calls": [
          "isinstance",
          "set",
          "hasattr",
          "dict",
          "any",
          "get",
          "append",
          "len",
          "classify_query"
        ],
        "parameters": [
          "self",
          "query",
          "state"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "reset_history",
        "line": 399,
        "async": false,
        "calls": [
          "ExecutionHistory",
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "__init__",
        "line": 48,
        "async": false,
        "calls": [
          "_extract_base_structure"
        ],
        "parameters": [
          "self",
          "base_graph"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "_extract_base_structure",
        "line": 75,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_node",
        "line": 81,
        "async": false,
        "calls": [
          "info",
          "DynamicNode",
          "warning"
        ],
        "parameters": [
          "self",
          "name",
          "func",
          "node_type",
          "description",
          "metadata"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "remove_node",
        "line": 118,
        "async": false,
        "calls": [
          "info",
          "warning"
        ],
        "parameters": [
          "self",
          "name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_edge",
        "line": 149,
        "async": false,
        "calls": [
          "error",
          "info",
          "append",
          "DynamicEdge"
        ],
        "parameters": [
          "self",
          "source",
          "target",
          "condition",
          "metadata"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "add_conditional_routing",
        "line": 188,
        "async": false,
        "calls": [
          "info",
          "append",
          "ConditionalRoute"
        ],
        "parameters": [
          "self",
          "source",
          "condition",
          "routes",
          "metadata"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "compile_graph",
        "line": 218,
        "async": false,
        "calls": [
          "add_conditional_edges",
          "items",
          "add_node",
          "StateGraph",
          "add_edge",
          "info",
          "len",
          "append",
          "compile"
        ],
        "parameters": [
          "self",
          "state_class"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "create_template",
        "line": 272,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "name",
          "nodes",
          "edges",
          "routes",
          "description"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "apply_template",
        "line": 303,
        "async": false,
        "calls": [
          "items",
          "add_node",
          "add_conditional_routing",
          "add_edge",
          "error",
          "info"
        ],
        "parameters": [
          "self",
          "template_name",
          "node_prefix",
          "parameter_mapping"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "rollback",
        "line": 361,
        "async": false,
        "calls": [
          "max",
          "error",
          "info",
          "len",
          "warning"
        ],
        "parameters": [
          "self",
          "version"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "get_graph_info",
        "line": 387,
        "async": false,
        "calls": [
          "keys",
          "len",
          "list"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "visualize_graph",
        "line": 402,
        "async": false,
        "calls": [
          "join",
          "append",
          "items",
          "ValueError"
        ],
        "parameters": [
          "self",
          "format"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "__init__",
        "line": 36,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "websocket_manager",
          "timeout_seconds"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "_format_plan_for_ui",
        "line": 155,
        "async": false,
        "calls": [
          "asdict",
          "isinstance",
          "vars",
          "_format_step",
          "hasattr",
          "str"
        ],
        "parameters": [
          "self",
          "plan"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "_format_step",
        "line": 176,
        "async": false,
        "calls": [
          "asdict",
          "vars",
          "hasattr",
          "get",
          "str"
        ],
        "parameters": [
          "self",
          "step"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_approval_status",
        "line": 218,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "approval_id"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_approval_history",
        "line": 224,
        "async": false,
        "calls": [
          "sort"
        ],
        "parameters": [
          "self",
          "client_id",
          "limit"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "cleanup_expired",
        "line": 253,
        "async": false,
        "calls": [
          "items",
          "now",
          "cancel",
          "info",
          "done",
          "len",
          "append"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "get_pending_approvals",
        "line": 276,
        "async": false,
        "calls": [
          "values"
        ],
        "parameters": [
          "self",
          "client_id"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "tool",
        "line": 18,
        "async": false,
        "calls": [],
        "parameters": [
          "name",
          "description",
          "tags"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_tool_registry",
        "line": 313,
        "async": false,
        "calls": [],
        "parameters": [],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "decorator",
        "line": 27,
        "async": false,
        "calls": [],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "__init__",
        "line": 41,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "auto_discover_tools",
        "line": 47,
        "async": false,
        "calls": [
          "_create_tool_from_decorated",
          "getmembers",
          "_create_tool_from_prefix",
          "hasattr",
          "info",
          "register_tool",
          "append",
          "startswith"
        ],
        "parameters": [
          "self",
          "agent_instance"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_create_tool_from_decorated",
        "line": 76,
        "async": false,
        "calls": [
          "_extract_parameters",
          "ToolDefinition",
          "getattr"
        ],
        "parameters": [
          "self",
          "method",
          "agent_name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_create_tool_from_prefix",
        "line": 87,
        "async": false,
        "calls": [
          "_extract_parameters",
          "ToolDefinition",
          "replace"
        ],
        "parameters": [
          "self",
          "method",
          "agent_name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_extract_parameters",
        "line": 99,
        "async": false,
        "calls": [
          "items",
          "signature",
          "get_type_hints",
          "_python_type_to_json_type"
        ],
        "parameters": [
          "self",
          "method"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "_python_type_to_json_type",
        "line": 132,
        "async": false,
        "calls": [
          "hasattr",
          "get"
        ],
        "parameters": [
          "self",
          "python_type"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "register_tool",
        "line": 153,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "tool",
          "shared"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "discover_tools_for_agent",
        "line": 173,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "agent_name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_tool_schema",
        "line": 232,
        "async": false,
        "calls": [
          "get",
          "items"
        ],
        "parameters": [
          "self",
          "tool_name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "list_all_tools",
        "line": 253,
        "async": false,
        "calls": [
          "keys",
          "get_tool_schema"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "get_usage_stats",
        "line": 260,
        "async": false,
        "calls": [
          "get"
        ],
        "parameters": [
          "self",
          "tool_name"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "export_tools",
        "line": 266,
        "async": false,
        "calls": [
          "ValueError",
          "values",
          "asdict",
          "dump",
          "dumps"
        ],
        "parameters": [
          "self",
          "format"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "import_tools",
        "line": 283,
        "async": false,
        "calls": [
          "ValueError",
          "loads",
          "ToolDefinition",
          "clear",
          "get",
          "safe_load"
        ],
        "parameters": [
          "self",
          "data",
          "format"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "__init__",
        "line": 35,
        "async": false,
        "calls": [
          "_init_vector_store",
          "warning",
          "OpenAIEmbeddings",
          "_init_sqlite"
        ],
        "parameters": [
          "self",
          "agent_name",
          "db_path",
          "vector_store_path",
          "embedding_model"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_init_sqlite",
        "line": 71,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_init_vector_store",
        "line": 136,
        "async": false,
        "calls": [
          "exists",
          "Path",
          "info",
          "error",
          "load_local",
          "_create_new_vector_store",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_create_new_vector_store",
        "line": 158,
        "async": false,
        "calls": [
          "now",
          "error",
          "info",
          "from_texts",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "store_memory",
        "line": 175,
        "async": false,
        "calls": [
          "execute",
          "now",
          "commit",
          "pop",
          "_save_vector_store",
          "close",
          "cursor",
          "dumps",
          "error",
          "connect",
          "len",
          "append",
          "add_texts",
          "str"
        ],
        "parameters": [
          "self",
          "content",
          "memory_type",
          "importance",
          "metadata",
          "session_id"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "recall_similar",
        "line": 240,
        "async": false,
        "calls": [
          "execute",
          "get",
          "loads",
          "now",
          "fromisoformat",
          "_update_access_counts",
          "join",
          "fetchall",
          "close",
          "cursor",
          "error",
          "similarity_search_with_score",
          "connect",
          "extend",
          "append",
          "len",
          "MemoryEntry",
          "str"
        ],
        "parameters": [
          "self",
          "query",
          "k",
          "memory_types",
          "min_importance"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "learn_pattern",
        "line": 367,
        "async": false,
        "calls": [
          "execute",
          "md5",
          "fetchone",
          "commit",
          "close",
          "cursor",
          "encode",
          "dumps",
          "connect",
          "hexdigest"
        ],
        "parameters": [
          "self",
          "pattern",
          "solution",
          "success",
          "metadata"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_learned_solution",
        "line": 426,
        "async": false,
        "calls": [
          "execute",
          "md5",
          "fetchone",
          "close",
          "cursor",
          "info",
          "encode",
          "connect",
          "hexdigest"
        ],
        "parameters": [
          "self",
          "pattern",
          "min_success_rate"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "record_agent_interaction",
        "line": 454,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self",
          "to_agent",
          "interaction_type",
          "content",
          "result",
          "session_id"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_interaction_history",
        "line": 475,
        "async": false,
        "calls": [
          "execute",
          "fetchall",
          "close",
          "cursor",
          "connect",
          "append"
        ],
        "parameters": [
          "self",
          "with_agent",
          "limit"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_update_access_counts",
        "line": 516,
        "async": false,
        "calls": [
          "execute",
          "commit",
          "close",
          "cursor",
          "connect"
        ],
        "parameters": [
          "self",
          "memory_ids"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "_save_vector_store",
        "line": 536,
        "async": false,
        "calls": [
          "mkdir",
          "Path",
          "error",
          "save_local",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "consolidate_memories",
        "line": 545,
        "async": false,
        "calls": [
          "execute",
          "now",
          "timedelta",
          "commit",
          "close",
          "cursor",
          "info",
          "connect"
        ],
        "parameters": [
          "self",
          "max_age_days"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "get_memory_stats",
        "line": 567,
        "async": false,
        "calls": [
          "execute",
          "fetchone",
          "fetchall",
          "close",
          "cursor",
          "connect",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "main",
        "line": 793,
        "async": false,
        "calls": [
          "socket",
          "warning",
          "range",
          "exit",
          "graceful_shutdown",
          "sleep",
          "check_server_running",
          "info",
          "run",
          "close",
          "error",
          "post",
          "connect_ex"
        ],
        "parameters": [],
        "decorators": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "__init__",
        "line": 78,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "disconnect",
        "line": 91,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "client_id"
        ],
        "decorators": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "check_server_running",
        "line": 800,
        "async": false,
        "calls": [
          "close",
          "socket",
          "connect_ex"
        ],
        "parameters": [
          "port"
        ],
        "decorators": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "graceful_shutdown",
        "line": 807,
        "async": false,
        "calls": [
          "info",
          "sleep",
          "post"
        ],
        "parameters": [
          "port"
        ],
        "decorators": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "load_models_from_config",
        "line": 19,
        "async": false,
        "calls": [
          "items",
          "dirname",
          "join",
          "open",
          "error",
          "get",
          "lower",
          "append",
          "safe_load"
        ],
        "parameters": [],
        "decorators": [],
        "file": "api/models_endpoint.py"
      },
      {
        "name": "load_models_from_available_json",
        "line": 83,
        "async": false,
        "calls": [
          "dirname",
          "load",
          "join",
          "open",
          "warning"
        ],
        "parameters": [],
        "decorators": [],
        "file": "api/models_endpoint.py"
      },
      {
        "name": "get_model_recommendations",
        "line": 102,
        "async": false,
        "calls": [
          "sorted",
          "lower",
          "replace"
        ],
        "parameters": [
          "provider",
          "models"
        ],
        "decorators": [],
        "file": "api/models_endpoint.py"
      },
      {
        "name": "get_latest_models",
        "line": 143,
        "async": false,
        "calls": [
          "sorted",
          "lower"
        ],
        "parameters": [
          "models",
          "limit"
        ],
        "decorators": [],
        "file": "api/models_endpoint.py"
      },
      {
        "name": "__init__",
        "line": 38,
        "async": false,
        "calls": [
          "info",
          "Path",
          "mkdir"
        ],
        "parameters": [
          "self",
          "output_dir"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_flowchart",
        "line": 51,
        "async": false,
        "calls": [
          "_generate_mermaid_flowchart",
          "warning",
          "_generate_ascii_flowchart"
        ],
        "parameters": [
          "self",
          "nodes",
          "format"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_dependency_graph",
        "line": 71,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "import_graph"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_state_diagram",
        "line": 77,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self",
          "states"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_sequence_diagram",
        "line": 83,
        "async": false,
        "calls": [
          "warning",
          "_generate_mermaid_sequence"
        ],
        "parameters": [
          "self",
          "interactions",
          "format"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_class_diagram",
        "line": 101,
        "async": false,
        "calls": [
          "warning",
          "_generate_mermaid_class"
        ],
        "parameters": [
          "self",
          "classes",
          "format"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "generate_architecture_diagram",
        "line": 119,
        "async": false,
        "calls": [
          "_generate_mermaid_architecture",
          "warning"
        ],
        "parameters": [
          "self",
          "components",
          "format"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_flowchart",
        "line": 137,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "nodes"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_sequence",
        "line": 163,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "interactions"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_class",
        "line": 180,
        "async": false,
        "calls": [
          "get",
          "join",
          "append"
        ],
        "parameters": [
          "self",
          "classes"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "_generate_mermaid_architecture",
        "line": 213,
        "async": false,
        "calls": [
          "isinstance",
          "join",
          "replace",
          "get",
          "append",
          "warning"
        ],
        "parameters": [
          "self",
          "components"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "_generate_ascii_flowchart",
        "line": 260,
        "async": false,
        "calls": [
          "join",
          "enumerate",
          "get",
          "append",
          "len"
        ],
        "parameters": [
          "self",
          "nodes"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "save_diagram",
        "line": 286,
        "async": false,
        "calls": [
          "open",
          "info",
          "error",
          "write",
          "warning"
        ],
        "parameters": [
          "self",
          "diagram",
          "filename"
        ],
        "decorators": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "__init__",
        "line": 22,
        "async": false,
        "calls": [
          "timedelta",
          "Path",
          "mkdir",
          "error",
          "info"
        ],
        "parameters": [
          "self",
          "project_root",
          "cache_duration_hours"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "_get_cache_key",
        "line": 43,
        "async": false,
        "calls": [
          "encode",
          "hexdigest",
          "md5"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "_get_cache_path",
        "line": 49,
        "async": false,
        "calls": [
          "_get_cache_key"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "get",
        "line": 53,
        "async": false,
        "calls": [
          "debug",
          "unlink",
          "exists",
          "load",
          "fromisoformat",
          "open",
          "now",
          "_get_cache_path",
          "warning"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "set",
        "line": 86,
        "async": false,
        "calls": [
          "debug",
          "now",
          "open",
          "dump",
          "_get_cache_path",
          "isoformat",
          "warning"
        ],
        "parameters": [
          "self",
          "key",
          "value"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "invalidate",
        "line": 111,
        "async": false,
        "calls": [
          "debug",
          "_get_cache_path",
          "exists",
          "unlink"
        ],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "clear_all",
        "line": 124,
        "async": false,
        "calls": [
          "info",
          "unlink",
          "glob"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "get_stats",
        "line": 130,
        "async": false,
        "calls": [
          "sum",
          "glob",
          "stat",
          "round",
          "list",
          "len",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [
          "Path",
          "info"
        ],
        "parameters": [
          "self",
          "project_root",
          "cache",
          "debounce_seconds"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "watch_file",
        "line": 38,
        "async": false,
        "calls": [
          "debug",
          "exists",
          "stat",
          "set",
          "warning",
          "_resolve_path",
          "add"
        ],
        "parameters": [
          "self",
          "file_path",
          "callback"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "watch_directory",
        "line": 64,
        "async": false,
        "calls": [
          "glob",
          "is_dir",
          "info",
          "is_file",
          "warning",
          "watch_file",
          "_resolve_path",
          "str"
        ],
        "parameters": [
          "self",
          "dir_path",
          "pattern",
          "callback"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "check_changes",
        "line": 86,
        "async": false,
        "calls": [
          "items",
          "callback",
          "exists",
          "stat",
          "fromtimestamp",
          "info",
          "error",
          "list",
          "warning",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "stop_watching",
        "line": 120,
        "async": false,
        "calls": [
          "debug",
          "_resolve_path"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "stop_all",
        "line": 137,
        "async": false,
        "calls": [
          "info",
          "clear"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "get_watched_files",
        "line": 144,
        "async": false,
        "calls": [
          "keys",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "_resolve_path",
        "line": 148,
        "async": false,
        "calls": [
          "Path",
          "is_absolute",
          "resolve"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "start",
        "line": 155,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "stop",
        "line": 164,
        "async": false,
        "calls": [
          "info"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "start_monitoring",
        "line": 169,
        "async": false,
        "calls": [
          "info",
          "sleep",
          "check_changes"
        ],
        "parameters": [
          "self",
          "interval_seconds"
        ],
        "decorators": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "file_path",
          "line_number",
          "line_content",
          "context_before",
          "context_after"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "to_dict",
        "line": 25,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "__init__",
        "line": 42,
        "async": false,
        "calls": [
          "Path",
          "info"
        ],
        "parameters": [
          "self",
          "project_root"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "search",
        "line": 57,
        "async": false,
        "calls": [
          "error",
          "info",
          "_find_files",
          "extend",
          "len",
          "warning",
          "compile",
          "_search_file"
        ],
        "parameters": [
          "self",
          "pattern",
          "file_pattern",
          "case_sensitive",
          "context_lines",
          "max_results"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "search_definition",
        "line": 99,
        "async": false,
        "calls": [
          "get",
          "search"
        ],
        "parameters": [
          "self",
          "symbol_name",
          "symbol_type",
          "file_pattern"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "search_usage",
        "line": 122,
        "async": false,
        "calls": [
          "search",
          "escape"
        ],
        "parameters": [
          "self",
          "symbol_name",
          "file_pattern"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "_find_files",
        "line": 137,
        "async": false,
        "calls": [
          "_should_ignore",
          "is_file",
          "append",
          "glob"
        ],
        "parameters": [
          "self",
          "file_pattern"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "_should_ignore",
        "line": 151,
        "async": false,
        "calls": [
          "match"
        ],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "_search_file",
        "line": 167,
        "async": false,
        "calls": [
          "SearchResult",
          "len",
          "max",
          "open",
          "append",
          "enumerate",
          "relative_to",
          "rstrip",
          "search",
          "readlines",
          "warning",
          "min",
          "str"
        ],
        "parameters": [
          "self",
          "file_path",
          "regex",
          "context_lines",
          "max_results"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "add_ignore_pattern",
        "line": 202,
        "async": false,
        "calls": [
          "add"
        ],
        "parameters": [
          "self",
          "pattern"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "remove_ignore_pattern",
        "line": 206,
        "async": false,
        "calls": [
          "discard"
        ],
        "parameters": [
          "self",
          "pattern"
        ],
        "decorators": [],
        "file": "services/code_search.py"
      },
      {
        "name": "__init__",
        "line": 21,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_websocket_workflow.py"
      },
      {
        "name": "__post_init__",
        "line": 69,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_self_diagnosis_simple.py"
      },
      {
        "name": "__init__",
        "line": 13,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_chat_approval.py"
      },
      {
        "name": "print_summary",
        "line": 117,
        "async": false,
        "calls": [
          "print",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_chat_approval.py"
      },
      {
        "name": "simulate_query_classification",
        "line": 45,
        "async": false,
        "calls": [],
        "parameters": [
          "query"
        ],
        "decorators": [],
        "file": "agent_projects/test_complex_workflow_simulation.py"
      },
      {
        "name": "simulate_execution_plan",
        "line": 60,
        "async": false,
        "calls": [],
        "parameters": [
          "query"
        ],
        "decorators": [],
        "file": "agent_projects/test_complex_workflow_simulation.py"
      },
      {
        "name": "simulate_workflow_execution",
        "line": 137,
        "async": false,
        "calls": [
          "simulate_query_classification",
          "join",
          "set",
          "enumerate",
          "simulate_execution_plan",
          "upper",
          "print",
          "len",
          "all",
          "append"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_complex_workflow_simulation.py"
      },
      {
        "name": "evaluate_complexity",
        "line": 235,
        "async": false,
        "calls": [
          "print",
          "isinstance",
          "items",
          "join"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_complex_workflow_simulation.py"
      },
      {
        "name": "main",
        "line": 277,
        "async": false,
        "calls": [
          "print",
          "evaluate_complexity",
          "simulate_workflow_execution",
          "len"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_complex_workflow_simulation.py"
      },
      {
        "name": "log",
        "line": 13,
        "async": false,
        "calls": [
          "print",
          "strftime",
          "now"
        ],
        "parameters": [
          "msg",
          "emoji"
        ],
        "decorators": [],
        "file": "agent_projects/test_simple_workflow.py"
      },
      {
        "name": "test_development_task_detection",
        "line": 28,
        "async": false,
        "calls": [
          "enumerate",
          "info",
          "len",
          "_create_execution_steps"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_orchestrator_steps.py"
      },
      {
        "name": "__init__",
        "line": 17,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "record_agent",
        "line": 28,
        "async": false,
        "calls": [
          "print",
          "isoformat",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "agent_name",
          "timestamp"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "record_output",
        "line": 38,
        "async": false,
        "calls": [],
        "parameters": [
          "self",
          "agent_name",
          "output"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "record_quality_score",
        "line": 42,
        "async": false,
        "calls": [
          "print",
          "isoformat",
          "append",
          "now"
        ],
        "parameters": [
          "self",
          "score",
          "agent"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "record_message",
        "line": 51,
        "async": false,
        "calls": [
          "append"
        ],
        "parameters": [
          "self",
          "msg"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "generate_report",
        "line": 55,
        "async": false,
        "calls": [
          "items",
          "total_seconds",
          "isinstance",
          "enumerate",
          "dumps",
          "upper",
          "len",
          "str"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "print_test",
        "line": 30,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "name",
          "status",
          "message"
        ],
        "decorators": [],
        "file": "agent_projects/test_system.py"
      },
      {
        "name": "print_section",
        "line": 36,
        "async": false,
        "calls": [
          "print"
        ],
        "parameters": [
          "title"
        ],
        "decorators": [],
        "file": "agent_projects/test_system.py"
      },
      {
        "name": "__init__",
        "line": 206,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_system.py"
      },
      {
        "name": "test_routing_replan_check",
        "line": 8,
        "async": false,
        "calls": [
          "print",
          "open",
          "read"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_routing_in_progress_check",
        "line": 27,
        "async": false,
        "calls": [
          "print",
          "open",
          "read"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_orchestrator_replan_logic",
        "line": 46,
        "async": false,
        "calls": [
          "print",
          "open",
          "all",
          "read"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_reviewer_collaboration",
        "line": 69,
        "async": false,
        "calls": [
          "print",
          "open",
          "all",
          "read"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_conditional_edges",
        "line": 90,
        "async": false,
        "calls": [
          "print",
          "open",
          "read"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_settings_sync_code",
        "line": 108,
        "async": false,
        "calls": [
          "read",
          "exists",
          "open",
          "print",
          "all"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "test_instruction_files",
        "line": 134,
        "async": false,
        "calls": [
          "exists",
          "join",
          "print",
          "append",
          "all"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "main",
        "line": 158,
        "async": false,
        "calls": [
          "sum",
          "zip",
          "print",
          "append",
          "len",
          "test"
        ],
        "parameters": [],
        "decorators": [],
        "file": "agent_projects/test_code_verification.py"
      },
      {
        "name": "__init__",
        "line": 13,
        "async": false,
        "calls": [
          "set"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_dashboard_generation.py"
      },
      {
        "name": "print_summary",
        "line": 114,
        "async": false,
        "calls": [
          "sorted",
          "get",
          "issubset",
          "print",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_dashboard_generation.py"
      },
      {
        "name": "simple_classify",
        "line": 72,
        "async": false,
        "calls": [
          "sum",
          "split",
          "any",
          "lower",
          "len"
        ],
        "parameters": [
          "query"
        ],
        "decorators": [],
        "file": "agent_projects/test_query_classifier_simple.py"
      },
      {
        "name": "__init__",
        "line": 13,
        "async": false,
        "calls": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_complete.py"
      },
      {
        "name": "log",
        "line": 30,
        "async": false,
        "calls": [
          "print",
          "strftime",
          "now"
        ],
        "parameters": [
          "self",
          "message",
          "emoji"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_complete.py"
      },
      {
        "name": "print_summary",
        "line": 146,
        "async": false,
        "calls": [
          "sorted",
          "get",
          "items",
          "print",
          "len"
        ],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "file": "agent_projects/test_tetris_complete.py"
      }
    ],
    "all_classes": [
      {
        "name": "KIAutoAgentCLI",
        "line": 30,
        "methods": [
          "__init__",
          "_show_welcome",
          "_display_results",
          "_show_help",
          "_show_agents",
          "_show_history",
          "_load_history",
          "_save_history"
        ],
        "bases": [],
        "file": "cli.py"
      },
      {
        "name": "WebSocketTestClient",
        "line": 32,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "test_websocket_debug.py"
      },
      {
        "name": "Colors",
        "line": 29,
        "methods": [],
        "bases": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "TestAgent",
        "line": 67,
        "methods": [],
        "bases": [],
        "file": "test_langgraph_system.py"
      },
      {
        "name": "EnhancedTaskRequest",
        "line": 9,
        "methods": [
          "to_file_task"
        ],
        "bases": [],
        "file": "fixes/task_request_enhancement.py"
      },
      {
        "name": "ClaudeBrowser",
        "line": 15,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "claude_web_proxy/claude_browser.py"
      },
      {
        "name": "ChatRequest",
        "line": 26,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "ChatResponse",
        "line": 31,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "StatusResponse",
        "line": 37,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "SetupRequest",
        "line": 43,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "claude_web_proxy/fastapi_server.py"
      },
      {
        "name": "ClaudeWebLLM",
        "line": 29,
        "methods": [
          "__init__",
          "generate",
          "stream_generate",
          "get_model_info",
          "__del__",
          "run_in_thread"
        ],
        "bases": [
          "BaseLLM"
        ],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "BaseLLM",
        "line": 18,
        "methods": [
          "__init__",
          "generate"
        ],
        "bases": [],
        "file": "claude_web_proxy/crewai_integration.py"
      },
      {
        "name": "ClaudeWebProxyTester",
        "line": 28,
        "methods": [
          "__init__",
          "install_playwright_browsers",
          "start_server",
          "stop_server",
          "generate_setup_report"
        ],
        "bases": [],
        "file": "claude_web_proxy/setup_and_test.py"
      },
      {
        "name": "MemoryType",
        "line": 13,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "core/memory_manager.py"
      },
      {
        "name": "MemoryManager",
        "line": 20,
        "methods": [
          "__init__",
          "store",
          "retrieve",
          "clear",
          "store_code_pattern",
          "store_learning",
          "get_relevant_learnings",
          "learning_entries"
        ],
        "bases": [],
        "file": "core/memory_manager.py"
      },
      {
        "name": "PauseAction",
        "line": 13,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "core/pause_handler.py"
      },
      {
        "name": "PauseHandler",
        "line": 20,
        "methods": [
          "__init__",
          "pause",
          "resume",
          "is_paused"
        ],
        "bases": [],
        "file": "core/pause_handler.py"
      },
      {
        "name": "CacheManager",
        "line": 24,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "core/cache_manager.py"
      },
      {
        "name": "SharedContextManager",
        "line": 12,
        "methods": [
          "__init__",
          "set",
          "get",
          "update",
          "clear",
          "get_all"
        ],
        "bases": [],
        "file": "core/shared_context_manager.py"
      },
      {
        "name": "ConversationContextManager",
        "line": 12,
        "methods": [
          "__init__",
          "add_message",
          "get_conversation",
          "clear_conversation"
        ],
        "bases": [],
        "file": "core/conversation_context_manager.py"
      },
      {
        "name": "GitCheckpointManager",
        "line": 12,
        "methods": [
          "__init__",
          "create_checkpoint",
          "list_checkpoints",
          "rollback_to"
        ],
        "bases": [],
        "file": "core/git_checkpoint_manager.py"
      },
      {
        "name": "DependencyError",
        "line": 6,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "core/exceptions.py"
      },
      {
        "name": "CacheNotAvailableError",
        "line": 33,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "core/exceptions.py"
      },
      {
        "name": "SystemNotReadyError",
        "line": 58,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "core/exceptions.py"
      },
      {
        "name": "SemgrepAnalyzer",
        "line": 12,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "core/analysis/semgrep_analyzer.py"
      },
      {
        "name": "VultureAnalyzer",
        "line": 12,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "core/analysis/vulture_analyzer.py"
      },
      {
        "name": "RadonMetrics",
        "line": 12,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "core/analysis/radon_metrics.py"
      },
      {
        "name": "LayerAnalyzer",
        "line": 15,
        "methods": [
          "__init__",
          "_classify_files_into_layers",
          "_detect_file_layer",
          "_build_layer_structure",
          "_detect_layer_violations",
          "_resolve_import_to_file",
          "_check_layer_violation",
          "_calculate_quality_score",
          "_calculate_metrics",
          "_empty_layer_analysis"
        ],
        "bases": [],
        "file": "core/analysis/layer_analyzer.py"
      },
      {
        "name": "CallGraphAnalyzer",
        "line": 14,
        "methods": [
          "__init__",
          "_build_function_registry",
          "_build_call_relationships",
          "_resolve_function_id",
          "_detect_entry_points",
          "_find_unused_functions",
          "_detect_hot_paths",
          "_bfs_paths",
          "_build_nodes",
          "_build_edges",
          "_analyze_clusters",
          "_calculate_metrics",
          "_calculate_call_depth",
          "_empty_call_graph"
        ],
        "bases": [],
        "file": "core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "TreeSitterIndexer",
        "line": 14,
        "methods": [
          "__init__",
          "_extract_function_calls",
          "_get_call_name",
          "_get_name",
          "_get_attribute_path",
          "_get_decorator_name",
          "_extract_import"
        ],
        "bases": [],
        "file": "core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "CodeIndexer",
        "line": 16,
        "methods": [
          "__init__",
          "_find_python_files",
          "_count_total_lines"
        ],
        "bases": [],
        "file": "core/indexing/code_indexer.py"
      },
      {
        "name": "CapabilitiesLoader",
        "line": 14,
        "methods": [
          "__init__",
          "_load_capabilities",
          "get_agent_capabilities",
          "apply_to_config",
          "can_agent_write",
          "get_all_capabilities"
        ],
        "bases": [],
        "file": "config/capabilities_loader.py"
      },
      {
        "name": "Settings",
        "line": 9,
        "methods": [
          "get_language_directive",
          "get_timeout",
          "update_from_vscode",
          "_auto_detect_provider",
          "to_dict"
        ],
        "bases": [],
        "file": "config/settings.py"
      },
      {
        "name": "OpusArbitrator",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_arbitration_prompt",
          "_extract_decision_components",
          "is_conflict_resolvable",
          "get_conflict_complexity"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
      },
      {
        "name": "DocuBot",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_documentation_prompt",
          "_structure_documentation"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
      },
      {
        "name": "BaseAgent",
        "line": 9,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_prompt",
          "_extract_code",
          "_validate_code",
          "get_stats",
          "reset_stats",
          "__repr__"
        ],
        "bases": [
          "ABC"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
      },
      {
        "name": "ResearchBot",
        "line": 11,
        "methods": [
          "__init__",
          "get_capabilities",
          "_mock_research_for_testing",
          "_create_research_plan",
          "_build_research_prompt",
          "_synthesize_findings",
          "_generate_recommendations"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
      },
      {
        "name": "ReviewerGPT",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_code_review_prompt",
          "_build_previous_analysis_prompt",
          "_build_final_review_prompt",
          "_build_review_prompt",
          "_categorize_issues",
          "_generate_recommendations",
          "_calculate_quality_score"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
      },
      {
        "name": "ArchitectGPT",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_architecture_prompt",
          "_extract_artifacts"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
      },
      {
        "name": "TradeStrat",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_validation_prompt",
          "_build_improvement_prompt",
          "_analyze_requirements",
          "_build_strategy_prompt",
          "_create_backtest_framework",
          "_generate_performance_metrics"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
      },
      {
        "name": "FixerBot",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_analyze_problem",
          "_build_fix_prompt",
          "_validate_fixes",
          "_create_fix_summary"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
      },
      {
        "name": "CodeSmithClaude",
        "line": 8,
        "methods": [
          "__init__",
          "get_capabilities",
          "_build_analysis_prompt",
          "_build_coding_prompt",
          "_build_implementation_prompt",
          "_organize_code"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
      },
      {
        "name": "KIAutoAgentClaudeWebIntegration",
        "line": 23,
        "methods": [
          "__init__",
          "start_claude_web_server",
          "stop_claude_web_server"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
      },
      {
        "name": "ExecutionEngine",
        "line": 10,
        "methods": [
          "__init__",
          "_group_steps_for_execution",
          "_compile_final_output",
          "get_current_status",
          "get_execution_history"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
      },
      {
        "name": "IterationReason",
        "line": 11,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "IterationSummary",
        "line": 21,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "IterationController",
        "line": 31,
        "methods": [
          "__init__",
          "record_iteration",
          "_generate_iteration_summary",
          "_identify_problem_areas",
          "_generate_recommendation",
          "_generate_user_options",
          "_get_primary_recommendation"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "UserInteractionHandler",
        "line": 264,
        "methods": [
          "__init__",
          "_display_iteration_analysis",
          "_format_common_issues",
          "_format_agent_performance",
          "_format_problematic_areas",
          "_format_iteration_timeline"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "IterationDecisionExecutor",
        "line": 417,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "IterationManager",
        "line": 525,
        "methods": [
          "__init__",
          "get_iteration_statistics"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
      },
      {
        "name": "IntentType",
        "line": 9,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "Intent",
        "line": 23,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "IntentClassifier",
        "line": 31,
        "methods": [
          "__init__",
          "_calculate_intent_score",
          "_calculate_enhanced_intent_score",
          "_extract_entities",
          "_assess_complexity",
          "get_intent_description"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
      },
      {
        "name": "UserRequest",
        "line": 20,
        "methods": [
          "__post_init__"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "MasterDispatcher",
        "line": 30,
        "methods": [
          "__init__",
          "_detect_project_type",
          "_initialize_agents",
          "_get_agent_capabilities",
          "_optimize_workflow",
          "_get_quality_gates_for_context",
          "_format_response"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
      },
      {
        "name": "SharedContext",
        "line": 12,
        "methods": [
          "__post_init__",
          "get_context_for_agent",
          "get_agent_instruction_summary",
          "add_agent_output",
          "get_iteration_summary",
          "start_new_iteration",
          "get_relevant_outputs"
        ],
        "bases": [
          "ABC"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "ProjectContextFactory",
        "line": 77,
        "methods": [
          "create_project_context",
          "get_available_project_types",
          "create_shared_context"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "GenericProjectContext",
        "line": 162,
        "methods": [
          "__init__",
          "get_domain_instructions",
          "get_quality_gates",
          "get_project_specifics"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "ContextFactory",
        "line": 209,
        "methods": [
          "create_context"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "GenericSharedContext",
        "line": 224,
        "methods": [
          "get_context_for_agent",
          "get_agent_instruction_summary"
        ],
        "bases": [
          "SharedContext"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "SharedContextManager",
        "line": 252,
        "methods": [
          "__init__",
          "update_context",
          "should_continue_iteration",
          "prepare_agent_context",
          "get_context_statistics"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "ProjectSharedContext",
        "line": 316,
        "methods": [
          "get_context_for_agent",
          "get_agent_instruction_summary"
        ],
        "bases": [
          "SharedContext"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
      },
      {
        "name": "LearningSystem",
        "line": 11,
        "methods": [
          "__init__",
          "suggest_workflow",
          "get_intent_statistics",
          "_load_history",
          "_load_patterns",
          "_load_metrics",
          "_save_all",
          "_calculate_metrics",
          "_was_successful",
          "_record_success_pattern",
          "_update_performance_metrics",
          "_find_similar_executions",
          "_extract_agents_used",
          "_calculate_agent_rating"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
      },
      {
        "name": "WorkflowStep",
        "line": 10,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "WorkflowGenerator",
        "line": 23,
        "methods": [
          "__init__",
          "_load_templates",
          "_select_template",
          "_customize_workflow",
          "_optimize_parallel_execution",
          "_validate_agents",
          "_estimate_total_time",
          "get_workflow_summary"
        ],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
      },
      {
        "name": "EngineParityQualityGate",
        "line": 12,
        "methods": [
          "__init__",
          "get_default_thresholds",
          "_analyze_unified_engine",
          "_analyze_future_leak_prevention",
          "_analyze_iterative_processing",
          "_analyze_engine_chart_decoupling"
        ],
        "bases": [
          "BaseQualityGate"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
      },
      {
        "name": "SecurityQualityGate",
        "line": 12,
        "methods": [
          "__init__",
          "get_default_thresholds"
        ],
        "bases": [
          "BaseQualityGate"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
      },
      {
        "name": "QualityLevel",
        "line": 16,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "QualityCheck",
        "line": 26,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "QualityGateResult",
        "line": 40,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "BaseQualityGate",
        "line": 55,
        "methods": [
          "__init__",
          "get_default_thresholds",
          "create_quality_check",
          "calculate_overall_score",
          "determine_pass_status",
          "generate_summary",
          "generate_recommendations",
          "find_pattern_matches",
          "check_imports",
          "check_function_complexity"
        ],
        "bases": [
          "ABC"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
      },
      {
        "name": "RONStrategyQualityGate",
        "line": 12,
        "methods": [
          "__init__",
          "get_default_thresholds",
          "_analyze_vwap_fibonacci_condition",
          "_analyze_ema9_logic",
          "_analyze_new_high_logic",
          "_analyze_crv_requirement",
          "_analyze_space_to_382",
          "_analyze_ron_trading_hours"
        ],
        "bases": [
          "BaseQualityGate"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
      },
      {
        "name": "TradingSystemQualityGate",
        "line": 12,
        "methods": [
          "__init__",
          "get_default_thresholds",
          "_check_decimal_precision",
          "_check_pnl_calculations",
          "_check_crv_calculations",
          "_check_position_validation",
          "_check_stop_loss_logic",
          "_check_exposure_limits",
          "_check_market_hours",
          "_check_audit_trail",
          "_check_type_annotations",
          "_check_exception_patterns",
          "_check_graceful_degradation",
          "_check_docstring_coverage",
          "_check_fallback_policy",
          "_check_live_data_policy"
        ],
        "bases": [
          "BaseQualityGate"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
      },
      {
        "name": "GenericSoftwareWorkflow",
        "line": 16,
        "methods": [
          "__init__",
          "get_workflow_steps",
          "get_step_agents",
          "get_step_instructions",
          "validate_step_completion",
          "get_workflow_description",
          "get_success_criteria"
        ],
        "bases": [
          "BaseWorkflow"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
      },
      {
        "name": "TradingSystemWorkflow",
        "line": 15,
        "methods": [
          "__init__",
          "get_workflow_steps",
          "get_step_agents",
          "get_step_instructions",
          "validate_step_completion",
          "get_workflow_description",
          "get_success_criteria"
        ],
        "bases": [
          "BaseWorkflow"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
      },
      {
        "name": "BaseWorkflow",
        "line": 13,
        "methods": [
          "__init__",
          "get_workflow_steps",
          "get_step_agents",
          "get_step_instructions",
          "validate_step_completion",
          "get_workflow_description",
          "get_success_criteria",
          "get_workflow_info",
          "log_execution",
          "get_next_step",
          "get_step_position",
          "is_workflow_complete",
          "get_workflow_progress",
          "get_execution_statistics"
        ],
        "bases": [
          "ABC"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
      },
      {
        "name": "TradingProjectContext",
        "line": 177,
        "methods": [
          "__init__",
          "get_domain_instructions",
          "get_quality_gates",
          "get_project_specifics",
          "get_agent_enhancement_instructions",
          "get_iteration_limits"
        ],
        "bases": [
          "BaseProjectContext"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
      },
      {
        "name": "WebAppProjectContext",
        "line": 100,
        "methods": [
          "__init__",
          "get_domain_instructions",
          "get_quality_gates",
          "get_project_specifics",
          "get_agent_enhancement_instructions",
          "get_iteration_limits"
        ],
        "bases": [
          "BaseProjectContext"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
      },
      {
        "name": "ProjectSpecification",
        "line": 14,
        "methods": [],
        "bases": [],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "BaseProjectContext",
        "line": 25,
        "methods": [
          "__init__",
          "get_domain_instructions",
          "get_quality_gates",
          "get_project_specifics",
          "get_agent_enhancement_instructions",
          "get_iteration_limits",
          "get_conflict_resolution_priorities",
          "validate_context"
        ],
        "bases": [
          "ABC"
        ],
        "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
      },
      {
        "name": "TestAgent",
        "line": 43,
        "methods": [],
        "bases": [],
        "file": "tests/test_cache_manager.py"
      },
      {
        "name": "TestAgentFileCapabilities",
        "line": 25,
        "methods": [
          "setup_method",
          "teardown_method"
        ],
        "bases": [],
        "file": "tests/test_agent_file_capabilities.py"
      },
      {
        "name": "IntegrationTestSuite",
        "line": 17,
        "methods": [
          "__init__",
          "record_result",
          "print_summary"
        ],
        "bases": [],
        "file": "tests/test_integration.py"
      },
      {
        "name": "AgentType",
        "line": 24,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "RegisteredAgent",
        "line": 39,
        "methods": [],
        "bases": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "AgentRegistry",
        "line": 48,
        "methods": [
          "__new__",
          "__init__",
          "get_agent",
          "get_available_agents",
          "find_agent_by_capability",
          "get_agents_by_capability",
          "get_status"
        ],
        "bases": [],
        "file": "agents/agent_registry.py"
      },
      {
        "name": "FileOperation",
        "line": 18,
        "methods": [],
        "bases": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "FileSystemTools",
        "line": 29,
        "methods": [
          "__init__",
          "_validate_path",
          "_create_backup",
          "_log_operation",
          "get_audit_log"
        ],
        "bases": [],
        "file": "agents/tools/file_tools.py"
      },
      {
        "name": "BrowserTester",
        "line": 22,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "agents/tools/browser_tester.py"
      },
      {
        "name": "FixerBotAgent",
        "line": 20,
        "methods": [
          "__init__",
          "_match_pattern"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "ReviewerGPTAgent",
        "line": 27,
        "methods": [
          "__init__",
          "check_asimov_violations",
          "_calculate_html_app_quality_score",
          "_get_recommendation",
          "_format_metrics"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "TradeStratAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/tradestrat_agent.py"
      },
      {
        "name": "DocuBotAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/docubot_agent.py"
      },
      {
        "name": "ArchitectureDesign",
        "line": 94,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "ArchitectAgent",
        "line": 106,
        "methods": [
          "__init__",
          "_parse_architecture_response",
          "_extract_features",
          "_load_architecture_patterns",
          "__del__",
          "_load_tech_stacks",
          "_generate_redis_config",
          "_generate_docker_compose",
          "_detect_request_type"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/architect_agent.py"
      },
      {
        "name": "CodeImplementation",
        "line": 69,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "CodeSmithAgent",
        "line": 79,
        "methods": [
          "__init__",
          "format_implementation",
          "_detect_language",
          "_extract_functionality",
          "_assess_complexity",
          "_generate_filename",
          "_extract_dependencies",
          "_get_test_framework",
          "_load_code_patterns",
          "_load_language_configs",
          "_generate_fix_suggestion",
          "_check_for_hallucination",
          "_validate_workspace_context",
          "_enforce_asimov_rule_1",
          "_extract_file_path",
          "_generate_file_path",
          "_extract_feature_name"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/codesmith_agent.py"
      },
      {
        "name": "FixerGPTAgent",
        "line": 20,
        "methods": [
          "__init__",
          "_create_fresh_perspective_prompt",
          "_format_previous_attempts",
          "_format_research_results"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "PerformanceProfile",
        "line": 29,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "PerformanceBot",
        "line": 38,
        "methods": [
          "__init__",
          "_extract_bottlenecks",
          "_parse_profile_stats",
          "_format_profile_results",
          "_format_package_analysis"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/performance_bot.py"
      },
      {
        "name": "ResearchAgent",
        "line": 24,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/research_agent.py"
      },
      {
        "name": "SubTask",
        "line": 23,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "TaskDecomposition",
        "line": 36,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "OrchestratorAgentV2",
        "line": 45,
        "methods": [
          "__init__",
          "set_planning_mode"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "OpusArbitratorAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/opus_arbitrator_agent.py"
      },
      {
        "name": "SubTask",
        "line": 21,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "TaskDependency",
        "line": 34,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "TaskDecomposition",
        "line": 42,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "WorkflowStep",
        "line": 53,
        "methods": [],
        "bases": [],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "OrchestratorAgent",
        "line": 64,
        "methods": [
          "__init__",
          "_calculate_critical_path_duration",
          "_get_chain_duration",
          "_group_by_dependency_level",
          "_dependencies_met",
          "format_orchestration_result"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "AgentCapability",
        "line": 64,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "AgentConfig",
        "line": 80,
        "methods": [],
        "bases": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "TaskRequest",
        "line": 94,
        "methods": [],
        "bases": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "TaskResult",
        "line": 107,
        "methods": [],
        "bases": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "AgentMessage",
        "line": 119,
        "methods": [],
        "bases": [],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "BaseAgent",
        "line": 128,
        "methods": [
          "__init__",
          "_load_instructions",
          "_get_language_directive",
          "get_system_prompt",
          "calculate_dynamic_timeout",
          "_compile_research_summary",
          "set_websocket_callback",
          "get_status",
          "__repr__"
        ],
        "bases": [
          "ABC"
        ],
        "file": "agents/base/base_agent.py"
      },
      {
        "name": "Directive",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "PrimeDirectives",
        "line": 22,
        "methods": [
          "validate_request",
          "_check_violations",
          "check_research_requirements",
          "format_challenge_response",
          "get_directive_prompt",
          "check_global_error_search"
        ],
        "bases": [],
        "file": "agents/base/prime_directives.py"
      },
      {
        "name": "StreamMessage",
        "line": 18,
        "methods": [
          "__post_init__",
          "to_dict"
        ],
        "bases": [],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "ChatAgent",
        "line": 41,
        "methods": [
          "__init__",
          "format_response",
          "get_chat_status"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "agents/base/chat_agent.py"
      },
      {
        "name": "PerplexityService",
        "line": 15,
        "methods": [
          "__init__",
          "test_connection"
        ],
        "bases": [],
        "file": "utils/perplexity_service.py"
      },
      {
        "name": "ClaudeCodeConfig",
        "line": 18,
        "methods": [],
        "bases": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "ClaudeCodeService",
        "line": 25,
        "methods": [
          "__init__",
          "_check_cli_availability",
          "_parse_json_response",
          "is_available"
        ],
        "bases": [],
        "file": "utils/claude_code_service.py"
      },
      {
        "name": "OpenAIConfig",
        "line": 20,
        "methods": [],
        "bases": [],
        "file": "utils/openai_service.py"
      },
      {
        "name": "OpenAIService",
        "line": 28,
        "methods": [
          "__init__",
          "is_available"
        ],
        "bases": [],
        "file": "utils/openai_service.py"
      },
      {
        "name": "AnthropicConfig",
        "line": 20,
        "methods": [],
        "bases": [],
        "file": "utils/anthropic_service.py"
      },
      {
        "name": "AnthropicService",
        "line": 28,
        "methods": [
          "__init__",
          "_format_outputs",
          "is_available"
        ],
        "bases": [],
        "file": "utils/anthropic_service.py"
      },
      {
        "name": "WebSocketTestClient",
        "line": 32,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/test_websocket_debug.py"
      },
      {
        "name": "Colors",
        "line": 29,
        "methods": [],
        "bases": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "TestAgent",
        "line": 67,
        "methods": [],
        "bases": [],
        "file": "backend/test_langgraph_system.py"
      },
      {
        "name": "EnhancedTaskRequest",
        "line": 9,
        "methods": [
          "to_file_task"
        ],
        "bases": [],
        "file": "backend/fixes/task_request_enhancement.py"
      },
      {
        "name": "MemoryType",
        "line": 13,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "MemoryManager",
        "line": 20,
        "methods": [
          "__init__",
          "store",
          "retrieve",
          "clear",
          "store_code_pattern",
          "store_learning",
          "get_relevant_learnings",
          "learning_entries"
        ],
        "bases": [],
        "file": "backend/core/memory_manager.py"
      },
      {
        "name": "PauseAction",
        "line": 13,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "PauseHandler",
        "line": 20,
        "methods": [
          "__init__",
          "pause",
          "resume",
          "is_paused"
        ],
        "bases": [],
        "file": "backend/core/pause_handler.py"
      },
      {
        "name": "CacheManager",
        "line": 24,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/core/cache_manager.py"
      },
      {
        "name": "SharedContextManager",
        "line": 12,
        "methods": [
          "__init__",
          "set",
          "get",
          "update",
          "clear",
          "get_all"
        ],
        "bases": [],
        "file": "backend/core/shared_context_manager.py"
      },
      {
        "name": "ConversationContextManager",
        "line": 12,
        "methods": [
          "__init__",
          "add_message",
          "get_conversation",
          "clear_conversation"
        ],
        "bases": [],
        "file": "backend/core/conversation_context_manager.py"
      },
      {
        "name": "GitCheckpointManager",
        "line": 12,
        "methods": [
          "__init__",
          "create_checkpoint",
          "list_checkpoints",
          "rollback_to"
        ],
        "bases": [],
        "file": "backend/core/git_checkpoint_manager.py"
      },
      {
        "name": "DependencyError",
        "line": 6,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "CacheNotAvailableError",
        "line": 33,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "SystemNotReadyError",
        "line": 58,
        "methods": [
          "__init__"
        ],
        "bases": [
          "Exception"
        ],
        "file": "backend/core/exceptions.py"
      },
      {
        "name": "SemgrepAnalyzer",
        "line": 16,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/core/analysis/semgrep_analyzer.py"
      },
      {
        "name": "VultureAnalyzer",
        "line": 20,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/core/analysis/vulture_analyzer.py"
      },
      {
        "name": "RadonMetrics",
        "line": 22,
        "methods": [
          "__init__",
          "_complexity_rank",
          "_calculate_quality_score"
        ],
        "bases": [],
        "file": "backend/core/analysis/radon_metrics.py"
      },
      {
        "name": "LayerAnalyzer",
        "line": 15,
        "methods": [
          "__init__",
          "_classify_files_into_layers",
          "_detect_file_layer",
          "_build_layer_structure",
          "_detect_layer_violations",
          "_resolve_import_to_file",
          "_check_layer_violation",
          "_calculate_quality_score",
          "_calculate_metrics",
          "_empty_layer_analysis"
        ],
        "bases": [],
        "file": "backend/core/analysis/layer_analyzer.py"
      },
      {
        "name": "CallGraphAnalyzer",
        "line": 14,
        "methods": [
          "__init__",
          "_build_function_registry",
          "_build_call_relationships",
          "_resolve_function_id",
          "_detect_entry_points",
          "_find_unused_functions",
          "_detect_hot_paths",
          "_bfs_paths",
          "_build_nodes",
          "_build_edges",
          "_analyze_clusters",
          "_calculate_metrics",
          "_calculate_call_depth",
          "_empty_call_graph"
        ],
        "bases": [],
        "file": "backend/core/analysis/call_graph_analyzer.py"
      },
      {
        "name": "TreeSitterIndexer",
        "line": 14,
        "methods": [
          "__init__",
          "_extract_function_calls",
          "_get_call_name",
          "_get_name",
          "_get_attribute_path",
          "_get_decorator_name",
          "_extract_import"
        ],
        "bases": [],
        "file": "backend/core/indexing/tree_sitter_indexer.py"
      },
      {
        "name": "CodeIndexer",
        "line": 16,
        "methods": [
          "__init__",
          "_find_python_files",
          "_count_total_lines"
        ],
        "bases": [],
        "file": "backend/core/indexing/code_indexer.py"
      },
      {
        "name": "CapabilitiesLoader",
        "line": 14,
        "methods": [
          "__init__",
          "_load_capabilities",
          "get_agent_capabilities",
          "apply_to_config",
          "can_agent_write",
          "get_all_capabilities"
        ],
        "bases": [],
        "file": "backend/config/capabilities_loader.py"
      },
      {
        "name": "Settings",
        "line": 9,
        "methods": [
          "get_language_directive",
          "get_timeout",
          "update_from_vscode",
          "_auto_detect_provider",
          "to_dict"
        ],
        "bases": [],
        "file": "backend/config/settings.py"
      },
      {
        "name": "TestAgent",
        "line": 43,
        "methods": [],
        "bases": [],
        "file": "backend/tests/test_cache_manager.py"
      },
      {
        "name": "TestAgentFileCapabilities",
        "line": 25,
        "methods": [
          "setup_method",
          "teardown_method"
        ],
        "bases": [],
        "file": "backend/tests/test_agent_file_capabilities.py"
      },
      {
        "name": "IntegrationTestSuite",
        "line": 17,
        "methods": [
          "__init__",
          "record_result",
          "print_summary"
        ],
        "bases": [],
        "file": "backend/tests/test_integration.py"
      },
      {
        "name": "AgentType",
        "line": 24,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "RegisteredAgent",
        "line": 39,
        "methods": [],
        "bases": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "AgentRegistry",
        "line": 48,
        "methods": [
          "__new__",
          "__init__",
          "get_agent",
          "get_available_agents",
          "find_agent_by_capability",
          "get_agents_by_capability",
          "get_status"
        ],
        "bases": [],
        "file": "backend/agents/agent_registry.py"
      },
      {
        "name": "FileOperation",
        "line": 18,
        "methods": [],
        "bases": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "FileSystemTools",
        "line": 29,
        "methods": [
          "__init__",
          "_validate_path",
          "_create_backup",
          "_log_operation",
          "get_audit_log"
        ],
        "bases": [],
        "file": "backend/agents/tools/file_tools.py"
      },
      {
        "name": "BrowserTester",
        "line": 22,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/agents/tools/browser_tester.py"
      },
      {
        "name": "VideoAgent",
        "line": 43,
        "methods": [
          "__init__",
          "_format_analysis_result",
          "_detect_language"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/video_agent.py"
      },
      {
        "name": "FixerBotAgent",
        "line": 20,
        "methods": [
          "__init__",
          "_match_pattern"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/fixerbot_agent.py"
      },
      {
        "name": "ReviewerGPTAgent",
        "line": 27,
        "methods": [
          "__init__",
          "check_asimov_violations",
          "_calculate_html_app_quality_score",
          "_get_recommendation",
          "_format_metrics"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/reviewer_gpt_agent.py"
      },
      {
        "name": "TradeStratAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/tradestrat_agent.py"
      },
      {
        "name": "DocuBotAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/docubot_agent.py"
      },
      {
        "name": "ArchitectureDesign",
        "line": 94,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "ArchitectAgent",
        "line": 106,
        "methods": [
          "__init__",
          "_parse_architecture_response",
          "_extract_features",
          "_load_architecture_patterns",
          "__del__",
          "_load_tech_stacks",
          "_generate_redis_config",
          "_generate_docker_compose",
          "_detect_request_type"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/architect_agent.py"
      },
      {
        "name": "CodeImplementation",
        "line": 69,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "CodeSmithAgent",
        "line": 79,
        "methods": [
          "__init__",
          "format_implementation",
          "_detect_language",
          "_extract_functionality",
          "_assess_complexity",
          "_generate_filename",
          "_extract_dependencies",
          "_get_test_framework",
          "_load_code_patterns",
          "_load_language_configs",
          "_check_for_hallucination",
          "_enforce_asimov_rule_1",
          "_extract_file_path",
          "_generate_file_path",
          "_extract_feature_name"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/codesmith_agent.py"
      },
      {
        "name": "FixerGPTAgent",
        "line": 20,
        "methods": [
          "__init__",
          "_create_fresh_perspective_prompt",
          "_format_previous_attempts",
          "_format_research_results"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/fixer_gpt_agent.py"
      },
      {
        "name": "PerformanceProfile",
        "line": 29,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "PerformanceBot",
        "line": 38,
        "methods": [
          "__init__",
          "_extract_bottlenecks",
          "_parse_profile_stats",
          "_format_profile_results",
          "_format_package_analysis"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/performance_bot.py"
      },
      {
        "name": "ResearchAgent",
        "line": 24,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/research_agent.py"
      },
      {
        "name": "SubTask",
        "line": 23,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "TaskDecomposition",
        "line": 36,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "OrchestratorAgentV2",
        "line": 45,
        "methods": [
          "__init__",
          "set_planning_mode"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/orchestrator_agent_v2.py"
      },
      {
        "name": "OpusArbitratorAgent",
        "line": 18,
        "methods": [
          "__init__"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/opus_arbitrator_agent.py"
      },
      {
        "name": "SubTask",
        "line": 21,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "TaskDependency",
        "line": 34,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "TaskDecomposition",
        "line": 42,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "WorkflowStep",
        "line": 53,
        "methods": [],
        "bases": [],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "OrchestratorAgent",
        "line": 64,
        "methods": [
          "__init__",
          "_calculate_critical_path_duration",
          "_get_chain_duration",
          "_group_by_dependency_level",
          "_dependencies_met",
          "format_orchestration_result"
        ],
        "bases": [
          "ChatAgent"
        ],
        "file": "backend/agents/specialized/orchestrator_agent.py"
      },
      {
        "name": "AgentCapability",
        "line": 64,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "AgentConfig",
        "line": 80,
        "methods": [],
        "bases": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "TaskRequest",
        "line": 94,
        "methods": [],
        "bases": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "TaskResult",
        "line": 107,
        "methods": [],
        "bases": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "AgentMessage",
        "line": 119,
        "methods": [],
        "bases": [],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "BaseAgent",
        "line": 128,
        "methods": [
          "__init__",
          "_load_instructions",
          "_get_language_directive",
          "get_system_prompt",
          "calculate_dynamic_timeout",
          "_get_workspace_from_request",
          "_get_file_tools_for_current_workspace",
          "_compile_research_summary",
          "set_websocket_callback",
          "get_status",
          "__repr__",
          "load_from_file"
        ],
        "bases": [
          "ABC"
        ],
        "file": "backend/agents/base/base_agent.py"
      },
      {
        "name": "Directive",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "PrimeDirectives",
        "line": 22,
        "methods": [
          "validate_request",
          "_check_violations",
          "check_research_requirements",
          "format_challenge_response",
          "get_directive_prompt",
          "check_global_error_search"
        ],
        "bases": [],
        "file": "backend/agents/base/prime_directives.py"
      },
      {
        "name": "StreamMessage",
        "line": 18,
        "methods": [
          "__post_init__",
          "to_dict"
        ],
        "bases": [],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "ChatAgent",
        "line": 41,
        "methods": [
          "__init__",
          "format_response",
          "get_chat_status"
        ],
        "bases": [
          "BaseAgent"
        ],
        "file": "backend/agents/base/chat_agent.py"
      },
      {
        "name": "PerplexityService",
        "line": 15,
        "methods": [
          "__init__",
          "test_connection"
        ],
        "bases": [],
        "file": "backend/utils/perplexity_service.py"
      },
      {
        "name": "ClaudeCodeConfig",
        "line": 18,
        "methods": [],
        "bases": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "ClaudeCodeService",
        "line": 25,
        "methods": [
          "__init__",
          "_check_cli_availability",
          "_parse_json_response",
          "is_available"
        ],
        "bases": [],
        "file": "backend/utils/claude_code_service.py"
      },
      {
        "name": "OpenAIConfig",
        "line": 20,
        "methods": [],
        "bases": [],
        "file": "backend/utils/openai_service.py"
      },
      {
        "name": "OpenAIService",
        "line": 28,
        "methods": [
          "__init__",
          "is_available"
        ],
        "bases": [],
        "file": "backend/utils/openai_service.py"
      },
      {
        "name": "AnthropicConfig",
        "line": 20,
        "methods": [],
        "bases": [],
        "file": "backend/utils/anthropic_service.py"
      },
      {
        "name": "AnthropicService",
        "line": 28,
        "methods": [
          "__init__",
          "_format_outputs",
          "is_available"
        ],
        "bases": [],
        "file": "backend/utils/anthropic_service.py"
      },
      {
        "name": "QueryAnalysis",
        "line": 17,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "IntelligentQueryHandler",
        "line": 29,
        "methods": [
          "__init__",
          "_init_fallback_responses",
          "_init_query_patterns",
          "analyze_query",
          "get_intelligent_response",
          "create_intelligent_execution_plan",
          "enhance_orchestrator_step",
          "integrate_with_classification",
          "_get_development_guidance"
        ],
        "bases": [],
        "file": "backend/langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "CacheManager",
        "line": 21,
        "methods": [
          "__init__",
          "check_docker_installed",
          "check_redis_running",
          "start_redis_container",
          "fill_caches"
        ],
        "bases": [],
        "file": "backend/langgraph_system/cache_manager.py"
      },
      {
        "name": "DevelopmentContext",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "DevelopmentQueryHandler",
        "line": 27,
        "methods": [
          "__init__",
          "analyze_context",
          "handle_performance_query",
          "handle_bug_query",
          "handle_refactoring_query",
          "handle_testing_query",
          "handle_implementation_query",
          "handle_technology_query",
          "handle_database_query",
          "handle_ai_integration_query",
          "handle_error_diagnosis_query",
          "handle_scope_clarification",
          "get_handler_for_type",
          "handle_development_query",
          "suggest_next_steps"
        ],
        "bases": [],
        "file": "backend/langgraph_system/development_query_handler.py"
      },
      {
        "name": "DetailedClassification",
        "line": 18,
        "methods": [
          "summary"
        ],
        "bases": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "EnhancedQueryClassifier",
        "line": 65,
        "methods": [
          "__init__",
          "classify_query",
          "_is_greeting",
          "_is_nonsense",
          "_has_context_reference",
          "_check_pattern",
          "_check_development_patterns",
          "_calculate_coherence",
          "_calculate_confidence",
          "_calculate_safety",
          "_determine_action",
          "_get_dev_agent",
          "_prepare_responses"
        ],
        "bases": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "ExecutionGuard",
        "line": 518,
        "methods": [
          "__init__",
          "is_safe",
          "_is_duplicate",
          "_detect_loop_pattern",
          "_check_resource_exhaustion",
          "record_execution"
        ],
        "bases": [],
        "file": "backend/langgraph_system/query_classifier.py"
      },
      {
        "name": "AntiPatternType",
        "line": 26,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "KnownAntiPattern",
        "line": 41,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "KnownAntiPatternsDatabase",
        "line": 51,
        "methods": [
          "__init__",
          "_initialize_patterns",
          "detect_patterns",
          "_check_pattern",
          "_has_circular_dependencies",
          "_get_detection_reason",
          "has_cycle_from"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "WorkflowInvariants",
        "line": 248,
        "methods": [
          "__init__",
          "_define_invariants",
          "check_all",
          "_check_valid_transitions",
          "_check_unique_ids",
          "_check_dependencies_exist",
          "_check_agent_capabilities",
          "_suggest_better_agent"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "PreExecutionValidator",
        "line": 448,
        "methods": [
          "__init__",
          "_calculate_dependency_depth",
          "_find_parallelizable_steps",
          "_has_dependency_conflict",
          "_is_in_cycle",
          "get_depth",
          "has_cycle"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "PatternRecognitionEngine",
        "line": 785,
        "methods": [
          "__init__",
          "_initialize_patterns",
          "analyze_patterns",
          "_detect_routing_loop",
          "_detect_collaboration_spiral",
          "_detect_stuck_progress",
          "_detect_resource_spike",
          "_detect_timeout_cluster",
          "_detect_statistical_anomalies"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "SelfTestFramework",
        "line": 940,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "WorkflowSelfDiagnosisSystem",
        "line": 1134,
        "methods": [
          "__init__",
          "get_diagnosis_report"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "AgentWorkflow",
        "line": 167,
        "methods": [
          "__init__",
          "_init_agent_memories",
          "_init_real_agents",
          "create_task_ledger",
          "extract_success_criteria",
          "create_progress_ledger",
          "identify_parallel_groups",
          "_has_dependency_conflict",
          "_get_all_dependencies",
          "_dependencies_met",
          "_get_current_step",
          "_get_step_by_agent",
          "_check_escalation_needed",
          "_calculate_agent_confidence",
          "_create_single_agent_step",
          "_detect_task_complexity",
          "_apply_plan_modifications",
          "_format_proposal_for_user",
          "create_workflow"
        ],
        "bases": [],
        "file": "backend/langgraph_system/workflow.py"
      },
      {
        "name": "ToolDefinition",
        "line": 14,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "MemoryEntry",
        "line": 26,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "ExecutionStep",
        "line": 37,
        "methods": [
          "__post_init__",
          "is_timeout",
          "can_retry",
          "get_retry_delay"
        ],
        "bases": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "TaskLedger",
        "line": 94,
        "methods": [
          "__post_init__"
        ],
        "bases": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "ProgressLedger",
        "line": 116,
        "methods": [
          "__post_init__",
          "update_from_steps"
        ],
        "bases": [],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "ExtendedAgentState",
        "line": 151,
        "methods": [],
        "bases": [
          "TypedDict"
        ],
        "file": "backend/langgraph_system/state.py"
      },
      {
        "name": "ExecutionAttempt",
        "line": 21,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "ExecutionHistory",
        "line": 33,
        "methods": [
          "add_attempt"
        ],
        "bases": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "SafeOrchestratorExecutor",
        "line": 53,
        "methods": [
          "__init__",
          "_generate_query_hash",
          "_detect_loop_pattern",
          "_get_safe_fallback_response",
          "get_execution_stats",
          "should_use_safe_execution",
          "reset_history"
        ],
        "bases": [],
        "file": "backend/langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "DynamicNode",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "DynamicEdge",
        "line": 25,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "ConditionalRoute",
        "line": 34,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "DynamicWorkflowManager",
        "line": 42,
        "methods": [
          "__init__",
          "_extract_base_structure",
          "add_node",
          "remove_node",
          "add_edge",
          "add_conditional_routing",
          "compile_graph",
          "create_template",
          "apply_template",
          "rollback",
          "get_graph_info",
          "visualize_graph"
        ],
        "bases": [],
        "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "ApprovalRequest",
        "line": 17,
        "methods": [],
        "bases": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "ApprovalManager",
        "line": 30,
        "methods": [
          "__init__",
          "_format_plan_for_ui",
          "_format_step",
          "get_approval_status",
          "get_approval_history",
          "cleanup_expired",
          "get_pending_approvals"
        ],
        "bases": [],
        "file": "backend/langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "ToolRegistry",
        "line": 36,
        "methods": [
          "__init__",
          "auto_discover_tools",
          "_create_tool_from_decorated",
          "_create_tool_from_prefix",
          "_extract_parameters",
          "_python_type_to_json_type",
          "register_tool",
          "discover_tools_for_agent",
          "get_tool_schema",
          "list_all_tools",
          "get_usage_stats",
          "export_tools",
          "import_tools"
        ],
        "bases": [],
        "file": "backend/langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "PersistentAgentMemory",
        "line": 30,
        "methods": [
          "__init__",
          "_init_sqlite",
          "_init_vector_store",
          "_create_new_vector_store",
          "store_memory",
          "recall_similar",
          "learn_pattern",
          "get_learned_solution",
          "record_agent_interaction",
          "get_interaction_history",
          "_update_access_counts",
          "_save_vector_store",
          "consolidate_memories",
          "get_memory_stats"
        ],
        "bases": [],
        "file": "backend/langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "SettingsUpdateRequest",
        "line": 22,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "backend/api/settings_endpoint.py"
      },
      {
        "name": "ConnectionManager",
        "line": 77,
        "methods": [
          "__init__",
          "disconnect"
        ],
        "bases": [],
        "file": "backend/api/server_langgraph.py"
      },
      {
        "name": "DiagramFormat",
        "line": 14,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "DiagramType",
        "line": 22,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "DiagramService",
        "line": 32,
        "methods": [
          "__init__",
          "generate_flowchart",
          "generate_dependency_graph",
          "generate_state_diagram",
          "generate_sequence_diagram",
          "generate_class_diagram",
          "generate_architecture_diagram",
          "_generate_mermaid_flowchart",
          "_generate_mermaid_sequence",
          "_generate_mermaid_class",
          "_generate_mermaid_architecture",
          "_generate_ascii_flowchart",
          "save_diagram"
        ],
        "bases": [],
        "file": "backend/services/diagram_service.py"
      },
      {
        "name": "ProjectCache",
        "line": 16,
        "methods": [
          "__init__",
          "_get_cache_key",
          "_get_cache_path",
          "get",
          "set",
          "invalidate",
          "clear_all",
          "get_stats"
        ],
        "bases": [],
        "file": "backend/services/project_cache.py"
      },
      {
        "name": "SmartFileWatcher",
        "line": 15,
        "methods": [
          "__init__",
          "watch_file",
          "watch_directory",
          "check_changes",
          "stop_watching",
          "stop_all",
          "get_watched_files",
          "_resolve_path",
          "start",
          "stop",
          "start_monitoring"
        ],
        "bases": [],
        "file": "backend/services/smart_file_watcher.py"
      },
      {
        "name": "GeminiVideoService",
        "line": 22,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "backend/services/gemini_video_service.py"
      },
      {
        "name": "SearchResult",
        "line": 14,
        "methods": [
          "__init__",
          "to_dict"
        ],
        "bases": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "LightweightCodeSearch",
        "line": 36,
        "methods": [
          "__init__",
          "search",
          "search_definition",
          "search_usage",
          "_find_files",
          "_should_ignore",
          "_search_file",
          "add_ignore_pattern",
          "remove_ignore_pattern"
        ],
        "bases": [],
        "file": "backend/services/code_search.py"
      },
      {
        "name": "ClaudeWebIntegrationDemo",
        "line": 21,
        "methods": [
          "__init__",
          "start_proxy_server",
          "stop_proxy_server",
          "interactive_mode"
        ],
        "bases": [],
        "file": "examples/claude_web_integration_example.py"
      },
      {
        "name": "MultiAgentClaudeWebDemo",
        "line": 21,
        "methods": [
          "__init__",
          "start_claude_web_server",
          "stop_claude_web_server"
        ],
        "bases": [],
        "file": "examples/multi_agent_claude_web_demo.py"
      },
      {
        "name": "InstructionsUpdater",
        "line": 19,
        "methods": [
          "__init__",
          "get_file_hash",
          "find_changes",
          "show_diff",
          "show_summary_diff",
          "update_interactive",
          "_backup_and_update",
          "_save_as_new",
          "update_overwrite",
          "update_preserve",
          "update_backup",
          "_get_version"
        ],
        "bases": [],
        "file": "scripts/update_instructions.py"
      },
      {
        "name": "QueryAnalysis",
        "line": 17,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "IntelligentQueryHandler",
        "line": 29,
        "methods": [
          "__init__",
          "_init_fallback_responses",
          "_init_query_patterns",
          "analyze_query",
          "get_intelligent_response",
          "create_intelligent_execution_plan",
          "enhance_orchestrator_step",
          "integrate_with_classification",
          "_get_development_guidance"
        ],
        "bases": [],
        "file": "langgraph_system/intelligent_query_handler.py"
      },
      {
        "name": "CacheManager",
        "line": 21,
        "methods": [
          "__init__",
          "check_docker_installed",
          "check_redis_running",
          "start_redis_container",
          "fill_caches"
        ],
        "bases": [],
        "file": "langgraph_system/cache_manager.py"
      },
      {
        "name": "DevelopmentContext",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "DevelopmentQueryHandler",
        "line": 27,
        "methods": [
          "__init__",
          "analyze_context",
          "handle_performance_query",
          "handle_bug_query",
          "handle_refactoring_query",
          "handle_testing_query",
          "handle_implementation_query",
          "handle_technology_query",
          "handle_database_query",
          "handle_ai_integration_query",
          "handle_error_diagnosis_query",
          "handle_scope_clarification",
          "get_handler_for_type",
          "handle_development_query",
          "suggest_next_steps"
        ],
        "bases": [],
        "file": "langgraph_system/development_query_handler.py"
      },
      {
        "name": "DetailedClassification",
        "line": 18,
        "methods": [
          "summary"
        ],
        "bases": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "EnhancedQueryClassifier",
        "line": 65,
        "methods": [
          "__init__",
          "classify_query",
          "_is_greeting",
          "_is_nonsense",
          "_has_context_reference",
          "_check_pattern",
          "_check_development_patterns",
          "_calculate_coherence",
          "_calculate_confidence",
          "_calculate_safety",
          "_determine_action",
          "_get_dev_agent",
          "_prepare_responses"
        ],
        "bases": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "ExecutionGuard",
        "line": 518,
        "methods": [
          "__init__",
          "is_safe",
          "_is_duplicate",
          "_detect_loop_pattern",
          "_check_resource_exhaustion",
          "record_execution"
        ],
        "bases": [],
        "file": "langgraph_system/query_classifier.py"
      },
      {
        "name": "AntiPatternType",
        "line": 26,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "KnownAntiPattern",
        "line": 41,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "KnownAntiPatternsDatabase",
        "line": 51,
        "methods": [
          "__init__",
          "_initialize_patterns",
          "detect_patterns",
          "_check_pattern",
          "_has_circular_dependencies",
          "_get_detection_reason",
          "has_cycle_from"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "WorkflowInvariants",
        "line": 248,
        "methods": [
          "__init__",
          "_define_invariants",
          "check_all",
          "_check_valid_transitions",
          "_check_unique_ids",
          "_check_dependencies_exist",
          "_check_agent_capabilities",
          "_suggest_better_agent"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "PreExecutionValidator",
        "line": 448,
        "methods": [
          "__init__",
          "_calculate_dependency_depth",
          "_find_parallelizable_steps",
          "_has_dependency_conflict",
          "_is_in_cycle",
          "get_depth",
          "has_cycle"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "PatternRecognitionEngine",
        "line": 785,
        "methods": [
          "__init__",
          "_initialize_patterns",
          "analyze_patterns",
          "_detect_routing_loop",
          "_detect_collaboration_spiral",
          "_detect_stuck_progress",
          "_detect_resource_spike",
          "_detect_timeout_cluster",
          "_detect_statistical_anomalies"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "SelfTestFramework",
        "line": 940,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "WorkflowSelfDiagnosisSystem",
        "line": 1134,
        "methods": [
          "__init__",
          "get_diagnosis_report"
        ],
        "bases": [],
        "file": "langgraph_system/workflow_self_diagnosis.py"
      },
      {
        "name": "AgentWorkflow",
        "line": 143,
        "methods": [
          "__init__",
          "_init_agent_memories",
          "_init_real_agents",
          "create_task_ledger",
          "extract_success_criteria",
          "create_progress_ledger",
          "identify_parallel_groups",
          "_has_dependency_conflict",
          "_get_all_dependencies",
          "_dependencies_met",
          "_get_current_step",
          "_get_step_by_agent",
          "_check_escalation_needed",
          "_calculate_agent_confidence",
          "_create_single_agent_step",
          "_detect_task_complexity",
          "_apply_plan_modifications",
          "_format_proposal_for_user",
          "create_workflow"
        ],
        "bases": [],
        "file": "langgraph_system/workflow.py"
      },
      {
        "name": "ToolDefinition",
        "line": 14,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "MemoryEntry",
        "line": 26,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "ExecutionStep",
        "line": 37,
        "methods": [
          "__post_init__",
          "is_timeout",
          "can_retry",
          "get_retry_delay"
        ],
        "bases": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "TaskLedger",
        "line": 94,
        "methods": [
          "__post_init__"
        ],
        "bases": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "ProgressLedger",
        "line": 116,
        "methods": [
          "__post_init__",
          "update_from_steps"
        ],
        "bases": [],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "ExtendedAgentState",
        "line": 151,
        "methods": [],
        "bases": [
          "TypedDict"
        ],
        "file": "langgraph_system/state.py"
      },
      {
        "name": "ExecutionAttempt",
        "line": 21,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "ExecutionHistory",
        "line": 33,
        "methods": [
          "add_attempt"
        ],
        "bases": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "SafeOrchestratorExecutor",
        "line": 53,
        "methods": [
          "__init__",
          "_generate_query_hash",
          "_detect_loop_pattern",
          "_get_safe_fallback_response",
          "get_execution_stats",
          "should_use_safe_execution",
          "reset_history"
        ],
        "bases": [],
        "file": "langgraph_system/safe_orchestrator_executor.py"
      },
      {
        "name": "DynamicNode",
        "line": 15,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "DynamicEdge",
        "line": 25,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "ConditionalRoute",
        "line": 34,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "DynamicWorkflowManager",
        "line": 42,
        "methods": [
          "__init__",
          "_extract_base_structure",
          "add_node",
          "remove_node",
          "add_edge",
          "add_conditional_routing",
          "compile_graph",
          "create_template",
          "apply_template",
          "rollback",
          "get_graph_info",
          "visualize_graph"
        ],
        "bases": [],
        "file": "langgraph_system/extensions/dynamic_workflow.py"
      },
      {
        "name": "ApprovalRequest",
        "line": 17,
        "methods": [],
        "bases": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "ApprovalManager",
        "line": 30,
        "methods": [
          "__init__",
          "_format_plan_for_ui",
          "_format_step",
          "get_approval_status",
          "get_approval_history",
          "cleanup_expired",
          "get_pending_approvals"
        ],
        "bases": [],
        "file": "langgraph_system/extensions/approval_manager.py"
      },
      {
        "name": "ToolRegistry",
        "line": 36,
        "methods": [
          "__init__",
          "auto_discover_tools",
          "_create_tool_from_decorated",
          "_create_tool_from_prefix",
          "_extract_parameters",
          "_python_type_to_json_type",
          "register_tool",
          "discover_tools_for_agent",
          "get_tool_schema",
          "list_all_tools",
          "get_usage_stats",
          "export_tools",
          "import_tools"
        ],
        "bases": [],
        "file": "langgraph_system/extensions/tool_discovery.py"
      },
      {
        "name": "PersistentAgentMemory",
        "line": 30,
        "methods": [
          "__init__",
          "_init_sqlite",
          "_init_vector_store",
          "_create_new_vector_store",
          "store_memory",
          "recall_similar",
          "learn_pattern",
          "get_learned_solution",
          "record_agent_interaction",
          "get_interaction_history",
          "_update_access_counts",
          "_save_vector_store",
          "consolidate_memories",
          "get_memory_stats"
        ],
        "bases": [],
        "file": "langgraph_system/extensions/persistent_memory.py"
      },
      {
        "name": "SettingsUpdateRequest",
        "line": 22,
        "methods": [],
        "bases": [
          "BaseModel"
        ],
        "file": "api/settings_endpoint.py"
      },
      {
        "name": "ConnectionManager",
        "line": 77,
        "methods": [
          "__init__",
          "disconnect"
        ],
        "bases": [],
        "file": "api/server_langgraph.py"
      },
      {
        "name": "DiagramFormat",
        "line": 14,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "services/diagram_service.py"
      },
      {
        "name": "DiagramType",
        "line": 22,
        "methods": [],
        "bases": [
          "Enum"
        ],
        "file": "services/diagram_service.py"
      },
      {
        "name": "DiagramService",
        "line": 32,
        "methods": [
          "__init__",
          "generate_flowchart",
          "generate_dependency_graph",
          "generate_state_diagram",
          "generate_sequence_diagram",
          "generate_class_diagram",
          "generate_architecture_diagram",
          "_generate_mermaid_flowchart",
          "_generate_mermaid_sequence",
          "_generate_mermaid_class",
          "_generate_mermaid_architecture",
          "_generate_ascii_flowchart",
          "save_diagram"
        ],
        "bases": [],
        "file": "services/diagram_service.py"
      },
      {
        "name": "ProjectCache",
        "line": 16,
        "methods": [
          "__init__",
          "_get_cache_key",
          "_get_cache_path",
          "get",
          "set",
          "invalidate",
          "clear_all",
          "get_stats"
        ],
        "bases": [],
        "file": "services/project_cache.py"
      },
      {
        "name": "SmartFileWatcher",
        "line": 15,
        "methods": [
          "__init__",
          "watch_file",
          "watch_directory",
          "check_changes",
          "stop_watching",
          "stop_all",
          "get_watched_files",
          "_resolve_path",
          "start",
          "stop",
          "start_monitoring"
        ],
        "bases": [],
        "file": "services/smart_file_watcher.py"
      },
      {
        "name": "SearchResult",
        "line": 14,
        "methods": [
          "__init__",
          "to_dict"
        ],
        "bases": [],
        "file": "services/code_search.py"
      },
      {
        "name": "LightweightCodeSearch",
        "line": 36,
        "methods": [
          "__init__",
          "search",
          "search_definition",
          "search_usage",
          "_find_files",
          "_should_ignore",
          "_search_file",
          "add_ignore_pattern",
          "remove_ignore_pattern"
        ],
        "bases": [],
        "file": "services/code_search.py"
      },
      {
        "name": "TetrisWorkflowTest",
        "line": 20,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "agent_projects/test_tetris_websocket_workflow.py"
      },
      {
        "name": "MockStep",
        "line": 62,
        "methods": [
          "__post_init__"
        ],
        "bases": [],
        "file": "agent_projects/test_self_diagnosis_simple.py"
      },
      {
        "name": "ChatApprovalTest",
        "line": 12,
        "methods": [
          "__init__",
          "print_summary"
        ],
        "bases": [],
        "file": "agent_projects/test_chat_approval.py"
      },
      {
        "name": "WorkflowTracker",
        "line": 14,
        "methods": [
          "__init__",
          "record_agent",
          "record_output",
          "record_quality_score",
          "record_message",
          "generate_report"
        ],
        "bases": [],
        "file": "agent_projects/test_tetris_workflow.py"
      },
      {
        "name": "Colors",
        "line": 22,
        "methods": [],
        "bases": [],
        "file": "agent_projects/test_system.py"
      },
      {
        "name": "MockAgent",
        "line": 205,
        "methods": [
          "__init__"
        ],
        "bases": [],
        "file": "agent_projects/test_system.py"
      },
      {
        "name": "DashboardTestClient",
        "line": 12,
        "methods": [
          "__init__",
          "print_summary"
        ],
        "bases": [],
        "file": "agent_projects/test_dashboard_generation.py"
      },
      {
        "name": "TetrisWorkflowTest",
        "line": 12,
        "methods": [
          "__init__",
          "log",
          "print_summary"
        ],
        "bases": [],
        "file": "agent_projects/test_tetris_complete.py"
      }
    ]
  }
}