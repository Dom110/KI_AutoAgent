{
  "timestamp": "2025-10-03T16:00:41.790464",
  "key": "system_knowledge",
  "value": {
    "code_index": {
      "ast": {
        "files": {
          "hello.py": {
            "functions": [],
            "classes": [],
            "imports": [],
            "calls": []
          },
          "test_safe_executor_552.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "backend.__version__",
                "names": [
                  "__version__"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.query_classifier",
                "names": [
                  "EnhancedQueryClassifier",
                  "DetailedClassification"
                ],
                "line": 26
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.development_query_handler",
                "names": [
                  "DevelopmentQueryHandler"
                ],
                "line": 33
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.safe_orchestrator_executor",
                "names": [
                  "SafeOrchestratorExecutor"
                ],
                "line": 40
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.state",
                "names": [
                  "create_initial_state"
                ],
                "line": 124
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 13
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "EnhancedQueryClassifier",
                "line": 50
              },
              {
                "function": "DevelopmentQueryHandler",
                "line": 51
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "run",
                "line": 163
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "join",
                "line": 13
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "classify_query",
                "line": 86
              },
              {
                "function": "SafeOrchestratorExecutor",
                "line": 121
              },
              {
                "function": "create_initial_state",
                "line": 125
              },
              {
                "function": "get_execution_stats",
                "line": 155
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "test_safe_executor",
                "line": 163
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "exit",
                "line": 30
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "exit",
                "line": 37
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "exit",
                "line": 44
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "len",
                "line": 112
              },
              {
                "function": "execute_safely",
                "line": 139
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "str",
                "line": 149
              }
            ]
          },
          "verify_reviewer_test.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 11
              },
              {
                "function": "print",
                "line": 12
              },
              {
                "function": "print",
                "line": 13
              },
              {
                "function": "print",
                "line": 14
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "exists",
                "line": 67
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "items",
                "line": 93
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "print",
                "line": 138
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "print",
                "line": 146
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "exists",
                "line": 31
              },
              {
                "function": "append",
                "line": 38
              },
              {
                "function": "exists",
                "line": 52
              },
              {
                "function": "append",
                "line": 59
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "append",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "append",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "open",
                "line": 68
              },
              {
                "function": "read",
                "line": 69
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "append",
                "line": 73
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "now",
                "line": 149
              }
            ]
          },
          "test_architecture_proposal_workflow.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "langgraph_system.workflow",
                "names": [
                  "AgentWorkflow"
                ],
                "line": 23
              },
              {
                "type": "from_import",
                "module": "langgraph_system.state",
                "names": [
                  "create_initial_state"
                ],
                "line": 24
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 249
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 21
              },
              {
                "function": "join",
                "line": 21
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "AgentWorkflow",
                "line": 37
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 266
              },
              {
                "function": "print",
                "line": 267
              },
              {
                "function": "print",
                "line": 268
              },
              {
                "function": "run",
                "line": 277
              },
              {
                "function": "dirname",
                "line": 21
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "get",
                "line": 152
              },
              {
                "function": "get",
                "line": 170
              },
              {
                "function": "get",
                "line": 180
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 195
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "print",
                "line": 198
              },
              {
                "function": "print",
                "line": 199
              },
              {
                "function": "print",
                "line": 200
              },
              {
                "function": "print",
                "line": 201
              },
              {
                "function": "print",
                "line": 202
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "print",
                "line": 204
              },
              {
                "function": "get",
                "line": 205
              },
              {
                "function": "print",
                "line": 208
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 217
              },
              {
                "function": "print",
                "line": 218
              },
              {
                "function": "print",
                "line": 219
              },
              {
                "function": "print",
                "line": 220
              },
              {
                "function": "bool",
                "line": 222
              },
              {
                "function": "all",
                "line": 224
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "print",
                "line": 231
              },
              {
                "function": "print",
                "line": 232
              },
              {
                "function": "print",
                "line": 238
              },
              {
                "function": "get",
                "line": 241
              },
              {
                "function": "endswith",
                "line": 271
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "test_tetris_proposal_workflow",
                "line": 277
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "exit",
                "line": 281
              },
              {
                "function": "print",
                "line": 283
              },
              {
                "function": "exit",
                "line": 284
              },
              {
                "function": "execute",
                "line": 54
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 143
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "enumerate",
                "line": 154
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "enumerate",
                "line": 172
              },
              {
                "function": "print",
                "line": 177
              },
              {
                "function": "print",
                "line": 181
              },
              {
                "function": "enumerate",
                "line": 182
              },
              {
                "function": "print",
                "line": 187
              },
              {
                "function": "get",
                "line": 211
              },
              {
                "function": "get",
                "line": 211
              },
              {
                "function": "total_seconds",
                "line": 212
              },
              {
                "function": "print",
                "line": 213
              },
              {
                "function": "get",
                "line": 222
              },
              {
                "function": "get",
                "line": 223
              },
              {
                "function": "print",
                "line": 235
              },
              {
                "function": "print",
                "line": 237
              },
              {
                "function": "print",
                "line": 245
              },
              {
                "function": "print",
                "line": 246
              },
              {
                "function": "print",
                "line": 250
              },
              {
                "function": "print",
                "line": 251
              },
              {
                "function": "print",
                "line": 252
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "print",
                "line": 254
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 257
              },
              {
                "function": "print",
                "line": 258
              },
              {
                "function": "print",
                "line": 259
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "get",
                "line": 125
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "get",
                "line": 155
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 174
              },
              {
                "function": "len",
                "line": 175
              },
              {
                "function": "print",
                "line": 176
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "print",
                "line": 184
              },
              {
                "function": "len",
                "line": 185
              },
              {
                "function": "print",
                "line": 186
              },
              {
                "function": "print",
                "line": 207
              },
              {
                "function": "open",
                "line": 243
              },
              {
                "function": "dump",
                "line": 244
              },
              {
                "function": "format_exc",
                "line": 258
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "get",
                "line": 194
              },
              {
                "function": "get",
                "line": 195
              },
              {
                "function": "get",
                "line": 196
              },
              {
                "function": "get",
                "line": 197
              },
              {
                "function": "get",
                "line": 198
              },
              {
                "function": "get",
                "line": 200
              },
              {
                "function": "get",
                "line": 201
              },
              {
                "function": "get",
                "line": 202
              },
              {
                "function": "len",
                "line": 204
              },
              {
                "function": "get",
                "line": 225
              },
              {
                "function": "get",
                "line": 79
              },
              {
                "function": "get",
                "line": 80
              },
              {
                "function": "get",
                "line": 81
              },
              {
                "function": "str",
                "line": 165
              },
              {
                "function": "get",
                "line": 204
              },
              {
                "function": "len",
                "line": 91
              },
              {
                "function": "len",
                "line": 97
              },
              {
                "function": "len",
                "line": 103
              },
              {
                "function": "len",
                "line": 109
              },
              {
                "function": "len",
                "line": 115
              },
              {
                "function": "len",
                "line": 121
              },
              {
                "function": "upper",
                "line": 162
              },
              {
                "function": "get",
                "line": 173
              },
              {
                "function": "get",
                "line": 173
              },
              {
                "function": "get",
                "line": 183
              },
              {
                "function": "get",
                "line": 207
              },
              {
                "function": "get",
                "line": 207
              },
              {
                "function": "get",
                "line": 174
              },
              {
                "function": "len",
                "line": 176
              },
              {
                "function": "get",
                "line": 183
              },
              {
                "function": "get",
                "line": 184
              },
              {
                "function": "len",
                "line": 186
              }
            ]
          },
          "test_tetris_websocket_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 21,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_tetris_websocket_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "TetrisWorkflowTest",
                "line": 20,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "test_tetris_websocket_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 17
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 311
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 297
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 216
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 306
              },
              {
                "function": "print",
                "line": 307
              },
              {
                "function": "print",
                "line": 308
              },
              {
                "function": "run",
                "line": 312
              },
              {
                "function": "print",
                "line": 327
              },
              {
                "function": "print",
                "line": 328
              },
              {
                "function": "TetrisWorkflowTest",
                "line": 331
              },
              {
                "function": "print",
                "line": 334
              },
              {
                "function": "run",
                "line": 344
              },
              {
                "function": "exit",
                "line": 345
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 319
              },
              {
                "function": "print",
                "line": 320
              },
              {
                "function": "print",
                "line": 321
              },
              {
                "function": "print",
                "line": 322
              },
              {
                "function": "print",
                "line": 323
              },
              {
                "function": "print",
                "line": 324
              },
              {
                "function": "connect_and_test",
                "line": 332
              },
              {
                "function": "print",
                "line": 336
              },
              {
                "function": "print",
                "line": 339
              },
              {
                "function": "main",
                "line": 344
              },
              {
                "function": "connect",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "loads",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 225
              },
              {
                "function": "print",
                "line": 226
              },
              {
                "function": "print",
                "line": 227
              },
              {
                "function": "print",
                "line": 228
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "print",
                "line": 231
              },
              {
                "function": "print",
                "line": 234
              },
              {
                "function": "enumerate",
                "line": 236
              },
              {
                "function": "print",
                "line": 238
              },
              {
                "function": "print",
                "line": 241
              },
              {
                "function": "print",
                "line": 242
              },
              {
                "function": "any",
                "line": 244
              },
              {
                "function": "any",
                "line": 245
              },
              {
                "function": "any",
                "line": 246
              },
              {
                "function": "any",
                "line": 247
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "print",
                "line": 250
              },
              {
                "function": "print",
                "line": 251
              },
              {
                "function": "print",
                "line": 252
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "print",
                "line": 278
              },
              {
                "function": "print",
                "line": 279
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "print",
                "line": 281
              },
              {
                "function": "print",
                "line": 282
              },
              {
                "function": "print",
                "line": 283
              },
              {
                "function": "print",
                "line": 284
              },
              {
                "function": "print",
                "line": 285
              },
              {
                "function": "print",
                "line": 286
              },
              {
                "function": "print",
                "line": 287
              },
              {
                "function": "print",
                "line": 291
              },
              {
                "function": "print",
                "line": 292
              },
              {
                "function": "print",
                "line": 293
              },
              {
                "function": "print",
                "line": 294
              },
              {
                "function": "print",
                "line": 295
              },
              {
                "function": "print",
                "line": 296
              },
              {
                "function": "print",
                "line": 298
              },
              {
                "function": "print",
                "line": 299
              },
              {
                "function": "print",
                "line": 300
              },
              {
                "function": "print",
                "line": 301
              },
              {
                "function": "recv",
                "line": 44
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "get",
                "line": 50
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "send",
                "line": 62
              },
              {
                "function": "send",
                "line": 72
              },
              {
                "function": "get",
                "line": 235
              },
              {
                "function": "print",
                "line": 237
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 257
              },
              {
                "function": "print",
                "line": 258
              },
              {
                "function": "print",
                "line": 259
              },
              {
                "function": "print",
                "line": 260
              },
              {
                "function": "print",
                "line": 261
              },
              {
                "function": "print",
                "line": 262
              },
              {
                "function": "print",
                "line": 263
              },
              {
                "function": "print",
                "line": 264
              },
              {
                "function": "print",
                "line": 265
              },
              {
                "function": "print",
                "line": 268
              },
              {
                "function": "print",
                "line": 269
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "format_exc",
                "line": 300
              },
              {
                "function": "dumps",
                "line": 62
              },
              {
                "function": "dumps",
                "line": 72
              },
              {
                "function": "wait_for",
                "line": 84
              },
              {
                "function": "loads",
                "line": 93
              },
              {
                "function": "get",
                "line": 94
              },
              {
                "function": "append",
                "line": 96
              },
              {
                "function": "strftime",
                "line": 98
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 200
              },
              {
                "function": "print",
                "line": 271
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "recv",
                "line": 85
              },
              {
                "function": "receive_with_timeout",
                "line": 91
              },
              {
                "function": "get",
                "line": 103
              },
              {
                "function": "get",
                "line": 104
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 208
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 215
              },
              {
                "function": "print_exc",
                "line": 217
              },
              {
                "function": "print",
                "line": 218
              },
              {
                "function": "get",
                "line": 244
              },
              {
                "function": "get",
                "line": 245
              },
              {
                "function": "get",
                "line": 246
              },
              {
                "function": "get",
                "line": 247
              },
              {
                "function": "get",
                "line": 53
              },
              {
                "function": "now",
                "line": 98
              },
              {
                "function": "get",
                "line": 108
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "get",
                "line": 120
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "print",
                "line": 146
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "send",
                "line": 142
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "replace",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "dumps",
                "line": 142
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "get",
                "line": 160
              },
              {
                "function": "get",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "print",
                "line": 164
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "get",
                "line": 169
              },
              {
                "function": "get",
                "line": 170
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "get",
                "line": 178
              },
              {
                "function": "get",
                "line": 179
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "print",
                "line": 182
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "print",
                "line": 184
              },
              {
                "function": "print",
                "line": 185
              },
              {
                "function": "print",
                "line": 186
              },
              {
                "function": "get",
                "line": 190
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "get",
                "line": 192
              },
              {
                "function": "print",
                "line": 198
              },
              {
                "function": "len",
                "line": 126
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "str",
                "line": 173
              },
              {
                "function": "str",
                "line": 198
              }
            ]
          },
          "test_new_features.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "backend.core.indexing.code_indexer",
                "names": [
                  "CodeIndexer"
                ],
                "line": 24
              },
              {
                "type": "from_import",
                "module": "backend.core.indexing.code_indexer",
                "names": [
                  "CodeIndexer"
                ],
                "line": 41
              },
              {
                "type": "from_import",
                "module": "backend.core.analysis.call_graph_analyzer",
                "names": [
                  "CallGraphAnalyzer"
                ],
                "line": 42
              },
              {
                "type": "from_import",
                "module": "backend.core.indexing.code_indexer",
                "names": [
                  "CodeIndexer"
                ],
                "line": 69
              },
              {
                "type": "from_import",
                "module": "backend.core.analysis.layer_analyzer",
                "names": [
                  "LayerAnalyzer"
                ],
                "line": 70
              },
              {
                "type": "from_import",
                "module": "backend.agents.tools.browser_tester",
                "names": [
                  "PLAYWRIGHT_AVAILABLE",
                  "BrowserTester"
                ],
                "line": 99
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 126
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.reviewer_gpt_agent",
                "names": [
                  "ReviewerGPTAgent"
                ],
                "line": 141
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 60
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 90
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 116
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 132
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 147
              }
            ],
            "calls": [
              {
                "function": "basicConfig",
                "line": 13
              },
              {
                "function": "getLogger",
                "line": 17
              },
              {
                "function": "info",
                "line": 21
              },
              {
                "function": "info",
                "line": 38
              },
              {
                "function": "info",
                "line": 66
              },
              {
                "function": "info",
                "line": 96
              },
              {
                "function": "info",
                "line": 122
              },
              {
                "function": "info",
                "line": 138
              },
              {
                "function": "info",
                "line": 153
              },
              {
                "function": "info",
                "line": 154
              },
              {
                "function": "info",
                "line": 155
              },
              {
                "function": "info",
                "line": 173
              },
              {
                "function": "info",
                "line": 174
              },
              {
                "function": "info",
                "line": 175
              },
              {
                "function": "sum",
                "line": 177
              },
              {
                "function": "len",
                "line": 178
              },
              {
                "function": "info",
                "line": 184
              },
              {
                "function": "info",
                "line": 185
              },
              {
                "function": "run",
                "line": 195
              },
              {
                "function": "exit",
                "line": 196
              },
              {
                "function": "CodeIndexer",
                "line": 26
              },
              {
                "function": "get",
                "line": 29
              },
              {
                "function": "info",
                "line": 30
              },
              {
                "function": "CodeIndexer",
                "line": 45
              },
              {
                "function": "CallGraphAnalyzer",
                "line": 49
              },
              {
                "function": "info",
                "line": 53
              },
              {
                "function": "info",
                "line": 54
              },
              {
                "function": "info",
                "line": 55
              },
              {
                "function": "info",
                "line": 56
              },
              {
                "function": "CodeIndexer",
                "line": 73
              },
              {
                "function": "LayerAnalyzer",
                "line": 77
              },
              {
                "function": "info",
                "line": 80
              },
              {
                "function": "info",
                "line": 81
              },
              {
                "function": "info",
                "line": 82
              },
              {
                "function": "info",
                "line": 128
              },
              {
                "function": "info",
                "line": 143
              },
              {
                "function": "append",
                "line": 169
              },
              {
                "function": "info",
                "line": 170
              },
              {
                "function": "info",
                "line": 182
              },
              {
                "function": "info",
                "line": 188
              },
              {
                "function": "error",
                "line": 191
              },
              {
                "function": "main",
                "line": 195
              },
              {
                "function": "build_full_index",
                "line": 27
              },
              {
                "function": "error",
                "line": 33
              },
              {
                "function": "build_full_index",
                "line": 46
              },
              {
                "function": "build_call_graph",
                "line": 50
              },
              {
                "function": "error",
                "line": 59
              },
              {
                "function": "error",
                "line": 61
              },
              {
                "function": "build_full_index",
                "line": 74
              },
              {
                "function": "detect_system_layers",
                "line": 78
              },
              {
                "function": "info",
                "line": 85
              },
              {
                "function": "error",
                "line": 89
              },
              {
                "function": "error",
                "line": 91
              },
              {
                "function": "warning",
                "line": 102
              },
              {
                "function": "BrowserTester",
                "line": 106
              },
              {
                "function": "info",
                "line": 107
              },
              {
                "function": "info",
                "line": 111
              },
              {
                "function": "error",
                "line": 115
              },
              {
                "function": "error",
                "line": 117
              },
              {
                "function": "error",
                "line": 131
              },
              {
                "function": "error",
                "line": 133
              },
              {
                "function": "error",
                "line": 146
              },
              {
                "function": "error",
                "line": 148
              },
              {
                "function": "test_func",
                "line": 168
              },
              {
                "function": "format_exc",
                "line": 61
              },
              {
                "function": "format_exc",
                "line": 91
              },
              {
                "function": "get_page_info",
                "line": 110
              },
              {
                "function": "format_exc",
                "line": 117
              },
              {
                "function": "format_exc",
                "line": 133
              },
              {
                "function": "format_exc",
                "line": 148
              },
              {
                "function": "get",
                "line": 30
              },
              {
                "function": "get",
                "line": 30
              },
              {
                "function": "len",
                "line": 54
              },
              {
                "function": "len",
                "line": 55
              },
              {
                "function": "get",
                "line": 111
              }
            ]
          },
          "test_self_diagnosis.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.workflow_self_diagnosis",
                "names": [
                  "WorkflowSelfDiagnosisSystem",
                  "KnownAntiPatternsDatabase",
                  "WorkflowInvariants",
                  "PreExecutionValidator",
                  "PatternRecognitionEngine",
                  "SelfTestFramework"
                ],
                "line": 37
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.state",
                "names": [
                  "ExecutionStep",
                  "ExtendedAgentState"
                ],
                "line": 45
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 337
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 18
              },
              {
                "function": "append",
                "line": 19
              },
              {
                "function": "basicConfig",
                "line": 22
              },
              {
                "function": "getLogger",
                "line": 26
              },
              {
                "function": "dirname",
                "line": 18
              },
              {
                "function": "join",
                "line": 19
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "WorkflowSelfDiagnosisSystem",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "WorkflowInvariants",
                "line": 82
              },
              {
                "function": "check_all",
                "line": 83
              },
              {
                "function": "KnownAntiPatternsDatabase",
                "line": 93
              },
              {
                "function": "detect_patterns",
                "line": 94
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "detect_patterns",
                "line": 138
              },
              {
                "function": "any",
                "line": 139
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "PatternRecognitionEngine",
                "line": 190
              },
              {
                "function": "analyze_patterns",
                "line": 191
              },
              {
                "function": "any",
                "line": 193
              },
              {
                "function": "print",
                "line": 199
              },
              {
                "function": "print",
                "line": 202
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "detect_patterns",
                "line": 212
              },
              {
                "function": "any",
                "line": 213
              },
              {
                "function": "print",
                "line": 220
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 260
              },
              {
                "function": "print",
                "line": 261
              },
              {
                "function": "print",
                "line": 262
              },
              {
                "function": "items",
                "line": 263
              },
              {
                "function": "print",
                "line": 271
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "PreExecutionValidator",
                "line": 288
              },
              {
                "function": "print",
                "line": 300
              },
              {
                "function": "print",
                "line": 303
              },
              {
                "function": "print",
                "line": 304
              },
              {
                "function": "print",
                "line": 305
              },
              {
                "function": "print",
                "line": 307
              },
              {
                "function": "get_diagnosis_report",
                "line": 322
              },
              {
                "function": "print",
                "line": 323
              },
              {
                "function": "print",
                "line": 324
              },
              {
                "function": "print",
                "line": 325
              },
              {
                "function": "print",
                "line": 326
              },
              {
                "function": "print",
                "line": 327
              },
              {
                "function": "print",
                "line": 331
              },
              {
                "function": "abspath",
                "line": 18
              },
              {
                "function": "dirname",
                "line": 19
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "pre_execution_check",
                "line": 152
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 164
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 195
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 215
              },
              {
                "function": "print",
                "line": 216
              },
              {
                "function": "print",
                "line": 218
              },
              {
                "function": "real_time_monitoring",
                "line": 258
              },
              {
                "function": "print",
                "line": 264
              },
              {
                "function": "print",
                "line": 267
              },
              {
                "function": "print",
                "line": 269
              },
              {
                "function": "_validate_performance",
                "line": 289
              },
              {
                "function": "print",
                "line": 298
              },
              {
                "function": "run",
                "line": 333
              },
              {
                "function": "print",
                "line": 334
              },
              {
                "function": "abspath",
                "line": 19
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "ExecutionStep",
                "line": 64
              },
              {
                "function": "ExecutionStep",
                "line": 70
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "ExecutionStep",
                "line": 113
              },
              {
                "function": "ExecutionStep",
                "line": 120
              },
              {
                "function": "ExecutionStep",
                "line": 127
              },
              {
                "function": "ExecutionStep",
                "line": 208
              },
              {
                "function": "ExecutionStep",
                "line": 230
              },
              {
                "function": "ExecutionStep",
                "line": 237
              },
              {
                "function": "ExecutionStep",
                "line": 245
              },
              {
                "function": "ExecutionStep",
                "line": 280
              },
              {
                "function": "ExecutionStep",
                "line": 281
              },
              {
                "function": "ExecutionStep",
                "line": 282
              },
              {
                "function": "ExecutionStep",
                "line": 283
              },
              {
                "function": "lower",
                "line": 293
              },
              {
                "function": "print",
                "line": 294
              },
              {
                "function": "test_self_diagnosis",
                "line": 333
              },
              {
                "function": "print",
                "line": 336
              },
              {
                "function": "print_exc",
                "line": 338
              },
              {
                "function": "range",
                "line": 207
              },
              {
                "function": "range",
                "line": 208
              },
              {
                "function": "len",
                "line": 326
              },
              {
                "function": "len",
                "line": 327
              },
              {
                "function": "len",
                "line": 215
              },
              {
                "function": "len",
                "line": 216
              },
              {
                "function": "now",
                "line": 243
              },
              {
                "function": "get",
                "line": 269
              },
              {
                "function": "get",
                "line": 293
              }
            ]
          },
          "test_indexing_progress.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "run",
                "line": 110
              },
              {
                "function": "test_indexing_progress",
                "line": 110
              },
              {
                "function": "connect",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "time",
                "line": 36
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "send",
                "line": 31
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "dumps",
                "line": 31
              },
              {
                "function": "get_event_loop",
                "line": 36
              },
              {
                "function": "time",
                "line": 43
              },
              {
                "function": "loads",
                "line": 46
              },
              {
                "function": "wait_for",
                "line": 45
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "strftime",
                "line": 50
              },
              {
                "function": "append",
                "line": 75
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "len",
                "line": 93
              },
              {
                "function": "get_event_loop",
                "line": 43
              },
              {
                "function": "recv",
                "line": 45
              },
              {
                "function": "get",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "now",
                "line": 50
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "get",
                "line": 81
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "lower",
                "line": 60
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "lower",
                "line": 64
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "any",
                "line": 72
              },
              {
                "function": "get",
                "line": 82
              },
              {
                "function": "lower",
                "line": 68
              },
              {
                "function": "print",
                "line": 73
              }
            ]
          },
          "test_available_models.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "openai",
                "names": [
                  "AsyncOpenAI"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "openai",
                "names": [
                  "AsyncOpenAI"
                ],
                "line": 166
              },
              {
                "type": "import",
                "module": "anthropic",
                "names": [
                  "anthropic"
                ],
                "line": 64
              },
              {
                "type": "from_import",
                "module": "openai",
                "names": [
                  "AsyncOpenAI"
                ],
                "line": 124
              }
            ],
            "calls": [
              {
                "function": "getenv",
                "line": 15
              },
              {
                "function": "getenv",
                "line": 58
              },
              {
                "function": "getenv",
                "line": 118
              },
              {
                "function": "getenv",
                "line": 168
              },
              {
                "function": "AsyncOpenAI",
                "line": 172
              },
              {
                "function": "print",
                "line": 185
              },
              {
                "function": "print",
                "line": 186
              },
              {
                "function": "print",
                "line": 206
              },
              {
                "function": "print",
                "line": 207
              },
              {
                "function": "print",
                "line": 233
              },
              {
                "function": "print",
                "line": 234
              },
              {
                "function": "run",
                "line": 237
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "AsyncOpenAI",
                "line": 21
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "sort",
                "line": 35
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "AsyncAnthropic",
                "line": 80
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "AsyncOpenAI",
                "line": 127
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "test_openai_models",
                "line": 210
              },
              {
                "function": "test_gpt5_specifically",
                "line": 211
              },
              {
                "function": "test_anthropic_models",
                "line": 212
              },
              {
                "function": "test_perplexity_models",
                "line": 213
              },
              {
                "function": "isoformat",
                "line": 217
              },
              {
                "function": "open",
                "line": 230
              },
              {
                "function": "dump",
                "line": 231
              },
              {
                "function": "main",
                "line": 237
              },
              {
                "function": "list",
                "line": 22
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 195
              },
              {
                "function": "any",
                "line": 220
              },
              {
                "function": "lower",
                "line": 29
              },
              {
                "function": "append",
                "line": 30
              },
              {
                "function": "strftime",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "append",
                "line": 95
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "create",
                "line": 190
              },
              {
                "function": "str",
                "line": 197
              },
              {
                "function": "now",
                "line": 217
              },
              {
                "function": "lower",
                "line": 42
              },
              {
                "function": "create",
                "line": 89
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "append",
                "line": 100
              },
              {
                "function": "create",
                "line": 145
              },
              {
                "function": "print",
                "line": 199
              },
              {
                "function": "fromtimestamp",
                "line": 31
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "lower",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "lower",
                "line": 198
              },
              {
                "function": "lower",
                "line": 198
              },
              {
                "function": "lower",
                "line": 200
              },
              {
                "function": "print",
                "line": 201
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "lower",
                "line": 220
              },
              {
                "function": "lower",
                "line": 102
              },
              {
                "function": "lower",
                "line": 102
              },
              {
                "function": "str",
                "line": 153
              },
              {
                "function": "str",
                "line": 102
              },
              {
                "function": "str",
                "line": 102
              }
            ]
          },
          "test_button_implementation.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.orchestrator_agent_v2",
                "names": [
                  "OrchestratorAgentV2"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "backend.agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 12
              },
              {
                "function": "join",
                "line": 12
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "CodeSmithAgent",
                "line": 27
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "_validate_workspace_context",
                "line": 36
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "TaskRequest",
                "line": 47
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "OrchestratorAgentV2",
                "line": 96
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "print",
                "line": 146
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "CodeSmithAgent",
                "line": 149
              },
              {
                "function": "print",
                "line": 182
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "run",
                "line": 186
              },
              {
                "function": "run",
                "line": 187
              },
              {
                "function": "run",
                "line": 188
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "dirname",
                "line": 12
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "_check_for_hallucination",
                "line": 62
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "enumerate",
                "line": 117
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "test_button_implementation",
                "line": 186
              },
              {
                "function": "test_orchestrator_decomposition",
                "line": 187
              },
              {
                "function": "test_ai_detection",
                "line": 188
              },
              {
                "function": "execute",
                "line": 56
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "_decompose_task_with_ai",
                "line": 105
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 164
              },
              {
                "function": "getcwd",
                "line": 49
              },
              {
                "function": "lower",
                "line": 79
              },
              {
                "function": "lower",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "_ai_detect_implementation_request",
                "line": 163
              },
              {
                "function": "print",
                "line": 169
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "len",
                "line": 115
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "any",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "_ai_determine_file_path",
                "line": 168
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "getcwd",
                "line": 168
              },
              {
                "function": "lower",
                "line": 135
              }
            ]
          },
          "test_routing_debug.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "langgraph_system.workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 19
              },
              {
                "type": "from_import",
                "module": "langgraph_system.state",
                "names": [
                  "create_initial_state"
                ],
                "line": 28
              }
            ],
            "calls": [
              {
                "function": "basicConfig",
                "line": 11
              },
              {
                "function": "insert",
                "line": 16
              },
              {
                "function": "join",
                "line": 16
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "create_agent_workflow",
                "line": 22
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "create_initial_state",
                "line": 30
              },
              {
                "function": "append",
                "line": 34
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "enumerate",
                "line": 46
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "run",
                "line": 53
              },
              {
                "function": "exit",
                "line": 54
              },
              {
                "function": "dirname",
                "line": 16
              },
              {
                "function": "_create_execution_plan",
                "line": 43
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "main",
                "line": 53
              },
              {
                "function": "len",
                "line": 45
              }
            ]
          },
          "test_perplexity_integration.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "dotenv",
                "names": [
                  "load_dotenv"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "backend.utils.perplexity_service",
                "names": [
                  "PerplexityService"
                ],
                "line": 38
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.research_agent",
                "names": [
                  "ResearchAgent"
                ],
                "line": 77
              },
              {
                "type": "from_import",
                "module": "backend.agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 78
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 106
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 13
              },
              {
                "function": "load_dotenv",
                "line": 18
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "str",
                "line": 13
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "getenv",
                "line": 28
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "run",
                "line": 140
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "PerplexityService",
                "line": 41
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "test_connection",
                "line": 45
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "ResearchAgent",
                "line": 82
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "TaskRequest",
                "line": 86
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "test_perplexity_service",
                "line": 116
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "main",
                "line": 140
              },
              {
                "function": "Path",
                "line": 17
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "search_web",
                "line": 53
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "execute",
                "line": 92
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print_exc",
                "line": 107
              },
              {
                "function": "test_research_agent",
                "line": 121
              },
              {
                "function": "getenv",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "Path",
                "line": 13
              },
              {
                "function": "len",
                "line": 57
              },
              {
                "function": "len",
                "line": 58
              },
              {
                "function": "len",
                "line": 96
              },
              {
                "function": "get",
                "line": 58
              }
            ]
          },
          "test_self_diagnosis_simple.py": {
            "functions": [
              {
                "name": "__post_init__",
                "line": 69,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_self_diagnosis_simple.py"
              }
            ],
            "classes": [
              {
                "name": "MockStep",
                "line": 62,
                "methods": [
                  "__post_init__"
                ],
                "bases": [],
                "file": "test_self_diagnosis_simple.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 58
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Optional",
                  "Any"
                ],
                "line": 59
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.workflow_self_diagnosis",
                "names": [
                  "AntiPatternType",
                  "KnownAntiPattern",
                  "KnownAntiPatternsDatabase",
                  "WorkflowInvariants"
                ],
                "line": 24
              },
              {
                "type": "from_import",
                "module": "backend.__version__",
                "names": [
                  "__version__",
                  "__release_tag__"
                ],
                "line": 120
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 12
              },
              {
                "function": "print",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "KnownAntiPatternsDatabase",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "WorkflowInvariants",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "detect_patterns",
                "line": 84
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "detect_patterns",
                "line": 107
              },
              {
                "function": "any",
                "line": 108
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "join",
                "line": 12
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "dirname",
                "line": 12
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "exit",
                "line": 33
              },
              {
                "function": "MockStep",
                "line": 75
              },
              {
                "function": "MockStep",
                "line": 76
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "MockStep",
                "line": 99
              },
              {
                "function": "MockStep",
                "line": 100
              },
              {
                "function": "MockStep",
                "line": 101
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "abspath",
                "line": 12
              },
              {
                "function": "len",
                "line": 40
              },
              {
                "function": "len",
                "line": 49
              }
            ]
          },
          "test_intelligent_agents.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "backend.agents.specialized.orchestrator_agent_v2",
                "names": [
                  "OrchestratorAgentV2"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "backend.agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 12
              },
              {
                "function": "join",
                "line": 12
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "CodeSmithAgent",
                "line": 49
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "OrchestratorAgentV2",
                "line": 105
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "TaskRequest",
                "line": 112
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "run",
                "line": 148
              },
              {
                "function": "run",
                "line": 149
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "dirname",
                "line": 12
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "TaskRequest",
                "line": 57
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "enumerate",
                "line": 126
              },
              {
                "function": "test_intelligent_file_creation",
                "line": 148
              },
              {
                "function": "test_orchestrator_decomposition",
                "line": 149
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "_decompose_task_with_ai",
                "line": 119
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "_ai_detect_implementation_request",
                "line": 64
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "_ai_detect_implementation_request",
                "line": 89
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "getcwd",
                "line": 114
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "getcwd",
                "line": 59
              },
              {
                "function": "_ai_determine_file_path",
                "line": 69
              },
              {
                "function": "_enforce_asimov_rule_1",
                "line": 74
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "len",
                "line": 124
              },
              {
                "function": "any",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "getcwd",
                "line": 69
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "lower",
                "line": 133
              }
            ]
          },
          "test_architect_progress.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "run",
                "line": 120
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "test_architect_progress",
                "line": 120
              },
              {
                "function": "connect",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "time",
                "line": 36
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "send",
                "line": 30
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "items",
                "line": 106
              },
              {
                "function": "len",
                "line": 121
              },
              {
                "function": "dumps",
                "line": 30
              },
              {
                "function": "get_event_loop",
                "line": 36
              },
              {
                "function": "time",
                "line": 39
              },
              {
                "function": "loads",
                "line": 42
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "wait_for",
                "line": 41
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "strftime",
                "line": 49
              },
              {
                "function": "append",
                "line": 50
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "len",
                "line": 85
              },
              {
                "function": "get",
                "line": 92
              },
              {
                "function": "get_event_loop",
                "line": 39
              },
              {
                "function": "recv",
                "line": 41
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "get",
                "line": 94
              },
              {
                "function": "now",
                "line": 49
              },
              {
                "function": "split",
                "line": 58
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "any",
                "line": 66
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "get",
                "line": 96
              },
              {
                "function": "len",
                "line": 59
              },
              {
                "function": "strip",
                "line": 60
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "get",
                "line": 98
              },
              {
                "function": "get",
                "line": 71
              },
              {
                "function": "get",
                "line": 100
              },
              {
                "function": "len",
                "line": 61
              },
              {
                "function": "get",
                "line": 102
              }
            ]
          },
          "test_complex_workflow_simulation.py": {
            "functions": [
              {
                "name": "simulate_query_classification",
                "line": 45,
                "async": false,
                "calls": [],
                "parameters": [
                  "query"
                ],
                "decorators": [],
                "file": "test_complex_workflow_simulation.py"
              },
              {
                "name": "simulate_execution_plan",
                "line": 60,
                "async": false,
                "calls": [],
                "parameters": [
                  "query"
                ],
                "decorators": [],
                "file": "test_complex_workflow_simulation.py"
              },
              {
                "name": "simulate_workflow_execution",
                "line": 137,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "simulate_execution_plan",
                  "simulate_query_classification",
                  "join",
                  "set",
                  "upper",
                  "len",
                  "enumerate",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_complex_workflow_simulation.py"
              },
              {
                "name": "evaluate_complexity",
                "line": 235,
                "async": false,
                "calls": [
                  "print",
                  "isinstance",
                  "items",
                  "join"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_complex_workflow_simulation.py"
              },
              {
                "name": "main",
                "line": 277,
                "async": false,
                "calls": [
                  "print",
                  "evaluate_complexity",
                  "simulate_workflow_execution",
                  "len"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_complex_workflow_simulation.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "backend.__version__",
                "names": [
                  "__version__"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 14
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "join",
                "line": 14
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "simulate_query_classification",
                "line": 145
              },
              {
                "function": "print",
                "line": 146
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "simulate_execution_plan",
                "line": 154
              },
              {
                "function": "print",
                "line": 155
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "print",
                "line": 170
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "enumerate",
                "line": 174
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "print",
                "line": 211
              },
              {
                "function": "print",
                "line": 238
              },
              {
                "function": "print",
                "line": 239
              },
              {
                "function": "items",
                "line": 260
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "print",
                "line": 281
              },
              {
                "function": "simulate_workflow_execution",
                "line": 284
              },
              {
                "function": "evaluate_complexity",
                "line": 287
              },
              {
                "function": "print",
                "line": 290
              },
              {
                "function": "print",
                "line": 291
              },
              {
                "function": "print",
                "line": 293
              },
              {
                "function": "print",
                "line": 294
              },
              {
                "function": "print",
                "line": 295
              },
              {
                "function": "print",
                "line": 296
              },
              {
                "function": "print",
                "line": 297
              },
              {
                "function": "print",
                "line": 299
              },
              {
                "function": "print",
                "line": 300
              },
              {
                "function": "print",
                "line": 301
              },
              {
                "function": "print",
                "line": 302
              },
              {
                "function": "print",
                "line": 303
              },
              {
                "function": "print",
                "line": 305
              },
              {
                "function": "print",
                "line": 306
              },
              {
                "function": "print",
                "line": 307
              },
              {
                "function": "print",
                "line": 308
              },
              {
                "function": "print",
                "line": 309
              },
              {
                "function": "print",
                "line": 310
              },
              {
                "function": "print",
                "line": 312
              },
              {
                "function": "print",
                "line": 313
              },
              {
                "function": "print",
                "line": 314
              },
              {
                "function": "print",
                "line": 315
              },
              {
                "function": "print",
                "line": 316
              },
              {
                "function": "print",
                "line": 318
              },
              {
                "function": "print",
                "line": 319
              },
              {
                "function": "print",
                "line": 320
              },
              {
                "function": "print",
                "line": 321
              },
              {
                "function": "main",
                "line": 324
              },
              {
                "function": "dirname",
                "line": 14
              },
              {
                "function": "all",
                "line": 176
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "print",
                "line": 179
              },
              {
                "function": "print",
                "line": 180
              },
              {
                "function": "print",
                "line": 181
              },
              {
                "function": "print",
                "line": 226
              },
              {
                "function": "len",
                "line": 231
              },
              {
                "function": "len",
                "line": 232
              },
              {
                "function": "print",
                "line": 261
              },
              {
                "function": "print",
                "line": 262
              },
              {
                "function": "isinstance",
                "line": 264
              },
              {
                "function": "join",
                "line": 162
              },
              {
                "function": "append",
                "line": 165
              },
              {
                "function": "print",
                "line": 184
              },
              {
                "function": "append",
                "line": 205
              },
              {
                "function": "print",
                "line": 207
              },
              {
                "function": "items",
                "line": 265
              },
              {
                "function": "len",
                "line": 155
              },
              {
                "function": "len",
                "line": 156
              },
              {
                "function": "len",
                "line": 167
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "print",
                "line": 266
              },
              {
                "function": "len",
                "line": 295
              },
              {
                "function": "set",
                "line": 156
              },
              {
                "function": "len",
                "line": 178
              },
              {
                "function": "upper",
                "line": 178
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "join",
                "line": 266
              },
              {
                "function": "print",
                "line": 199
              },
              {
                "function": "print",
                "line": 200
              },
              {
                "function": "print",
                "line": 202
              },
              {
                "function": "print",
                "line": 203
              }
            ]
          },
          "test_no_cache.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "run",
                "line": 107
              },
              {
                "function": "test_no_cache",
                "line": 107
              },
              {
                "function": "connect",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "isoformat",
                "line": 20
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "time",
                "line": 35
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "send",
                "line": 30
              },
              {
                "function": "get",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "now",
                "line": 20
              },
              {
                "function": "dumps",
                "line": 30
              },
              {
                "function": "get_event_loop",
                "line": 35
              },
              {
                "function": "time",
                "line": 40
              },
              {
                "function": "loads",
                "line": 43
              },
              {
                "function": "wait_for",
                "line": 42
              },
              {
                "function": "get",
                "line": 45
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "strftime",
                "line": 47
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "get_event_loop",
                "line": 40
              },
              {
                "function": "recv",
                "line": 42
              },
              {
                "function": "get",
                "line": 76
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "get",
                "line": 92
              },
              {
                "function": "get",
                "line": 93
              },
              {
                "function": "get",
                "line": 94
              },
              {
                "function": "get",
                "line": 95
              },
              {
                "function": "now",
                "line": 47
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "get",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 74
              }
            ]
          },
          "test_simple_workflow.py": {
            "functions": [
              {
                "name": "log",
                "line": 13,
                "async": false,
                "calls": [
                  "strftime",
                  "print",
                  "now"
                ],
                "parameters": [
                  "msg",
                  "emoji"
                ],
                "decorators": [],
                "file": "test_simple_workflow.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 109
              }
            ],
            "calls": [
              {
                "function": "run",
                "line": 113
              },
              {
                "function": "strftime",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "log",
                "line": 18
              },
              {
                "function": "test_workflow",
                "line": 113
              },
              {
                "function": "connect",
                "line": 19
              },
              {
                "function": "log",
                "line": 20
              },
              {
                "function": "loads",
                "line": 24
              },
              {
                "function": "get",
                "line": 25
              },
              {
                "function": "log",
                "line": 26
              },
              {
                "function": "log",
                "line": 33
              },
              {
                "function": "log",
                "line": 40
              },
              {
                "function": "time",
                "line": 43
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "log",
                "line": 108
              },
              {
                "function": "print_exc",
                "line": 110
              },
              {
                "function": "now",
                "line": 14
              },
              {
                "function": "recv",
                "line": 23
              },
              {
                "function": "send",
                "line": 29
              },
              {
                "function": "send",
                "line": 36
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "dumps",
                "line": 29
              },
              {
                "function": "dumps",
                "line": 36
              },
              {
                "function": "get_event_loop",
                "line": 43
              },
              {
                "function": "time",
                "line": 48
              },
              {
                "function": "loads",
                "line": 51
              },
              {
                "function": "get",
                "line": 52
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "wait_for",
                "line": 50
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "log",
                "line": 56
              },
              {
                "function": "log",
                "line": 89
              },
              {
                "function": "get_event_loop",
                "line": 48
              },
              {
                "function": "recv",
                "line": 50
              },
              {
                "function": "log",
                "line": 60
              },
              {
                "function": "log",
                "line": 68
              },
              {
                "function": "send",
                "line": 62
              },
              {
                "function": "log",
                "line": 71
              },
              {
                "function": "dumps",
                "line": 62
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "get",
                "line": 76
              },
              {
                "function": "log",
                "line": 77
              },
              {
                "function": "log",
                "line": 81
              },
              {
                "function": "log",
                "line": 85
              },
              {
                "function": "get",
                "line": 85
              }
            ]
          },
          "test_progress_enhanced.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "run",
                "line": 138
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "test_infrastructure_progress",
                "line": 138
              },
              {
                "function": "connect",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "time",
                "line": 36
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "send",
                "line": 30
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "items",
                "line": 112
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "len",
                "line": 141
              },
              {
                "function": "dumps",
                "line": 30
              },
              {
                "function": "get_event_loop",
                "line": 36
              },
              {
                "function": "time",
                "line": 40
              },
              {
                "function": "loads",
                "line": 43
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "len",
                "line": 122
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "wait_for",
                "line": 42
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "get",
                "line": 50
              },
              {
                "function": "append",
                "line": 52
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "len",
                "line": 107
              },
              {
                "function": "get_event_loop",
                "line": 40
              },
              {
                "function": "recv",
                "line": 42
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "strftime",
                "line": 51
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "get",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "lower",
                "line": 116
              },
              {
                "function": "len",
                "line": 118
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "now",
                "line": 51
              },
              {
                "function": "lower",
                "line": 78
              },
              {
                "function": "lower",
                "line": 78
              },
              {
                "function": "get",
                "line": 82
              },
              {
                "function": "len",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "len",
                "line": 123
              }
            ]
          },
          "test_orchestrator_steps.py": {
            "functions": [
              {
                "name": "test_development_task_detection",
                "line": 28,
                "async": false,
                "calls": [
                  "enumerate",
                  "info",
                  "len",
                  "_create_execution_steps"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_orchestrator_steps.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "langgraph_system.workflow",
                "names": [
                  "_create_execution_steps"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 17
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 14
              },
              {
                "function": "basicConfig",
                "line": 20
              },
              {
                "function": "getLogger",
                "line": 25
              },
              {
                "function": "str",
                "line": 14
              },
              {
                "function": "info",
                "line": 54
              },
              {
                "function": "info",
                "line": 55
              },
              {
                "function": "info",
                "line": 56
              },
              {
                "function": "enumerate",
                "line": 58
              },
              {
                "function": "info",
                "line": 81
              },
              {
                "function": "test_development_task_detection",
                "line": 85
              },
              {
                "function": "Path",
                "line": 13
              },
              {
                "function": "info",
                "line": 59
              },
              {
                "function": "_create_execution_steps",
                "line": 62
              },
              {
                "function": "len",
                "line": 69
              },
              {
                "function": "info",
                "line": 74
              },
              {
                "function": "info",
                "line": 77
              },
              {
                "function": "enumerate",
                "line": 78
              },
              {
                "function": "info",
                "line": 79
              }
            ]
          },
          "test_agent_collaboration.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.state",
                "names": [
                  "ExecutionStep"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 131
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 10
              },
              {
                "function": "dirname",
                "line": 10
              },
              {
                "function": "print",
                "line": 26
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "create_agent_workflow",
                "line": 30
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "enumerate",
                "line": 50
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "create_agent_workflow",
                "line": 115
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "enumerate",
                "line": 127
              },
              {
                "function": "exists",
                "line": 135
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "create_agent_workflow",
                "line": 165
              },
              {
                "function": "any",
                "line": 174
              },
              {
                "function": "all",
                "line": 179
              },
              {
                "function": "print",
                "line": 184
              },
              {
                "function": "get",
                "line": 185
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "print",
                "line": 204
              },
              {
                "function": "print",
                "line": 205
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 225
              },
              {
                "function": "print",
                "line": 226
              },
              {
                "function": "print",
                "line": 227
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "print",
                "line": 236
              },
              {
                "function": "print",
                "line": 237
              },
              {
                "function": "print",
                "line": 238
              },
              {
                "function": "print",
                "line": 271
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "items",
                "line": 275
              },
              {
                "function": "sum",
                "line": 279
              },
              {
                "function": "len",
                "line": 280
              },
              {
                "function": "print",
                "line": 282
              },
              {
                "function": "run",
                "line": 292
              },
              {
                "function": "abspath",
                "line": 10
              },
              {
                "function": "execute",
                "line": 40
              },
              {
                "function": "get",
                "line": 50
              },
              {
                "function": "get",
                "line": 51
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "join",
                "line": 70
              },
              {
                "function": "index",
                "line": 79
              },
              {
                "function": "index",
                "line": 80
              },
              {
                "function": "execute",
                "line": 117
              },
              {
                "function": "get",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "walk",
                "line": 136
              },
              {
                "function": "print",
                "line": 143
              },
              {
                "function": "len",
                "line": 146
              },
              {
                "function": "get",
                "line": 147
              },
              {
                "function": "execute",
                "line": 167
              },
              {
                "function": "print",
                "line": 186
              },
              {
                "function": "exists",
                "line": 209
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "open",
                "line": 213
              },
              {
                "function": "read",
                "line": 214
              },
              {
                "function": "print",
                "line": 277
              },
              {
                "function": "values",
                "line": 279
              },
              {
                "function": "print",
                "line": 285
              },
              {
                "function": "main",
                "line": 292
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "get",
                "line": 68
              },
              {
                "function": "test_reviewer_fixer_collaboration",
                "line": 244
              },
              {
                "function": "print",
                "line": 246
              },
              {
                "function": "test_tetris_workflow",
                "line": 251
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "test_workflow_completion_bug",
                "line": 258
              },
              {
                "function": "print",
                "line": 260
              },
              {
                "function": "test_settings_env_sync",
                "line": 265
              },
              {
                "function": "print",
                "line": 267
              },
              {
                "function": "print",
                "line": 287
              },
              {
                "function": "print",
                "line": 289
              },
              {
                "function": "str",
                "line": 61
              },
              {
                "function": "len",
                "line": 84
              },
              {
                "function": "endswith",
                "line": 138
              },
              {
                "function": "len",
                "line": 141
              },
              {
                "function": "get",
                "line": 176
              },
              {
                "function": "get",
                "line": 181
              },
              {
                "function": "upper",
                "line": 58
              },
              {
                "function": "append",
                "line": 139
              },
              {
                "function": "upper",
                "line": 277
              },
              {
                "function": "join",
                "line": 139
              }
            ]
          },
          "test_agents_fixed.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 109
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "run",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "test_multi_agents",
                "line": 114
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "connect",
                "line": 18
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "set",
                "line": 37
              },
              {
                "function": "now",
                "line": 39
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print_exc",
                "line": 110
              },
              {
                "function": "recv",
                "line": 22
              },
              {
                "function": "send",
                "line": 32
              },
              {
                "function": "len",
                "line": 90
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "dumps",
                "line": 32
              },
              {
                "function": "loads",
                "line": 46
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "strftime",
                "line": 28
              },
              {
                "function": "now",
                "line": 43
              },
              {
                "function": "wait_for",
                "line": 45
              },
              {
                "function": "get",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "lower",
                "line": 72
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "get",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "join",
                "line": 85
              },
              {
                "function": "len",
                "line": 86
              },
              {
                "function": "recv",
                "line": 45
              },
              {
                "function": "add",
                "line": 52
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "send",
                "line": 63
              },
              {
                "function": "lower",
                "line": 67
              },
              {
                "function": "lower",
                "line": 67
              },
              {
                "function": "sorted",
                "line": 85
              },
              {
                "function": "len",
                "line": 103
              },
              {
                "function": "now",
                "line": 28
              },
              {
                "function": "dumps",
                "line": 63
              },
              {
                "function": "str",
                "line": 72
              },
              {
                "function": "str",
                "line": 67
              },
              {
                "function": "str",
                "line": 67
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "upper",
                "line": 53
              }
            ]
          },
          "test_multi_agent_workflow.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "langgraph_system.workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "agents.specialized.orchestrator_agent",
                "names": [
                  "OrchestratorAgent"
                ],
                "line": 21
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 22
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 23
              },
              {
                "type": "from_import",
                "module": "agents.specialized.reviewer_gpt_agent",
                "names": [
                  "ReviewerGPTAgent"
                ],
                "line": 24
              },
              {
                "type": "from_import",
                "module": "agents.specialized.fixerbot_agent",
                "names": [
                  "FixerBotAgent"
                ],
                "line": 25
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 107
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 92
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 18
              },
              {
                "function": "basicConfig",
                "line": 28
              },
              {
                "function": "getLogger",
                "line": 34
              },
              {
                "function": "str",
                "line": 18
              },
              {
                "function": "info",
                "line": 41
              },
              {
                "function": "info",
                "line": 42
              },
              {
                "function": "info",
                "line": 43
              },
              {
                "function": "info",
                "line": 46
              },
              {
                "function": "create_agent_workflow",
                "line": 47
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "info",
                "line": 52
              },
              {
                "function": "info",
                "line": 101
              },
              {
                "function": "info",
                "line": 102
              },
              {
                "function": "info",
                "line": 103
              },
              {
                "function": "OrchestratorAgent",
                "line": 105
              },
              {
                "function": "TaskRequest",
                "line": 109
              },
              {
                "function": "info",
                "line": 114
              },
              {
                "function": "info",
                "line": 118
              },
              {
                "function": "info",
                "line": 119
              },
              {
                "function": "info",
                "line": 130
              },
              {
                "function": "info",
                "line": 138
              },
              {
                "function": "info",
                "line": 150
              },
              {
                "function": "info",
                "line": 151
              },
              {
                "function": "info",
                "line": 152
              },
              {
                "function": "info",
                "line": 153
              },
              {
                "function": "run",
                "line": 158
              },
              {
                "function": "Path",
                "line": 17
              },
              {
                "function": "info",
                "line": 62
              },
              {
                "function": "info",
                "line": 63
              },
              {
                "function": "info",
                "line": 64
              },
              {
                "function": "get",
                "line": 67
              },
              {
                "function": "info",
                "line": 68
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "info",
                "line": 76
              },
              {
                "function": "execute",
                "line": 116
              },
              {
                "function": "info",
                "line": 124
              },
              {
                "function": "warning",
                "line": 128
              },
              {
                "function": "test_simple_orchestration",
                "line": 141
              },
              {
                "function": "sleep",
                "line": 144
              },
              {
                "function": "main",
                "line": 158
              },
              {
                "function": "StreamHandler",
                "line": 31
              },
              {
                "function": "execute",
                "line": 55
              },
              {
                "function": "get",
                "line": 70
              },
              {
                "function": "info",
                "line": 72
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "get",
                "line": 79
              },
              {
                "function": "info",
                "line": 80
              },
              {
                "function": "get",
                "line": 83
              },
              {
                "function": "info",
                "line": 84
              },
              {
                "function": "error",
                "line": 87
              },
              {
                "function": "error",
                "line": 91
              },
              {
                "function": "print_exc",
                "line": 93
              },
              {
                "function": "info",
                "line": 126
              },
              {
                "function": "str",
                "line": 71
              },
              {
                "function": "len",
                "line": 68
              },
              {
                "function": "get",
                "line": 71
              },
              {
                "function": "len",
                "line": 76
              },
              {
                "function": "len",
                "line": 124
              },
              {
                "function": "get",
                "line": 87
              },
              {
                "function": "get",
                "line": 126
              },
              {
                "function": "get",
                "line": 126
              }
            ]
          },
          "real_whiteboard_request.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 120
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "run",
                "line": 126
              },
              {
                "function": "generate_whiteboard_app",
                "line": 126
              },
              {
                "function": "strftime",
                "line": 23
              },
              {
                "function": "connect",
                "line": 26
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "loads",
                "line": 31
              },
              {
                "function": "get",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "now",
                "line": 58
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print_exc",
                "line": 121
              },
              {
                "function": "recv",
                "line": 30
              },
              {
                "function": "send",
                "line": 50
              },
              {
                "function": "now",
                "line": 23
              },
              {
                "function": "dumps",
                "line": 50
              },
              {
                "function": "loads",
                "line": 63
              },
              {
                "function": "get",
                "line": 65
              },
              {
                "function": "get",
                "line": 66
              },
              {
                "function": "get",
                "line": 67
              },
              {
                "function": "now",
                "line": 110
              },
              {
                "function": "now",
                "line": 60
              },
              {
                "function": "wait_for",
                "line": 62
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "recv",
                "line": 62
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "get",
                "line": 71
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "upper",
                "line": 74
              },
              {
                "function": "send",
                "line": 91
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "dumps",
                "line": 91
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "upper",
                "line": 78
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "get",
                "line": 95
              },
              {
                "function": "get",
                "line": 98
              }
            ]
          },
          "test_final.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 2
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 3
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 4
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 5
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 10
              },
              {
                "function": "print",
                "line": 11
              },
              {
                "function": "run",
                "line": 79
              },
              {
                "function": "final_test",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "connect",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "set",
                "line": 31
              },
              {
                "function": "now",
                "line": 33
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "recv",
                "line": 18
              },
              {
                "function": "send",
                "line": 28
              },
              {
                "function": "len",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "dumps",
                "line": 28
              },
              {
                "function": "loads",
                "line": 38
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "strftime",
                "line": 24
              },
              {
                "function": "now",
                "line": 35
              },
              {
                "function": "wait_for",
                "line": 37
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "get",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "recv",
                "line": 37
              },
              {
                "function": "add",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "send",
                "line": 53
              },
              {
                "function": "join",
                "line": 63
              },
              {
                "function": "now",
                "line": 24
              },
              {
                "function": "dumps",
                "line": 53
              },
              {
                "function": "get",
                "line": 57
              },
              {
                "function": "upper",
                "line": 44
              }
            ]
          },
          "test_tetris_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 17,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              },
              {
                "name": "record_agent",
                "line": 28,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "now",
                  "isoformat"
                ],
                "parameters": [
                  "self",
                  "agent_name",
                  "timestamp"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              },
              {
                "name": "record_output",
                "line": 38,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "agent_name",
                  "output"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              },
              {
                "name": "record_quality_score",
                "line": 42,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "now",
                  "isoformat"
                ],
                "parameters": [
                  "self",
                  "score",
                  "agent"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              },
              {
                "name": "record_message",
                "line": 51,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "msg"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              },
              {
                "name": "generate_report",
                "line": 55,
                "async": false,
                "calls": [
                  "isinstance",
                  "dumps",
                  "str",
                  "items",
                  "upper",
                  "len",
                  "enumerate",
                  "total_seconds"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_tetris_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "WorkflowTracker",
                "line": 14,
                "methods": [
                  "__init__",
                  "record_agent",
                  "record_output",
                  "record_quality_score",
                  "record_message",
                  "generate_report"
                ],
                "bases": [],
                "file": "test_tetris_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 261
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 249
              }
            ],
            "calls": [
              {
                "function": "WorkflowTracker",
                "line": 124
              },
              {
                "function": "now",
                "line": 125
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "run",
                "line": 276
              },
              {
                "function": "append",
                "line": 32
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "append",
                "line": 44
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "append",
                "line": 53
              },
              {
                "function": "enumerate",
                "line": 76
              },
              {
                "function": "items",
                "line": 89
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "makedirs",
                "line": 262
              },
              {
                "function": "print",
                "line": 265
              },
              {
                "function": "test_tetris_workflow",
                "line": 276
              },
              {
                "function": "isoformat",
                "line": 31
              },
              {
                "function": "total_seconds",
                "line": 57
              },
              {
                "function": "enumerate",
                "line": 81
              },
              {
                "function": "isinstance",
                "line": 91
              },
              {
                "function": "connect",
                "line": 155
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "print",
                "line": 170
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "print",
                "line": 248
              },
              {
                "function": "print_exc",
                "line": 250
              },
              {
                "function": "generate_report",
                "line": 256
              },
              {
                "function": "dirname",
                "line": 262
              },
              {
                "function": "open",
                "line": 263
              },
              {
                "function": "write",
                "line": 264
              },
              {
                "function": "print",
                "line": 267
              },
              {
                "function": "isoformat",
                "line": 47
              },
              {
                "function": "len",
                "line": 67
              },
              {
                "function": "len",
                "line": 71
              },
              {
                "function": "len",
                "line": 98
              },
              {
                "function": "isoformat",
                "line": 129
              },
              {
                "function": "isoformat",
                "line": 163
              },
              {
                "function": "send",
                "line": 167
              },
              {
                "function": "now",
                "line": 245
              },
              {
                "function": "now",
                "line": 253
              },
              {
                "function": "generate_report",
                "line": 264
              },
              {
                "function": "now",
                "line": 31
              },
              {
                "function": "upper",
                "line": 90
              },
              {
                "function": "len",
                "line": 106
              },
              {
                "function": "dumps",
                "line": 167
              },
              {
                "function": "loads",
                "line": 179
              },
              {
                "function": "record_message",
                "line": 180
              },
              {
                "function": "get",
                "line": 182
              },
              {
                "function": "now",
                "line": 47
              },
              {
                "function": "dumps",
                "line": 92
              },
              {
                "function": "str",
                "line": 94
              },
              {
                "function": "now",
                "line": 163
              },
              {
                "function": "len",
                "line": 166
              },
              {
                "function": "wait_for",
                "line": 177
              },
              {
                "function": "get",
                "line": 186
              },
              {
                "function": "get",
                "line": 187
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "record_agent",
                "line": 189
              },
              {
                "function": "print",
                "line": 234
              },
              {
                "function": "print",
                "line": 237
              },
              {
                "function": "print",
                "line": 241
              },
              {
                "function": "recv",
                "line": 177
              },
              {
                "function": "get",
                "line": 192
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "record_agent",
                "line": 194
              },
              {
                "function": "get",
                "line": 197
              },
              {
                "function": "get",
                "line": 198
              },
              {
                "function": "print",
                "line": 199
              },
              {
                "function": "record_output",
                "line": 200
              },
              {
                "function": "get",
                "line": 198
              },
              {
                "function": "get",
                "line": 203
              },
              {
                "function": "get",
                "line": 204
              },
              {
                "function": "record_quality_score",
                "line": 205
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "dumps",
                "line": 234
              },
              {
                "function": "print",
                "line": 213
              },
              {
                "function": "str",
                "line": 199
              },
              {
                "function": "print",
                "line": 216
              },
              {
                "function": "now",
                "line": 217
              },
              {
                "function": "get",
                "line": 221
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "get",
                "line": 227
              },
              {
                "function": "print",
                "line": 228
              },
              {
                "function": "len",
                "line": 229
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "len",
                "line": 228
              }
            ]
          },
          "cli.py": {
            "functions": [
              {
                "name": "main",
                "line": 394,
                "async": false,
                "calls": [
                  "run",
                  "_process_task",
                  "run_tests",
                  "add_argument",
                  "parse_args",
                  "ArgumentParser",
                  "initialize",
                  "KIAutoAgentCLI",
                  "run_task",
                  "_run_test_scenarios"
                ],
                "parameters": [],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "__init__",
                "line": 35,
                "async": false,
                "calls": [
                  "now"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_show_welcome",
                "line": 67,
                "async": false,
                "calls": [
                  "print",
                  "Panel"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_display_results",
                "line": 198,
                "async": false,
                "calls": [
                  "findall",
                  "Syntax",
                  "print",
                  "Panel",
                  "get",
                  "join",
                  "len"
                ],
                "parameters": [
                  "self",
                  "result"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_show_help",
                "line": 257,
                "async": false,
                "calls": [
                  "print",
                  "Table",
                  "add_row",
                  "add_column"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_show_agents",
                "line": 275,
                "async": false,
                "calls": [
                  "print",
                  "Table",
                  "add_row",
                  "add_column"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_show_history",
                "line": 299,
                "async": false,
                "calls": [
                  "Table",
                  "print",
                  "get",
                  "add_column",
                  "str",
                  "fromisoformat",
                  "len",
                  "strftime",
                  "enumerate",
                  "add_row"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_load_history",
                "line": 375,
                "async": false,
                "calls": [
                  "exists",
                  "open",
                  "load"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              },
              {
                "name": "_save_history",
                "line": 385,
                "async": false,
                "calls": [
                  "open",
                  "dump"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "cli.py"
              }
            ],
            "classes": [
              {
                "name": "KIAutoAgentCLI",
                "line": 30,
                "methods": [
                  "__init__",
                  "_show_welcome",
                  "_display_results",
                  "_show_help",
                  "_show_agents",
                  "_show_history",
                  "_load_history",
                  "_save_history"
                ],
                "bases": [],
                "file": "cli.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Optional",
                  "Dict",
                  "Any"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "argparse",
                "names": [
                  "argparse"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "rich.console",
                "names": [
                  "Console"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "rich.table",
                "names": [
                  "Table"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "rich.panel",
                "names": [
                  "Panel"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "rich.progress",
                "names": [
                  "Progress",
                  "SpinnerColumn",
                  "TextColumn"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "rich.prompt",
                "names": [
                  "Prompt",
                  "Confirm"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "rich.syntax",
                "names": [
                  "Syntax"
                ],
                "line": 19
              },
              {
                "type": "from_import",
                "module": "rich",
                "names": [
                  "print"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "orchestration.master_dispatcher",
                "names": [
                  "MasterDispatcher"
                ],
                "line": 25
              },
              {
                "type": "from_import",
                "module": "agents",
                "names": [
                  "AVAILABLE_AGENTS"
                ],
                "line": 26
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 239
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 23
              },
              {
                "function": "Console",
                "line": 28
              },
              {
                "function": "dirname",
                "line": 23
              },
              {
                "function": "ArgumentParser",
                "line": 396
              },
              {
                "function": "add_argument",
                "line": 397
              },
              {
                "function": "add_argument",
                "line": 398
              },
              {
                "function": "parse_args",
                "line": 399
              },
              {
                "function": "KIAutoAgentCLI",
                "line": 401
              },
              {
                "function": "main",
                "line": 420
              },
              {
                "function": "abspath",
                "line": 23
              },
              {
                "function": "now",
                "line": 38
              },
              {
                "function": "_show_welcome",
                "line": 65
              },
              {
                "function": "Panel",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "get",
                "line": 201
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "get",
                "line": 206
              },
              {
                "function": "get",
                "line": 212
              },
              {
                "function": "get",
                "line": 220
              },
              {
                "function": "get",
                "line": 232
              },
              {
                "function": "get",
                "line": 252
              },
              {
                "function": "Table",
                "line": 259
              },
              {
                "function": "add_column",
                "line": 260
              },
              {
                "function": "add_column",
                "line": 261
              },
              {
                "function": "add_column",
                "line": 262
              },
              {
                "function": "add_row",
                "line": 264
              },
              {
                "function": "add_row",
                "line": 265
              },
              {
                "function": "add_row",
                "line": 266
              },
              {
                "function": "add_row",
                "line": 267
              },
              {
                "function": "add_row",
                "line": 268
              },
              {
                "function": "add_row",
                "line": 269
              },
              {
                "function": "add_row",
                "line": 270
              },
              {
                "function": "add_row",
                "line": 271
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "Table",
                "line": 277
              },
              {
                "function": "add_column",
                "line": 278
              },
              {
                "function": "add_column",
                "line": 279
              },
              {
                "function": "add_column",
                "line": 280
              },
              {
                "function": "add_column",
                "line": 281
              },
              {
                "function": "print",
                "line": 297
              },
              {
                "function": "Table",
                "line": 305
              },
              {
                "function": "add_column",
                "line": 306
              },
              {
                "function": "add_column",
                "line": 307
              },
              {
                "function": "add_column",
                "line": 308
              },
              {
                "function": "add_column",
                "line": 309
              },
              {
                "function": "enumerate",
                "line": 311
              },
              {
                "function": "print",
                "line": 319
              },
              {
                "function": "len",
                "line": 328
              },
              {
                "function": "Panel",
                "line": 346
              },
              {
                "function": "print",
                "line": 347
              },
              {
                "function": "print",
                "line": 359
              },
              {
                "function": "enumerate",
                "line": 361
              },
              {
                "function": "print",
                "line": 373
              },
              {
                "function": "exists",
                "line": 378
              },
              {
                "function": "run",
                "line": 408
              },
              {
                "function": "Progress",
                "line": 42
              },
              {
                "function": "add_task",
                "line": 47
              },
              {
                "function": "update",
                "line": 50
              },
              {
                "function": "MasterDispatcher",
                "line": 51
              },
              {
                "function": "advance",
                "line": 52
              },
              {
                "function": "update",
                "line": 55
              },
              {
                "function": "advance",
                "line": 57
              },
              {
                "function": "update",
                "line": 60
              },
              {
                "function": "_load_history",
                "line": 61
              },
              {
                "function": "advance",
                "line": 62
              },
              {
                "function": "initialize",
                "line": 97
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "Progress",
                "line": 161
              },
              {
                "function": "add_task",
                "line": 167
              },
              {
                "function": "print",
                "line": 208
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 215
              },
              {
                "function": "print",
                "line": 216
              },
              {
                "function": "print",
                "line": 217
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 225
              },
              {
                "function": "get",
                "line": 227
              },
              {
                "function": "print",
                "line": 233
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "add_row",
                "line": 295
              },
              {
                "function": "print",
                "line": 302
              },
              {
                "function": "strftime",
                "line": 312
              },
              {
                "function": "get",
                "line": 314
              },
              {
                "function": "add_row",
                "line": 317
              },
              {
                "function": "get_agent_stats",
                "line": 324
              },
              {
                "function": "now",
                "line": 327
              },
              {
                "function": "sum",
                "line": 329
              },
              {
                "function": "max",
                "line": 329
              },
              {
                "function": "items",
                "line": 341
              },
              {
                "function": "print",
                "line": 362
              },
              {
                "function": "run_task",
                "line": 408
              },
              {
                "function": "run",
                "line": 414
              },
              {
                "function": "run",
                "line": 417
              },
              {
                "function": "SpinnerColumn",
                "line": 43
              },
              {
                "function": "TextColumn",
                "line": 44
              },
              {
                "function": "sleep",
                "line": 56
              },
              {
                "function": "ask",
                "line": 102
              },
              {
                "function": "lower",
                "line": 108
              },
              {
                "function": "strip",
                "line": 109
              },
              {
                "function": "SpinnerColumn",
                "line": 162
              },
              {
                "function": "TextColumn",
                "line": 163
              },
              {
                "function": "stop",
                "line": 180
              },
              {
                "function": "_display_results",
                "line": 183
              },
              {
                "function": "append",
                "line": 186
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "findall",
                "line": 240
              },
              {
                "function": "Panel",
                "line": 247
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "str",
                "line": 317
              },
              {
                "function": "get",
                "line": 367
              },
              {
                "function": "print",
                "line": 369
              },
              {
                "function": "open",
                "line": 389
              },
              {
                "function": "dump",
                "line": 390
              },
              {
                "function": "initialize",
                "line": 406
              },
              {
                "function": "_process_task",
                "line": 407
              },
              {
                "function": "run_tests",
                "line": 414
              },
              {
                "function": "run",
                "line": 417
              },
              {
                "function": "strip",
                "line": 104
              },
              {
                "function": "ask",
                "line": 113
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "process_request",
                "line": 175
              },
              {
                "function": "stop",
                "line": 195
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "Syntax",
                "line": 243
              },
              {
                "function": "print",
                "line": 244
              },
              {
                "function": "fromisoformat",
                "line": 312
              },
              {
                "function": "len",
                "line": 313
              },
              {
                "function": "split",
                "line": 333
              },
              {
                "function": "process_request",
                "line": 366
              },
              {
                "function": "print",
                "line": 371
              },
              {
                "function": "open",
                "line": 380
              },
              {
                "function": "load",
                "line": 381
              },
              {
                "function": "initialize",
                "line": 412
              },
              {
                "function": "_run_test_scenarios",
                "line": 413
              },
              {
                "function": "_save_history",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "_show_help",
                "line": 119
              },
              {
                "function": "isoformat",
                "line": 187
              },
              {
                "function": "get",
                "line": 208
              },
              {
                "function": "get",
                "line": 209
              },
              {
                "function": "get",
                "line": 215
              },
              {
                "function": "get",
                "line": 216
              },
              {
                "function": "get",
                "line": 217
              },
              {
                "function": "get",
                "line": 223
              },
              {
                "function": "get",
                "line": 224
              },
              {
                "function": "get",
                "line": 225
              },
              {
                "function": "get",
                "line": 342
              },
              {
                "function": "get",
                "line": 342
              },
              {
                "function": "len",
                "line": 362
              },
              {
                "function": "split",
                "line": 108
              },
              {
                "function": "clear",
                "line": 122
              },
              {
                "function": "_show_welcome",
                "line": 123
              },
              {
                "function": "join",
                "line": 229
              },
              {
                "function": "len",
                "line": 247
              },
              {
                "function": "get",
                "line": 329
              },
              {
                "function": "str",
                "line": 333
              },
              {
                "function": "len",
                "line": 109
              },
              {
                "function": "_show_agents",
                "line": 126
              },
              {
                "function": "str",
                "line": 150
              },
              {
                "function": "now",
                "line": 187
              },
              {
                "function": "str",
                "line": 196
              },
              {
                "function": "str",
                "line": 371
              },
              {
                "function": "_show_history",
                "line": 129
              },
              {
                "function": "_show_stats",
                "line": 132
              },
              {
                "function": "print",
                "line": 138
              },
              {
                "function": "_process_task",
                "line": 136
              },
              {
                "function": "_run_test_scenarios",
                "line": 141
              },
              {
                "function": "_process_task",
                "line": 145
              }
            ]
          },
          "test_query_class.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 2
              },
              {
                "type": "from_import",
                "module": "langgraph_system.query_classifier",
                "names": [
                  "EnhancedQueryClassifier"
                ],
                "line": 5
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 3
              },
              {
                "function": "EnhancedQueryClassifier",
                "line": 7
              },
              {
                "function": "classify_query",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 21
              }
            ]
          },
          "test_system.py": {
            "functions": [
              {
                "name": "print_test",
                "line": 30,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "name",
                  "status",
                  "message"
                ],
                "decorators": [],
                "file": "test_system.py"
              },
              {
                "name": "print_section",
                "line": 36,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "title"
                ],
                "decorators": [],
                "file": "test_system.py"
              },
              {
                "name": "__init__",
                "line": 206,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_system.py"
              }
            ],
            "classes": [
              {
                "name": "Colors",
                "line": 22,
                "methods": [],
                "bases": [],
                "file": "test_system.py"
              },
              {
                "name": "MockAgent",
                "line": 205,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "test_system.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "orchestration.master_dispatcher",
                "names": [
                  "MasterDispatcher"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "orchestration.intent_classifier",
                "names": [
                  "IntentClassifier"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "orchestration.workflow_generator",
                "names": [
                  "WorkflowGenerator"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "orchestration.execution_engine",
                "names": [
                  "ExecutionEngine"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "orchestration.learning_system",
                "names": [
                  "LearningSystem"
                ],
                "line": 19
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 13
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print_section",
                "line": 44
              },
              {
                "function": "IntentClassifier",
                "line": 46
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print_section",
                "line": 76
              },
              {
                "function": "WorkflowGenerator",
                "line": 78
              },
              {
                "function": "print_test",
                "line": 111
              },
              {
                "function": "print_test",
                "line": 112
              },
              {
                "function": "print_test",
                "line": 113
              },
              {
                "function": "print_test",
                "line": 114
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print_section",
                "line": 131
              },
              {
                "function": "LearningSystem",
                "line": 133
              },
              {
                "function": "print_test",
                "line": 151
              },
              {
                "function": "suggest_workflow",
                "line": 155
              },
              {
                "function": "print_test",
                "line": 157
              },
              {
                "function": "print_test",
                "line": 162
              },
              {
                "function": "get_intent_statistics",
                "line": 166
              },
              {
                "function": "print_test",
                "line": 168
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print_section",
                "line": 177
              },
              {
                "function": "ExecutionEngine",
                "line": 179
              },
              {
                "function": "len",
                "line": 226
              },
              {
                "function": "get",
                "line": 227
              },
              {
                "function": "print_test",
                "line": 229
              },
              {
                "function": "print_test",
                "line": 231
              },
              {
                "function": "print_test",
                "line": 233
              },
              {
                "function": "print_test",
                "line": 235
              },
              {
                "function": "print",
                "line": 239
              },
              {
                "function": "print_section",
                "line": 244
              },
              {
                "function": "print",
                "line": 277
              },
              {
                "function": "print",
                "line": 278
              },
              {
                "function": "print",
                "line": 279
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "print",
                "line": 281
              },
              {
                "function": "print",
                "line": 282
              },
              {
                "function": "append",
                "line": 287
              },
              {
                "function": "append",
                "line": 288
              },
              {
                "function": "append",
                "line": 289
              },
              {
                "function": "append",
                "line": 290
              },
              {
                "function": "append",
                "line": 291
              },
              {
                "function": "print_section",
                "line": 294
              },
              {
                "function": "sum",
                "line": 296
              },
              {
                "function": "len",
                "line": 297
              },
              {
                "function": "print",
                "line": 305
              },
              {
                "function": "print",
                "line": 308
              },
              {
                "function": "print",
                "line": 322
              },
              {
                "function": "print",
                "line": 323
              },
              {
                "function": "run",
                "line": 328
              },
              {
                "function": "exit",
                "line": 329
              },
              {
                "function": "abspath",
                "line": 13
              },
              {
                "function": "print_test",
                "line": 65
              },
              {
                "function": "len",
                "line": 72
              },
              {
                "function": "generate",
                "line": 98
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "get",
                "line": 111
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "record_execution",
                "line": 147
              },
              {
                "function": "len",
                "line": 150
              },
              {
                "function": "get_agent_performance",
                "line": 161
              },
              {
                "function": "len",
                "line": 167
              },
              {
                "function": "MockAgent",
                "line": 218
              },
              {
                "function": "execute",
                "line": 221
              },
              {
                "function": "get",
                "line": 226
              },
              {
                "function": "MasterDispatcher",
                "line": 250
              },
              {
                "function": "print_test",
                "line": 258
              },
              {
                "function": "print_test",
                "line": 259
              },
              {
                "function": "print_test",
                "line": 260
              },
              {
                "function": "print_test",
                "line": 261
              },
              {
                "function": "len",
                "line": 264
              },
              {
                "function": "print_test",
                "line": 265
              },
              {
                "function": "print",
                "line": 268
              },
              {
                "function": "print",
                "line": 301
              },
              {
                "function": "print",
                "line": 303
              },
              {
                "function": "print",
                "line": 320
              },
              {
                "function": "main",
                "line": 328
              },
              {
                "function": "classify",
                "line": 61
              },
              {
                "function": "len",
                "line": 107
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "len",
                "line": 122
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print_test",
                "line": 272
              },
              {
                "function": "test_intent_classifier",
                "line": 287
              },
              {
                "function": "test_workflow_generator",
                "line": 288
              },
              {
                "function": "test_learning_system",
                "line": 289
              },
              {
                "function": "test_execution_engine",
                "line": 290
              },
              {
                "function": "test_master_dispatcher",
                "line": 291
              },
              {
                "function": "len",
                "line": 71
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "len",
                "line": 112
              },
              {
                "function": "get",
                "line": 115
              },
              {
                "function": "len",
                "line": 152
              },
              {
                "function": "len",
                "line": 163
              },
              {
                "function": "len",
                "line": 169
              },
              {
                "function": "sleep",
                "line": 210
              },
              {
                "function": "get",
                "line": 230
              },
              {
                "function": "len",
                "line": 232
              },
              {
                "function": "str",
                "line": 272
              },
              {
                "function": "strftime",
                "line": 282
              },
              {
                "function": "strftime",
                "line": 323
              },
              {
                "function": "get",
                "line": 112
              },
              {
                "function": "get",
                "line": 232
              },
              {
                "function": "get",
                "line": 115
              },
              {
                "function": "now",
                "line": 282
              },
              {
                "function": "now",
                "line": 323
              },
              {
                "function": "len",
                "line": 123
              }
            ]
          },
          "test_code_verification.py": {
            "functions": [
              {
                "name": "test_routing_replan_check",
                "line": 8,
                "async": false,
                "calls": [
                  "print",
                  "open",
                  "read"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_routing_in_progress_check",
                "line": 27,
                "async": false,
                "calls": [
                  "print",
                  "open",
                  "read"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_orchestrator_replan_logic",
                "line": 46,
                "async": false,
                "calls": [
                  "print",
                  "read",
                  "open",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_reviewer_collaboration",
                "line": 69,
                "async": false,
                "calls": [
                  "print",
                  "read",
                  "open",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_conditional_edges",
                "line": 90,
                "async": false,
                "calls": [
                  "print",
                  "open",
                  "read"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_settings_sync_code",
                "line": 108,
                "async": false,
                "calls": [
                  "print",
                  "open",
                  "read",
                  "exists",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "test_instruction_files",
                "line": 134,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "join",
                  "exists",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              },
              {
                "name": "main",
                "line": 158,
                "async": false,
                "calls": [
                  "zip",
                  "test",
                  "print",
                  "append",
                  "sum",
                  "len"
                ],
                "parameters": [],
                "decorators": [],
                "file": "test_code_verification.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 10
              },
              {
                "function": "print",
                "line": 11
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "all",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "all",
                "line": 86
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "all",
                "line": 130
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "all",
                "line": 154
              },
              {
                "function": "print",
                "line": 155
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "print",
                "line": 184
              },
              {
                "function": "print",
                "line": 185
              },
              {
                "function": "sum",
                "line": 187
              },
              {
                "function": "len",
                "line": 188
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "zip",
                "line": 211
              },
              {
                "function": "main",
                "line": 215
              },
              {
                "function": "open",
                "line": 13
              },
              {
                "function": "read",
                "line": 14
              },
              {
                "function": "open",
                "line": 32
              },
              {
                "function": "read",
                "line": 33
              },
              {
                "function": "open",
                "line": 51
              },
              {
                "function": "read",
                "line": 52
              },
              {
                "function": "open",
                "line": 74
              },
              {
                "function": "read",
                "line": 75
              },
              {
                "function": "open",
                "line": 95
              },
              {
                "function": "read",
                "line": 96
              },
              {
                "function": "exists",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "open",
                "line": 119
              },
              {
                "function": "read",
                "line": 120
              },
              {
                "function": "join",
                "line": 149
              },
              {
                "function": "exists",
                "line": 150
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 212
              },
              {
                "function": "append",
                "line": 177
              },
              {
                "function": "print",
                "line": 195
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "test",
                "line": 177
              },
              {
                "function": "print",
                "line": 179
              },
              {
                "function": "append",
                "line": 180
              }
            ]
          },
          "test_research_api.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "run",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "connect",
                "line": 16
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "test_research_agent",
                "line": 60
              },
              {
                "function": "send",
                "line": 26
              },
              {
                "function": "dumps",
                "line": 26
              },
              {
                "function": "loads",
                "line": 32
              },
              {
                "function": "wait_for",
                "line": 31
              },
              {
                "function": "get",
                "line": 34
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "recv",
                "line": 31
              },
              {
                "function": "len",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "get",
                "line": 37
              },
              {
                "function": "get",
                "line": 38
              },
              {
                "function": "get",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "get",
                "line": 48
              }
            ]
          },
          "test_query_classifier_simple.py": {
            "functions": [
              {
                "name": "simple_classify",
                "line": 72,
                "async": false,
                "calls": [
                  "split",
                  "sum",
                  "any",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "query"
                ],
                "decorators": [],
                "file": "test_query_classifier_simple.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "backend.__version__",
                "names": [
                  "__version__"
                ],
                "line": 17
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 11
              },
              {
                "function": "print",
                "line": 13
              },
              {
                "function": "print",
                "line": 14
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "items",
                "line": 132
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "join",
                "line": 11
              },
              {
                "function": "lower",
                "line": 51
              },
              {
                "function": "lower",
                "line": 74
              },
              {
                "function": "any",
                "line": 77
              },
              {
                "function": "len",
                "line": 81
              },
              {
                "function": "sum",
                "line": 82
              },
              {
                "function": "any",
                "line": 87
              },
              {
                "function": "any",
                "line": 90
              },
              {
                "function": "any",
                "line": 93
              },
              {
                "function": "simple_classify",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "dirname",
                "line": 11
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "split",
                "line": 81
              }
            ]
          },
          "test_websocket_messages.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "run",
                "line": 99
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "test_progress_messages",
                "line": 99
              },
              {
                "function": "connect",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "time",
                "line": 35
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "sorted",
                "line": 77
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "send",
                "line": 29
              },
              {
                "function": "get",
                "line": 73
              },
              {
                "function": "items",
                "line": 77
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "open",
                "line": 86
              },
              {
                "function": "dump",
                "line": 87
              },
              {
                "function": "dumps",
                "line": 29
              },
              {
                "function": "get_event_loop",
                "line": 35
              },
              {
                "function": "time",
                "line": 36
              },
              {
                "function": "loads",
                "line": 39
              },
              {
                "function": "append",
                "line": 40
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "wait_for",
                "line": 38
              },
              {
                "function": "strftime",
                "line": 44
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "len",
                "line": 68
              },
              {
                "function": "get_event_loop",
                "line": 36
              },
              {
                "function": "recv",
                "line": 38
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "get",
                "line": 51
              },
              {
                "function": "get",
                "line": 52
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "now",
                "line": 44
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "len",
                "line": 55
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "dumps",
                "line": 58
              }
            ]
          },
          "test_complex_app_request.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.workflow",
                "names": [
                  "create_extended_workflow"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.state",
                "names": [
                  "create_initial_state"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "backend.__version__",
                "names": [
                  "__version__"
                ],
                "line": 19
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 179
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 15
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "join",
                "line": 15
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "create_extended_workflow",
                "line": 69
              },
              {
                "function": "create_initial_state",
                "line": 72
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "now",
                "line": 183
              },
              {
                "function": "total_seconds",
                "line": 184
              },
              {
                "function": "print",
                "line": 187
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "print",
                "line": 198
              },
              {
                "function": "print",
                "line": 200
              },
              {
                "function": "print",
                "line": 207
              },
              {
                "function": "print",
                "line": 208
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "print",
                "line": 220
              },
              {
                "function": "items",
                "line": 221
              },
              {
                "function": "all",
                "line": 225
              },
              {
                "function": "print",
                "line": 227
              },
              {
                "function": "print",
                "line": 232
              },
              {
                "function": "print",
                "line": 238
              },
              {
                "function": "print",
                "line": 239
              },
              {
                "function": "print",
                "line": 240
              },
              {
                "function": "new_event_loop",
                "line": 243
              },
              {
                "function": "set_event_loop",
                "line": 244
              },
              {
                "function": "print",
                "line": 251
              },
              {
                "function": "print",
                "line": 252
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "print",
                "line": 254
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 257
              },
              {
                "function": "print",
                "line": 258
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "now",
                "line": 92
              },
              {
                "function": "set",
                "line": 93
              },
              {
                "function": "astream",
                "line": 114
              },
              {
                "function": "print",
                "line": 205
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "values",
                "line": 225
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 231
              },
              {
                "function": "run_until_complete",
                "line": 247
              },
              {
                "function": "close",
                "line": 249
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "isinstance",
                "line": 121
              },
              {
                "function": "print",
                "line": 177
              },
              {
                "function": "append",
                "line": 178
              },
              {
                "function": "print_exc",
                "line": 180
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "len",
                "line": 215
              },
              {
                "function": "any",
                "line": 216
              },
              {
                "function": "test_complex_app_generation",
                "line": 247
              },
              {
                "function": "items",
                "line": 122
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "str",
                "line": 178
              },
              {
                "function": "len",
                "line": 198
              },
              {
                "function": "len",
                "line": 210
              },
              {
                "function": "strftime",
                "line": 240
              },
              {
                "function": "strftime",
                "line": 73
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "add",
                "line": 124
              },
              {
                "function": "isinstance",
                "line": 126
              },
              {
                "function": "join",
                "line": 194
              },
              {
                "function": "title",
                "line": 223
              },
              {
                "function": "lower",
                "line": 216
              },
              {
                "function": "now",
                "line": 240
              },
              {
                "function": "now",
                "line": 73
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "append",
                "line": 144
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "len",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "extend",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "replace",
                "line": 223
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "enumerate",
                "line": 132
              },
              {
                "function": "str",
                "line": 216
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "len",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "isinstance",
                "line": 162
              },
              {
                "function": "len",
                "line": 164
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "len",
                "line": 131
              },
              {
                "function": "len",
                "line": 135
              }
            ]
          },
          "test_quick_approval.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 91
              }
            ],
            "calls": [
              {
                "function": "run",
                "line": 95
              },
              {
                "function": "test_approval",
                "line": 95
              },
              {
                "function": "connect",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "loads",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "get",
                "line": 21
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print_exc",
                "line": 92
              },
              {
                "function": "recv",
                "line": 18
              },
              {
                "function": "send",
                "line": 24
              },
              {
                "function": "send",
                "line": 30
              },
              {
                "function": "dumps",
                "line": 24
              },
              {
                "function": "dumps",
                "line": 30
              },
              {
                "function": "loads",
                "line": 41
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "get",
                "line": 20
              },
              {
                "function": "get",
                "line": 20
              },
              {
                "function": "wait_for",
                "line": 40
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "recv",
                "line": 40
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "get",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "send",
                "line": 57
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "dumps",
                "line": 57
              },
              {
                "function": "get",
                "line": 69
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "get",
                "line": 54
              },
              {
                "function": "get",
                "line": 80
              },
              {
                "function": "str",
                "line": 71
              }
            ]
          },
          "test_quick_fix.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "run",
                "line": 52
              },
              {
                "function": "test_after_fix",
                "line": 52
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "connect",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "range",
                "line": 32
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "recv",
                "line": 19
              },
              {
                "function": "send",
                "line": 29
              },
              {
                "function": "dumps",
                "line": 29
              },
              {
                "function": "loads",
                "line": 35
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "wait_for",
                "line": 34
              },
              {
                "function": "get",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "recv",
                "line": 34
              },
              {
                "function": "get",
                "line": 36
              },
              {
                "function": "get",
                "line": 39
              }
            ]
          },
          "test_instructions_learning.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "core.memory_manager",
                "names": [
                  "MemoryManager"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 11
              },
              {
                "function": "join",
                "line": 11
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "MemoryManager",
                "line": 55
              },
              {
                "function": "ArchitectAgent",
                "line": 58
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "clear",
                "line": 94
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "ArchitectAgent",
                "line": 113
              },
              {
                "function": "get_system_prompt",
                "line": 116
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "TaskRequest",
                "line": 125
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "run",
                "line": 166
              },
              {
                "function": "dirname",
                "line": 11
              },
              {
                "function": "ArchitectAgent",
                "line": 27
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "CodeSmithAgent",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "initialize_systems",
                "line": 59
              },
              {
                "function": "learn_from_task",
                "line": 63
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "apply_learnings",
                "line": 77
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "save_learnings_to_disk",
                "line": 84
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "load_learnings_from_disk",
                "line": 97
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "test_instruction_loading",
                "line": 144
              },
              {
                "function": "test_learning_system",
                "line": 147
              },
              {
                "function": "test_instruction_integration",
                "line": 150
              },
              {
                "function": "main",
                "line": 166
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "execute",
                "line": 133
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "len",
                "line": 78
              },
              {
                "function": "len",
                "line": 121
              },
              {
                "function": "len",
                "line": 120
              },
              {
                "function": "len",
                "line": 30
              },
              {
                "function": "len",
                "line": 41
              },
              {
                "function": "str",
                "line": 136
              }
            ]
          },
          "test_tetris_now.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 4
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "backend.langgraph_system.workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 17
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 117
              }
            ],
            "calls": [
              {
                "function": "basicConfig",
                "line": 10
              },
              {
                "function": "insert",
                "line": 15
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "create_agent_workflow",
                "line": 25
              },
              {
                "function": "join",
                "line": 28
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "run",
                "line": 121
              },
              {
                "function": "abspath",
                "line": 15
              },
              {
                "function": "getcwd",
                "line": 28
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "enumerate",
                "line": 46
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "exists",
                "line": 70
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "get",
                "line": 91
              },
              {
                "function": "len",
                "line": 92
              },
              {
                "function": "sum",
                "line": 93
              },
              {
                "function": "sum",
                "line": 94
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "main",
                "line": 121
              },
              {
                "function": "execute",
                "line": 35
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "walk",
                "line": 72
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "get",
                "line": 92
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print_exc",
                "line": 118
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "get",
                "line": 103
              },
              {
                "function": "str",
                "line": 58
              },
              {
                "function": "join",
                "line": 74
              },
              {
                "function": "getsize",
                "line": 75
              },
              {
                "function": "append",
                "line": 76
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "get",
                "line": 93
              },
              {
                "function": "get",
                "line": 94
              },
              {
                "function": "join",
                "line": 104
              },
              {
                "function": "upper",
                "line": 54
              },
              {
                "function": "len",
                "line": 100
              },
              {
                "function": "count",
                "line": 112
              },
              {
                "function": "count",
                "line": 113
              },
              {
                "function": "locals",
                "line": 100
              }
            ]
          },
          "send_real_request.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "run",
                "line": 133
              },
              {
                "function": "send_real_request",
                "line": 133
              },
              {
                "function": "connect",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "time",
                "line": 64
              },
              {
                "function": "set",
                "line": 67
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "recv",
                "line": 46
              },
              {
                "function": "send",
                "line": 58
              },
              {
                "function": "time",
                "line": 112
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "dumps",
                "line": 58
              },
              {
                "function": "time",
                "line": 70
              },
              {
                "function": "loads",
                "line": 73
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "int",
                "line": 53
              },
              {
                "function": "wait_for",
                "line": 72
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "add",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "join",
                "line": 117
              },
              {
                "function": "time",
                "line": 53
              },
              {
                "function": "recv",
                "line": 72
              },
              {
                "function": "get",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "loads",
                "line": 47
              },
              {
                "function": "get",
                "line": 88
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "upper",
                "line": 80
              },
              {
                "function": "get",
                "line": 89
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "upper",
                "line": 84
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "get",
                "line": 93
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "get",
                "line": 96
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "get",
                "line": 106
              }
            ]
          },
          "test_tetris_complete.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 13,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_tetris_complete.py"
              },
              {
                "name": "log",
                "line": 30,
                "async": false,
                "calls": [
                  "strftime",
                  "print",
                  "now"
                ],
                "parameters": [
                  "self",
                  "message",
                  "emoji"
                ],
                "decorators": [],
                "file": "test_tetris_complete.py"
              },
              {
                "name": "print_summary",
                "line": 146,
                "async": false,
                "calls": [
                  "print",
                  "get",
                  "items",
                  "len",
                  "sorted"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "test_tetris_complete.py"
              }
            ],
            "classes": [
              {
                "name": "TetrisWorkflowTest",
                "line": 12,
                "methods": [
                  "__init__",
                  "log",
                  "print_summary"
                ],
                "bases": [],
                "file": "test_tetris_complete.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 140
              }
            ],
            "calls": [
              {
                "function": "TetrisWorkflowTest",
                "line": 186
              },
              {
                "function": "run",
                "line": 187
              },
              {
                "function": "strftime",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print_summary",
                "line": 144
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "print",
                "line": 155
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 170
              },
              {
                "function": "sorted",
                "line": 171
              },
              {
                "function": "print",
                "line": 174
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "run_test",
                "line": 187
              },
              {
                "function": "get",
                "line": 167
              },
              {
                "function": "items",
                "line": 171
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "now",
                "line": 31
              },
              {
                "function": "connect",
                "line": 40
              },
              {
                "function": "log",
                "line": 41
              },
              {
                "function": "loads",
                "line": 45
              },
              {
                "function": "get",
                "line": 46
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "log",
                "line": 48
              },
              {
                "function": "log",
                "line": 57
              },
              {
                "function": "time",
                "line": 64
              },
              {
                "function": "log",
                "line": 139
              },
              {
                "function": "print_exc",
                "line": 141
              },
              {
                "function": "get",
                "line": 168
              },
              {
                "function": "print",
                "line": 180
              },
              {
                "function": "print",
                "line": 182
              },
              {
                "function": "recv",
                "line": 44
              },
              {
                "function": "send",
                "line": 51
              },
              {
                "function": "send",
                "line": 58
              },
              {
                "function": "len",
                "line": 151
              },
              {
                "function": "dumps",
                "line": 51
              },
              {
                "function": "dumps",
                "line": 58
              },
              {
                "function": "time",
                "line": 67
              },
              {
                "function": "loads",
                "line": 70
              },
              {
                "function": "get",
                "line": 71
              },
              {
                "function": "append",
                "line": 72
              },
              {
                "function": "wait_for",
                "line": 69
              },
              {
                "function": "get",
                "line": 76
              },
              {
                "function": "log",
                "line": 77
              },
              {
                "function": "log",
                "line": 135
              },
              {
                "function": "recv",
                "line": 69
              },
              {
                "function": "get",
                "line": 80
              },
              {
                "function": "log",
                "line": 82
              },
              {
                "function": "get",
                "line": 81
              },
              {
                "function": "log",
                "line": 96
              },
              {
                "function": "get",
                "line": 98
              },
              {
                "function": "get",
                "line": 101
              },
              {
                "function": "log",
                "line": 102
              },
              {
                "function": "log",
                "line": 105
              },
              {
                "function": "upper",
                "line": 77
              },
              {
                "function": "send",
                "line": 106
              },
              {
                "function": "log",
                "line": 114
              },
              {
                "function": "upper",
                "line": 82
              },
              {
                "function": "dumps",
                "line": 106
              },
              {
                "function": "get",
                "line": 117
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "get",
                "line": 119
              },
              {
                "function": "get",
                "line": 124
              },
              {
                "function": "log",
                "line": 122
              },
              {
                "function": "log",
                "line": 127
              },
              {
                "function": "get",
                "line": 131
              },
              {
                "function": "log",
                "line": 132
              },
              {
                "function": "str",
                "line": 122
              }
            ]
          },
          "test_infrastructure_analysis.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 21
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "INDEXING_AVAILABLE",
                  "ANALYSIS_AVAILABLE",
                  "DIAGRAM_AVAILABLE"
                ],
                "line": 35
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 82
              }
            ],
            "calls": [
              {
                "function": "join",
                "line": 12
              },
              {
                "function": "insert",
                "line": 13
              },
              {
                "function": "getcwd",
                "line": 16
              },
              {
                "function": "chdir",
                "line": 17
              },
              {
                "function": "dirname",
                "line": 12
              },
              {
                "function": "chdir",
                "line": 23
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "ArchitectAgent",
                "line": 32
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "TaskRequest",
                "line": 43
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "ArchitectAgent",
                "line": 94
              },
              {
                "function": "TaskRequest",
                "line": 96
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "run",
                "line": 145
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "hasattr",
                "line": 76
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "test_basic_execution",
                "line": 124
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "main",
                "line": 145
              },
              {
                "function": "execute_with_memory",
                "line": 57
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "print_exc",
                "line": 83
              },
              {
                "function": "execute_with_memory",
                "line": 102
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "test_infrastructure_analysis",
                "line": 128
              },
              {
                "function": "dirname",
                "line": 46
              },
              {
                "function": "len",
                "line": 70
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "len",
                "line": 71
              }
            ]
          },
          "test_tetris_simple.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "langgraph_system.workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 29
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 77
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 8
              },
              {
                "function": "print",
                "line": 10
              },
              {
                "function": "print",
                "line": 11
              },
              {
                "function": "print",
                "line": 12
              },
              {
                "function": "print",
                "line": 13
              },
              {
                "function": "join",
                "line": 8
              },
              {
                "function": "run",
                "line": 82
              },
              {
                "function": "exit",
                "line": 83
              },
              {
                "function": "dirname",
                "line": 8
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "create_agent_workflow",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "print",
                "line": 26
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "basicConfig",
                "line": 30
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "get",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "get",
                "line": 56
              },
              {
                "function": "exists",
                "line": 64
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "main",
                "line": 82
              },
              {
                "function": "execute",
                "line": 33
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "enumerate",
                "line": 59
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "walk",
                "line": 66
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print_exc",
                "line": 78
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "get",
                "line": 38
              },
              {
                "function": "join",
                "line": 68
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "len",
                "line": 51
              },
              {
                "function": "len",
                "line": 58
              }
            ]
          },
          "test_perplexity_raw.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "requests",
                "names": [
                  "requests"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dotenv",
                "names": [
                  "load_dotenv"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 49
              }
            ],
            "calls": [
              {
                "function": "load_dotenv",
                "line": 13
              },
              {
                "function": "getenv",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "post",
                "line": 37
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "json",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print_exc",
                "line": 50
              },
              {
                "function": "Path",
                "line": 12
              },
              {
                "function": "dict",
                "line": 39
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "get",
                "line": 44
              }
            ]
          },
          "test_whiteboard_real.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 14
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "run",
                "line": 94
              },
              {
                "function": "generate_real_app",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "connect",
                "line": 18
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "loads",
                "line": 23
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "set",
                "line": 43
              },
              {
                "function": "now",
                "line": 45
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "recv",
                "line": 22
              },
              {
                "function": "send",
                "line": 37
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "len",
                "line": 87
              },
              {
                "function": "dumps",
                "line": 37
              },
              {
                "function": "loads",
                "line": 50
              },
              {
                "function": "get",
                "line": 52
              },
              {
                "function": "strftime",
                "line": 33
              },
              {
                "function": "now",
                "line": 47
              },
              {
                "function": "wait_for",
                "line": 49
              },
              {
                "function": "add",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "join",
                "line": 80
              },
              {
                "function": "recv",
                "line": 49
              },
              {
                "function": "send",
                "line": 68
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "now",
                "line": 33
              },
              {
                "function": "dumps",
                "line": 68
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "upper",
                "line": 57
              },
              {
                "function": "get",
                "line": 75
              }
            ]
          },
          "claude_web_proxy/claude_browser.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 20,
                "async": false,
                "calls": [
                  "home",
                  "mkdir",
                  "str",
                  "Path"
                ],
                "parameters": [
                  "self",
                  "user_data_dir",
                  "headless"
                ],
                "decorators": [],
                "file": "claude_web_proxy/claude_browser.py"
              }
            ],
            "classes": [
              {
                "name": "ClaudeBrowser",
                "line": 15,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "claude_web_proxy/claude_browser.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Optional",
                  "Dict",
                  "Any"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "playwright.async_api",
                "names": [
                  "async_playwright",
                  "Browser",
                  "Page",
                  "Playwright"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "get_logger",
                "line": 13
              },
              {
                "function": "ClaudeBrowser",
                "line": 471
              },
              {
                "function": "run",
                "line": 497
              },
              {
                "function": "mkdir",
                "line": 39
              },
              {
                "function": "start_browser",
                "line": 472
              },
              {
                "function": "test_browser",
                "line": 497
              },
              {
                "function": "str",
                "line": 34
              },
              {
                "function": "info",
                "line": 70
              },
              {
                "function": "info",
                "line": 79
              },
              {
                "function": "info",
                "line": 109
              },
              {
                "function": "info",
                "line": 113
              },
              {
                "function": "info",
                "line": 211
              },
              {
                "function": "info",
                "line": 231
              },
              {
                "function": "info",
                "line": 241
              },
              {
                "function": "time",
                "line": 245
              },
              {
                "function": "warning",
                "line": 261
              },
              {
                "function": "error",
                "line": 264
              },
              {
                "function": "info",
                "line": 297
              },
              {
                "function": "info",
                "line": 319
              },
              {
                "function": "info",
                "line": 400
              },
              {
                "function": "warning",
                "line": 440
              },
              {
                "function": "info",
                "line": 454
              },
              {
                "function": "start_browser",
                "line": 460
              },
              {
                "function": "close",
                "line": 465
              },
              {
                "function": "ClaudeBrowser",
                "line": 479
              },
              {
                "function": "Path",
                "line": 39
              },
              {
                "function": "start",
                "line": 44
              },
              {
                "function": "launch_persistent_context",
                "line": 47
              },
              {
                "function": "len",
                "line": 60
              },
              {
                "function": "set_extra_http_headers",
                "line": 66
              },
              {
                "function": "error",
                "line": 73
              },
              {
                "function": "goto",
                "line": 80
              },
              {
                "function": "sleep",
                "line": 83
              },
              {
                "function": "_comprehensive_login_check",
                "line": 86
              },
              {
                "function": "info",
                "line": 90
              },
              {
                "function": "info",
                "line": 94
              },
              {
                "function": "error",
                "line": 100
              },
              {
                "function": "title",
                "line": 112
              },
              {
                "function": "error",
                "line": 137
              },
              {
                "function": "append",
                "line": 158
              },
              {
                "function": "append",
                "line": 176
              },
              {
                "function": "append",
                "line": 188
              },
              {
                "function": "append",
                "line": 200
              },
              {
                "function": "info",
                "line": 207
              },
              {
                "function": "error",
                "line": 217
              },
              {
                "function": "info",
                "line": 236
              },
              {
                "function": "debug_login_detection",
                "line": 242
              },
              {
                "function": "info",
                "line": 257
              },
              {
                "function": "debug_login_detection",
                "line": 262
              },
              {
                "function": "error",
                "line": 268
              },
              {
                "function": "error",
                "line": 301
              },
              {
                "function": "Exception",
                "line": 317
              },
              {
                "function": "Exception",
                "line": 338
              },
              {
                "function": "click",
                "line": 341
              },
              {
                "function": "fill",
                "line": 342
              },
              {
                "function": "sleep",
                "line": 367
              },
              {
                "function": "sleep",
                "line": 386
              },
              {
                "function": "sleep",
                "line": 395
              },
              {
                "function": "get_latest_response",
                "line": 398
              },
              {
                "function": "error",
                "line": 404
              },
              {
                "function": "query_selector_all",
                "line": 431
              },
              {
                "function": "reversed",
                "line": 433
              },
              {
                "function": "content",
                "line": 439
              },
              {
                "function": "error",
                "line": 444
              },
              {
                "function": "error",
                "line": 456
              },
              {
                "function": "check_login_status",
                "line": 481
              },
              {
                "function": "print",
                "line": 484
              },
              {
                "function": "print",
                "line": 493
              },
              {
                "function": "print",
                "line": 495
              },
              {
                "function": "new_page",
                "line": 63
              },
              {
                "function": "debug_login_detection",
                "line": 96
              },
              {
                "function": "info",
                "line": 132
              },
              {
                "function": "append",
                "line": 160
              },
              {
                "function": "append",
                "line": 178
              },
              {
                "function": "append",
                "line": 190
              },
              {
                "function": "title",
                "line": 194
              },
              {
                "function": "append",
                "line": 202
              },
              {
                "function": "goto",
                "line": 237
              },
              {
                "function": "sleep",
                "line": 238
              },
              {
                "function": "get_event_loop",
                "line": 245
              },
              {
                "function": "time",
                "line": 248
              },
              {
                "function": "_comprehensive_login_check",
                "line": 250
              },
              {
                "function": "info",
                "line": 254
              },
              {
                "function": "sleep",
                "line": 258
              },
              {
                "function": "info",
                "line": 291
              },
              {
                "function": "len",
                "line": 319
              },
              {
                "function": "press",
                "line": 364
              },
              {
                "function": "len",
                "line": 400
              },
              {
                "function": "close",
                "line": 451
              },
              {
                "function": "stop",
                "line": 453
              },
              {
                "function": "wait_for_login",
                "line": 485
              },
              {
                "function": "start_new_conversation",
                "line": 489
              },
              {
                "function": "send_message",
                "line": 492
              },
              {
                "function": "home",
                "line": 34
              },
              {
                "function": "async_playwright",
                "line": 44
              },
              {
                "function": "str",
                "line": 73
              },
              {
                "function": "str",
                "line": 100
              },
              {
                "function": "query_selector",
                "line": 130
              },
              {
                "function": "info",
                "line": 134
              },
              {
                "function": "str",
                "line": 137
              },
              {
                "function": "query_selector",
                "line": 154
              },
              {
                "function": "query_selector",
                "line": 172
              },
              {
                "function": "len",
                "line": 211
              },
              {
                "function": "str",
                "line": 217
              },
              {
                "function": "str",
                "line": 268
              },
              {
                "function": "debug_login_detection",
                "line": 271
              },
              {
                "function": "error",
                "line": 273
              },
              {
                "function": "click",
                "line": 289
              },
              {
                "function": "sleep",
                "line": 290
              },
              {
                "function": "str",
                "line": 301
              },
              {
                "function": "wait_for_selector",
                "line": 332
              },
              {
                "function": "click",
                "line": 356
              },
              {
                "function": "wait_for_selector",
                "line": 380
              },
              {
                "function": "wait_for_selector",
                "line": 389
              },
              {
                "function": "str",
                "line": 404
              },
              {
                "function": "query_selector_all",
                "line": 420
              },
              {
                "function": "strip",
                "line": 425
              },
              {
                "function": "inner_text",
                "line": 434
              },
              {
                "function": "strip",
                "line": 435
              },
              {
                "function": "strip",
                "line": 436
              },
              {
                "function": "str",
                "line": 444
              },
              {
                "function": "str",
                "line": 445
              },
              {
                "function": "str",
                "line": 456
              },
              {
                "function": "get_event_loop",
                "line": 248
              },
              {
                "function": "inner_text",
                "line": 424
              },
              {
                "function": "strip",
                "line": 426
              },
              {
                "function": "len",
                "line": 435
              },
              {
                "function": "str",
                "line": 273
              },
              {
                "function": "strip",
                "line": 435
              }
            ]
          },
          "claude_web_proxy/quick_test.py": {
            "functions": [
              {
                "name": "print_instructions",
                "line": 159,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [],
                "decorators": [],
                "file": "claude_web_proxy/quick_test.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 15
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 13
              },
              {
                "function": "str",
                "line": 13
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "get",
                "line": 139
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "print",
                "line": 164
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "print",
                "line": 169
              },
              {
                "function": "print",
                "line": 170
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 174
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "print",
                "line": 176
              },
              {
                "function": "print",
                "line": 177
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "print",
                "line": 179
              },
              {
                "function": "create_claude_web_llm",
                "line": 64
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "time",
                "line": 67
              },
              {
                "function": "generate",
                "line": 69
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "create_claude_web_llm",
                "line": 85
              },
              {
                "function": "quick_health_check",
                "line": 118
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "quick_status_check",
                "line": 127
              },
              {
                "function": "get",
                "line": 129
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "get",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 143
              },
              {
                "function": "print",
                "line": 146
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "print_instructions",
                "line": 184
              },
              {
                "function": "run",
                "line": 186
              },
              {
                "function": "ClientSession",
                "line": 21
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "ClientSession",
                "line": 38
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "time",
                "line": 71
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "generate",
                "line": 95
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "quick_message_test",
                "line": 141
              },
              {
                "function": "quick_agent_test",
                "line": 144
              },
              {
                "function": "len",
                "line": 183
              },
              {
                "function": "run_quick_tests",
                "line": 186
              },
              {
                "function": "Path",
                "line": 13
              },
              {
                "function": "get",
                "line": 22
              },
              {
                "function": "get",
                "line": 39
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "json",
                "line": 24
              },
              {
                "function": "json",
                "line": 41
              },
              {
                "function": "get",
                "line": 25
              }
            ]
          },
          "claude_web_proxy/fastapi_server.py": {
            "functions": [
              {
                "name": "run_server",
                "line": 295,
                "async": false,
                "calls": [
                  "run"
                ],
                "parameters": [
                  "host",
                  "port",
                  "reload"
                ],
                "decorators": [],
                "file": "claude_web_proxy/fastapi_server.py"
              },
              {
                "name": "check_browser_context_status",
                "line": 114,
                "async": false,
                "calls": [
                  "debug",
                  "str",
                  "is_closed",
                  "len"
                ],
                "parameters": [],
                "decorators": [],
                "file": "claude_web_proxy/fastapi_server.py"
              }
            ],
            "classes": [
              {
                "name": "ChatRequest",
                "line": 26,
                "methods": [],
                "bases": [
                  "BaseModel"
                ],
                "file": "claude_web_proxy/fastapi_server.py"
              },
              {
                "name": "ChatResponse",
                "line": 31,
                "methods": [],
                "bases": [
                  "BaseModel"
                ],
                "file": "claude_web_proxy/fastapi_server.py"
              },
              {
                "name": "StatusResponse",
                "line": 37,
                "methods": [],
                "bases": [
                  "BaseModel"
                ],
                "file": "claude_web_proxy/fastapi_server.py"
              },
              {
                "name": "SetupRequest",
                "line": 43,
                "methods": [],
                "bases": [
                  "BaseModel"
                ],
                "file": "claude_web_proxy/fastapi_server.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "contextlib",
                "names": [
                  "asynccontextmanager"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Optional",
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "fastapi",
                "names": [
                  "FastAPI",
                  "HTTPException",
                  "BackgroundTasks"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "fastapi.middleware.cors",
                "names": [
                  "CORSMiddleware"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "fastapi.responses",
                "names": [
                  "JSONResponse"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "pydantic",
                "names": [
                  "BaseModel",
                  "Field"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "uvicorn",
                "names": [
                  "uvicorn"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "claude_browser",
                "names": [
                  "ClaudeBrowser"
                ],
                "line": 18
              }
            ],
            "calls": [
              {
                "function": "get_logger",
                "line": 21
              },
              {
                "function": "FastAPI",
                "line": 75
              },
              {
                "function": "add_middleware",
                "line": 83
              },
              {
                "function": "now",
                "line": 92
              },
              {
                "function": "get",
                "line": 94
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "post",
                "line": 150
              },
              {
                "function": "post",
                "line": 195
              },
              {
                "function": "post",
                "line": 228
              },
              {
                "function": "post",
                "line": 250
              },
              {
                "function": "delete",
                "line": 270
              },
              {
                "function": "exception_handler",
                "line": 287
              },
              {
                "function": "Field",
                "line": 27
              },
              {
                "function": "Field",
                "line": 28
              },
              {
                "function": "Field",
                "line": 29
              },
              {
                "function": "Field",
                "line": 32
              },
              {
                "function": "Field",
                "line": 33
              },
              {
                "function": "Field",
                "line": 34
              },
              {
                "function": "Field",
                "line": 35
              },
              {
                "function": "Field",
                "line": 44
              },
              {
                "function": "Field",
                "line": 45
              },
              {
                "function": "info",
                "line": 53
              },
              {
                "function": "error",
                "line": 289
              },
              {
                "function": "JSONResponse",
                "line": 290
              },
              {
                "function": "run",
                "line": 297
              },
              {
                "function": "run_server",
                "line": 306
              },
              {
                "function": "ClaudeBrowser",
                "line": 57
              },
              {
                "function": "info",
                "line": 59
              },
              {
                "function": "StatusResponse",
                "line": 105
              },
              {
                "function": "check_browser_context_status",
                "line": 132
              },
              {
                "function": "total_seconds",
                "line": 137
              },
              {
                "function": "StatusResponse",
                "line": 139
              },
              {
                "function": "ClaudeBrowser",
                "line": 161
              },
              {
                "function": "HTTPException",
                "line": 201
              },
              {
                "function": "ChatResponse",
                "line": 217
              },
              {
                "function": "HTTPException",
                "line": 234
              },
              {
                "function": "ClaudeBrowser",
                "line": 261
              },
              {
                "function": "start_browser",
                "line": 58
              },
              {
                "function": "error",
                "line": 61
              },
              {
                "function": "info",
                "line": 70
              },
              {
                "function": "error",
                "line": 147
              },
              {
                "function": "HTTPException",
                "line": 148
              },
              {
                "function": "start_browser",
                "line": 162
              },
              {
                "function": "check_login_status",
                "line": 165
              },
              {
                "function": "info",
                "line": 168
              },
              {
                "function": "JSONResponse",
                "line": 186
              },
              {
                "function": "error",
                "line": 192
              },
              {
                "function": "HTTPException",
                "line": 193
              },
              {
                "function": "check_login_status",
                "line": 205
              },
              {
                "function": "HTTPException",
                "line": 207
              },
              {
                "function": "send_message",
                "line": 215
              },
              {
                "function": "error",
                "line": 225
              },
              {
                "function": "HTTPException",
                "line": 226
              },
              {
                "function": "start_new_conversation",
                "line": 237
              },
              {
                "function": "JSONResponse",
                "line": 241
              },
              {
                "function": "error",
                "line": 247
              },
              {
                "function": "HTTPException",
                "line": 248
              },
              {
                "function": "start_browser",
                "line": 262
              },
              {
                "function": "error",
                "line": 267
              },
              {
                "function": "HTTPException",
                "line": 268
              },
              {
                "function": "str",
                "line": 289
              },
              {
                "function": "close",
                "line": 69
              },
              {
                "function": "error",
                "line": 72
              },
              {
                "function": "now",
                "line": 142
              },
              {
                "function": "close",
                "line": 158
              },
              {
                "function": "JSONResponse",
                "line": 171
              },
              {
                "function": "wait_for_login",
                "line": 177
              },
              {
                "function": "start_new_conversation",
                "line": 212
              },
              {
                "function": "now",
                "line": 221
              },
              {
                "function": "close",
                "line": 258
              },
              {
                "function": "close",
                "line": 277
              },
              {
                "function": "error",
                "line": 281
              },
              {
                "function": "HTTPException",
                "line": 282
              },
              {
                "function": "str",
                "line": 61
              },
              {
                "function": "len",
                "line": 121
              },
              {
                "function": "is_closed",
                "line": 126
              },
              {
                "function": "debug",
                "line": 129
              },
              {
                "function": "now",
                "line": 137
              },
              {
                "function": "str",
                "line": 147
              },
              {
                "function": "str",
                "line": 192
              },
              {
                "function": "str",
                "line": 225
              },
              {
                "function": "str",
                "line": 247
              },
              {
                "function": "str",
                "line": 267
              },
              {
                "function": "str",
                "line": 72
              },
              {
                "function": "str",
                "line": 281
              },
              {
                "function": "str",
                "line": 292
              },
              {
                "function": "str",
                "line": 129
              },
              {
                "function": "str",
                "line": 148
              },
              {
                "function": "str",
                "line": 193
              },
              {
                "function": "str",
                "line": 226
              },
              {
                "function": "str",
                "line": 248
              },
              {
                "function": "str",
                "line": 268
              },
              {
                "function": "str",
                "line": 282
              }
            ]
          },
          "claude_web_proxy/crewai_integration.py": {
            "functions": [
              {
                "name": "create_claude_web_agent",
                "line": 286,
                "async": false,
                "calls": [
                  "ImportError",
                  "ClaudeWebLLM",
                  "Agent"
                ],
                "parameters": [
                  "role",
                  "goal",
                  "backstory",
                  "server_url"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "create_claude_web_llm",
                "line": 320,
                "async": false,
                "calls": [
                  "ClaudeWebLLM"
                ],
                "parameters": [
                  "server_url"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "__init__",
                "line": 35,
                "async": false,
                "calls": [
                  "__init__",
                  "super",
                  "info",
                  "rstrip"
                ],
                "parameters": [
                  "self",
                  "server_url",
                  "timeout",
                  "new_conversation_per_agent"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "generate",
                "line": 171,
                "async": false,
                "calls": [
                  "run",
                  "ThreadPoolExecutor",
                  "submit",
                  "new_event_loop",
                  "get",
                  "close",
                  "set_event_loop",
                  "_send_message_async",
                  "str",
                  "result",
                  "run_until_complete",
                  "is_running",
                  "error",
                  "get_running_loop"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "stream_generate",
                "line": 227,
                "async": false,
                "calls": [
                  "generate"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "get_model_info",
                "line": 241,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "__del__",
                "line": 257,
                "async": false,
                "calls": [
                  "catch_warnings",
                  "is_closed",
                  "create_task",
                  "close",
                  "simplefilter",
                  "hasattr",
                  "get_running_loop"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "__init__",
                "line": 19,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "generate",
                "line": 22,
                "async": false,
                "calls": [
                  "NotImplementedError"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "run_in_thread",
                "line": 200,
                "async": false,
                "calls": [
                  "new_event_loop",
                  "close",
                  "set_event_loop",
                  "_send_message_async",
                  "run_until_complete"
                ],
                "parameters": [],
                "decorators": [],
                "file": "claude_web_proxy/crewai_integration.py"
              }
            ],
            "classes": [
              {
                "name": "ClaudeWebLLM",
                "line": 29,
                "methods": [
                  "__init__",
                  "generate",
                  "stream_generate",
                  "get_model_info",
                  "__del__",
                  "run_in_thread"
                ],
                "bases": [
                  "BaseLLM"
                ],
                "file": "claude_web_proxy/crewai_integration.py"
              },
              {
                "name": "BaseLLM",
                "line": 18,
                "methods": [
                  "__init__",
                  "generate"
                ],
                "bases": [],
                "file": "claude_web_proxy/crewai_integration.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Optional",
                  "Dict",
                  "Any",
                  "List",
                  "Union"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "crewai.llm",
                "names": [
                  "BaseLLM"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "crewai.agent",
                "names": [
                  "Agent"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "concurrent.futures",
                "names": [
                  "concurrent.futures"
                ],
                "line": 197
              },
              {
                "type": "import",
                "module": "threading",
                "names": [
                  "threading"
                ],
                "line": 198
              },
              {
                "type": "import",
                "module": "warnings",
                "names": [
                  "warnings"
                ],
                "line": 271
              }
            ],
            "calls": [
              {
                "function": "get_logger",
                "line": 27
              },
              {
                "function": "ClaudeWebLLM",
                "line": 308
              },
              {
                "function": "Agent",
                "line": 311
              },
              {
                "function": "ClaudeWebLLM",
                "line": 331
              },
              {
                "function": "__init__",
                "line": 49
              },
              {
                "function": "rstrip",
                "line": 50
              },
              {
                "function": "info",
                "line": 56
              },
              {
                "function": "generate",
                "line": 233
              },
              {
                "function": "ImportError",
                "line": 305
              },
              {
                "function": "ClaudeWebLLM",
                "line": 338
              },
              {
                "function": "print",
                "line": 359
              },
              {
                "function": "run",
                "line": 360
              },
              {
                "function": "print",
                "line": 362
              },
              {
                "function": "print",
                "line": 363
              },
              {
                "function": "TCPConnector",
                "line": 63
              },
              {
                "function": "ClientTimeout",
                "line": 64
              },
              {
                "function": "ClientSession",
                "line": 65
              },
              {
                "function": "info",
                "line": 90
              },
              {
                "function": "is_running",
                "line": 195
              },
              {
                "function": "get",
                "line": 224
              },
              {
                "function": "get",
                "line": 224
              },
              {
                "function": "_send_message_async",
                "line": 225
              },
              {
                "function": "agenerate",
                "line": 238
              },
              {
                "function": "info",
                "line": 255
              },
              {
                "function": "hasattr",
                "line": 259
              },
              {
                "function": "print",
                "line": 343
              },
              {
                "function": "print",
                "line": 350
              },
              {
                "function": "test_claude_web_llm",
                "line": 360
              },
              {
                "function": "NotImplementedError",
                "line": 23
              },
              {
                "function": "super",
                "line": 49
              },
              {
                "function": "_get_session",
                "line": 74
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "error",
                "line": 81
              },
              {
                "function": "_check_server_status",
                "line": 87
              },
              {
                "function": "_get_session",
                "line": 91
              },
              {
                "function": "post",
                "line": 99
              },
              {
                "function": "error",
                "line": 110
              },
              {
                "function": "Exception",
                "line": 131
              },
              {
                "function": "_get_session",
                "line": 133
              },
              {
                "function": "post",
                "line": 150
              },
              {
                "function": "error",
                "line": 168
              },
              {
                "function": "get",
                "line": 184
              },
              {
                "function": "get",
                "line": 184
              },
              {
                "function": "get_running_loop",
                "line": 189
              },
              {
                "function": "run_until_complete",
                "line": 214
              },
              {
                "function": "error",
                "line": 217
              },
              {
                "function": "close",
                "line": 254
              },
              {
                "function": "agenerate",
                "line": 342
              },
              {
                "function": "agenerate",
                "line": 346
              },
              {
                "function": "print",
                "line": 353
              },
              {
                "function": "cleanup",
                "line": 355
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "info",
                "line": 102
              },
              {
                "function": "error",
                "line": 106
              },
              {
                "function": "_ensure_setup",
                "line": 130
              },
              {
                "function": "info",
                "line": 147
              },
              {
                "function": "get",
                "line": 153
              },
              {
                "function": "info",
                "line": 155
              },
              {
                "function": "error",
                "line": 162
              },
              {
                "function": "Exception",
                "line": 165
              },
              {
                "function": "run",
                "line": 192
              },
              {
                "function": "new_event_loop",
                "line": 201
              },
              {
                "function": "set_event_loop",
                "line": 202
              },
              {
                "function": "ThreadPoolExecutor",
                "line": 210
              },
              {
                "function": "submit",
                "line": 211
              },
              {
                "function": "result",
                "line": 212
              },
              {
                "function": "_send_message_async",
                "line": 214
              },
              {
                "function": "get_running_loop",
                "line": 264
              },
              {
                "function": "json",
                "line": 77
              },
              {
                "function": "str",
                "line": 81
              },
              {
                "function": "json",
                "line": 101
              },
              {
                "function": "get",
                "line": 103
              },
              {
                "function": "text",
                "line": 105
              },
              {
                "function": "str",
                "line": 110
              },
              {
                "function": "json",
                "line": 152
              },
              {
                "function": "text",
                "line": 161
              },
              {
                "function": "str",
                "line": 168
              },
              {
                "function": "_send_message_async",
                "line": 192
              },
              {
                "function": "run_until_complete",
                "line": 204
              },
              {
                "function": "close",
                "line": 208
              },
              {
                "function": "str",
                "line": 217
              },
              {
                "function": "str",
                "line": 218
              },
              {
                "function": "is_closed",
                "line": 265
              },
              {
                "function": "create_task",
                "line": 267
              },
              {
                "function": "get",
                "line": 102
              },
              {
                "function": "len",
                "line": 156
              },
              {
                "function": "len",
                "line": 157
              },
              {
                "function": "_send_message_async",
                "line": 205
              },
              {
                "function": "close",
                "line": 267
              },
              {
                "function": "catch_warnings",
                "line": 272
              },
              {
                "function": "simplefilter",
                "line": 273
              }
            ]
          },
          "claude_web_proxy/setup_and_test.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 31,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/setup_and_test.py"
              },
              {
                "name": "install_playwright_browsers",
                "line": 65,
                "async": false,
                "calls": [
                  "run",
                  "str",
                  "info",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/setup_and_test.py"
              },
              {
                "name": "start_server",
                "line": 87,
                "async": false,
                "calls": [
                  "poll",
                  "Path",
                  "str",
                  "sleep",
                  "Popen",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/setup_and_test.py"
              },
              {
                "name": "stop_server",
                "line": 108,
                "async": false,
                "calls": [
                  "terminate",
                  "wait",
                  "kill"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "claude_web_proxy/setup_and_test.py"
              },
              {
                "name": "generate_setup_report",
                "line": 296,
                "async": false,
                "calls": [
                  "strftime",
                  "items"
                ],
                "parameters": [
                  "self",
                  "results"
                ],
                "decorators": [],
                "file": "claude_web_proxy/setup_and_test.py"
              }
            ],
            "classes": [
              {
                "name": "ClaudeWebProxyTester",
                "line": 28,
                "methods": [
                  "__init__",
                  "install_playwright_browsers",
                  "start_server",
                  "stop_server",
                  "generate_setup_report"
                ],
                "bases": [],
                "file": "claude_web_proxy/setup_and_test.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.claude_browser",
                "names": [
                  "ClaudeBrowser"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.fastapi_server",
                "names": [
                  "run_server"
                ],
                "line": 21
              },
              {
                "type": "import",
                "module": "multiprocessing",
                "names": [
                  "multiprocessing"
                ],
                "line": 22
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 23
              },
              {
                "type": "import",
                "module": "signal",
                "names": [
                  "signal"
                ],
                "line": 24
              },
              {
                "type": "import",
                "module": "argparse",
                "names": [
                  "argparse"
                ],
                "line": 357
              },
              {
                "type": "import",
                "module": "playwright",
                "names": [
                  "playwright"
                ],
                "line": 40
              },
              {
                "type": "import",
                "module": "fastapi",
                "names": [
                  "fastapi"
                ],
                "line": 46
              },
              {
                "type": "import",
                "module": "uvicorn",
                "names": [
                  "uvicorn"
                ],
                "line": 52
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 58
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "ClaudeWebLLM",
                  "create_claude_web_llm"
                ],
                "line": 193
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 18
              },
              {
                "function": "get_logger",
                "line": 26
              },
              {
                "function": "str",
                "line": 18
              },
              {
                "function": "ArgumentParser",
                "line": 359
              },
              {
                "function": "add_argument",
                "line": 360
              },
              {
                "function": "add_argument",
                "line": 361
              },
              {
                "function": "add_argument",
                "line": 362
              },
              {
                "function": "parse_args",
                "line": 364
              },
              {
                "function": "ClaudeWebProxyTester",
                "line": 366
              },
              {
                "function": "run",
                "line": 404
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "print",
                "line": 233
              },
              {
                "function": "items",
                "line": 235
              },
              {
                "function": "print",
                "line": 240
              },
              {
                "function": "install_playwright_browsers",
                "line": 241
              },
              {
                "function": "print",
                "line": 243
              },
              {
                "function": "print",
                "line": 246
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "print",
                "line": 252
              },
              {
                "function": "start_server",
                "line": 253
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "stop_server",
                "line": 278
              },
              {
                "function": "all",
                "line": 286
              },
              {
                "function": "print",
                "line": 288
              },
              {
                "function": "items",
                "line": 311
              },
              {
                "function": "print",
                "line": 369
              },
              {
                "function": "print",
                "line": 370
              },
              {
                "function": "print",
                "line": 371
              },
              {
                "function": "main",
                "line": 404
              },
              {
                "function": "info",
                "line": 68
              },
              {
                "function": "run",
                "line": 69
              },
              {
                "function": "Popen",
                "line": 91
              },
              {
                "function": "sleep",
                "line": 100
              },
              {
                "function": "info",
                "line": 140
              },
              {
                "function": "ClientSession",
                "line": 161
              },
              {
                "function": "create_claude_web_llm",
                "line": 196
              },
              {
                "function": "get_model_info",
                "line": 199
              },
              {
                "function": "info",
                "line": 200
              },
              {
                "function": "time",
                "line": 218
              },
              {
                "function": "check_dependencies",
                "line": 234
              },
              {
                "function": "print",
                "line": 237
              },
              {
                "function": "test_browser_automation",
                "line": 247
              },
              {
                "function": "print",
                "line": 259
              },
              {
                "function": "print",
                "line": 262
              },
              {
                "function": "print",
                "line": 265
              },
              {
                "function": "items",
                "line": 267
              },
              {
                "function": "test_crewai_integration",
                "line": 273
              },
              {
                "function": "print",
                "line": 290
              },
              {
                "function": "print",
                "line": 292
              },
              {
                "function": "items",
                "line": 328
              },
              {
                "function": "run_server",
                "line": 374
              },
              {
                "function": "generate_setup_report",
                "line": 394
              },
              {
                "function": "print",
                "line": 399
              },
              {
                "function": "print",
                "line": 400
              },
              {
                "function": "Path",
                "line": 18
              },
              {
                "function": "info",
                "line": 77
              },
              {
                "function": "error",
                "line": 80
              },
              {
                "function": "error",
                "line": 84
              },
              {
                "function": "poll",
                "line": 102
              },
              {
                "function": "error",
                "line": 105
              },
              {
                "function": "terminate",
                "line": 112
              },
              {
                "function": "wait",
                "line": 113
              },
              {
                "function": "ClientSession",
                "line": 123
              },
              {
                "function": "error",
                "line": 134
              },
              {
                "function": "ClaudeBrowser",
                "line": 142
              },
              {
                "function": "info",
                "line": 145
              },
              {
                "function": "error",
                "line": 154
              },
              {
                "function": "generate",
                "line": 204
              },
              {
                "function": "info",
                "line": 205
              },
              {
                "function": "error",
                "line": 212
              },
              {
                "function": "test_server_health",
                "line": 260
              },
              {
                "function": "test_server_endpoints",
                "line": 266
              },
              {
                "function": "print",
                "line": 269
              },
              {
                "function": "strftime",
                "line": 300
              },
              {
                "function": "print",
                "line": 376
              },
              {
                "function": "run_comprehensive_test",
                "line": 379
              },
              {
                "function": "generate_setup_report",
                "line": 381
              },
              {
                "function": "print",
                "line": 382
              },
              {
                "function": "run_comprehensive_test",
                "line": 386
              },
              {
                "function": "open",
                "line": 390
              },
              {
                "function": "dump",
                "line": 391
              },
              {
                "function": "open",
                "line": 396
              },
              {
                "function": "write",
                "line": 397
              },
              {
                "function": "kill",
                "line": 115
              },
              {
                "function": "wait",
                "line": 116
              },
              {
                "function": "get",
                "line": 124
              },
              {
                "function": "check_login_status",
                "line": 144
              },
              {
                "function": "info",
                "line": 148
              },
              {
                "function": "info",
                "line": 149
              },
              {
                "function": "get",
                "line": 164
              },
              {
                "function": "error",
                "line": 170
              },
              {
                "function": "post",
                "line": 176
              },
              {
                "function": "error",
                "line": 185
              },
              {
                "function": "info",
                "line": 207
              },
              {
                "function": "Path",
                "line": 389
              },
              {
                "function": "Path",
                "line": 395
              },
              {
                "function": "str",
                "line": 84
              },
              {
                "function": "str",
                "line": 105
              },
              {
                "function": "info",
                "line": 127
              },
              {
                "function": "error",
                "line": 130
              },
              {
                "function": "str",
                "line": 134
              },
              {
                "function": "str",
                "line": 154
              },
              {
                "function": "info",
                "line": 168
              },
              {
                "function": "info",
                "line": 180
              },
              {
                "function": "info",
                "line": 183
              },
              {
                "function": "len",
                "line": 205
              },
              {
                "function": "str",
                "line": 212
              },
              {
                "function": "Path",
                "line": 97
              },
              {
                "function": "json",
                "line": 126
              },
              {
                "function": "json",
                "line": 167
              },
              {
                "function": "str",
                "line": 170
              },
              {
                "function": "text",
                "line": 182
              },
              {
                "function": "str",
                "line": 185
              },
              {
                "function": "str",
                "line": 207
              }
            ]
          },
          "claude_web_proxy/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "claude_browser",
                "names": [
                  "ClaudeBrowser"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "crewai_integration",
                "names": [
                  "ClaudeWebLLM",
                  "create_claude_web_llm"
                ],
                "line": 11
              }
            ],
            "calls": []
          },
          "claude_web_proxy/debug_browser_api.py": {
            "functions": [
              {
                "name": "recommended_browser_status_check",
                "line": 132,
                "async": false,
                "calls": [
                  "is_closed",
                  "hasattr",
                  "len"
                ],
                "parameters": [],
                "decorators": [],
                "file": "claude_web_proxy/debug_browser_api.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "playwright.async_api",
                "names": [
                  "async_playwright"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 15
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 12
              },
              {
                "function": "get_logger",
                "line": 17
              },
              {
                "function": "str",
                "line": 12
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "run",
                "line": 293
              },
              {
                "function": "async_playwright",
                "line": 24
              },
              {
                "function": "analyze_browser_api",
                "line": 293
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "recommended_browser_status_check",
                "line": 155
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "print",
                "line": 198
              },
              {
                "function": "print",
                "line": 201
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "print",
                "line": 211
              },
              {
                "function": "print",
                "line": 212
              },
              {
                "function": "print",
                "line": 213
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 218
              },
              {
                "function": "print",
                "line": 219
              },
              {
                "function": "print",
                "line": 220
              },
              {
                "function": "print",
                "line": 221
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 225
              },
              {
                "function": "print",
                "line": 226
              },
              {
                "function": "print",
                "line": 227
              },
              {
                "function": "print",
                "line": 228
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 231
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 259
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "Path",
                "line": 12
              },
              {
                "function": "launch",
                "line": 27
              },
              {
                "function": "new_context",
                "line": 31
              },
              {
                "function": "new_page",
                "line": 35
              },
              {
                "function": "is_connected",
                "line": 103
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "is_closed",
                "line": 120
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "launch_persistent_context",
                "line": 204
              },
              {
                "function": "launch",
                "line": 217
              },
              {
                "function": "print",
                "line": 282
              },
              {
                "function": "print",
                "line": 283
              },
              {
                "function": "print",
                "line": 288
              },
              {
                "function": "dir",
                "line": 43
              },
              {
                "function": "any",
                "line": 54
              },
              {
                "function": "dir",
                "line": 62
              },
              {
                "function": "any",
                "line": 73
              },
              {
                "function": "dir",
                "line": 81
              },
              {
                "function": "any",
                "line": 91
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "len",
                "line": 262
              },
              {
                "function": "is_closed",
                "line": 264
              },
              {
                "function": "print",
                "line": 266
              },
              {
                "function": "print",
                "line": 268
              },
              {
                "function": "print",
                "line": 270
              },
              {
                "function": "close",
                "line": 276
              },
              {
                "function": "close",
                "line": 277
              },
              {
                "function": "close",
                "line": 287
              },
              {
                "function": "type",
                "line": 28
              },
              {
                "function": "type",
                "line": 32
              },
              {
                "function": "type",
                "line": 36
              },
              {
                "function": "startswith",
                "line": 44
              },
              {
                "function": "len",
                "line": 45
              },
              {
                "function": "lower",
                "line": 49
              },
              {
                "function": "startswith",
                "line": 63
              },
              {
                "function": "len",
                "line": 64
              },
              {
                "function": "lower",
                "line": 68
              },
              {
                "function": "startswith",
                "line": 82
              },
              {
                "function": "lower",
                "line": 86
              },
              {
                "function": "len",
                "line": 140
              },
              {
                "function": "type",
                "line": 209
              },
              {
                "function": "hasattr",
                "line": 210
              },
              {
                "function": "hasattr",
                "line": 211
              },
              {
                "function": "hasattr",
                "line": 212
              },
              {
                "function": "hasattr",
                "line": 213
              },
              {
                "function": "hasattr",
                "line": 214
              },
              {
                "function": "type",
                "line": 218
              },
              {
                "function": "hasattr",
                "line": 219
              },
              {
                "function": "hasattr",
                "line": 220
              },
              {
                "function": "hasattr",
                "line": 221
              },
              {
                "function": "hasattr",
                "line": 222
              },
              {
                "function": "hasattr",
                "line": 223
              },
              {
                "function": "len",
                "line": 113
              },
              {
                "function": "hasattr",
                "line": 146
              },
              {
                "function": "is_closed",
                "line": 146
              },
              {
                "function": "len",
                "line": 265
              },
              {
                "function": "format_exc",
                "line": 283
              },
              {
                "function": "lower",
                "line": 54
              },
              {
                "function": "lower",
                "line": 73
              },
              {
                "function": "lower",
                "line": 91
              },
              {
                "function": "len",
                "line": 114
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              },
              {
                "name": "get_capabilities",
                "line": 66,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              },
              {
                "name": "_build_arbitration_prompt",
                "line": 134,
                "async": false,
                "calls": [
                  "enumerate",
                  "append",
                  "get",
                  "join"
                ],
                "parameters": [
                  "self",
                  "task",
                  "conflicting_outputs",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              },
              {
                "name": "_extract_decision_components",
                "line": 354,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "decision"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              },
              {
                "name": "is_conflict_resolvable",
                "line": 371,
                "async": false,
                "calls": [
                  "str",
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "conflicting_outputs"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              },
              {
                "name": "get_conflict_complexity",
                "line": 386,
                "async": false,
                "calls": [
                  "get",
                  "str",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "conflicting_outputs"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              }
            ],
            "classes": [
              {
                "name": "OpusArbitrator",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_arbitration_prompt",
                  "_extract_decision_components",
                  "is_conflict_resolvable",
                  "get_conflict_complexity"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "get",
                "line": 100
              },
              {
                "function": "_build_arbitration_prompt",
                "line": 112
              },
              {
                "function": "_extract_decision_components",
                "line": 118
              },
              {
                "function": "append",
                "line": 141
              },
              {
                "function": "get",
                "line": 144
              },
              {
                "function": "get",
                "line": 146
              },
              {
                "function": "get",
                "line": 148
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "append",
                "line": 152
              },
              {
                "function": "append",
                "line": 153
              },
              {
                "function": "enumerate",
                "line": 156
              },
              {
                "function": "append",
                "line": 165
              },
              {
                "function": "append",
                "line": 166
              },
              {
                "function": "append",
                "line": 167
              },
              {
                "function": "append",
                "line": 170
              },
              {
                "function": "append",
                "line": 171
              },
              {
                "function": "append",
                "line": 172
              },
              {
                "function": "append",
                "line": 173
              },
              {
                "function": "append",
                "line": 174
              },
              {
                "function": "append",
                "line": 175
              },
              {
                "function": "append",
                "line": 176
              },
              {
                "function": "join",
                "line": 178
              },
              {
                "function": "len",
                "line": 390
              },
              {
                "function": "sum",
                "line": 391
              },
              {
                "function": "len",
                "line": 102
              },
              {
                "function": "_make_arbitration_decision",
                "line": 115
              },
              {
                "function": "append",
                "line": 145
              },
              {
                "function": "append",
                "line": 147
              },
              {
                "function": "append",
                "line": 149
              },
              {
                "function": "get",
                "line": 157
              },
              {
                "function": "get",
                "line": 158
              },
              {
                "function": "append",
                "line": 160
              },
              {
                "function": "append",
                "line": 161
              },
              {
                "function": "append",
                "line": 162
              },
              {
                "function": "append",
                "line": 163
              },
              {
                "function": "len",
                "line": 376
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "get",
                "line": 128
              },
              {
                "function": "len",
                "line": 391
              },
              {
                "function": "get",
                "line": 381
              },
              {
                "function": "len",
                "line": 381
              },
              {
                "function": "str",
                "line": 391
              },
              {
                "function": "str",
                "line": 381
              },
              {
                "function": "get",
                "line": 391
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
              },
              {
                "name": "get_capabilities",
                "line": 51,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
              },
              {
                "name": "_build_documentation_prompt",
                "line": 100,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
              },
              {
                "name": "_structure_documentation",
                "line": 371,
                "async": false,
                "calls": [
                  "list",
                  "startswith",
                  "split",
                  "append",
                  "join",
                  "keys",
                  "lower",
                  "len",
                  "replace"
                ],
                "parameters": [
                  "self",
                  "documentation"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
              }
            ],
            "classes": [
              {
                "name": "DocuBot",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_documentation_prompt",
                  "_structure_documentation"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 375
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "_build_documentation_prompt",
                "line": 83
              },
              {
                "function": "_structure_documentation",
                "line": 89
              },
              {
                "function": "append",
                "line": 107
              },
              {
                "function": "get",
                "line": 110
              },
              {
                "function": "get",
                "line": 114
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "append",
                "line": 122
              },
              {
                "function": "append",
                "line": 123
              },
              {
                "function": "append",
                "line": 124
              },
              {
                "function": "append",
                "line": 125
              },
              {
                "function": "append",
                "line": 126
              },
              {
                "function": "join",
                "line": 128
              },
              {
                "function": "split",
                "line": 381
              },
              {
                "function": "_generate_documentation",
                "line": 86
              },
              {
                "function": "get",
                "line": 96
              },
              {
                "function": "append",
                "line": 111
              },
              {
                "function": "append",
                "line": 115
              },
              {
                "function": "append",
                "line": 119
              },
              {
                "function": "startswith",
                "line": 382
              },
              {
                "function": "join",
                "line": 396
              },
              {
                "function": "list",
                "line": 400
              },
              {
                "function": "len",
                "line": 401
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "replace",
                "line": 385
              },
              {
                "function": "startswith",
                "line": 387
              },
              {
                "function": "keys",
                "line": 400
              },
              {
                "function": "split",
                "line": 401
              },
              {
                "function": "join",
                "line": 384
              },
              {
                "function": "replace",
                "line": 390
              },
              {
                "function": "append",
                "line": 393
              },
              {
                "function": "lower",
                "line": 385
              },
              {
                "function": "join",
                "line": 389
              },
              {
                "function": "lower",
                "line": 390
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 15,
                "async": false,
                "calls": [
                  "print",
                  "getenv"
                ],
                "parameters": [
                  "self",
                  "name",
                  "role",
                  "model"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "get_capabilities",
                "line": 33,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "_build_prompt",
                "line": 48,
                "async": false,
                "calls": [
                  "append",
                  "join",
                  "str",
                  "items",
                  "len"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "_extract_code",
                "line": 87,
                "async": false,
                "calls": [
                  "findall",
                  "join"
                ],
                "parameters": [
                  "self",
                  "response"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "_validate_code",
                "line": 102,
                "async": false,
                "calls": [
                  "append",
                  "parse",
                  "str"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "get_stats",
                "line": 132,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "reset_stats",
                "line": 148,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              },
              {
                "name": "__repr__",
                "line": 155,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              }
            ],
            "classes": [
              {
                "name": "BaseAgent",
                "line": 9,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_prompt",
                  "_extract_code",
                  "_validate_code",
                  "get_stats",
                  "reset_stats",
                  "__repr__"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 4
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 91
              },
              {
                "type": "import",
                "module": "ast",
                "names": [
                  "ast"
                ],
                "line": 106
              }
            ],
            "calls": [
              {
                "function": "getenv",
                "line": 26
              },
              {
                "function": "getenv",
                "line": 27
              },
              {
                "function": "getenv",
                "line": 28
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "append",
                "line": 59
              },
              {
                "function": "append",
                "line": 72
              },
              {
                "function": "join",
                "line": 74
              },
              {
                "function": "findall",
                "line": 94
              },
              {
                "function": "append",
                "line": 56
              },
              {
                "function": "append",
                "line": 63
              },
              {
                "function": "items",
                "line": 64
              },
              {
                "function": "append",
                "line": 69
              },
              {
                "function": "join",
                "line": 97
              },
              {
                "function": "parse",
                "line": 116
              },
              {
                "function": "append",
                "line": 125
              },
              {
                "function": "append",
                "line": 128
              },
              {
                "function": "append",
                "line": 119
              },
              {
                "function": "append",
                "line": 121
              },
              {
                "function": "append",
                "line": 68
              },
              {
                "function": "str",
                "line": 67
              },
              {
                "function": "len",
                "line": 67
              },
              {
                "function": "str",
                "line": 67
              },
              {
                "function": "str",
                "line": 119
              },
              {
                "function": "str",
                "line": 121
              },
              {
                "function": "str",
                "line": 67
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 17,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "get_capabilities",
                "line": 66,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "_mock_research_for_testing",
                "line": 186,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "_create_research_plan",
                "line": 296,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "_build_research_prompt",
                "line": 339,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context",
                  "research_plan"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "_synthesize_findings",
                "line": 383,
                "async": false,
                "calls": [
                  "findall",
                  "startswith",
                  "split",
                  "lower",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "research_results"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              },
              {
                "name": "_generate_recommendations",
                "line": 419,
                "async": false,
                "calls": [
                  "extend",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "synthesis"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              }
            ],
            "classes": [
              {
                "name": "ResearchBot",
                "line": 11,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_mock_research_for_testing",
                  "_create_research_plan",
                  "_build_research_prompt",
                  "_synthesize_findings",
                  "_generate_recommendations"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 388
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 18
              },
              {
                "function": "_create_research_plan",
                "line": 108
              },
              {
                "function": "_build_research_prompt",
                "line": 111
              },
              {
                "function": "_synthesize_findings",
                "line": 117
              },
              {
                "function": "_generate_recommendations",
                "line": 120
              },
              {
                "function": "getenv",
                "line": 138
              },
              {
                "function": "lower",
                "line": 308
              },
              {
                "function": "get",
                "line": 328
              },
              {
                "function": "get",
                "line": 334
              },
              {
                "function": "append",
                "line": 346
              },
              {
                "function": "append",
                "line": 349
              },
              {
                "function": "append",
                "line": 350
              },
              {
                "function": "append",
                "line": 351
              },
              {
                "function": "get",
                "line": 365
              },
              {
                "function": "get",
                "line": 368
              },
              {
                "function": "append",
                "line": 372
              },
              {
                "function": "append",
                "line": 373
              },
              {
                "function": "append",
                "line": 374
              },
              {
                "function": "append",
                "line": 375
              },
              {
                "function": "append",
                "line": 376
              },
              {
                "function": "append",
                "line": 377
              },
              {
                "function": "append",
                "line": 378
              },
              {
                "function": "append",
                "line": 379
              },
              {
                "function": "join",
                "line": 381
              },
              {
                "function": "findall",
                "line": 391
              },
              {
                "function": "extend",
                "line": 445
              },
              {
                "function": "_conduct_research_via_api",
                "line": 114
              },
              {
                "function": "len",
                "line": 129
              },
              {
                "function": "get",
                "line": 130
              },
              {
                "function": "_mock_research_for_testing",
                "line": 140
              },
              {
                "function": "append",
                "line": 355
              },
              {
                "function": "append",
                "line": 359
              },
              {
                "function": "append",
                "line": 362
              },
              {
                "function": "append",
                "line": 366
              },
              {
                "function": "append",
                "line": 369
              },
              {
                "function": "get",
                "line": 426
              },
              {
                "function": "append",
                "line": 427
              },
              {
                "function": "get",
                "line": 429
              },
              {
                "function": "get",
                "line": 432
              },
              {
                "function": "get",
                "line": 435
              },
              {
                "function": "append",
                "line": 440
              },
              {
                "function": "append",
                "line": 441
              },
              {
                "function": "append",
                "line": 442
              },
              {
                "function": "super",
                "line": 18
              },
              {
                "function": "get",
                "line": 129
              },
              {
                "function": "ClientSession",
                "line": 167
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "_mock_research_for_testing",
                "line": 184
              },
              {
                "function": "append",
                "line": 330
              },
              {
                "function": "append",
                "line": 331
              },
              {
                "function": "append",
                "line": 361
              },
              {
                "function": "split",
                "line": 399
              },
              {
                "function": "strip",
                "line": 400
              },
              {
                "function": "lower",
                "line": 406
              },
              {
                "function": "lower",
                "line": 408
              },
              {
                "function": "append",
                "line": 430
              },
              {
                "function": "append",
                "line": 433
              },
              {
                "function": "append",
                "line": 436
              },
              {
                "function": "post",
                "line": 168
              },
              {
                "function": "split",
                "line": 400
              },
              {
                "function": "startswith",
                "line": 400
              },
              {
                "function": "lower",
                "line": 407
              },
              {
                "function": "lower",
                "line": 407
              },
              {
                "function": "Exception",
                "line": 179
              },
              {
                "function": "join",
                "line": 355
              },
              {
                "function": "ClientTimeout",
                "line": 172
              },
              {
                "function": "json",
                "line": 175
              },
              {
                "function": "text",
                "line": 178
              },
              {
                "function": "split",
                "line": 399
              },
              {
                "function": "strip",
                "line": 400
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "architect_gpt",
                "names": [
                  "ArchitectGPT"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "codesmith_claude",
                "names": [
                  "CodeSmithClaude"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "docu_bot",
                "names": [
                  "DocuBot"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "reviewer_gpt",
                "names": [
                  "ReviewerGPT"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "fixer_bot",
                "names": [
                  "FixerBot"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "trade_strat",
                "names": [
                  "TradeStrat"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "research_bot",
                "names": [
                  "ResearchBot"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "opus_arbitrator",
                "names": [
                  "OpusArbitrator"
                ],
                "line": 14
              }
            ],
            "calls": []
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "get_capabilities",
                "line": 51,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_build_code_review_prompt",
                "line": 134,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "get",
                  "open",
                  "join",
                  "read",
                  "len"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_build_previous_analysis_prompt",
                "line": 258,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_build_final_review_prompt",
                "line": 287,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_build_review_prompt",
                "line": 365,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_categorize_issues",
                "line": 562,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "review_result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_generate_recommendations",
                "line": 620,
                "async": false,
                "calls": [
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "issues"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              },
              {
                "name": "_calculate_quality_score",
                "line": 652,
                "async": false,
                "calls": [
                  "max",
                  "items",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "issues"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              }
            ],
            "classes": [
              {
                "name": "ReviewerGPT",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_code_review_prompt",
                  "_build_previous_analysis_prompt",
                  "_build_final_review_prompt",
                  "_build_review_prompt",
                  "_categorize_issues",
                  "_generate_recommendations",
                  "_calculate_quality_score"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Tuple"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 101
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 188
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 226
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "get",
                "line": 177
              },
              {
                "function": "join",
                "line": 180
              },
              {
                "function": "get",
                "line": 282
              },
              {
                "function": "join",
                "line": 285
              },
              {
                "function": "get",
                "line": 309
              },
              {
                "function": "join",
                "line": 312
              },
              {
                "function": "_build_review_prompt",
                "line": 319
              },
              {
                "function": "_categorize_issues",
                "line": 325
              },
              {
                "function": "_generate_recommendations",
                "line": 328
              },
              {
                "function": "_build_review_prompt",
                "line": 344
              },
              {
                "function": "_categorize_issues",
                "line": 350
              },
              {
                "function": "_generate_recommendations",
                "line": 353
              },
              {
                "function": "append",
                "line": 372
              },
              {
                "function": "get",
                "line": 375
              },
              {
                "function": "get",
                "line": 379
              },
              {
                "function": "get",
                "line": 383
              },
              {
                "function": "append",
                "line": 387
              },
              {
                "function": "append",
                "line": 388
              },
              {
                "function": "append",
                "line": 389
              },
              {
                "function": "append",
                "line": 390
              },
              {
                "function": "append",
                "line": 391
              },
              {
                "function": "append",
                "line": 392
              },
              {
                "function": "join",
                "line": 394
              },
              {
                "function": "get",
                "line": 627
              },
              {
                "function": "get",
                "line": 633
              },
              {
                "function": "get",
                "line": 639
              },
              {
                "function": "get",
                "line": 645
              },
              {
                "function": "items",
                "line": 666
              },
              {
                "function": "max",
                "line": 670
              },
              {
                "function": "create_claude_web_llm",
                "line": 103
              },
              {
                "function": "_build_code_review_prompt",
                "line": 109
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "append",
                "line": 178
              },
              {
                "function": "create_claude_web_llm",
                "line": 190
              },
              {
                "function": "_build_previous_analysis_prompt",
                "line": 196
              },
              {
                "function": "print",
                "line": 201
              },
              {
                "function": "create_claude_web_llm",
                "line": 228
              },
              {
                "function": "_build_final_review_prompt",
                "line": 234
              },
              {
                "function": "print",
                "line": 239
              },
              {
                "function": "append",
                "line": 283
              },
              {
                "function": "append",
                "line": 310
              },
              {
                "function": "_perform_review",
                "line": 322
              },
              {
                "function": "_perform_review",
                "line": 347
              },
              {
                "function": "_calculate_quality_score",
                "line": 361
              },
              {
                "function": "append",
                "line": 376
              },
              {
                "function": "append",
                "line": 380
              },
              {
                "function": "append",
                "line": 384
              },
              {
                "function": "append",
                "line": 628
              },
              {
                "function": "append",
                "line": 634
              },
              {
                "function": "append",
                "line": 640
              },
              {
                "function": "append",
                "line": 646
              },
              {
                "function": "min",
                "line": 670
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "_perform_code_review",
                "line": 84
              },
              {
                "function": "agenerate",
                "line": 112
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "open",
                "line": 143
              },
              {
                "function": "read",
                "line": 144
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "agenerate",
                "line": 199
              },
              {
                "function": "print",
                "line": 211
              },
              {
                "function": "agenerate",
                "line": 237
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "append",
                "line": 630
              },
              {
                "function": "append",
                "line": 636
              },
              {
                "function": "append",
                "line": 642
              },
              {
                "function": "append",
                "line": 648
              },
              {
                "function": "_analyze_previous_results",
                "line": 86
              },
              {
                "function": "len",
                "line": 668
              },
              {
                "function": "_perform_final_review",
                "line": 88
              },
              {
                "function": "len",
                "line": 145
              },
              {
                "function": "_analyze_code_issues",
                "line": 90
              },
              {
                "function": "_general_review",
                "line": 93
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
              },
              {
                "name": "get_capabilities",
                "line": 51,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
              },
              {
                "name": "_build_architecture_prompt",
                "line": 100,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
              },
              {
                "name": "_extract_artifacts",
                "line": 242,
                "async": false,
                "calls": [
                  "findall"
                ],
                "parameters": [
                  "self",
                  "response"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
              }
            ],
            "classes": [
              {
                "name": "ArchitectGPT",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_architecture_prompt",
                  "_extract_artifacts"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 246
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "_build_architecture_prompt",
                "line": 83
              },
              {
                "function": "_extract_artifacts",
                "line": 90
              },
              {
                "function": "append",
                "line": 107
              },
              {
                "function": "get",
                "line": 110
              },
              {
                "function": "get",
                "line": 113
              },
              {
                "function": "get",
                "line": 116
              },
              {
                "function": "append",
                "line": 120
              },
              {
                "function": "append",
                "line": 121
              },
              {
                "function": "append",
                "line": 122
              },
              {
                "function": "append",
                "line": 123
              },
              {
                "function": "append",
                "line": 124
              },
              {
                "function": "append",
                "line": 125
              },
              {
                "function": "append",
                "line": 126
              },
              {
                "function": "join",
                "line": 128
              },
              {
                "function": "findall",
                "line": 251
              },
              {
                "function": "findall",
                "line": 256
              },
              {
                "function": "findall",
                "line": 262
              },
              {
                "function": "_generate_architecture",
                "line": 87
              },
              {
                "function": "append",
                "line": 111
              },
              {
                "function": "append",
                "line": 114
              },
              {
                "function": "append",
                "line": 117
              },
              {
                "function": "super",
                "line": 15
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "get_capabilities",
                "line": 62,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_build_validation_prompt",
                "line": 154,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "get",
                  "open",
                  "join",
                  "read",
                  "len"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_build_improvement_prompt",
                "line": 242,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "get",
                  "open",
                  "join",
                  "read",
                  "len"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_analyze_requirements",
                "line": 386,
                "async": false,
                "calls": [
                  "get",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_build_strategy_prompt",
                "line": 429,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context",
                  "requirements"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_create_backtest_framework",
                "line": 902,
                "async": false,
                "calls": [
                  "search",
                  "group"
                ],
                "parameters": [
                  "self",
                  "strategy"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              },
              {
                "name": "_generate_performance_metrics",
                "line": 962,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "strategy"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              }
            ],
            "classes": [
              {
                "name": "TradeStrat",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_validation_prompt",
                  "_build_improvement_prompt",
                  "_analyze_requirements",
                  "_build_strategy_prompt",
                  "_create_backtest_framework",
                  "_generate_performance_metrics"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 907
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 121
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 208
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "get",
                "line": 197
              },
              {
                "function": "join",
                "line": 200
              },
              {
                "function": "get",
                "line": 260
              },
              {
                "function": "get",
                "line": 323
              },
              {
                "function": "join",
                "line": 326
              },
              {
                "function": "_analyze_requirements",
                "line": 333
              },
              {
                "function": "_build_strategy_prompt",
                "line": 336
              },
              {
                "function": "_create_backtest_framework",
                "line": 342
              },
              {
                "function": "_generate_performance_metrics",
                "line": 345
              },
              {
                "function": "_analyze_requirements",
                "line": 362
              },
              {
                "function": "_build_strategy_prompt",
                "line": 365
              },
              {
                "function": "_create_backtest_framework",
                "line": 371
              },
              {
                "function": "_generate_performance_metrics",
                "line": 374
              },
              {
                "function": "lower",
                "line": 399
              },
              {
                "function": "get",
                "line": 420
              },
              {
                "function": "get",
                "line": 422
              },
              {
                "function": "get",
                "line": 424
              },
              {
                "function": "append",
                "line": 436
              },
              {
                "function": "append",
                "line": 439
              },
              {
                "function": "append",
                "line": 440
              },
              {
                "function": "append",
                "line": 441
              },
              {
                "function": "append",
                "line": 442
              },
              {
                "function": "append",
                "line": 443
              },
              {
                "function": "get",
                "line": 446
              },
              {
                "function": "get",
                "line": 450
              },
              {
                "function": "append",
                "line": 454
              },
              {
                "function": "append",
                "line": 455
              },
              {
                "function": "append",
                "line": 456
              },
              {
                "function": "append",
                "line": 457
              },
              {
                "function": "append",
                "line": 458
              },
              {
                "function": "append",
                "line": 459
              },
              {
                "function": "append",
                "line": 460
              },
              {
                "function": "join",
                "line": 462
              },
              {
                "function": "search",
                "line": 908
              },
              {
                "function": "create_claude_web_llm",
                "line": 123
              },
              {
                "function": "_build_validation_prompt",
                "line": 129
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "append",
                "line": 198
              },
              {
                "function": "create_claude_web_llm",
                "line": 210
              },
              {
                "function": "_build_improvement_prompt",
                "line": 216
              },
              {
                "function": "print",
                "line": 221
              },
              {
                "function": "print",
                "line": 253
              },
              {
                "function": "get",
                "line": 262
              },
              {
                "function": "append",
                "line": 324
              },
              {
                "function": "_generate_strategy",
                "line": 339
              },
              {
                "function": "_generate_strategy",
                "line": 368
              },
              {
                "function": "append",
                "line": 447
              },
              {
                "function": "append",
                "line": 451
              },
              {
                "function": "group",
                "line": 909
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "_validate_trading_logic",
                "line": 106
              },
              {
                "function": "agenerate",
                "line": 132
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "open",
                "line": 163
              },
              {
                "function": "read",
                "line": 164
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "agenerate",
                "line": 219
              },
              {
                "function": "print",
                "line": 232
              },
              {
                "function": "open",
                "line": 251
              },
              {
                "function": "read",
                "line": 252
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "_suggest_improvements",
                "line": 108
              },
              {
                "function": "_design_strategy",
                "line": 110
              },
              {
                "function": "_develop_strategy",
                "line": 113
              },
              {
                "function": "len",
                "line": 165
              },
              {
                "function": "len",
                "line": 253
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              },
              {
                "name": "get_capabilities",
                "line": 58,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              },
              {
                "name": "_analyze_problem",
                "line": 117,
                "async": false,
                "calls": [
                  "get",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              },
              {
                "name": "_build_fix_prompt",
                "line": 152,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context",
                  "analysis"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              },
              {
                "name": "_validate_fixes",
                "line": 537,
                "async": false,
                "calls": [
                  "findall",
                  "enumerate",
                  "compile",
                  "append"
                ],
                "parameters": [
                  "self",
                  "fixes"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              },
              {
                "name": "_create_fix_summary",
                "line": 567,
                "async": false,
                "calls": [
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "validated_fixes"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              }
            ],
            "classes": [
              {
                "name": "FixerBot",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_analyze_problem",
                  "_build_fix_prompt",
                  "_validate_fixes",
                  "_create_fix_summary"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional",
                  "Tuple"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 542
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "_analyze_problem",
                "line": 93
              },
              {
                "function": "_build_fix_prompt",
                "line": 96
              },
              {
                "function": "_validate_fixes",
                "line": 102
              },
              {
                "function": "_create_fix_summary",
                "line": 105
              },
              {
                "function": "lower",
                "line": 129
              },
              {
                "function": "get",
                "line": 144
              },
              {
                "function": "get",
                "line": 147
              },
              {
                "function": "append",
                "line": 159
              },
              {
                "function": "append",
                "line": 162
              },
              {
                "function": "append",
                "line": 163
              },
              {
                "function": "get",
                "line": 166
              },
              {
                "function": "get",
                "line": 170
              },
              {
                "function": "get",
                "line": 173
              },
              {
                "function": "get",
                "line": 177
              },
              {
                "function": "append",
                "line": 181
              },
              {
                "function": "append",
                "line": 182
              },
              {
                "function": "append",
                "line": 183
              },
              {
                "function": "append",
                "line": 184
              },
              {
                "function": "append",
                "line": 185
              },
              {
                "function": "append",
                "line": 186
              },
              {
                "function": "join",
                "line": 188
              },
              {
                "function": "findall",
                "line": 545
              },
              {
                "function": "enumerate",
                "line": 547
              },
              {
                "function": "sum",
                "line": 571
              },
              {
                "function": "len",
                "line": 572
              },
              {
                "function": "_generate_fixes",
                "line": 99
              },
              {
                "function": "append",
                "line": 167
              },
              {
                "function": "append",
                "line": 171
              },
              {
                "function": "append",
                "line": 174
              },
              {
                "function": "append",
                "line": 178
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "compile",
                "line": 550
              },
              {
                "function": "append",
                "line": 551
              },
              {
                "function": "append",
                "line": 558
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 14,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              },
              {
                "name": "get_capabilities",
                "line": 52,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              },
              {
                "name": "_build_analysis_prompt",
                "line": 146,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "get",
                  "open",
                  "join",
                  "read",
                  "len"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              },
              {
                "name": "_build_coding_prompt",
                "line": 240,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "task",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              },
              {
                "name": "_build_implementation_prompt",
                "line": 572,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "get",
                  "open",
                  "join",
                  "read",
                  "len"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              },
              {
                "name": "_organize_code",
                "line": 654,
                "async": false,
                "calls": [
                  "findall"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              }
            ],
            "classes": [
              {
                "name": "CodeSmithClaude",
                "line": 8,
                "methods": [
                  "__init__",
                  "get_capabilities",
                  "_build_analysis_prompt",
                  "_build_coding_prompt",
                  "_build_implementation_prompt",
                  "_organize_code"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 658
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 113
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 278
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 538
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 15
              },
              {
                "function": "get",
                "line": 185
              },
              {
                "function": "join",
                "line": 188
              },
              {
                "function": "_build_coding_prompt",
                "line": 195
              },
              {
                "function": "_validate_code",
                "line": 201
              },
              {
                "function": "_organize_code",
                "line": 204
              },
              {
                "function": "_build_coding_prompt",
                "line": 220
              },
              {
                "function": "_validate_code",
                "line": 226
              },
              {
                "function": "_organize_code",
                "line": 229
              },
              {
                "function": "append",
                "line": 247
              },
              {
                "function": "get",
                "line": 250
              },
              {
                "function": "get",
                "line": 254
              },
              {
                "function": "get",
                "line": 258
              },
              {
                "function": "append",
                "line": 262
              },
              {
                "function": "append",
                "line": 263
              },
              {
                "function": "append",
                "line": 264
              },
              {
                "function": "append",
                "line": 265
              },
              {
                "function": "append",
                "line": 266
              },
              {
                "function": "append",
                "line": 267
              },
              {
                "function": "append",
                "line": 268
              },
              {
                "function": "join",
                "line": 270
              },
              {
                "function": "get",
                "line": 590
              },
              {
                "function": "get",
                "line": 649
              },
              {
                "function": "join",
                "line": 652
              },
              {
                "function": "findall",
                "line": 669
              },
              {
                "function": "findall",
                "line": 674
              },
              {
                "function": "findall",
                "line": 679
              },
              {
                "function": "create_claude_web_llm",
                "line": 115
              },
              {
                "function": "_build_analysis_prompt",
                "line": 121
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "append",
                "line": 186
              },
              {
                "function": "_generate_code",
                "line": 198
              },
              {
                "function": "_generate_code",
                "line": 223
              },
              {
                "function": "append",
                "line": 251
              },
              {
                "function": "append",
                "line": 255
              },
              {
                "function": "append",
                "line": 259
              },
              {
                "function": "create_claude_web_llm",
                "line": 281
              },
              {
                "function": "print",
                "line": 289
              },
              {
                "function": "create_claude_web_llm",
                "line": 540
              },
              {
                "function": "_build_implementation_prompt",
                "line": 546
              },
              {
                "function": "print",
                "line": 551
              },
              {
                "function": "print",
                "line": 583
              },
              {
                "function": "get",
                "line": 592
              },
              {
                "function": "append",
                "line": 650
              },
              {
                "function": "super",
                "line": 15
              },
              {
                "function": "_read_and_analyze_code",
                "line": 98
              },
              {
                "function": "agenerate",
                "line": 124
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "open",
                "line": 155
              },
              {
                "function": "read",
                "line": 156
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "agenerate",
                "line": 287
              },
              {
                "function": "print",
                "line": 293
              },
              {
                "function": "agenerate",
                "line": 549
              },
              {
                "function": "print",
                "line": 562
              },
              {
                "function": "open",
                "line": 581
              },
              {
                "function": "read",
                "line": 582
              },
              {
                "function": "print",
                "line": 585
              },
              {
                "function": "get",
                "line": 594
              },
              {
                "function": "_implement_improvements",
                "line": 100
              },
              {
                "function": "_implement_code",
                "line": 102
              },
              {
                "function": "_generate_code_implementation",
                "line": 105
              },
              {
                "function": "len",
                "line": 157
              },
              {
                "function": "len",
                "line": 583
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 26,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
              },
              {
                "name": "start_claude_web_server",
                "line": 31,
                "async": false,
                "calls": [
                  "print",
                  "Popen",
                  "sleep"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
              },
              {
                "name": "stop_claude_web_server",
                "line": 51,
                "async": false,
                "calls": [
                  "terminate",
                  "wait",
                  "print",
                  "kill"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
              }
            ],
            "classes": [
              {
                "name": "KIAutoAgentClaudeWebIntegration",
                "line": 23,
                "methods": [
                  "__init__",
                  "start_claude_web_server",
                  "stop_claude_web_server"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "orchestration.master_dispatcher",
                "names": [
                  "MasterDispatcher"
                ],
                "line": 19
              },
              {
                "type": "from_import",
                "module": "orchestration.intent_classifier",
                "names": [
                  "IntentClassifier"
                ],
                "line": 20
              },
              {
                "type": "import",
                "module": "argparse",
                "names": [
                  "argparse"
                ],
                "line": 335
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 16
              },
              {
                "function": "Path",
                "line": 15
              },
              {
                "function": "str",
                "line": 16
              },
              {
                "function": "ArgumentParser",
                "line": 337
              },
              {
                "function": "add_argument",
                "line": 338
              },
              {
                "function": "add_argument",
                "line": 339
              },
              {
                "function": "add_argument",
                "line": 340
              },
              {
                "function": "parse_args",
                "line": 342
              },
              {
                "function": "KIAutoAgentClaudeWebIntegration",
                "line": 344
              },
              {
                "function": "run",
                "line": 387
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "IntentClassifier",
                "line": 121
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 219
              },
              {
                "function": "print",
                "line": 220
              },
              {
                "function": "print",
                "line": 221
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "print",
                "line": 223
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 228
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "print",
                "line": 230
              },
              {
                "function": "print",
                "line": 232
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "print",
                "line": 251
              },
              {
                "function": "print",
                "line": 270
              },
              {
                "function": "print",
                "line": 272
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "print",
                "line": 277
              },
              {
                "function": "print",
                "line": 278
              },
              {
                "function": "print",
                "line": 279
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "print",
                "line": 284
              },
              {
                "function": "print",
                "line": 285
              },
              {
                "function": "print",
                "line": 286
              },
              {
                "function": "print",
                "line": 287
              },
              {
                "function": "print",
                "line": 288
              },
              {
                "function": "main",
                "line": 387
              },
              {
                "function": "Popen",
                "line": 36
              },
              {
                "function": "sleep",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "get",
                "line": 137
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "create_claude_web_llm",
                "line": 162
              },
              {
                "function": "create_claude_web_llm",
                "line": 166
              },
              {
                "function": "generate",
                "line": 183
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "generate",
                "line": 208
              },
              {
                "function": "print",
                "line": 213
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "start_claude_web_server",
                "line": 291
              },
              {
                "function": "print",
                "line": 292
              },
              {
                "function": "print",
                "line": 296
              },
              {
                "function": "print",
                "line": 305
              },
              {
                "function": "print",
                "line": 306
              },
              {
                "function": "print",
                "line": 307
              },
              {
                "function": "print",
                "line": 309
              },
              {
                "function": "print",
                "line": 310
              },
              {
                "function": "print",
                "line": 311
              },
              {
                "function": "print",
                "line": 312
              },
              {
                "function": "print",
                "line": 313
              },
              {
                "function": "print",
                "line": 315
              },
              {
                "function": "print",
                "line": 316
              },
              {
                "function": "print",
                "line": 317
              },
              {
                "function": "print",
                "line": 318
              },
              {
                "function": "print",
                "line": 319
              },
              {
                "function": "print",
                "line": 321
              },
              {
                "function": "print",
                "line": 322
              },
              {
                "function": "print",
                "line": 323
              },
              {
                "function": "print",
                "line": 324
              },
              {
                "function": "print",
                "line": 325
              },
              {
                "function": "stop_claude_web_server",
                "line": 330
              },
              {
                "function": "demonstrate_system_architecture_comparison",
                "line": 347
              },
              {
                "function": "start_claude_web_server",
                "line": 349
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "terminate",
                "line": 55
              },
              {
                "function": "wait",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "classify",
                "line": 135
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 217
              },
              {
                "function": "sleep",
                "line": 297
              },
              {
                "function": "demonstrate_modified_agent_usage",
                "line": 300
              },
              {
                "function": "demonstrate_intent_classification_with_claude_web",
                "line": 301
              },
              {
                "function": "demonstrate_workflow_execution_with_claude_web",
                "line": 302
              },
              {
                "function": "demonstrate_system_architecture_comparison",
                "line": 303
              },
              {
                "function": "print",
                "line": 361
              },
              {
                "function": "print",
                "line": 362
              },
              {
                "function": "print",
                "line": 363
              },
              {
                "function": "print",
                "line": 364
              },
              {
                "function": "print",
                "line": 365
              },
              {
                "function": "print",
                "line": 366
              },
              {
                "function": "print",
                "line": 367
              },
              {
                "function": "print",
                "line": 368
              },
              {
                "function": "print",
                "line": 369
              },
              {
                "function": "print",
                "line": 370
              },
              {
                "function": "print",
                "line": 371
              },
              {
                "function": "print",
                "line": 372
              },
              {
                "function": "print",
                "line": 373
              },
              {
                "function": "print",
                "line": 374
              },
              {
                "function": "print",
                "line": 375
              },
              {
                "function": "print",
                "line": 376
              },
              {
                "function": "print",
                "line": 377
              },
              {
                "function": "print",
                "line": 378
              },
              {
                "function": "print",
                "line": 379
              },
              {
                "function": "print",
                "line": 380
              },
              {
                "function": "print",
                "line": 381
              },
              {
                "function": "print",
                "line": 382
              },
              {
                "function": "print",
                "line": 383
              },
              {
                "function": "kill",
                "line": 59
              },
              {
                "function": "wait",
                "line": 60
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "stop_claude_web_server",
                "line": 353
              },
              {
                "function": "run_complete_integration_demo",
                "line": 355
              },
              {
                "function": "print",
                "line": 357
              },
              {
                "function": "print",
                "line": 359
              },
              {
                "function": "demonstrate_workflow_execution_with_claude_web",
                "line": 351
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py": {
            "functions": [
              {
                "name": "main",
                "line": 131,
                "async": false,
                "calls": [
                  "run",
                  "strip",
                  "print",
                  "test_login_detection",
                  "test_comprehensive_checks",
                  "input"
                ],
                "parameters": [],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.claude_browser",
                "names": [
                  "ClaudeBrowser"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "structlog",
                "names": [
                  "structlog"
                ],
                "line": 15
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 12
              },
              {
                "function": "configure",
                "line": 18
              },
              {
                "function": "get_logger",
                "line": 27
              },
              {
                "function": "Path",
                "line": 11
              },
              {
                "function": "str",
                "line": 12
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "strip",
                "line": 139
              },
              {
                "function": "main",
                "line": 155
              },
              {
                "function": "make_filtering_bound_logger",
                "line": 22
              },
              {
                "function": "PrintLoggerFactory",
                "line": 23
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "ClaudeBrowser",
                "line": 39
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "ClaudeBrowser",
                "line": 106
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "print",
                "line": 122
              },
              {
                "function": "input",
                "line": 123
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "run",
                "line": 143
              },
              {
                "function": "ConsoleRenderer",
                "line": 20
              },
              {
                "function": "start_browser",
                "line": 40
              },
              {
                "function": "check_login_status",
                "line": 48
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "check_login_status",
                "line": 74
              },
              {
                "function": "debug_login_detection",
                "line": 79
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "error",
                "line": 91
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "start_browser",
                "line": 107
              },
              {
                "function": "goto",
                "line": 110
              },
              {
                "function": "sleep",
                "line": 111
              },
              {
                "function": "debug_login_detection",
                "line": 114
              },
              {
                "function": "_comprehensive_login_check",
                "line": 118
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "input",
                "line": 139
              },
              {
                "function": "test_login_detection",
                "line": 143
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "run",
                "line": 146
              },
              {
                "function": "wait_for_login",
                "line": 60
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "close",
                "line": 95
              },
              {
                "function": "close",
                "line": 129
              },
              {
                "function": "test_comprehensive_checks",
                "line": 146
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "str",
                "line": 91
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 16,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              },
              {
                "name": "_group_steps_for_execution",
                "line": 101,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "dict",
                  "items",
                  "sorted"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              },
              {
                "name": "_compile_final_output",
                "line": 216,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "join",
                  "str",
                  "len"
                ],
                "parameters": [
                  "self",
                  "result",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              },
              {
                "name": "get_current_status",
                "line": 257,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              },
              {
                "name": "get_execution_history",
                "line": 269,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "limit"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              }
            ],
            "classes": [
              {
                "name": "ExecutionEngine",
                "line": 10,
                "methods": [
                  "__init__",
                  "_group_steps_for_execution",
                  "_compile_final_output",
                  "get_current_status",
                  "get_execution_history"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 4
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "time",
                "line": 25
              },
              {
                "function": "get",
                "line": 105
              },
              {
                "function": "dict",
                "line": 112
              },
              {
                "function": "zip",
                "line": 134
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "append",
                "line": 221
              },
              {
                "function": "append",
                "line": 249
              },
              {
                "function": "append",
                "line": 250
              },
              {
                "function": "append",
                "line": 251
              },
              {
                "function": "append",
                "line": 252
              },
              {
                "function": "append",
                "line": 253
              },
              {
                "function": "join",
                "line": 255
              },
              {
                "function": "get",
                "line": 29
              },
              {
                "function": "isoformat",
                "line": 30
              },
              {
                "function": "_group_steps_for_execution",
                "line": 43
              },
              {
                "function": "items",
                "line": 46
              },
              {
                "function": "_compile_final_output",
                "line": 71
              },
              {
                "function": "isoformat",
                "line": 95
              },
              {
                "function": "append",
                "line": 96
              },
              {
                "function": "get",
                "line": 106
              },
              {
                "function": "append",
                "line": 109
              },
              {
                "function": "sorted",
                "line": 112
              },
              {
                "function": "append",
                "line": 123
              },
              {
                "function": "_execute_single_step",
                "line": 126
              },
              {
                "function": "append",
                "line": 127
              },
              {
                "function": "gather",
                "line": 130
              },
              {
                "function": "isinstance",
                "line": 135
              },
              {
                "function": "get",
                "line": 172
              },
              {
                "function": "copy",
                "line": 180
              },
              {
                "function": "get",
                "line": 183
              },
              {
                "function": "hasattr",
                "line": 188
              },
              {
                "function": "append",
                "line": 200
              },
              {
                "function": "print",
                "line": 202
              },
              {
                "function": "append",
                "line": 225
              },
              {
                "function": "append",
                "line": 244
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "items",
                "line": 59
              },
              {
                "function": "time",
                "line": 74
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "append",
                "line": 87
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "items",
                "line": 112
              },
              {
                "function": "_execute_single_step",
                "line": 152
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 207
              },
              {
                "function": "append",
                "line": 246
              },
              {
                "function": "get",
                "line": 262
              },
              {
                "function": "len",
                "line": 263
              },
              {
                "function": "len",
                "line": 264
              },
              {
                "function": "get",
                "line": 265
              },
              {
                "function": "get",
                "line": 24
              },
              {
                "function": "now",
                "line": 30
              },
              {
                "function": "any",
                "line": 49
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "now",
                "line": 95
              },
              {
                "function": "str",
                "line": 138
              },
              {
                "function": "format_exc",
                "line": 139
              },
              {
                "function": "get",
                "line": 156
              },
              {
                "function": "get",
                "line": 156
              },
              {
                "function": "get",
                "line": 180
              },
              {
                "function": "get",
                "line": 185
              },
              {
                "function": "execute",
                "line": 189
              },
              {
                "function": "str",
                "line": 210
              },
              {
                "function": "format_exc",
                "line": 211
              },
              {
                "function": "get",
                "line": 221
              },
              {
                "function": "get",
                "line": 230
              },
              {
                "function": "get",
                "line": 231
              },
              {
                "function": "append",
                "line": 233
              },
              {
                "function": "get",
                "line": 235
              },
              {
                "function": "get",
                "line": 251
              },
              {
                "function": "len",
                "line": 252
              },
              {
                "function": "len",
                "line": 253
              },
              {
                "function": "get",
                "line": 263
              },
              {
                "function": "get",
                "line": 264
              },
              {
                "function": "len",
                "line": 49
              },
              {
                "function": "_execute_parallel",
                "line": 52
              },
              {
                "function": "_execute_sequential",
                "line": 56
              },
              {
                "function": "get",
                "line": 63
              },
              {
                "function": "append",
                "line": 64
              },
              {
                "function": "append",
                "line": 65
              },
              {
                "function": "str",
                "line": 89
              },
              {
                "function": "format_exc",
                "line": 90
              },
              {
                "function": "len",
                "line": 225
              },
              {
                "function": "str",
                "line": 237
              },
              {
                "function": "append",
                "line": 240
              },
              {
                "function": "len",
                "line": 244
              },
              {
                "function": "len",
                "line": 47
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "len",
                "line": 80
              },
              {
                "function": "str",
                "line": 92
              },
              {
                "function": "str",
                "line": 207
              },
              {
                "function": "len",
                "line": 238
              },
              {
                "function": "len",
                "line": 51
              },
              {
                "function": "len",
                "line": 55
              },
              {
                "function": "get",
                "line": 67
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 36,
                "async": false,
                "calls": [
                  "now"
                ],
                "parameters": [
                  "self",
                  "max_iterations"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "record_iteration",
                "line": 41,
                "async": false,
                "calls": [
                  "IterationReason",
                  "append",
                  "len"
                ],
                "parameters": [
                  "self",
                  "reason",
                  "agent",
                  "quality_score",
                  "critical_issues"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_generate_iteration_summary",
                "line": 87,
                "async": false,
                "calls": [
                  "list",
                  "IterationSummary",
                  "now",
                  "get",
                  "extend",
                  "_generate_recommendation",
                  "set",
                  "items",
                  "_identify_problem_areas",
                  "len",
                  "total_seconds",
                  "sorted"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_identify_problem_areas",
                "line": 151,
                "async": false,
                "calls": [
                  "append",
                  "sum",
                  "extend",
                  "join",
                  "lower",
                  "items"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_generate_recommendation",
                "line": 178,
                "async": false,
                "calls": [
                  "items",
                  "any",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "common_issues",
                  "agent_performance"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_generate_user_options",
                "line": 207,
                "async": false,
                "calls": [
                  "startswith",
                  "sorted",
                  "len"
                ],
                "parameters": [
                  "self",
                  "summary"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_get_primary_recommendation",
                "line": 257,
                "async": false,
                "calls": [
                  "_generate_user_options",
                  "next"
                ],
                "parameters": [
                  "self",
                  "summary"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "__init__",
                "line": 269,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_display_iteration_analysis",
                "line": 295,
                "async": false,
                "calls": [
                  "_format_iteration_timeline",
                  "print",
                  "_format_common_issues",
                  "_format_agent_performance",
                  "display_panel",
                  "_format_problematic_areas"
                ],
                "parameters": [
                  "self",
                  "summary",
                  "cli_interface"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_format_common_issues",
                "line": 329,
                "async": false,
                "calls": [
                  "join",
                  "enumerate",
                  "append"
                ],
                "parameters": [
                  "self",
                  "common_issues"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_format_agent_performance",
                "line": 340,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "items"
                ],
                "parameters": [
                  "self",
                  "agent_performance"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_format_problematic_areas",
                "line": 359,
                "async": false,
                "calls": [
                  "join"
                ],
                "parameters": [
                  "self",
                  "problematic_areas"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "_format_iteration_timeline",
                "line": 366,
                "async": false,
                "calls": [
                  "split",
                  "append",
                  "insert",
                  "join",
                  "len"
                ],
                "parameters": [
                  "self",
                  "reasons"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "__init__",
                "line": 422,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "__init__",
                "line": 530,
                "async": false,
                "calls": [
                  "IterationDecisionExecutor",
                  "IterationController",
                  "UserInteractionHandler"
                ],
                "parameters": [
                  "self",
                  "max_iterations"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "get_iteration_statistics",
                "line": 566,
                "async": false,
                "calls": [
                  "isoformat",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              }
            ],
            "classes": [
              {
                "name": "IterationReason",
                "line": 11,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "IterationSummary",
                "line": 21,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "IterationController",
                "line": 31,
                "methods": [
                  "__init__",
                  "record_iteration",
                  "_generate_iteration_summary",
                  "_identify_problem_areas",
                  "_generate_recommendation",
                  "_generate_user_options",
                  "_get_primary_recommendation"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "UserInteractionHandler",
                "line": 264,
                "methods": [
                  "__init__",
                  "_display_iteration_analysis",
                  "_format_common_issues",
                  "_format_agent_performance",
                  "_format_problematic_areas",
                  "_format_iteration_timeline"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "IterationDecisionExecutor",
                "line": 417,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              },
              {
                "name": "IterationManager",
                "line": 525,
                "methods": [
                  "__init__",
                  "get_iteration_statistics"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "field",
                "line": 18
              },
              {
                "function": "now",
                "line": 39
              },
              {
                "function": "IterationReason",
                "line": 43
              },
              {
                "function": "append",
                "line": 50
              },
              {
                "function": "get",
                "line": 69
              },
              {
                "function": "items",
                "line": 128
              },
              {
                "function": "_identify_problem_areas",
                "line": 133
              },
              {
                "function": "total_seconds",
                "line": 136
              },
              {
                "function": "_generate_recommendation",
                "line": 139
              },
              {
                "function": "IterationSummary",
                "line": 141
              },
              {
                "function": "join",
                "line": 164
              },
              {
                "function": "lower",
                "line": 169
              },
              {
                "function": "items",
                "line": 171
              },
              {
                "function": "len",
                "line": 184
              },
              {
                "function": "sorted",
                "line": 255
              },
              {
                "function": "_generate_user_options",
                "line": 259
              },
              {
                "function": "next",
                "line": 260
              },
              {
                "function": "_display_iteration_analysis",
                "line": 279
              },
              {
                "function": "append",
                "line": 286
              },
              {
                "function": "enumerate",
                "line": 335
              },
              {
                "function": "join",
                "line": 338
              },
              {
                "function": "items",
                "line": 346
              },
              {
                "function": "join",
                "line": 357
              },
              {
                "function": "join",
                "line": 364
              },
              {
                "function": "join",
                "line": 384
              },
              {
                "function": "enumerate",
                "line": 391
              },
              {
                "function": "format",
                "line": 397
              },
              {
                "function": "append",
                "line": 461
              },
              {
                "function": "IterationController",
                "line": 531
              },
              {
                "function": "UserInteractionHandler",
                "line": 532
              },
              {
                "function": "IterationDecisionExecutor",
                "line": 533
              },
              {
                "function": "_generate_iteration_summary",
                "line": 57
              },
              {
                "function": "record_iteration",
                "line": 73
              },
              {
                "function": "IterationSummary",
                "line": 90
              },
              {
                "function": "extend",
                "line": 103
              },
              {
                "function": "sorted",
                "line": 110
              },
              {
                "function": "extend",
                "line": 125
              },
              {
                "function": "list",
                "line": 130
              },
              {
                "function": "extend",
                "line": 167
              },
              {
                "function": "sum",
                "line": 172
              },
              {
                "function": "sum",
                "line": 185
              },
              {
                "function": "any",
                "line": 193
              },
              {
                "function": "len",
                "line": 202
              },
              {
                "function": "_get_user_choice",
                "line": 283
              },
              {
                "function": "display_panel",
                "line": 325
              },
              {
                "function": "print",
                "line": 327
              },
              {
                "function": "append",
                "line": 336
              },
              {
                "function": "append",
                "line": 352
              },
              {
                "function": "append",
                "line": 376
              },
              {
                "function": "len",
                "line": 381
              },
              {
                "function": "insert",
                "line": 382
              },
              {
                "function": "len",
                "line": 397
              },
              {
                "function": "display_text",
                "line": 400
              },
              {
                "function": "print",
                "line": 403
              },
              {
                "function": "input",
                "line": 404
              },
              {
                "function": "isoformat",
                "line": 431
              },
              {
                "function": "update",
                "line": 436
              },
              {
                "function": "check_iteration_limit",
                "line": 540
              },
              {
                "function": "prompt_user_decision",
                "line": 546
              },
              {
                "function": "execute_decision",
                "line": 551
              },
              {
                "function": "isoformat",
                "line": 18
              },
              {
                "function": "_generate_user_options",
                "line": 64
              },
              {
                "function": "_get_primary_recommendation",
                "line": 65
              },
              {
                "function": "get",
                "line": 107
              },
              {
                "function": "items",
                "line": 110
              },
              {
                "function": "set",
                "line": 130
              },
              {
                "function": "len",
                "line": 142
              },
              {
                "function": "append",
                "line": 174
              },
              {
                "function": "len",
                "line": 190
              },
              {
                "function": "len",
                "line": 193
              },
              {
                "function": "items",
                "line": 198
              },
              {
                "function": "startswith",
                "line": 215
              },
              {
                "function": "startswith",
                "line": 250
              },
              {
                "function": "isoformat",
                "line": 287
              },
              {
                "function": "len",
                "line": 290
              },
              {
                "function": "_format_common_issues",
                "line": 307
              },
              {
                "function": "_format_agent_performance",
                "line": 310
              },
              {
                "function": "_format_problematic_areas",
                "line": 313
              },
              {
                "function": "_format_iteration_timeline",
                "line": 316
              },
              {
                "function": "get_user_input",
                "line": 401
              },
              {
                "function": "int",
                "line": 407
              },
              {
                "function": "len",
                "line": 408
              },
              {
                "function": "print",
                "line": 411
              },
              {
                "function": "print",
                "line": 414
              },
              {
                "function": "update",
                "line": 439
              },
              {
                "function": "get",
                "line": 470
              },
              {
                "function": "len",
                "line": 571
              },
              {
                "function": "isoformat",
                "line": 572
              },
              {
                "function": "len",
                "line": 575
              },
              {
                "function": "len",
                "line": 578
              },
              {
                "function": "len",
                "line": 44
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "get",
                "line": 75
              },
              {
                "function": "get",
                "line": 76
              },
              {
                "function": "get",
                "line": 77
              },
              {
                "function": "now",
                "line": 136
              },
              {
                "function": "join",
                "line": 169
              },
              {
                "function": "len",
                "line": 222
              },
              {
                "function": "len",
                "line": 243
              },
              {
                "function": "split",
                "line": 373
              },
              {
                "function": "now",
                "line": 431
              },
              {
                "function": "_extend_iterations",
                "line": 436
              },
              {
                "function": "update",
                "line": 442
              },
              {
                "function": "now",
                "line": 18
              },
              {
                "function": "len",
                "line": 236
              },
              {
                "function": "now",
                "line": 287
              },
              {
                "function": "len",
                "line": 382
              },
              {
                "function": "_extend_iterations",
                "line": 439
              },
              {
                "function": "update",
                "line": 445
              },
              {
                "function": "_accept_current_state",
                "line": 442
              },
              {
                "function": "update",
                "line": 448
              },
              {
                "function": "len",
                "line": 378
              },
              {
                "function": "_restart_simplified",
                "line": 445
              },
              {
                "function": "update",
                "line": 451
              },
              {
                "function": "update",
                "line": 454
              },
              {
                "function": "_break_into_subtasks",
                "line": 448
              },
              {
                "function": "_request_human_review",
                "line": 451
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "master_dispatcher",
                "names": [
                  "MasterDispatcher"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "intent_classifier",
                "names": [
                  "IntentClassifier"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "workflow_generator",
                "names": [
                  "WorkflowGenerator"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "execution_engine",
                "names": [
                  "ExecutionEngine"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "learning_system",
                "names": [
                  "LearningSystem"
                ],
                "line": 10
              }
            ],
            "calls": []
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 37,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "_calculate_intent_score",
                "line": 275,
                "async": false,
                "calls": [
                  "search",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "text",
                  "config"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "_calculate_enhanced_intent_score",
                "line": 306,
                "async": false,
                "calls": [
                  "lower",
                  "any",
                  "min",
                  "_calculate_intent_score"
                ],
                "parameters": [
                  "self",
                  "text",
                  "config",
                  "intent_type"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "_extract_entities",
                "line": 343,
                "async": false,
                "calls": [
                  "findall",
                  "list",
                  "fromkeys",
                  "lower",
                  "items"
                ],
                "parameters": [
                  "self",
                  "text"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "_assess_complexity",
                "line": 355,
                "async": false,
                "calls": [
                  "split",
                  "len"
                ],
                "parameters": [
                  "self",
                  "text",
                  "intent"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "get_intent_description",
                "line": 378,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "intent_type"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              }
            ],
            "classes": [
              {
                "name": "IntentType",
                "line": 9,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "Intent",
                "line": 23,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              },
              {
                "name": "IntentClassifier",
                "line": 31,
                "methods": [
                  "__init__",
                  "_calculate_intent_score",
                  "_calculate_enhanced_intent_score",
                  "_extract_entities",
                  "_assess_complexity",
                  "get_intent_description"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 4
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "lower",
                "line": 233
              },
              {
                "function": "items",
                "line": 239
              },
              {
                "function": "_extract_entities",
                "line": 261
              },
              {
                "function": "_assess_complexity",
                "line": 264
              },
              {
                "function": "min",
                "line": 304
              },
              {
                "function": "_calculate_intent_score",
                "line": 310
              },
              {
                "function": "min",
                "line": 341
              },
              {
                "function": "items",
                "line": 347
              },
              {
                "function": "len",
                "line": 357
              },
              {
                "function": "get",
                "line": 392
              },
              {
                "function": "_calculate_enhanced_intent_score",
                "line": 240
              },
              {
                "function": "max",
                "line": 247
              },
              {
                "function": "get",
                "line": 258
              },
              {
                "function": "len",
                "line": 279
              },
              {
                "function": "len",
                "line": 279
              },
              {
                "function": "search",
                "line": 289
              },
              {
                "function": "lower",
                "line": 325
              },
              {
                "function": "lower",
                "line": 333
              },
              {
                "function": "any",
                "line": 338
              },
              {
                "function": "findall",
                "line": 348
              },
              {
                "function": "split",
                "line": 357
              },
              {
                "function": "get",
                "line": 243
              },
              {
                "function": "lower",
                "line": 348
              },
              {
                "function": "list",
                "line": 351
              },
              {
                "function": "fromkeys",
                "line": 351
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py": {
            "functions": [
              {
                "name": "__post_init__",
                "line": 26,
                "async": false,
                "calls": [
                  "isoformat",
                  "now"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "__init__",
                "line": 36,
                "async": false,
                "calls": [
                  "LearningSystem",
                  "print",
                  "_initialize_agents",
                  "ExecutionEngine",
                  "WorkflowGenerator",
                  "IntentClassifier"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_detect_project_type",
                "line": 160,
                "async": false,
                "calls": [
                  "print",
                  "max",
                  "sum",
                  "lower",
                  "values",
                  "search"
                ],
                "parameters": [
                  "self",
                  "user_input",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_initialize_agents",
                "line": 239,
                "async": false,
                "calls": [
                  "DocuBot",
                  "ResearchBot",
                  "print",
                  "CodeSmithClaude",
                  "ArchitectGPT",
                  "ReviewerGPT",
                  "len",
                  "TradeStrat",
                  "FixerBot"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_get_agent_capabilities",
                "line": 263,
                "async": false,
                "calls": [
                  "get_capabilities",
                  "items",
                  "hasattr"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_optimize_workflow",
                "line": 276,
                "async": false,
                "calls": [
                  "enumerate",
                  "get"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_get_quality_gates_for_context",
                "line": 294,
                "async": false,
                "calls": [
                  "get",
                  "hasattr",
                  "get_quality_gates"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "_format_response",
                "line": 317,
                "async": false,
                "calls": [
                  "get",
                  "getattr",
                  "len",
                  "get_project_specifics",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "result",
                  "workflow",
                  "intent"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              }
            ],
            "classes": [
              {
                "name": "UserRequest",
                "line": 20,
                "methods": [
                  "__post_init__"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              },
              {
                "name": "MasterDispatcher",
                "line": 30,
                "methods": [
                  "__init__",
                  "_detect_project_type",
                  "_initialize_agents",
                  "_get_agent_capabilities",
                  "_optimize_workflow",
                  "_get_quality_gates_for_context",
                  "_format_response"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "yaml",
                "names": [
                  "yaml"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "intent_classifier",
                "names": [
                  "IntentClassifier"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "workflow_generator",
                "names": [
                  "WorkflowGenerator"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "execution_engine",
                "names": [
                  "ExecutionEngine"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "learning_system",
                "names": [
                  "LearningSystem"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "shared_context",
                "names": [
                  "ProjectContextFactory"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "agents",
                "names": [
                  "ArchitectGPT",
                  "CodeSmithClaude",
                  "DocuBot",
                  "ReviewerGPT",
                  "FixerBot",
                  "TradeStrat",
                  "ResearchBot"
                ],
                "line": 242
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "IntentClassifier",
                "line": 40
              },
              {
                "function": "WorkflowGenerator",
                "line": 41
              },
              {
                "function": "ExecutionEngine",
                "line": 42
              },
              {
                "function": "LearningSystem",
                "line": 43
              },
              {
                "function": "_initialize_agents",
                "line": 47
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "copy",
                "line": 99
              },
              {
                "function": "update",
                "line": 100
              },
              {
                "function": "UserRequest",
                "line": 108
              },
              {
                "function": "lower",
                "line": 164
              },
              {
                "function": "search",
                "line": 221
              },
              {
                "function": "search",
                "line": 224
              },
              {
                "function": "search",
                "line": 227
              },
              {
                "function": "items",
                "line": 266
              },
              {
                "function": "enumerate",
                "line": 286
              },
              {
                "function": "get",
                "line": 343
              },
              {
                "function": "suggest_workflow",
                "line": 356
              },
              {
                "function": "isoformat",
                "line": 28
              },
              {
                "function": "_detect_project_type",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "create_project_context",
                "line": 89
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "_optimize_workflow",
                "line": 130
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "_format_response",
                "line": 148
              },
              {
                "function": "sum",
                "line": 213
              },
              {
                "function": "sum",
                "line": 214
              },
              {
                "function": "sum",
                "line": 215
              },
              {
                "function": "sum",
                "line": 216
              },
              {
                "function": "sum",
                "line": 217
              },
              {
                "function": "max",
                "line": 231
              },
              {
                "function": "max",
                "line": 232
              },
              {
                "function": "print",
                "line": 233
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "hasattr",
                "line": 267
              },
              {
                "function": "get",
                "line": 282
              },
              {
                "function": "hasattr",
                "line": 302
              },
              {
                "function": "get",
                "line": 307
              },
              {
                "function": "get",
                "line": 327
              },
              {
                "function": "get",
                "line": 328
              },
              {
                "function": "get",
                "line": 329
              },
              {
                "function": "get",
                "line": 333
              },
              {
                "function": "get_agent_performance",
                "line": 351
              },
              {
                "function": "classify",
                "line": 355
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "create_project_context",
                "line": 96
              },
              {
                "function": "get_domain_instructions",
                "line": 103
              },
              {
                "function": "get_quality_gates",
                "line": 104
              },
              {
                "function": "get_project_specifics",
                "line": 105
              },
              {
                "function": "classify",
                "line": 116
              },
              {
                "function": "generate",
                "line": 121
              },
              {
                "function": "execute",
                "line": 134
              },
              {
                "function": "record_execution",
                "line": 140
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "values",
                "line": 231
              },
              {
                "function": "ArchitectGPT",
                "line": 248
              },
              {
                "function": "CodeSmithClaude",
                "line": 249
              },
              {
                "function": "DocuBot",
                "line": 250
              },
              {
                "function": "ReviewerGPT",
                "line": 251
              },
              {
                "function": "FixerBot",
                "line": 252
              },
              {
                "function": "TradeStrat",
                "line": 253
              },
              {
                "function": "ResearchBot",
                "line": 254
              },
              {
                "function": "print",
                "line": 259
              },
              {
                "function": "get_capabilities",
                "line": 268
              },
              {
                "function": "get_quality_gates",
                "line": 303
              },
              {
                "function": "len",
                "line": 323
              },
              {
                "function": "len",
                "line": 324
              },
              {
                "function": "get",
                "line": 325
              },
              {
                "function": "get",
                "line": 336
              },
              {
                "function": "getattr",
                "line": 337
              },
              {
                "function": "get",
                "line": 339
              },
              {
                "function": "now",
                "line": 28
              },
              {
                "function": "get",
                "line": 91
              },
              {
                "function": "str",
                "line": 156
              },
              {
                "function": "get",
                "line": 323
              },
              {
                "function": "get",
                "line": 324
              },
              {
                "function": "hasattr",
                "line": 338
              },
              {
                "function": "getattr",
                "line": 338
              },
              {
                "function": "_get_agent_capabilities",
                "line": 125
              },
              {
                "function": "len",
                "line": 127
              },
              {
                "function": "len",
                "line": 256
              },
              {
                "function": "get_project_specifics",
                "line": 338
              },
              {
                "function": "get",
                "line": 127
              },
              {
                "function": "str",
                "line": 153
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py": {
            "functions": [
              {
                "name": "__post_init__",
                "line": 19,
                "async": false,
                "calls": [
                  "isoformat",
                  "now"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_context_for_agent",
                "line": 26,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_agent_instruction_summary",
                "line": 31,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "add_agent_output",
                "line": 35,
                "async": false,
                "calls": [
                  "isoformat",
                  "now"
                ],
                "parameters": [
                  "self",
                  "agent_name",
                  "step_id",
                  "output"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_iteration_summary",
                "line": 46,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "start_new_iteration",
                "line": 56,
                "async": false,
                "calls": [
                  "isoformat",
                  "append",
                  "now"
                ],
                "parameters": [
                  "self",
                  "reason"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_relevant_outputs",
                "line": 65,
                "async": false,
                "calls": [
                  "items",
                  "range"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "create_project_context",
                "line": 83,
                "async": false,
                "calls": [
                  "context_class",
                  "get",
                  "lower",
                  "GenericProjectContext"
                ],
                "parameters": [
                  "project_type",
                  "project_name"
                ],
                "decorators": [
                  "staticmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_available_project_types",
                "line": 119,
                "async": false,
                "calls": [],
                "parameters": [],
                "decorators": [
                  "staticmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "create_shared_context",
                "line": 136,
                "async": false,
                "calls": [
                  "create_project_context",
                  "ProjectSharedContext"
                ],
                "parameters": [
                  "project_type",
                  "user_request",
                  "project_name"
                ],
                "decorators": [
                  "staticmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "__init__",
                "line": 165,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "project_name",
                  "project_type"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_domain_instructions",
                "line": 169,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_quality_gates",
                "line": 193,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_project_specifics",
                "line": 196,
                "async": false,
                "calls": [
                  "ProjectSpecification"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "create_context",
                "line": 215,
                "async": false,
                "calls": [
                  "create_shared_context"
                ],
                "parameters": [
                  "project_type",
                  "user_request"
                ],
                "decorators": [
                  "staticmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_context_for_agent",
                "line": 229,
                "async": false,
                "calls": [
                  "get_relevant_outputs"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_agent_instruction_summary",
                "line": 238,
                "async": false,
                "calls": [
                  "dumps",
                  "get_relevant_outputs"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "__init__",
                "line": 257,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "update_context",
                "line": 261,
                "async": false,
                "calls": [
                  "add_agent_output",
                  "isoformat",
                  "append",
                  "now"
                ],
                "parameters": [
                  "self",
                  "agent_name",
                  "step_id",
                  "output"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "should_continue_iteration",
                "line": 273,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "quality_result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "prepare_agent_context",
                "line": 280,
                "async": false,
                "calls": [
                  "get_context_for_agent",
                  "update",
                  "len"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_context_statistics",
                "line": 293,
                "async": false,
                "calls": [
                  "get",
                  "max",
                  "sum",
                  "len",
                  "values"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_context_for_agent",
                "line": 322,
                "async": false,
                "calls": [
                  "get_project_specifics",
                  "getattr",
                  "update",
                  "get_relevant_outputs",
                  "get_quality_gates",
                  "get_domain_instructions"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "get_agent_instruction_summary",
                "line": 342,
                "async": false,
                "calls": [
                  "get_agent_enhancement_instructions",
                  "dumps",
                  "getattr",
                  "get_relevant_outputs",
                  "get_domain_instructions",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              }
            ],
            "classes": [
              {
                "name": "SharedContext",
                "line": 12,
                "methods": [
                  "__post_init__",
                  "get_context_for_agent",
                  "get_agent_instruction_summary",
                  "add_agent_output",
                  "get_iteration_summary",
                  "start_new_iteration",
                  "get_relevant_outputs"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "ProjectContextFactory",
                "line": 77,
                "methods": [
                  "create_project_context",
                  "get_available_project_types",
                  "create_shared_context"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "GenericProjectContext",
                "line": 162,
                "methods": [
                  "__init__",
                  "get_domain_instructions",
                  "get_quality_gates",
                  "get_project_specifics"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "ContextFactory",
                "line": 209,
                "methods": [
                  "create_context"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "GenericSharedContext",
                "line": 224,
                "methods": [
                  "get_context_for_agent",
                  "get_agent_instruction_summary"
                ],
                "bases": [
                  "SharedContext"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "SharedContextManager",
                "line": 252,
                "methods": [
                  "__init__",
                  "update_context",
                  "should_continue_iteration",
                  "prepare_agent_context",
                  "get_context_statistics"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              },
              {
                "name": "ProjectSharedContext",
                "line": 316,
                "methods": [
                  "get_context_for_agent",
                  "get_agent_instruction_summary"
                ],
                "bases": [
                  "SharedContext"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "project_contexts",
                "names": [
                  "TradingProjectContext",
                  "WebAppProjectContext",
                  "BaseProjectContext"
                ],
                "line": 94
              },
              {
                "type": "from_import",
                "module": "project_contexts.base_project_context",
                "names": [
                  "ProjectSpecification"
                ],
                "line": 197
              }
            ],
            "calls": [
              {
                "function": "isoformat",
                "line": 23
              },
              {
                "function": "append",
                "line": 58
              },
              {
                "function": "range",
                "line": 70
              },
              {
                "function": "get",
                "line": 111
              },
              {
                "function": "create_project_context",
                "line": 154
              },
              {
                "function": "ProjectSharedContext",
                "line": 155
              },
              {
                "function": "ProjectSpecification",
                "line": 198
              },
              {
                "function": "create_shared_context",
                "line": 218
              },
              {
                "function": "add_agent_output",
                "line": 263
              },
              {
                "function": "append",
                "line": 266
              },
              {
                "function": "get",
                "line": 278
              },
              {
                "function": "get_context_for_agent",
                "line": 282
              },
              {
                "function": "update",
                "line": 283
              },
              {
                "function": "sum",
                "line": 295
              },
              {
                "function": "values",
                "line": 301
              },
              {
                "function": "hasattr",
                "line": 367
              },
              {
                "function": "get_relevant_outputs",
                "line": 373
              },
              {
                "function": "isoformat",
                "line": 43
              },
              {
                "function": "get",
                "line": 52
              },
              {
                "function": "lower",
                "line": 111
              },
              {
                "function": "context_class",
                "line": 113
              },
              {
                "function": "GenericProjectContext",
                "line": 116
              },
              {
                "function": "get_relevant_outputs",
                "line": 233
              },
              {
                "function": "values",
                "line": 302
              },
              {
                "function": "len",
                "line": 310
              },
              {
                "function": "get_relevant_outputs",
                "line": 326
              },
              {
                "function": "getattr",
                "line": 328
              },
              {
                "function": "update",
                "line": 333
              },
              {
                "function": "get_agent_enhancement_instructions",
                "line": 368
              },
              {
                "function": "now",
                "line": 23
              },
              {
                "function": "isoformat",
                "line": 61
              },
              {
                "function": "items",
                "line": 72
              },
              {
                "function": "dumps",
                "line": 247
              },
              {
                "function": "isoformat",
                "line": 267
              },
              {
                "function": "len",
                "line": 296
              },
              {
                "function": "max",
                "line": 311
              },
              {
                "function": "getattr",
                "line": 359
              },
              {
                "function": "get_domain_instructions",
                "line": 361
              },
              {
                "function": "now",
                "line": 43
              },
              {
                "function": "get_relevant_outputs",
                "line": 247
              },
              {
                "function": "len",
                "line": 288
              },
              {
                "function": "values",
                "line": 297
              },
              {
                "function": "get",
                "line": 304
              },
              {
                "function": "getattr",
                "line": 334
              },
              {
                "function": "get_domain_instructions",
                "line": 335
              },
              {
                "function": "get_quality_gates",
                "line": 336
              },
              {
                "function": "get_project_specifics",
                "line": 337
              },
              {
                "function": "dumps",
                "line": 378
              },
              {
                "function": "now",
                "line": 61
              },
              {
                "function": "now",
                "line": 267
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 17,
                "async": false,
                "calls": [
                  "mkdir",
                  "print",
                  "Path",
                  "_load_patterns",
                  "_load_metrics",
                  "len",
                  "_load_history"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "suggest_workflow",
                "line": 75,
                "async": false,
                "calls": [
                  "print",
                  "_find_similar_executions",
                  "max"
                ],
                "parameters": [
                  "self",
                  "intent"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "get_intent_statistics",
                "line": 129,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "items",
                  "mean"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_load_history",
                "line": 176,
                "async": false,
                "calls": [
                  "print",
                  "exists",
                  "open",
                  "load"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_load_patterns",
                "line": 186,
                "async": false,
                "calls": [
                  "print",
                  "exists",
                  "open",
                  "load"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_load_metrics",
                "line": 196,
                "async": false,
                "calls": [
                  "print",
                  "exists",
                  "open",
                  "load"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_save_all",
                "line": 206,
                "async": false,
                "calls": [
                  "print",
                  "open",
                  "dump"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_calculate_metrics",
                "line": 224,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_was_successful",
                "line": 251,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_record_success_pattern",
                "line": 255,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "sorted"
                ],
                "parameters": [
                  "self",
                  "execution_record"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_update_performance_metrics",
                "line": 279,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "execution_record"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_find_similar_executions",
                "line": 303,
                "async": false,
                "calls": [
                  "sort",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "intent"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_extract_agents_used",
                "line": 319,
                "async": false,
                "calls": [
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              },
              {
                "name": "_calculate_agent_rating",
                "line": 328,
                "async": false,
                "calls": [
                  "get",
                  "min"
                ],
                "parameters": [
                  "self",
                  "metrics"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              }
            ],
            "classes": [
              {
                "name": "LearningSystem",
                "line": 11,
                "methods": [
                  "__init__",
                  "suggest_workflow",
                  "get_intent_statistics",
                  "_load_history",
                  "_load_patterns",
                  "_load_metrics",
                  "_save_all",
                  "_calculate_metrics",
                  "_was_successful",
                  "_record_success_pattern",
                  "_update_performance_metrics",
                  "_find_similar_executions",
                  "_extract_agents_used",
                  "_calculate_agent_rating"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 4
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "statistics",
                "names": [
                  "statistics"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "Path",
                "line": 19
              },
              {
                "function": "mkdir",
                "line": 20
              },
              {
                "function": "_load_history",
                "line": 28
              },
              {
                "function": "_load_patterns",
                "line": 29
              },
              {
                "function": "_load_metrics",
                "line": 30
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "_calculate_metrics",
                "line": 45
              },
              {
                "function": "append",
                "line": 61
              },
              {
                "function": "_was_successful",
                "line": 64
              },
              {
                "function": "_update_performance_metrics",
                "line": 68
              },
              {
                "function": "_save_all",
                "line": 71
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "_find_similar_executions",
                "line": 80
              },
              {
                "function": "max",
                "line": 86
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "items",
                "line": 113
              },
              {
                "function": "items",
                "line": 159
              },
              {
                "function": "exists",
                "line": 178
              },
              {
                "function": "exists",
                "line": 188
              },
              {
                "function": "exists",
                "line": 198
              },
              {
                "function": "get",
                "line": 244
              },
              {
                "function": "len",
                "line": 245
              },
              {
                "function": "len",
                "line": 246
              },
              {
                "function": "len",
                "line": 247
              },
              {
                "function": "get",
                "line": 257
              },
              {
                "function": "append",
                "line": 270
              },
              {
                "function": "get",
                "line": 282
              },
              {
                "function": "get",
                "line": 305
              },
              {
                "function": "sort",
                "line": 315
              },
              {
                "function": "get",
                "line": 322
              },
              {
                "function": "get",
                "line": 330
              },
              {
                "function": "min",
                "line": 337
              },
              {
                "function": "isoformat",
                "line": 50
              },
              {
                "function": "get",
                "line": 53
              },
              {
                "function": "len",
                "line": 54
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "_extract_agents_used",
                "line": 57
              },
              {
                "function": "_record_success_pattern",
                "line": 65
              },
              {
                "function": "get",
                "line": 114
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "get",
                "line": 152
              },
              {
                "function": "get",
                "line": 153
              },
              {
                "function": "get",
                "line": 155
              },
              {
                "function": "len",
                "line": 229
              },
              {
                "function": "len",
                "line": 229
              },
              {
                "function": "get",
                "line": 236
              },
              {
                "function": "get",
                "line": 245
              },
              {
                "function": "get",
                "line": 246
              },
              {
                "function": "get",
                "line": 247
              },
              {
                "function": "get",
                "line": 253
              },
              {
                "function": "get",
                "line": 264
              },
              {
                "function": "get",
                "line": 265
              },
              {
                "function": "get",
                "line": 266
              },
              {
                "function": "get",
                "line": 267
              },
              {
                "function": "sorted",
                "line": 273
              },
              {
                "function": "get",
                "line": 300
              },
              {
                "function": "get",
                "line": 301
              },
              {
                "function": "get",
                "line": 323
              },
              {
                "function": "get",
                "line": 334
              },
              {
                "function": "len",
                "line": 49
              },
              {
                "function": "get",
                "line": 54
              },
              {
                "function": "get",
                "line": 113
              },
              {
                "function": "get",
                "line": 149
              },
              {
                "function": "append",
                "line": 154
              },
              {
                "function": "append",
                "line": 156
              },
              {
                "function": "mean",
                "line": 161
              },
              {
                "function": "mean",
                "line": 166
              },
              {
                "function": "open",
                "line": 210
              },
              {
                "function": "dump",
                "line": 211
              },
              {
                "function": "open",
                "line": 214
              },
              {
                "function": "dump",
                "line": 215
              },
              {
                "function": "open",
                "line": 218
              },
              {
                "function": "dump",
                "line": 219
              },
              {
                "function": "print",
                "line": 222
              },
              {
                "function": "get",
                "line": 229
              },
              {
                "function": "get",
                "line": 229
              },
              {
                "function": "len",
                "line": 231
              },
              {
                "function": "get",
                "line": 238
              },
              {
                "function": "get",
                "line": 257
              },
              {
                "function": "get",
                "line": 295
              },
              {
                "function": "get",
                "line": 309
              },
              {
                "function": "append",
                "line": 325
              },
              {
                "function": "len",
                "line": 32
              },
              {
                "function": "now",
                "line": 50
              },
              {
                "function": "get",
                "line": 73
              },
              {
                "function": "get",
                "line": 116
              },
              {
                "function": "get",
                "line": 117
              },
              {
                "function": "get",
                "line": 123
              },
              {
                "function": "_calculate_agent_rating",
                "line": 124
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "open",
                "line": 180
              },
              {
                "function": "load",
                "line": 181
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "open",
                "line": 190
              },
              {
                "function": "load",
                "line": 191
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "open",
                "line": 200
              },
              {
                "function": "load",
                "line": 201
              },
              {
                "function": "print",
                "line": 203
              },
              {
                "function": "get",
                "line": 231
              },
              {
                "function": "get",
                "line": 266
              },
              {
                "function": "get",
                "line": 297
              },
              {
                "function": "get",
                "line": 300
              },
              {
                "function": "get",
                "line": 311
              },
              {
                "function": "append",
                "line": 312
              },
              {
                "function": "get",
                "line": 315
              },
              {
                "function": "get",
                "line": 309
              },
              {
                "function": "get",
                "line": 311
              },
              {
                "function": "get",
                "line": 315
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 28,
                "async": false,
                "calls": [
                  "_load_templates"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_load_templates",
                "line": 66,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_select_template",
                "line": 360,
                "async": false,
                "calls": [
                  "print",
                  "copy",
                  "get"
                ],
                "parameters": [
                  "self",
                  "intent_type"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_customize_workflow",
                "line": 369,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "WorkflowStep",
                  "insert",
                  "len",
                  "enumerate"
                ],
                "parameters": [
                  "self",
                  "template",
                  "intent",
                  "context",
                  "user_input"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_optimize_parallel_execution",
                "line": 418,
                "async": false,
                "calls": [
                  "range",
                  "get",
                  "any",
                  "max",
                  "len"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_validate_agents",
                "line": 453,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "workflow",
                  "agent_capabilities"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "_estimate_total_time",
                "line": 472,
                "async": false,
                "calls": [
                  "values",
                  "get",
                  "sum",
                  "max"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "get_workflow_summary",
                "line": 491,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              }
            ],
            "classes": [
              {
                "name": "WorkflowStep",
                "line": 10,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              },
              {
                "name": "WorkflowGenerator",
                "line": 23,
                "methods": [
                  "__init__",
                  "_load_templates",
                  "_select_template",
                  "_customize_workflow",
                  "_optimize_parallel_execution",
                  "_validate_agents",
                  "_estimate_total_time",
                  "get_workflow_summary"
                ],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 4
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "field",
                "line": 16
              },
              {
                "function": "field",
                "line": 17
              },
              {
                "function": "_load_templates",
                "line": 30
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "_select_template",
                "line": 45
              },
              {
                "function": "_customize_workflow",
                "line": 48
              },
              {
                "function": "_optimize_parallel_execution",
                "line": 51
              },
              {
                "function": "_validate_agents",
                "line": 54
              },
              {
                "function": "get",
                "line": 362
              },
              {
                "function": "copy",
                "line": 367
              },
              {
                "function": "enumerate",
                "line": 378
              },
              {
                "function": "range",
                "line": 439
              },
              {
                "function": "get",
                "line": 457
              },
              {
                "function": "get",
                "line": 478
              },
              {
                "function": "get",
                "line": 497
              },
              {
                "function": "get",
                "line": 502
              },
              {
                "function": "isoformat",
                "line": 58
              },
              {
                "function": "get",
                "line": 60
              },
              {
                "function": "_estimate_total_time",
                "line": 61
              },
              {
                "function": "print",
                "line": 364
              },
              {
                "function": "WorkflowStep",
                "line": 379
              },
              {
                "function": "get",
                "line": 389
              },
              {
                "function": "append",
                "line": 396
              },
              {
                "function": "get",
                "line": 399
              },
              {
                "function": "insert",
                "line": 409
              },
              {
                "function": "get",
                "line": 420
              },
              {
                "function": "max",
                "line": 436
              },
              {
                "function": "len",
                "line": 447
              },
              {
                "function": "any",
                "line": 448
              },
              {
                "function": "get",
                "line": 474
              },
              {
                "function": "sum",
                "line": 486
              },
              {
                "function": "sum",
                "line": 489
              },
              {
                "function": "len",
                "line": 401
              },
              {
                "function": "get",
                "line": 428
              },
              {
                "function": "len",
                "line": 441
              },
              {
                "function": "append",
                "line": 460
              },
              {
                "function": "get",
                "line": 478
              },
              {
                "function": "get",
                "line": 481
              },
              {
                "function": "max",
                "line": 484
              },
              {
                "function": "values",
                "line": 486
              },
              {
                "function": "get",
                "line": 493
              },
              {
                "function": "get",
                "line": 494
              },
              {
                "function": "len",
                "line": 495
              },
              {
                "function": "get",
                "line": 502
              },
              {
                "function": "now",
                "line": 58
              },
              {
                "function": "get",
                "line": 383
              },
              {
                "function": "get",
                "line": 384
              },
              {
                "function": "get",
                "line": 385
              },
              {
                "function": "max",
                "line": 432
              },
              {
                "function": "get",
                "line": 448
              },
              {
                "function": "get",
                "line": 484
              },
              {
                "function": "get",
                "line": 489
              },
              {
                "function": "get",
                "line": 495
              },
              {
                "function": "get",
                "line": 499
              },
              {
                "function": "get",
                "line": 440
              },
              {
                "function": "join",
                "line": 467
              },
              {
                "function": "get",
                "line": 500
              },
              {
                "function": "get",
                "line": 432
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              },
              {
                "name": "get_default_thresholds",
                "line": 21,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              },
              {
                "name": "_analyze_unified_engine",
                "line": 264,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              },
              {
                "name": "_analyze_future_leak_prevention",
                "line": 293,
                "async": false,
                "calls": [
                  "append",
                  "max",
                  "sum",
                  "min",
                  "len",
                  "search"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              },
              {
                "name": "_analyze_iterative_processing",
                "line": 331,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              },
              {
                "name": "_analyze_engine_chart_decoupling",
                "line": 360,
                "async": false,
                "calls": [
                  "append",
                  "max",
                  "sum",
                  "min",
                  "len",
                  "search"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              }
            ],
            "classes": [
              {
                "name": "EngineParityQualityGate",
                "line": 12,
                "methods": [
                  "__init__",
                  "get_default_thresholds",
                  "_analyze_unified_engine",
                  "_analyze_future_leak_prevention",
                  "_analyze_iterative_processing",
                  "_analyze_engine_chart_decoupling"
                ],
                "bases": [
                  "BaseQualityGate"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_quality_gate",
                "names": [
                  "BaseQualityGate",
                  "QualityCheck",
                  "QualityGateResult",
                  "QualityLevel"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 19
              },
              {
                "function": "time",
                "line": 31
              },
              {
                "function": "update",
                "line": 35
              },
              {
                "function": "update",
                "line": 36
              },
              {
                "function": "update",
                "line": 37
              },
              {
                "function": "update",
                "line": 38
              },
              {
                "function": "update",
                "line": 41
              },
              {
                "function": "update",
                "line": 42
              },
              {
                "function": "update",
                "line": 43
              },
              {
                "function": "update",
                "line": 46
              },
              {
                "function": "update",
                "line": 47
              },
              {
                "function": "calculate_overall_score",
                "line": 50
              },
              {
                "function": "determine_pass_status",
                "line": 51
              },
              {
                "function": "len",
                "line": 54
              },
              {
                "function": "sum",
                "line": 55
              },
              {
                "function": "sum",
                "line": 57
              },
              {
                "function": "QualityGateResult",
                "line": 62
              },
              {
                "function": "generate_summary",
                "line": 76
              },
              {
                "function": "_analyze_unified_engine",
                "line": 81
              },
              {
                "function": "_analyze_future_leak_prevention",
                "line": 97
              },
              {
                "function": "_analyze_iterative_processing",
                "line": 113
              },
              {
                "function": "_analyze_engine_chart_decoupling",
                "line": 129
              },
              {
                "function": "sum",
                "line": 151
              },
              {
                "function": "sum",
                "line": 175
              },
              {
                "function": "sum",
                "line": 199
              },
              {
                "function": "sum",
                "line": 223
              },
              {
                "function": "sum",
                "line": 247
              },
              {
                "function": "min",
                "line": 248
              },
              {
                "function": "sum",
                "line": 273
              },
              {
                "function": "sum",
                "line": 310
              },
              {
                "function": "sum",
                "line": 311
              },
              {
                "function": "max",
                "line": 315
              },
              {
                "function": "sum",
                "line": 340
              },
              {
                "function": "sum",
                "line": 376
              },
              {
                "function": "sum",
                "line": 377
              },
              {
                "function": "max",
                "line": 381
              },
              {
                "function": "create_quality_check",
                "line": 84
              },
              {
                "function": "create_quality_check",
                "line": 100
              },
              {
                "function": "create_quality_check",
                "line": 116
              },
              {
                "function": "create_quality_check",
                "line": 132
              },
              {
                "function": "len",
                "line": 152
              },
              {
                "function": "create_quality_check",
                "line": 156
              },
              {
                "function": "len",
                "line": 176
              },
              {
                "function": "create_quality_check",
                "line": 180
              },
              {
                "function": "len",
                "line": 200
              },
              {
                "function": "create_quality_check",
                "line": 204
              },
              {
                "function": "len",
                "line": 224
              },
              {
                "function": "create_quality_check",
                "line": 228
              },
              {
                "function": "create_quality_check",
                "line": 252
              },
              {
                "function": "len",
                "line": 274
              },
              {
                "function": "min",
                "line": 315
              },
              {
                "function": "append",
                "line": 320
              },
              {
                "function": "len",
                "line": 321
              },
              {
                "function": "append",
                "line": 322
              },
              {
                "function": "len",
                "line": 341
              },
              {
                "function": "min",
                "line": 381
              },
              {
                "function": "append",
                "line": 386
              },
              {
                "function": "len",
                "line": 387
              },
              {
                "function": "append",
                "line": 388
              },
              {
                "function": "super",
                "line": 19
              },
              {
                "function": "_check_unified_engine",
                "line": 35
              },
              {
                "function": "_check_future_leak_prevention",
                "line": 36
              },
              {
                "function": "_check_iterative_processing",
                "line": 37
              },
              {
                "function": "_check_engine_chart_decoupling",
                "line": 38
              },
              {
                "function": "_check_data_access_patterns",
                "line": 41
              },
              {
                "function": "_check_decision_timing",
                "line": 42
              },
              {
                "function": "_check_mode_switching",
                "line": 43
              },
              {
                "function": "_check_result_flow",
                "line": 46
              },
              {
                "function": "_check_timing_abstraction",
                "line": 47
              },
              {
                "function": "time",
                "line": 60
              },
              {
                "function": "generate_summary",
                "line": 71
              },
              {
                "function": "generate_recommendations",
                "line": 72
              },
              {
                "function": "search",
                "line": 279
              },
              {
                "function": "append",
                "line": 280
              },
              {
                "function": "search",
                "line": 281
              },
              {
                "function": "append",
                "line": 282
              },
              {
                "function": "search",
                "line": 283
              },
              {
                "function": "append",
                "line": 284
              },
              {
                "function": "len",
                "line": 314
              },
              {
                "function": "search",
                "line": 346
              },
              {
                "function": "append",
                "line": 347
              },
              {
                "function": "search",
                "line": 348
              },
              {
                "function": "append",
                "line": 349
              },
              {
                "function": "search",
                "line": 350
              },
              {
                "function": "append",
                "line": 351
              },
              {
                "function": "len",
                "line": 380
              },
              {
                "function": "values",
                "line": 55
              },
              {
                "function": "values",
                "line": 57
              },
              {
                "function": "search",
                "line": 151
              },
              {
                "function": "search",
                "line": 175
              },
              {
                "function": "search",
                "line": 199
              },
              {
                "function": "search",
                "line": 223
              },
              {
                "function": "search",
                "line": 247
              },
              {
                "function": "search",
                "line": 273
              },
              {
                "function": "len",
                "line": 289
              },
              {
                "function": "search",
                "line": 310
              },
              {
                "function": "search",
                "line": 311
              },
              {
                "function": "search",
                "line": 340
              },
              {
                "function": "len",
                "line": 356
              },
              {
                "function": "search",
                "line": 376
              },
              {
                "function": "search",
                "line": 377
              },
              {
                "function": "len",
                "line": 160
              },
              {
                "function": "len",
                "line": 184
              },
              {
                "function": "len",
                "line": 208
              },
              {
                "function": "len",
                "line": 232
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
              },
              {
                "name": "get_default_thresholds",
                "line": 21,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
              }
            ],
            "classes": [
              {
                "name": "SecurityQualityGate",
                "line": 12,
                "methods": [
                  "__init__",
                  "get_default_thresholds"
                ],
                "bases": [
                  "BaseQualityGate"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_quality_gate",
                "names": [
                  "BaseQualityGate",
                  "QualityCheck",
                  "QualityGateResult",
                  "QualityLevel"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 19
              },
              {
                "function": "time",
                "line": 31
              },
              {
                "function": "update",
                "line": 35
              },
              {
                "function": "update",
                "line": 36
              },
              {
                "function": "update",
                "line": 37
              },
              {
                "function": "update",
                "line": 38
              },
              {
                "function": "update",
                "line": 39
              },
              {
                "function": "update",
                "line": 40
              },
              {
                "function": "update",
                "line": 41
              },
              {
                "function": "update",
                "line": 42
              },
              {
                "function": "update",
                "line": 43
              },
              {
                "function": "update",
                "line": 44
              },
              {
                "function": "update",
                "line": 47
              },
              {
                "function": "update",
                "line": 48
              },
              {
                "function": "update",
                "line": 49
              },
              {
                "function": "update",
                "line": 50
              },
              {
                "function": "update",
                "line": 51
              },
              {
                "function": "calculate_overall_score",
                "line": 58
              },
              {
                "function": "determine_pass_status",
                "line": 59
              },
              {
                "function": "len",
                "line": 62
              },
              {
                "function": "sum",
                "line": 63
              },
              {
                "function": "sum",
                "line": 65
              },
              {
                "function": "QualityGateResult",
                "line": 70
              },
              {
                "function": "generate_summary",
                "line": 84
              },
              {
                "function": "sum",
                "line": 103
              },
              {
                "function": "sum",
                "line": 104
              },
              {
                "function": "sum",
                "line": 112
              },
              {
                "function": "max",
                "line": 115
              },
              {
                "function": "sum",
                "line": 154
              },
              {
                "function": "sum",
                "line": 155
              },
              {
                "function": "max",
                "line": 157
              },
              {
                "function": "sum",
                "line": 195
              },
              {
                "function": "sum",
                "line": 196
              },
              {
                "function": "max",
                "line": 198
              },
              {
                "function": "sum",
                "line": 234
              },
              {
                "function": "sum",
                "line": 235
              },
              {
                "function": "sum",
                "line": 278
              },
              {
                "function": "sum",
                "line": 279
              },
              {
                "function": "bool",
                "line": 282
              },
              {
                "function": "sum",
                "line": 325
              },
              {
                "function": "sum",
                "line": 326
              },
              {
                "function": "max",
                "line": 328
              },
              {
                "function": "sum",
                "line": 365
              },
              {
                "function": "sum",
                "line": 366
              },
              {
                "function": "max",
                "line": 368
              },
              {
                "function": "sum",
                "line": 406
              },
              {
                "function": "sum",
                "line": 407
              },
              {
                "function": "max",
                "line": 409
              },
              {
                "function": "findall",
                "line": 432
              },
              {
                "function": "sum",
                "line": 474
              },
              {
                "function": "sum",
                "line": 475
              },
              {
                "function": "min",
                "line": 477
              },
              {
                "function": "bool",
                "line": 505
              },
              {
                "function": "sum",
                "line": 506
              },
              {
                "function": "sum",
                "line": 539
              },
              {
                "function": "bool",
                "line": 540
              },
              {
                "function": "sum",
                "line": 572
              },
              {
                "function": "bool",
                "line": 573
              },
              {
                "function": "sum",
                "line": 609
              },
              {
                "function": "sum",
                "line": 610
              },
              {
                "function": "max",
                "line": 612
              },
              {
                "function": "sum",
                "line": 648
              },
              {
                "function": "sum",
                "line": 649
              },
              {
                "function": "max",
                "line": 651
              },
              {
                "function": "update",
                "line": 55
              },
              {
                "function": "append",
                "line": 120
              },
              {
                "function": "append",
                "line": 122
              },
              {
                "function": "append",
                "line": 124
              },
              {
                "function": "create_quality_check",
                "line": 127
              },
              {
                "function": "min",
                "line": 157
              },
              {
                "function": "append",
                "line": 162
              },
              {
                "function": "append",
                "line": 164
              },
              {
                "function": "create_quality_check",
                "line": 167
              },
              {
                "function": "append",
                "line": 203
              },
              {
                "function": "append",
                "line": 204
              },
              {
                "function": "append",
                "line": 206
              },
              {
                "function": "create_quality_check",
                "line": 209
              },
              {
                "function": "max",
                "line": 243
              },
              {
                "function": "append",
                "line": 248
              },
              {
                "function": "append",
                "line": 249
              },
              {
                "function": "create_quality_check",
                "line": 252
              },
              {
                "function": "search",
                "line": 282
              },
              {
                "function": "max",
                "line": 288
              },
              {
                "function": "append",
                "line": 293
              },
              {
                "function": "append",
                "line": 295
              },
              {
                "function": "create_quality_check",
                "line": 298
              },
              {
                "function": "min",
                "line": 328
              },
              {
                "function": "append",
                "line": 333
              },
              {
                "function": "append",
                "line": 335
              },
              {
                "function": "create_quality_check",
                "line": 338
              },
              {
                "function": "append",
                "line": 373
              },
              {
                "function": "append",
                "line": 374
              },
              {
                "function": "append",
                "line": 376
              },
              {
                "function": "create_quality_check",
                "line": 379
              },
              {
                "function": "append",
                "line": 414
              },
              {
                "function": "append",
                "line": 415
              },
              {
                "function": "create_quality_check",
                "line": 418
              },
              {
                "function": "len",
                "line": 440
              },
              {
                "function": "append",
                "line": 444
              },
              {
                "function": "append",
                "line": 445
              },
              {
                "function": "create_quality_check",
                "line": 448
              },
              {
                "function": "append",
                "line": 482
              },
              {
                "function": "append",
                "line": 484
              },
              {
                "function": "create_quality_check",
                "line": 487
              },
              {
                "function": "search",
                "line": 505
              },
              {
                "function": "min",
                "line": 512
              },
              {
                "function": "append",
                "line": 517
              },
              {
                "function": "create_quality_check",
                "line": 520
              },
              {
                "function": "search",
                "line": 540
              },
              {
                "function": "min",
                "line": 546
              },
              {
                "function": "append",
                "line": 551
              },
              {
                "function": "create_quality_check",
                "line": 554
              },
              {
                "function": "search",
                "line": 573
              },
              {
                "function": "min",
                "line": 579
              },
              {
                "function": "append",
                "line": 584
              },
              {
                "function": "create_quality_check",
                "line": 587
              },
              {
                "function": "append",
                "line": 617
              },
              {
                "function": "create_quality_check",
                "line": 620
              },
              {
                "function": "_check_sensitive_data_exposure",
                "line": 633
              },
              {
                "function": "append",
                "line": 656
              },
              {
                "function": "append",
                "line": 658
              },
              {
                "function": "create_quality_check",
                "line": 661
              },
              {
                "function": "super",
                "line": 19
              },
              {
                "function": "_check_injection_vulnerabilities",
                "line": 35
              },
              {
                "function": "_check_authentication_security",
                "line": 36
              },
              {
                "function": "_check_sensitive_data_exposure",
                "line": 37
              },
              {
                "function": "_check_xml_external_entities",
                "line": 38
              },
              {
                "function": "_check_broken_access_control",
                "line": 39
              },
              {
                "function": "_check_security_misconfiguration",
                "line": 40
              },
              {
                "function": "_check_xss_vulnerabilities",
                "line": 41
              },
              {
                "function": "_check_insecure_deserialization",
                "line": 42
              },
              {
                "function": "_check_vulnerable_components",
                "line": 43
              },
              {
                "function": "_check_insufficient_logging",
                "line": 44
              },
              {
                "function": "_check_csrf_protection",
                "line": 47
              },
              {
                "function": "_check_input_validation",
                "line": 48
              },
              {
                "function": "_check_output_encoding",
                "line": 49
              },
              {
                "function": "_check_secure_communication",
                "line": 50
              },
              {
                "function": "_check_secrets_management",
                "line": 51
              },
              {
                "function": "get",
                "line": 54
              },
              {
                "function": "time",
                "line": 68
              },
              {
                "function": "generate_summary",
                "line": 79
              },
              {
                "function": "generate_recommendations",
                "line": 80
              },
              {
                "function": "lower",
                "line": 163
              },
              {
                "function": "lower",
                "line": 238
              },
              {
                "function": "lower",
                "line": 238
              },
              {
                "function": "lower",
                "line": 375
              },
              {
                "function": "len",
                "line": 439
              },
              {
                "function": "lower",
                "line": 483
              },
              {
                "function": "lower",
                "line": 583
              },
              {
                "function": "_check_financial_security",
                "line": 55
              },
              {
                "function": "values",
                "line": 63
              },
              {
                "function": "values",
                "line": 65
              },
              {
                "function": "search",
                "line": 103
              },
              {
                "function": "search",
                "line": 104
              },
              {
                "function": "search",
                "line": 112
              },
              {
                "function": "lower",
                "line": 123
              },
              {
                "function": "search",
                "line": 154
              },
              {
                "function": "search",
                "line": 155
              },
              {
                "function": "lower",
                "line": 158
              },
              {
                "function": "search",
                "line": 195
              },
              {
                "function": "search",
                "line": 196
              },
              {
                "function": "lower",
                "line": 205
              },
              {
                "function": "lower",
                "line": 205
              },
              {
                "function": "search",
                "line": 234
              },
              {
                "function": "search",
                "line": 235
              },
              {
                "function": "search",
                "line": 278
              },
              {
                "function": "search",
                "line": 279
              },
              {
                "function": "search",
                "line": 325
              },
              {
                "function": "search",
                "line": 326
              },
              {
                "function": "search",
                "line": 365
              },
              {
                "function": "search",
                "line": 366
              },
              {
                "function": "search",
                "line": 406
              },
              {
                "function": "search",
                "line": 407
              },
              {
                "function": "search",
                "line": 474
              },
              {
                "function": "search",
                "line": 475
              },
              {
                "function": "search",
                "line": 506
              },
              {
                "function": "search",
                "line": 539
              },
              {
                "function": "search",
                "line": 572
              },
              {
                "function": "search",
                "line": 580
              },
              {
                "function": "search",
                "line": 609
              },
              {
                "function": "search",
                "line": 610
              },
              {
                "function": "search",
                "line": 648
              },
              {
                "function": "search",
                "line": 649
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 63,
                "async": false,
                "calls": [
                  "get_default_thresholds"
                ],
                "parameters": [
                  "self",
                  "gate_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "get_default_thresholds",
                "line": 68,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "create_quality_check",
                "line": 86,
                "async": false,
                "calls": [
                  "QualityCheck",
                  "max",
                  "min"
                ],
                "parameters": [
                  "self",
                  "name",
                  "passed",
                  "score",
                  "details",
                  "recommendations",
                  "level",
                  "category",
                  "file_path",
                  "line_numbers"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "calculate_overall_score",
                "line": 111,
                "async": false,
                "calls": [
                  "values",
                  "get"
                ],
                "parameters": [
                  "self",
                  "checks"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "determine_pass_status",
                "line": 135,
                "async": false,
                "calls": [
                  "values",
                  "get"
                ],
                "parameters": [
                  "self",
                  "overall_score",
                  "checks"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "generate_summary",
                "line": 151,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "generate_recommendations",
                "line": 162,
                "async": false,
                "calls": [
                  "sort",
                  "append",
                  "values"
                ],
                "parameters": [
                  "self",
                  "checks"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "find_pattern_matches",
                "line": 182,
                "async": false,
                "calls": [
                  "split",
                  "sub",
                  "append",
                  "group",
                  "enumerate",
                  "search",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "code",
                  "patterns",
                  "ignore_comments"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "check_imports",
                "line": 209,
                "async": false,
                "calls": [
                  "findall",
                  "append",
                  "max",
                  "join",
                  "create_quality_check",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code",
                  "required",
                  "forbidden"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "check_function_complexity",
                "line": 242,
                "async": false,
                "calls": [
                  "findall",
                  "startswith",
                  "split",
                  "append",
                  "max",
                  "create_quality_check",
                  "len",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "code",
                  "max_lines"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              }
            ],
            "classes": [
              {
                "name": "QualityLevel",
                "line": 16,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "QualityCheck",
                "line": 26,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "QualityGateResult",
                "line": 40,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              },
              {
                "name": "BaseQualityGate",
                "line": 55,
                "methods": [
                  "__init__",
                  "get_default_thresholds",
                  "create_quality_check",
                  "calculate_overall_score",
                  "determine_pass_status",
                  "generate_summary",
                  "generate_recommendations",
                  "find_pattern_matches",
                  "check_imports",
                  "check_function_complexity"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional",
                  "Union"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 13
              }
            ],
            "calls": [
              {
                "function": "get_default_thresholds",
                "line": 65
              },
              {
                "function": "QualityCheck",
                "line": 99
              },
              {
                "function": "values",
                "line": 128
              },
              {
                "function": "get",
                "line": 148
              },
              {
                "function": "sort",
                "line": 168
              },
              {
                "function": "split",
                "line": 195
              },
              {
                "function": "findall",
                "line": 212
              },
              {
                "function": "join",
                "line": 214
              },
              {
                "function": "create_quality_check",
                "line": 233
              },
              {
                "function": "findall",
                "line": 244
              },
              {
                "function": "len",
                "line": 248
              },
              {
                "function": "create_quality_check",
                "line": 258
              },
              {
                "function": "get",
                "line": 129
              },
              {
                "function": "sub",
                "line": 191
              },
              {
                "function": "sub",
                "line": 192
              },
              {
                "function": "enumerate",
                "line": 198
              },
              {
                "function": "len",
                "line": 251
              },
              {
                "function": "max",
                "line": 102
              },
              {
                "function": "values",
                "line": 142
              },
              {
                "function": "values",
                "line": 167
              },
              {
                "function": "search",
                "line": 199
              },
              {
                "function": "append",
                "line": 223
              },
              {
                "function": "append",
                "line": 230
              },
              {
                "function": "max",
                "line": 236
              },
              {
                "function": "append",
                "line": 254
              },
              {
                "function": "min",
                "line": 102
              },
              {
                "function": "append",
                "line": 177
              },
              {
                "function": "append",
                "line": 200
              },
              {
                "function": "len",
                "line": 224
              },
              {
                "function": "len",
                "line": 231
              },
              {
                "function": "len",
                "line": 235
              },
              {
                "function": "len",
                "line": 256
              },
              {
                "function": "max",
                "line": 256
              },
              {
                "function": "len",
                "line": 260
              },
              {
                "function": "split",
                "line": 251
              },
              {
                "function": "len",
                "line": 262
              },
              {
                "function": "strip",
                "line": 203
              },
              {
                "function": "group",
                "line": 204
              },
              {
                "function": "join",
                "line": 237
              },
              {
                "function": "strip",
                "line": 252
              },
              {
                "function": "startswith",
                "line": 252
              },
              {
                "function": "search",
                "line": 204
              },
              {
                "function": "strip",
                "line": 252
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "get_default_thresholds",
                "line": 21,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_vwap_fibonacci_condition",
                "line": 325,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_ema9_logic",
                "line": 354,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_new_high_logic",
                "line": 374,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_crv_requirement",
                "line": 394,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_space_to_382",
                "line": 414,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              },
              {
                "name": "_analyze_ron_trading_hours",
                "line": 434,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              }
            ],
            "classes": [
              {
                "name": "RONStrategyQualityGate",
                "line": 12,
                "methods": [
                  "__init__",
                  "get_default_thresholds",
                  "_analyze_vwap_fibonacci_condition",
                  "_analyze_ema9_logic",
                  "_analyze_new_high_logic",
                  "_analyze_crv_requirement",
                  "_analyze_space_to_382",
                  "_analyze_ron_trading_hours"
                ],
                "bases": [
                  "BaseQualityGate"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_quality_gate",
                "names": [
                  "BaseQualityGate",
                  "QualityCheck",
                  "QualityGateResult",
                  "QualityLevel"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 19
              },
              {
                "function": "time",
                "line": 31
              },
              {
                "function": "update",
                "line": 35
              },
              {
                "function": "update",
                "line": 36
              },
              {
                "function": "update",
                "line": 37
              },
              {
                "function": "update",
                "line": 38
              },
              {
                "function": "update",
                "line": 39
              },
              {
                "function": "update",
                "line": 40
              },
              {
                "function": "update",
                "line": 43
              },
              {
                "function": "update",
                "line": 44
              },
              {
                "function": "update",
                "line": 45
              },
              {
                "function": "update",
                "line": 48
              },
              {
                "function": "update",
                "line": 49
              },
              {
                "function": "update",
                "line": 50
              },
              {
                "function": "calculate_overall_score",
                "line": 53
              },
              {
                "function": "determine_pass_status",
                "line": 54
              },
              {
                "function": "len",
                "line": 57
              },
              {
                "function": "sum",
                "line": 58
              },
              {
                "function": "sum",
                "line": 60
              },
              {
                "function": "QualityGateResult",
                "line": 65
              },
              {
                "function": "generate_summary",
                "line": 79
              },
              {
                "function": "_analyze_vwap_fibonacci_condition",
                "line": 84
              },
              {
                "function": "_analyze_ema9_logic",
                "line": 100
              },
              {
                "function": "_analyze_new_high_logic",
                "line": 116
              },
              {
                "function": "_analyze_crv_requirement",
                "line": 132
              },
              {
                "function": "_analyze_space_to_382",
                "line": 148
              },
              {
                "function": "_analyze_ron_trading_hours",
                "line": 164
              },
              {
                "function": "sum",
                "line": 187
              },
              {
                "function": "sum",
                "line": 212
              },
              {
                "function": "sum",
                "line": 236
              },
              {
                "function": "sum",
                "line": 260
              },
              {
                "function": "sum",
                "line": 284
              },
              {
                "function": "sum",
                "line": 308
              },
              {
                "function": "sum",
                "line": 334
              },
              {
                "function": "sum",
                "line": 363
              },
              {
                "function": "sum",
                "line": 383
              },
              {
                "function": "sum",
                "line": 403
              },
              {
                "function": "sum",
                "line": 423
              },
              {
                "function": "sum",
                "line": 443
              },
              {
                "function": "create_quality_check",
                "line": 87
              },
              {
                "function": "create_quality_check",
                "line": 103
              },
              {
                "function": "create_quality_check",
                "line": 119
              },
              {
                "function": "create_quality_check",
                "line": 135
              },
              {
                "function": "create_quality_check",
                "line": 151
              },
              {
                "function": "create_quality_check",
                "line": 167
              },
              {
                "function": "len",
                "line": 188
              },
              {
                "function": "create_quality_check",
                "line": 192
              },
              {
                "function": "len",
                "line": 213
              },
              {
                "function": "create_quality_check",
                "line": 217
              },
              {
                "function": "len",
                "line": 237
              },
              {
                "function": "create_quality_check",
                "line": 241
              },
              {
                "function": "len",
                "line": 261
              },
              {
                "function": "create_quality_check",
                "line": 265
              },
              {
                "function": "len",
                "line": 285
              },
              {
                "function": "create_quality_check",
                "line": 289
              },
              {
                "function": "len",
                "line": 309
              },
              {
                "function": "create_quality_check",
                "line": 313
              },
              {
                "function": "len",
                "line": 335
              },
              {
                "function": "len",
                "line": 364
              },
              {
                "function": "len",
                "line": 384
              },
              {
                "function": "len",
                "line": 404
              },
              {
                "function": "len",
                "line": 424
              },
              {
                "function": "len",
                "line": 444
              },
              {
                "function": "super",
                "line": 19
              },
              {
                "function": "_check_vwap_fibonacci_condition",
                "line": 35
              },
              {
                "function": "_check_ema9_logic",
                "line": 36
              },
              {
                "function": "_check_new_high_logic",
                "line": 37
              },
              {
                "function": "_check_crv_requirement",
                "line": 38
              },
              {
                "function": "_check_space_to_382",
                "line": 39
              },
              {
                "function": "_check_ron_trading_hours",
                "line": 40
              },
              {
                "function": "_check_entry_conditions",
                "line": 43
              },
              {
                "function": "_check_exit_conditions",
                "line": 44
              },
              {
                "function": "_check_timing_precision",
                "line": 45
              },
              {
                "function": "_check_fibonacci_calculation",
                "line": 48
              },
              {
                "function": "_check_vwap_calculation",
                "line": 49
              },
              {
                "function": "_check_ema9_calculation",
                "line": 50
              },
              {
                "function": "time",
                "line": 63
              },
              {
                "function": "generate_summary",
                "line": 74
              },
              {
                "function": "generate_recommendations",
                "line": 75
              },
              {
                "function": "search",
                "line": 340
              },
              {
                "function": "append",
                "line": 341
              },
              {
                "function": "search",
                "line": 342
              },
              {
                "function": "append",
                "line": 343
              },
              {
                "function": "search",
                "line": 344
              },
              {
                "function": "append",
                "line": 345
              },
              {
                "function": "search",
                "line": 449
              },
              {
                "function": "append",
                "line": 450
              },
              {
                "function": "search",
                "line": 451
              },
              {
                "function": "append",
                "line": 452
              },
              {
                "function": "search",
                "line": 453
              },
              {
                "function": "append",
                "line": 454
              },
              {
                "function": "values",
                "line": 58
              },
              {
                "function": "values",
                "line": 60
              },
              {
                "function": "search",
                "line": 187
              },
              {
                "function": "search",
                "line": 212
              },
              {
                "function": "search",
                "line": 236
              },
              {
                "function": "search",
                "line": 260
              },
              {
                "function": "search",
                "line": 284
              },
              {
                "function": "search",
                "line": 308
              },
              {
                "function": "search",
                "line": 334
              },
              {
                "function": "len",
                "line": 350
              },
              {
                "function": "search",
                "line": 363
              },
              {
                "function": "len",
                "line": 370
              },
              {
                "function": "search",
                "line": 383
              },
              {
                "function": "len",
                "line": 390
              },
              {
                "function": "search",
                "line": 403
              },
              {
                "function": "len",
                "line": 410
              },
              {
                "function": "search",
                "line": 423
              },
              {
                "function": "len",
                "line": 430
              },
              {
                "function": "search",
                "line": 443
              },
              {
                "function": "len",
                "line": 459
              },
              {
                "function": "len",
                "line": 196
              },
              {
                "function": "len",
                "line": 221
              },
              {
                "function": "len",
                "line": 245
              },
              {
                "function": "len",
                "line": 269
              },
              {
                "function": "len",
                "line": 293
              },
              {
                "function": "len",
                "line": 317
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "get_default_thresholds",
                "line": 21,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_decimal_precision",
                "line": 296,
                "async": false,
                "calls": [
                  "findall",
                  "append",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_pnl_calculations",
                "line": 317,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_crv_calculations",
                "line": 336,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_position_validation",
                "line": 356,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_stop_loss_logic",
                "line": 376,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_exposure_limits",
                "line": 395,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_market_hours",
                "line": 414,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_audit_trail",
                "line": 433,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_type_annotations",
                "line": 452,
                "async": false,
                "calls": [
                  "findall",
                  "max",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_exception_patterns",
                "line": 467,
                "async": false,
                "calls": [
                  "findall",
                  "append",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_graceful_degradation",
                "line": 496,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_docstring_coverage",
                "line": 515,
                "async": false,
                "calls": [
                  "findall",
                  "max",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_fallback_policy",
                "line": 530,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "len"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              },
              {
                "name": "_check_live_data_policy",
                "line": 555,
                "async": false,
                "calls": [
                  "search",
                  "sum",
                  "min"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              }
            ],
            "classes": [
              {
                "name": "TradingSystemQualityGate",
                "line": 12,
                "methods": [
                  "__init__",
                  "get_default_thresholds",
                  "_check_decimal_precision",
                  "_check_pnl_calculations",
                  "_check_crv_calculations",
                  "_check_position_validation",
                  "_check_stop_loss_logic",
                  "_check_exposure_limits",
                  "_check_market_hours",
                  "_check_audit_trail",
                  "_check_type_annotations",
                  "_check_exception_patterns",
                  "_check_graceful_degradation",
                  "_check_docstring_coverage",
                  "_check_fallback_policy",
                  "_check_live_data_policy"
                ],
                "bases": [
                  "BaseQualityGate"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional",
                  "Union"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_quality_gate",
                "names": [
                  "BaseQualityGate",
                  "QualityCheck",
                  "QualityGateResult",
                  "QualityLevel"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 19
              },
              {
                "function": "time",
                "line": 34
              },
              {
                "function": "update",
                "line": 38
              },
              {
                "function": "update",
                "line": 39
              },
              {
                "function": "update",
                "line": 40
              },
              {
                "function": "update",
                "line": 43
              },
              {
                "function": "update",
                "line": 44
              },
              {
                "function": "update",
                "line": 45
              },
              {
                "function": "calculate_overall_score",
                "line": 52
              },
              {
                "function": "determine_pass_status",
                "line": 53
              },
              {
                "function": "len",
                "line": 56
              },
              {
                "function": "sum",
                "line": 57
              },
              {
                "function": "sum",
                "line": 59
              },
              {
                "function": "QualityGateResult",
                "line": 64
              },
              {
                "function": "generate_summary",
                "line": 78
              },
              {
                "function": "_check_decimal_precision",
                "line": 86
              },
              {
                "function": "create_quality_check",
                "line": 87
              },
              {
                "function": "_check_pnl_calculations",
                "line": 98
              },
              {
                "function": "create_quality_check",
                "line": 99
              },
              {
                "function": "_check_crv_calculations",
                "line": 110
              },
              {
                "function": "create_quality_check",
                "line": 111
              },
              {
                "function": "_check_position_validation",
                "line": 128
              },
              {
                "function": "create_quality_check",
                "line": 129
              },
              {
                "function": "_check_stop_loss_logic",
                "line": 140
              },
              {
                "function": "create_quality_check",
                "line": 141
              },
              {
                "function": "_check_exposure_limits",
                "line": 152
              },
              {
                "function": "create_quality_check",
                "line": 153
              },
              {
                "function": "_check_market_hours",
                "line": 170
              },
              {
                "function": "create_quality_check",
                "line": 171
              },
              {
                "function": "_check_audit_trail",
                "line": 182
              },
              {
                "function": "create_quality_check",
                "line": 183
              },
              {
                "function": "check_function_complexity",
                "line": 200
              },
              {
                "function": "_check_type_annotations",
                "line": 204
              },
              {
                "function": "create_quality_check",
                "line": 205
              },
              {
                "function": "_check_exception_patterns",
                "line": 222
              },
              {
                "function": "create_quality_check",
                "line": 223
              },
              {
                "function": "_check_graceful_degradation",
                "line": 234
              },
              {
                "function": "create_quality_check",
                "line": 235
              },
              {
                "function": "_check_docstring_coverage",
                "line": 252
              },
              {
                "function": "create_quality_check",
                "line": 253
              },
              {
                "function": "_check_fallback_policy",
                "line": 270
              },
              {
                "function": "create_quality_check",
                "line": 271
              },
              {
                "function": "_check_live_data_policy",
                "line": 282
              },
              {
                "function": "create_quality_check",
                "line": 283
              },
              {
                "function": "len",
                "line": 298
              },
              {
                "function": "len",
                "line": 299
              },
              {
                "function": "sum",
                "line": 325
              },
              {
                "function": "min",
                "line": 326
              },
              {
                "function": "sum",
                "line": 345
              },
              {
                "function": "min",
                "line": 346
              },
              {
                "function": "sum",
                "line": 365
              },
              {
                "function": "min",
                "line": 366
              },
              {
                "function": "sum",
                "line": 384
              },
              {
                "function": "min",
                "line": 385
              },
              {
                "function": "sum",
                "line": 403
              },
              {
                "function": "min",
                "line": 404
              },
              {
                "function": "sum",
                "line": 422
              },
              {
                "function": "min",
                "line": 423
              },
              {
                "function": "sum",
                "line": 441
              },
              {
                "function": "min",
                "line": 442
              },
              {
                "function": "len",
                "line": 454
              },
              {
                "function": "len",
                "line": 455
              },
              {
                "function": "len",
                "line": 469
              },
              {
                "function": "len",
                "line": 470
              },
              {
                "function": "len",
                "line": 471
              },
              {
                "function": "sum",
                "line": 504
              },
              {
                "function": "min",
                "line": 505
              },
              {
                "function": "len",
                "line": 517
              },
              {
                "function": "len",
                "line": 518
              },
              {
                "function": "sum",
                "line": 563
              },
              {
                "function": "update",
                "line": 49
              },
              {
                "function": "findall",
                "line": 298
              },
              {
                "function": "findall",
                "line": 299
              },
              {
                "function": "append",
                "line": 306
              },
              {
                "function": "append",
                "line": 308
              },
              {
                "function": "findall",
                "line": 454
              },
              {
                "function": "findall",
                "line": 455
              },
              {
                "function": "findall",
                "line": 469
              },
              {
                "function": "findall",
                "line": 470
              },
              {
                "function": "findall",
                "line": 471
              },
              {
                "function": "append",
                "line": 485
              },
              {
                "function": "append",
                "line": 487
              },
              {
                "function": "findall",
                "line": 517
              },
              {
                "function": "findall",
                "line": 518
              },
              {
                "function": "search",
                "line": 542
              },
              {
                "function": "len",
                "line": 546
              },
              {
                "function": "min",
                "line": 564
              },
              {
                "function": "super",
                "line": 19
              },
              {
                "function": "_check_financial_calculations",
                "line": 38
              },
              {
                "function": "_check_risk_management",
                "line": 39
              },
              {
                "function": "_check_trading_compliance",
                "line": 40
              },
              {
                "function": "_check_code_structure",
                "line": 43
              },
              {
                "function": "_check_error_handling",
                "line": 44
              },
              {
                "function": "_check_documentation",
                "line": 45
              },
              {
                "function": "get",
                "line": 48
              },
              {
                "function": "time",
                "line": 62
              },
              {
                "function": "generate_summary",
                "line": 73
              },
              {
                "function": "generate_recommendations",
                "line": 74
              },
              {
                "function": "len",
                "line": 326
              },
              {
                "function": "len",
                "line": 346
              },
              {
                "function": "len",
                "line": 385
              },
              {
                "function": "len",
                "line": 404
              },
              {
                "function": "len",
                "line": 442
              },
              {
                "function": "max",
                "line": 457
              },
              {
                "function": "max",
                "line": 520
              },
              {
                "function": "append",
                "line": 543
              },
              {
                "function": "len",
                "line": 545
              },
              {
                "function": "len",
                "line": 545
              },
              {
                "function": "_check_stock_analyser_compliance",
                "line": 49
              },
              {
                "function": "values",
                "line": 57
              },
              {
                "function": "values",
                "line": 59
              },
              {
                "function": "search",
                "line": 325
              },
              {
                "function": "search",
                "line": 345
              },
              {
                "function": "search",
                "line": 365
              },
              {
                "function": "search",
                "line": 384
              },
              {
                "function": "search",
                "line": 403
              },
              {
                "function": "search",
                "line": 422
              },
              {
                "function": "search",
                "line": 441
              },
              {
                "function": "search",
                "line": 504
              },
              {
                "function": "search",
                "line": 563
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "base_quality_gate",
                "names": [
                  "BaseQualityGate",
                  "QualityCheck",
                  "QualityGateResult",
                  "QualityLevel"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "trading_quality_gate",
                "names": [
                  "TradingSystemQualityGate"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "ron_strategy_quality_gate",
                "names": [
                  "RONStrategyQualityGate"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "engine_parity_quality_gate",
                "names": [
                  "EngineParityQualityGate"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "security_quality_gate",
                "names": [
                  "SecurityQualityGate"
                ],
                "line": 17
              }
            ],
            "calls": []
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 22,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "get_workflow_steps",
                "line": 35,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "get_step_agents",
                "line": 39,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "get_step_instructions",
                "line": 53,
                "async": false,
                "calls": [
                  "getattr",
                  "get"
                ],
                "parameters": [
                  "self",
                  "step",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "validate_step_completion",
                "line": 319,
                "async": false,
                "calls": [
                  "sum",
                  "get",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "step",
                  "step_output"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "get_workflow_description",
                "line": 361,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              },
              {
                "name": "get_success_criteria",
                "line": 381,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "GenericSoftwareWorkflow",
                "line": 16,
                "methods": [
                  "__init__",
                  "get_workflow_steps",
                  "get_step_agents",
                  "get_step_instructions",
                  "validate_step_completion",
                  "get_workflow_description",
                  "get_success_criteria"
                ],
                "bases": [
                  "BaseWorkflow"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "base_workflow",
                "names": [
                  "BaseWorkflow"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "shared_context",
                "names": [
                  "SharedContext"
                ],
                "line": 12
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 14
              },
              {
                "function": "__init__",
                "line": 23
              },
              {
                "function": "get",
                "line": 51
              },
              {
                "function": "get",
                "line": 316
              },
              {
                "function": "lower",
                "line": 325
              },
              {
                "function": "get",
                "line": 355
              },
              {
                "function": "sum",
                "line": 356
              },
              {
                "function": "super",
                "line": 23
              },
              {
                "function": "getattr",
                "line": 57
              },
              {
                "function": "len",
                "line": 359
              },
              {
                "function": "getattr",
                "line": 59
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 21,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "get_workflow_steps",
                "line": 38,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "get_step_agents",
                "line": 42,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "get_step_instructions",
                "line": 60,
                "async": false,
                "calls": [
                  "getattr",
                  "get"
                ],
                "parameters": [
                  "self",
                  "step",
                  "context"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "validate_step_completion",
                "line": 580,
                "async": false,
                "calls": [
                  "sum",
                  "get",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "step",
                  "step_output"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "get_workflow_description",
                "line": 634,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              },
              {
                "name": "get_success_criteria",
                "line": 659,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "TradingSystemWorkflow",
                "line": 15,
                "methods": [
                  "__init__",
                  "get_workflow_steps",
                  "get_step_agents",
                  "get_step_instructions",
                  "validate_step_completion",
                  "get_workflow_description",
                  "get_success_criteria"
                ],
                "bases": [
                  "BaseWorkflow"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_workflow",
                "names": [
                  "BaseWorkflow"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "shared_context",
                "names": [
                  "SharedContext"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "__init__",
                "line": 22
              },
              {
                "function": "get",
                "line": 58
              },
              {
                "function": "get",
                "line": 577
              },
              {
                "function": "lower",
                "line": 586
              },
              {
                "function": "get",
                "line": 628
              },
              {
                "function": "sum",
                "line": 629
              },
              {
                "function": "super",
                "line": 22
              },
              {
                "function": "getattr",
                "line": 64
              },
              {
                "function": "len",
                "line": 632
              },
              {
                "function": "getattr",
                "line": 66
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py": {
            "functions": [
              {
                "name": "get_workflow_for_project_type",
                "line": 43,
                "async": false,
                "calls": [
                  "workflow_class",
                  "get",
                  "lower"
                ],
                "parameters": [
                  "project_type"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
              },
              {
                "name": "get_available_workflows",
                "line": 63,
                "async": false,
                "calls": [
                  "workflow_class",
                  "get_workflow_description",
                  "get_workflow_steps",
                  "items",
                  "len"
                ],
                "parameters": [],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "base_workflow",
                "names": [
                  "BaseWorkflow"
                ],
                "line": 24
              },
              {
                "type": "from_import",
                "module": "generic_software_workflow",
                "names": [
                  "GenericSoftwareWorkflow"
                ],
                "line": 25
              },
              {
                "type": "from_import",
                "module": "trading_system_workflow",
                "names": [
                  "TradingSystemWorkflow"
                ],
                "line": 26
              }
            ],
            "calls": [
              {
                "function": "get",
                "line": 56
              },
              {
                "function": "workflow_class",
                "line": 61
              },
              {
                "function": "items",
                "line": 71
              },
              {
                "function": "lower",
                "line": 56
              },
              {
                "function": "workflow_class",
                "line": 72
              },
              {
                "function": "get_workflow_description",
                "line": 75
              },
              {
                "function": "get_workflow_steps",
                "line": 76
              },
              {
                "function": "len",
                "line": 77
              },
              {
                "function": "get_workflow_steps",
                "line": 77
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 21,
                "async": false,
                "calls": [
                  "now"
                ],
                "parameters": [
                  "self",
                  "name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_workflow_steps",
                "line": 27,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_step_agents",
                "line": 37,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "step"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_step_instructions",
                "line": 50,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "step",
                  "context"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "validate_step_completion",
                "line": 64,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "step",
                  "step_output"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_workflow_description",
                "line": 78,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_success_criteria",
                "line": 88,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_workflow_info",
                "line": 97,
                "async": false,
                "calls": [
                  "get_workflow_description",
                  "get_workflow_steps",
                  "isoformat",
                  "len",
                  "get_success_criteria"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "log_execution",
                "line": 113,
                "async": false,
                "calls": [
                  "info",
                  "now",
                  "append",
                  "get",
                  "isoformat",
                  "str",
                  "len"
                ],
                "parameters": [
                  "self",
                  "step",
                  "agent",
                  "result"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_next_step",
                "line": 135,
                "async": false,
                "calls": [
                  "index",
                  "warning",
                  "get_workflow_steps",
                  "len"
                ],
                "parameters": [
                  "self",
                  "current_step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_step_position",
                "line": 159,
                "async": false,
                "calls": [
                  "index",
                  "get_workflow_steps",
                  "len"
                ],
                "parameters": [
                  "self",
                  "step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "is_workflow_complete",
                "line": 176,
                "async": false,
                "calls": [
                  "get_workflow_steps"
                ],
                "parameters": [
                  "self",
                  "current_step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_workflow_progress",
                "line": 189,
                "async": false,
                "calls": [
                  "get_step_position"
                ],
                "parameters": [
                  "self",
                  "current_step"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              },
              {
                "name": "get_execution_statistics",
                "line": 202,
                "async": false,
                "calls": [
                  "max",
                  "get",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "BaseWorkflow",
                "line": 13,
                "methods": [
                  "__init__",
                  "get_workflow_steps",
                  "get_step_agents",
                  "get_step_instructions",
                  "validate_step_completion",
                  "get_workflow_description",
                  "get_success_criteria",
                  "get_workflow_info",
                  "log_execution",
                  "get_next_step",
                  "get_step_position",
                  "is_workflow_complete",
                  "get_workflow_progress",
                  "get_execution_statistics"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "now",
                "line": 23
              },
              {
                "function": "append",
                "line": 131
              },
              {
                "function": "info",
                "line": 133
              },
              {
                "function": "get_workflow_steps",
                "line": 145
              },
              {
                "function": "get_workflow_steps",
                "line": 169
              },
              {
                "function": "get_workflow_steps",
                "line": 186
              },
              {
                "function": "get_step_position",
                "line": 199
              },
              {
                "function": "len",
                "line": 218
              },
              {
                "function": "sum",
                "line": 219
              },
              {
                "function": "get_workflow_description",
                "line": 106
              },
              {
                "function": "get_workflow_steps",
                "line": 107
              },
              {
                "function": "get_success_criteria",
                "line": 108
              },
              {
                "function": "isoformat",
                "line": 109
              },
              {
                "function": "len",
                "line": 110
              },
              {
                "function": "isoformat",
                "line": 123
              },
              {
                "function": "get",
                "line": 126
              },
              {
                "function": "get",
                "line": 127
              },
              {
                "function": "len",
                "line": 128
              },
              {
                "function": "index",
                "line": 151
              },
              {
                "function": "get",
                "line": 222
              },
              {
                "function": "get",
                "line": 230
              },
              {
                "function": "get",
                "line": 231
              },
              {
                "function": "str",
                "line": 128
              },
              {
                "function": "len",
                "line": 152
              },
              {
                "function": "warning",
                "line": 155
              },
              {
                "function": "index",
                "line": 171
              },
              {
                "function": "len",
                "line": 172
              },
              {
                "function": "sum",
                "line": 223
              },
              {
                "function": "len",
                "line": 223
              },
              {
                "function": "get",
                "line": 233
              },
              {
                "function": "get",
                "line": 234
              },
              {
                "function": "max",
                "line": 242
              },
              {
                "function": "max",
                "line": 243
              },
              {
                "function": "now",
                "line": 123
              },
              {
                "function": "get",
                "line": 128
              },
              {
                "function": "len",
                "line": 174
              },
              {
                "function": "get",
                "line": 219
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 180,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "project_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              },
              {
                "name": "get_domain_instructions",
                "line": 183,
                "async": false,
                "calls": [
                  "dumps",
                  "get_agent_enhancement_instructions"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              },
              {
                "name": "get_quality_gates",
                "line": 214,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              },
              {
                "name": "get_project_specifics",
                "line": 224,
                "async": false,
                "calls": [
                  "ProjectSpecification"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              },
              {
                "name": "get_agent_enhancement_instructions",
                "line": 254,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              },
              {
                "name": "get_iteration_limits",
                "line": 334,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              }
            ],
            "classes": [
              {
                "name": "TradingProjectContext",
                "line": 177,
                "methods": [
                  "__init__",
                  "get_domain_instructions",
                  "get_quality_gates",
                  "get_project_specifics",
                  "get_agent_enhancement_instructions",
                  "get_iteration_limits"
                ],
                "bases": [
                  "BaseProjectContext"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_project_context",
                "names": [
                  "BaseProjectContext",
                  "ProjectSpecification"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 181
              },
              {
                "function": "ProjectSpecification",
                "line": 226
              },
              {
                "function": "super",
                "line": 181
              },
              {
                "function": "dumps",
                "line": 191
              },
              {
                "function": "dumps",
                "line": 194
              },
              {
                "function": "dumps",
                "line": 197
              },
              {
                "function": "dumps",
                "line": 211
              },
              {
                "function": "get_agent_enhancement_instructions",
                "line": 211
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "base_project_context",
                "names": [
                  "BaseProjectContext",
                  "ProjectSpecification"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "trading_project_context",
                "names": [
                  "TradingProjectContext"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "web_app_context",
                "names": [
                  "WebAppProjectContext"
                ],
                "line": 11
              }
            ],
            "calls": []
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 103,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "project_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              },
              {
                "name": "get_domain_instructions",
                "line": 106,
                "async": false,
                "calls": [
                  "dumps",
                  "get_agent_enhancement_instructions"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              },
              {
                "name": "get_quality_gates",
                "line": 143,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              },
              {
                "name": "get_project_specifics",
                "line": 153,
                "async": false,
                "calls": [
                  "ProjectSpecification"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              },
              {
                "name": "get_agent_enhancement_instructions",
                "line": 193,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              },
              {
                "name": "get_iteration_limits",
                "line": 276,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              }
            ],
            "classes": [
              {
                "name": "WebAppProjectContext",
                "line": 100,
                "methods": [
                  "__init__",
                  "get_domain_instructions",
                  "get_quality_gates",
                  "get_project_specifics",
                  "get_agent_enhancement_instructions",
                  "get_iteration_limits"
                ],
                "bases": [
                  "BaseProjectContext"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base_project_context",
                "names": [
                  "BaseProjectContext",
                  "ProjectSpecification"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "__init__",
                "line": 104
              },
              {
                "function": "ProjectSpecification",
                "line": 155
              },
              {
                "function": "super",
                "line": 104
              },
              {
                "function": "dumps",
                "line": 114
              },
              {
                "function": "dumps",
                "line": 117
              },
              {
                "function": "dumps",
                "line": 140
              },
              {
                "function": "get_agent_enhancement_instructions",
                "line": 140
              }
            ]
          },
          "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 34,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "project_name"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_domain_instructions",
                "line": 38,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_quality_gates",
                "line": 54,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_project_specifics",
                "line": 67,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [
                  "abstractmethod"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_agent_enhancement_instructions",
                "line": 76,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_iteration_limits",
                "line": 88,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "get_conflict_resolution_priorities",
                "line": 103,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "validate_context",
                "line": 122,
                "async": false,
                "calls": [
                  "isinstance",
                  "get_domain_instructions",
                  "len",
                  "get_quality_gates",
                  "get_project_specifics",
                  "strip"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              }
            ],
            "classes": [
              {
                "name": "ProjectSpecification",
                "line": 14,
                "methods": [],
                "bases": [],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              },
              {
                "name": "BaseProjectContext",
                "line": 25,
                "methods": [
                  "__init__",
                  "get_domain_instructions",
                  "get_quality_gates",
                  "get_project_specifics",
                  "get_agent_enhancement_instructions",
                  "get_iteration_limits",
                  "get_conflict_resolution_priorities",
                  "validate_context"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "get_domain_instructions",
                "line": 130
              },
              {
                "function": "get_quality_gates",
                "line": 131
              },
              {
                "function": "get_project_specifics",
                "line": 132
              },
              {
                "function": "isinstance",
                "line": 136
              },
              {
                "function": "len",
                "line": 134
              },
              {
                "function": "strip",
                "line": 134
              }
            ]
          },
          "backend/test_system_understanding.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 63
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 131
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 15
              },
              {
                "function": "basicConfig",
                "line": 21
              },
              {
                "function": "getLogger",
                "line": 25
              },
              {
                "function": "str",
                "line": 15
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "ArchitectAgent",
                "line": 33
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "CodeSmithAgent",
                "line": 104
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 170
              },
              {
                "function": "print",
                "line": 171
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 174
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "print",
                "line": 176
              },
              {
                "function": "print",
                "line": 177
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "print",
                "line": 179
              },
              {
                "function": "print",
                "line": 187
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 195
              },
              {
                "function": "print",
                "line": 196
              },
              {
                "function": "print",
                "line": 197
              },
              {
                "function": "run",
                "line": 200
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "get",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "get",
                "line": 122
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "test_architect_understanding",
                "line": 182
              },
              {
                "function": "test_codesmith_understanding",
                "line": 185
              },
              {
                "function": "main",
                "line": 200
              },
              {
                "function": "Path",
                "line": 15
              },
              {
                "function": "understand_system",
                "line": 38
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print_exc",
                "line": 64
              },
              {
                "function": "analyze_infrastructure_improvements",
                "line": 69
              },
              {
                "function": "open",
                "line": 76
              },
              {
                "function": "write",
                "line": 77
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "generate_architecture_flowchart",
                "line": 86
              },
              {
                "function": "open",
                "line": 91
              },
              {
                "function": "write",
                "line": 92
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "analyze_codebase",
                "line": 109
              },
              {
                "function": "print",
                "line": 130
              },
              {
                "function": "print_exc",
                "line": 132
              },
              {
                "function": "cleanup_dead_code",
                "line": 137
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "refactor_complex_code",
                "line": 155
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "enumerate",
                "line": 159
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "get",
                "line": 122
              },
              {
                "function": "open",
                "line": 145
              },
              {
                "function": "write",
                "line": 146
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "len",
                "line": 41
              },
              {
                "function": "len",
                "line": 42
              },
              {
                "function": "len",
                "line": 43
              },
              {
                "function": "len",
                "line": 44
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "get",
                "line": 50
              },
              {
                "function": "get",
                "line": 51
              },
              {
                "function": "get",
                "line": 52
              },
              {
                "function": "get",
                "line": 57
              },
              {
                "function": "get",
                "line": 58
              },
              {
                "function": "get",
                "line": 59
              },
              {
                "function": "len",
                "line": 116
              },
              {
                "function": "len",
                "line": 117
              },
              {
                "function": "len",
                "line": 118
              },
              {
                "function": "len",
                "line": 119
              },
              {
                "function": "get",
                "line": 124
              },
              {
                "function": "get",
                "line": 125
              },
              {
                "function": "get",
                "line": 126
              },
              {
                "function": "get",
                "line": 127
              },
              {
                "function": "get",
                "line": 41
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "get",
                "line": 116
              },
              {
                "function": "get",
                "line": 117
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "get",
                "line": 119
              },
              {
                "function": "len",
                "line": 158
              },
              {
                "function": "get",
                "line": 161
              },
              {
                "function": "get",
                "line": 161
              },
              {
                "function": "get",
                "line": 41
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 44
              }
            ]
          },
          "backend/__version__.py": {
            "functions": [
              {
                "name": "get_version",
                "line": 18,
                "async": false,
                "calls": [],
                "parameters": [],
                "decorators": [],
                "file": "backend/__version__.py"
              },
              {
                "name": "get_version_tuple",
                "line": 22,
                "async": false,
                "calls": [],
                "parameters": [],
                "decorators": [],
                "file": "backend/__version__.py"
              },
              {
                "name": "is_compatible",
                "line": 26,
                "async": false,
                "calls": [
                  "isinstance",
                  "map",
                  "tuple",
                  "split"
                ],
                "parameters": [
                  "required_version"
                ],
                "decorators": [],
                "file": "backend/__version__.py"
              }
            ],
            "classes": [],
            "imports": [],
            "calls": [
              {
                "function": "isinstance",
                "line": 28
              },
              {
                "function": "tuple",
                "line": 29
              },
              {
                "function": "map",
                "line": 29
              },
              {
                "function": "split",
                "line": 29
              }
            ]
          },
          "backend/test_infrastructure_comprehensive.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent",
                  "INDEXING_AVAILABLE",
                  "ANALYSIS_AVAILABLE",
                  "DIAGRAM_AVAILABLE"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 17
              }
            ],
            "calls": [
              {
                "function": "exists",
                "line": 12
              },
              {
                "function": "print",
                "line": 13
              },
              {
                "function": "exit",
                "line": 14
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "print",
                "line": 26
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "ArchitectAgent",
                "line": 31
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 35
              },
              {
                "function": "TaskRequest",
                "line": 37
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "TaskRequest",
                "line": 54
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "print",
                "line": 155
              },
              {
                "function": "print",
                "line": 159
              },
              {
                "function": "print",
                "line": 160
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print",
                "line": 162
              },
              {
                "function": "print",
                "line": 163
              },
              {
                "function": "print",
                "line": 164
              },
              {
                "function": "print",
                "line": 165
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "run",
                "line": 173
              },
              {
                "function": "execute_with_memory",
                "line": 42
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "execute_with_memory",
                "line": 59
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "TaskRequest",
                "line": 97
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "TaskRequest",
                "line": 122
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 145
              },
              {
                "function": "test_infrastructure_analysis_comprehensive",
                "line": 170
              },
              {
                "function": "main",
                "line": 173
              },
              {
                "function": "lower",
                "line": 69
              },
              {
                "function": "append",
                "line": 70
              },
              {
                "function": "append",
                "line": 72
              },
              {
                "function": "append",
                "line": 74
              },
              {
                "function": "lower",
                "line": 75
              },
              {
                "function": "append",
                "line": 76
              },
              {
                "function": "append",
                "line": 78
              },
              {
                "function": "append",
                "line": 80
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "execute_with_memory",
                "line": 102
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "execute_with_memory",
                "line": 127
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "dirname",
                "line": 39
              },
              {
                "function": "dirname",
                "line": 56
              },
              {
                "function": "lower",
                "line": 71
              },
              {
                "function": "lower",
                "line": 71
              },
              {
                "function": "lower",
                "line": 73
              },
              {
                "function": "lower",
                "line": 73
              },
              {
                "function": "lower",
                "line": 77
              },
              {
                "function": "lower",
                "line": 77
              },
              {
                "function": "lower",
                "line": 79
              },
              {
                "function": "lower",
                "line": 79
              },
              {
                "function": "lower",
                "line": 106
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "dirname",
                "line": 39
              },
              {
                "function": "dirname",
                "line": 56
              },
              {
                "function": "len",
                "line": 82
              },
              {
                "function": "dirname",
                "line": 99
              },
              {
                "function": "dirname",
                "line": 124
              },
              {
                "function": "lower",
                "line": 137
              },
              {
                "function": "lower",
                "line": 137
              },
              {
                "function": "append",
                "line": 138
              },
              {
                "function": "dirname",
                "line": 99
              },
              {
                "function": "dirname",
                "line": 124
              },
              {
                "function": "capitalize",
                "line": 138
              },
              {
                "function": "join",
                "line": 141
              }
            ]
          },
          "backend/test_api_keys.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dotenv",
                "names": [
                  "load_dotenv"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService",
                  "OpenAIConfig"
                ],
                "line": 23
              },
              {
                "type": "from_import",
                "module": "utils.anthropic_service",
                "names": [
                  "AnthropicService"
                ],
                "line": 59
              },
              {
                "type": "import",
                "module": "requests",
                "names": [
                  "requests"
                ],
                "line": 101
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 13
              },
              {
                "function": "load_dotenv",
                "line": 16
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "getenv",
                "line": 89
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "getenv",
                "line": 25
              },
              {
                "function": "getenv",
                "line": 61
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "getenv",
                "line": 103
              },
              {
                "function": "abspath",
                "line": 13
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "OpenAIConfig",
                "line": 33
              },
              {
                "function": "OpenAIService",
                "line": 34
              },
              {
                "function": "run",
                "line": 49
              },
              {
                "function": "print",
                "line": 52
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "AnthropicService",
                "line": 66
              },
              {
                "function": "run",
                "line": 80
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "get",
                "line": 111
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "test_openai",
                "line": 49
              },
              {
                "function": "test_anthropic",
                "line": 80
              },
              {
                "function": "json",
                "line": 117
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "len",
                "line": 30
              },
              {
                "function": "complete",
                "line": 39
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "get_completion",
                "line": 70
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "len",
                "line": 119
              },
              {
                "function": "join",
                "line": 123
              }
            ]
          },
          "backend/test_websocket_debug.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 33,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/test_websocket_debug.py"
              }
            ],
            "classes": [
              {
                "name": "WebSocketTestClient",
                "line": 32,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/test_websocket_debug.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "websockets",
                "names": [
                  "websockets"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 18
              }
            ],
            "calls": [
              {
                "function": "basicConfig",
                "line": 21
              },
              {
                "function": "getLogger",
                "line": 30
              },
              {
                "function": "info",
                "line": 134
              },
              {
                "function": "info",
                "line": 135
              },
              {
                "function": "info",
                "line": 136
              },
              {
                "function": "WebSocketTestClient",
                "line": 138
              },
              {
                "function": "info",
                "line": 141
              },
              {
                "function": "info",
                "line": 148
              },
              {
                "function": "info",
                "line": 153
              },
              {
                "function": "info",
                "line": 161
              },
              {
                "function": "info",
                "line": 162
              },
              {
                "function": "info",
                "line": 163
              },
              {
                "function": "info",
                "line": 164
              },
              {
                "function": "info",
                "line": 172
              },
              {
                "function": "items",
                "line": 173
              },
              {
                "function": "any",
                "line": 177
              },
              {
                "function": "any",
                "line": 178
              },
              {
                "function": "any",
                "line": 179
              },
              {
                "function": "info",
                "line": 181
              },
              {
                "function": "info",
                "line": 182
              },
              {
                "function": "info",
                "line": 183
              },
              {
                "function": "info",
                "line": 184
              },
              {
                "function": "info",
                "line": 189
              },
              {
                "function": "info",
                "line": 190
              },
              {
                "function": "info",
                "line": 193
              },
              {
                "function": "info",
                "line": 202
              },
              {
                "function": "info",
                "line": 70
              },
              {
                "function": "debug",
                "line": 71
              },
              {
                "function": "time",
                "line": 77
              },
              {
                "function": "connect",
                "line": 142
              },
              {
                "function": "error",
                "line": 144
              },
              {
                "function": "send_task",
                "line": 149
              },
              {
                "function": "receive_messages",
                "line": 150
              },
              {
                "function": "send_task",
                "line": 154
              },
              {
                "function": "receive_messages",
                "line": 155
              },
              {
                "function": "close",
                "line": 158
              },
              {
                "function": "get",
                "line": 169
              },
              {
                "function": "info",
                "line": 174
              },
              {
                "function": "open",
                "line": 187
              },
              {
                "function": "dump",
                "line": 188
              },
              {
                "function": "run",
                "line": 196
              },
              {
                "function": "FileHandler",
                "line": 25
              },
              {
                "function": "StreamHandler",
                "line": 26
              },
              {
                "function": "info",
                "line": 42
              },
              {
                "function": "loads",
                "line": 47
              },
              {
                "function": "send",
                "line": 73
              },
              {
                "function": "info",
                "line": 130
              },
              {
                "function": "get",
                "line": 170
              },
              {
                "function": "run_test",
                "line": 196
              },
              {
                "function": "info",
                "line": 198
              },
              {
                "function": "error",
                "line": 200
              },
              {
                "function": "connect",
                "line": 43
              },
              {
                "function": "recv",
                "line": 46
              },
              {
                "function": "get",
                "line": 49
              },
              {
                "function": "get",
                "line": 50
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "error",
                "line": 54
              },
              {
                "function": "error",
                "line": 58
              },
              {
                "function": "dumps",
                "line": 73
              },
              {
                "function": "loads",
                "line": 87
              },
              {
                "function": "append",
                "line": 88
              },
              {
                "function": "get",
                "line": 90
              },
              {
                "function": "get",
                "line": 91
              },
              {
                "function": "error",
                "line": 124
              },
              {
                "function": "close",
                "line": 129
              },
              {
                "function": "len",
                "line": 164
              },
              {
                "function": "get",
                "line": 177
              },
              {
                "function": "get",
                "line": 178
              },
              {
                "function": "get",
                "line": 179
              },
              {
                "function": "strftime",
                "line": 193
              },
              {
                "function": "strftime",
                "line": 202
              },
              {
                "function": "dumps",
                "line": 71
              },
              {
                "function": "time",
                "line": 80
              },
              {
                "function": "wait_for",
                "line": 82
              },
              {
                "function": "info",
                "line": 95
              },
              {
                "function": "recv",
                "line": 83
              },
              {
                "function": "get",
                "line": 98
              },
              {
                "function": "info",
                "line": 99
              },
              {
                "function": "now",
                "line": 193
              },
              {
                "function": "now",
                "line": 202
              },
              {
                "function": "get",
                "line": 102
              },
              {
                "function": "get",
                "line": 103
              },
              {
                "function": "info",
                "line": 104
              },
              {
                "function": "info",
                "line": 105
              },
              {
                "function": "info",
                "line": 109
              },
              {
                "function": "get",
                "line": 113
              },
              {
                "function": "error",
                "line": 114
              },
              {
                "function": "debug",
                "line": 118
              }
            ]
          },
          "backend/test_quick_infra.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 67
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent",
                  "INDEXING_AVAILABLE",
                  "ANALYSIS_AVAILABLE",
                  "DIAGRAM_AVAILABLE"
                ],
                "line": 22
              }
            ],
            "calls": [
              {
                "function": "exists",
                "line": 11
              },
              {
                "function": "print",
                "line": 12
              },
              {
                "function": "exit",
                "line": 13
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "ArchitectAgent",
                "line": 38
              },
              {
                "function": "hasattr",
                "line": 41
              },
              {
                "function": "hasattr",
                "line": 42
              },
              {
                "function": "hasattr",
                "line": 43
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "TaskRequest",
                "line": 69
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 98
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 104
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "run",
                "line": 117
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "quick_test",
                "line": 107
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "main",
                "line": 117
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "isinstance",
                "line": 58
              },
              {
                "function": "wait_for",
                "line": 75
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "wait_for",
                "line": 53
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "execute_with_memory",
                "line": 76
              },
              {
                "function": "understand_system",
                "line": 54
              },
              {
                "function": "hasattr",
                "line": 81
              },
              {
                "function": "type",
                "line": 57
              },
              {
                "function": "list",
                "line": 59
              },
              {
                "function": "keys",
                "line": 59
              }
            ]
          },
          "backend/quick_test_key.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "openai",
                "names": [
                  "openai"
                ],
                "line": 28
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 31
              },
              {
                "type": "import",
                "module": "openai",
                "names": [
                  "openai"
                ],
                "line": 33
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 7
              },
              {
                "function": "print",
                "line": 8
              },
              {
                "function": "strip",
                "line": 10
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "OpenAI",
                "line": 36
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 13
              },
              {
                "function": "exit",
                "line": 14
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "len",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "create",
                "line": 40
              },
              {
                "function": "input",
                "line": 10
              },
              {
                "function": "startswith",
                "line": 16
              },
              {
                "function": "startswith",
                "line": 16
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "check_call",
                "line": 32
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 57
              },
              {
                "function": "print",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 81
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "len",
                "line": 20
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "print",
                "line": 92
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "lower",
                "line": 90
              },
              {
                "function": "lower",
                "line": 90
              },
              {
                "function": "type",
                "line": 87
              },
              {
                "function": "str",
                "line": 90
              },
              {
                "function": "str",
                "line": 90
              }
            ]
          },
          "backend/test_v4_features.py": {
            "functions": [
              {
                "name": "test_v4_features",
                "line": 14,
                "async": false,
                "calls": [
                  "split",
                  "print",
                  "append",
                  "open",
                  "join",
                  "read",
                  "all"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/test_v4_features.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent",
                  "INDEXING_AVAILABLE",
                  "ANALYSIS_AVAILABLE",
                  "DIAGRAM_AVAILABLE"
                ],
                "line": 102
              }
            ],
            "calls": [
              {
                "function": "exists",
                "line": 10
              },
              {
                "function": "print",
                "line": 11
              },
              {
                "function": "exit",
                "line": 12
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 38
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 118
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 133
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "print",
                "line": 136
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "print",
                "line": 150
              },
              {
                "function": "print",
                "line": 151
              },
              {
                "function": "print",
                "line": 152
              },
              {
                "function": "print",
                "line": 153
              },
              {
                "function": "print",
                "line": 154
              },
              {
                "function": "test_v4_features",
                "line": 156
              },
              {
                "function": "exit",
                "line": 157
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "open",
                "line": 25
              },
              {
                "function": "read",
                "line": 26
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "open",
                "line": 40
              },
              {
                "function": "read",
                "line": 41
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "open",
                "line": 55
              },
              {
                "function": "read",
                "line": 56
              },
              {
                "function": "all",
                "line": 57
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "open",
                "line": 76
              },
              {
                "function": "read",
                "line": 77
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "open",
                "line": 120
              },
              {
                "function": "read",
                "line": 121
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 123
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "append",
                "line": 87
              },
              {
                "function": "split",
                "line": 87
              },
              {
                "function": "join",
                "line": 93
              }
            ]
          },
          "backend/test_execution_time_fix.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "agents.agent_registry",
                "names": [
                  "AgentRegistry",
                  "TaskRequest"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "agents.specialized.orchestrator_agent_v2",
                "names": [
                  "OrchestratorAgentV2"
                ],
                "line": 27
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 36
              }
            ],
            "calls": [
              {
                "function": "exists",
                "line": 11
              },
              {
                "function": "print",
                "line": 12
              },
              {
                "function": "exit",
                "line": 13
              },
              {
                "function": "print",
                "line": 19
              },
              {
                "function": "print",
                "line": 20
              },
              {
                "function": "AgentRegistry",
                "line": 23
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "TaskRequest",
                "line": 65
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "hasattr",
                "line": 73
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "print",
                "line": 99
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 102
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "print",
                "line": 107
              },
              {
                "function": "run",
                "line": 108
              },
              {
                "function": "OrchestratorAgentV2",
                "line": 28
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "ArchitectAgent",
                "line": 37
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "TaskRequest",
                "line": 49
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "hasattr",
                "line": 57
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "dispatch_task",
                "line": 70
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "TaskRequest",
                "line": 80
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 87
              },
              {
                "function": "hasattr",
                "line": 88
              },
              {
                "function": "print",
                "line": 90
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "test_execution_time",
                "line": 108
              },
              {
                "function": "register_agent",
                "line": 29
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "register_agent",
                "line": 38
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "dispatch_task",
                "line": 54
              },
              {
                "function": "dispatch_task",
                "line": 85
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "list",
                "line": 43
              },
              {
                "function": "keys",
                "line": 43
              },
              {
                "function": "dirname",
                "line": 82
              },
              {
                "function": "dirname",
                "line": 82
              }
            ]
          },
          "backend/test_langgraph_system.py": {
            "functions": [
              {
                "name": "print_test_header",
                "line": 40,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "title"
                ],
                "decorators": [],
                "file": "backend/test_langgraph_system.py"
              },
              {
                "name": "print_success",
                "line": 47,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "message"
                ],
                "decorators": [],
                "file": "backend/test_langgraph_system.py"
              },
              {
                "name": "print_error",
                "line": 52,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "message"
                ],
                "decorators": [],
                "file": "backend/test_langgraph_system.py"
              },
              {
                "name": "print_info",
                "line": 57,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "message"
                ],
                "decorators": [],
                "file": "backend/test_langgraph_system.py"
              },
              {
                "name": "test_node",
                "line": 188,
                "async": false,
                "calls": [],
                "parameters": [
                  "state"
                ],
                "decorators": [],
                "file": "backend/test_langgraph_system.py"
              }
            ],
            "classes": [
              {
                "name": "Colors",
                "line": 29,
                "methods": [],
                "bases": [],
                "file": "backend/test_langgraph_system.py"
              },
              {
                "name": "TestAgent",
                "line": 67,
                "methods": [],
                "bases": [],
                "file": "backend/test_langgraph_system.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "langgraph_system",
                "names": [
                  "create_agent_workflow",
                  "ExtendedAgentState",
                  "create_initial_state"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "langgraph_system.extensions",
                "names": [
                  "ToolRegistry",
                  "tool",
                  "ApprovalManager",
                  "PersistentAgentMemory",
                  "DynamicWorkflowManager"
                ],
                "line": 20
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 13
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print_test_header",
                "line": 64
              },
              {
                "function": "ToolRegistry",
                "line": 77
              },
              {
                "function": "TestAgent",
                "line": 78
              },
              {
                "function": "auto_discover_tools",
                "line": 80
              },
              {
                "function": "print_info",
                "line": 81
              },
              {
                "function": "print_test_header",
                "line": 99
              },
              {
                "function": "ApprovalManager",
                "line": 101
              },
              {
                "function": "create_task",
                "line": 105
              },
              {
                "function": "print_info",
                "line": 119
              },
              {
                "function": "print_test_header",
                "line": 137
              },
              {
                "function": "PersistentAgentMemory",
                "line": 139
              },
              {
                "function": "store_memory",
                "line": 145
              },
              {
                "function": "print_info",
                "line": 153
              },
              {
                "function": "recall_similar",
                "line": 156
              },
              {
                "function": "print_info",
                "line": 157
              },
              {
                "function": "learn_pattern",
                "line": 160
              },
              {
                "function": "get_learned_solution",
                "line": 170
              },
              {
                "function": "get_memory_stats",
                "line": 175
              },
              {
                "function": "print_info",
                "line": 176
              },
              {
                "function": "print_test_header",
                "line": 183
              },
              {
                "function": "DynamicWorkflowManager",
                "line": 185
              },
              {
                "function": "add_node",
                "line": 192
              },
              {
                "function": "add_edge",
                "line": 203
              },
              {
                "function": "get_graph_info",
                "line": 208
              },
              {
                "function": "print_info",
                "line": 209
              },
              {
                "function": "visualize_graph",
                "line": 212
              },
              {
                "function": "print_info",
                "line": 213
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print_test_header",
                "line": 221
              },
              {
                "function": "create_agent_workflow",
                "line": 224
              },
              {
                "function": "print_info",
                "line": 229
              },
              {
                "function": "print_test_header",
                "line": 258
              },
              {
                "function": "create_initial_state",
                "line": 260
              },
              {
                "function": "print_info",
                "line": 268
              },
              {
                "function": "print_info",
                "line": 269
              },
              {
                "function": "print_info",
                "line": 270
              },
              {
                "function": "print_info",
                "line": 271
              },
              {
                "function": "print",
                "line": 283
              },
              {
                "function": "print",
                "line": 284
              },
              {
                "function": "print",
                "line": 285
              },
              {
                "function": "print",
                "line": 286
              },
              {
                "function": "print",
                "line": 287
              },
              {
                "function": "print_test_header",
                "line": 310
              },
              {
                "function": "sum",
                "line": 312
              },
              {
                "function": "print",
                "line": 321
              },
              {
                "function": "run",
                "line": 332
              },
              {
                "function": "exit",
                "line": 333
              },
              {
                "function": "abspath",
                "line": 13
              },
              {
                "function": "tool",
                "line": 68
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "len",
                "line": 94
              },
              {
                "function": "request_approval",
                "line": 113
              },
              {
                "function": "print_success",
                "line": 122
              },
              {
                "function": "print_error",
                "line": 125
              },
              {
                "function": "sleep",
                "line": 131
              },
              {
                "function": "auto_approve",
                "line": 132
              },
              {
                "function": "print_success",
                "line": 167
              },
              {
                "function": "print_success",
                "line": 172
              },
              {
                "function": "print_success",
                "line": 200
              },
              {
                "function": "print_success",
                "line": 205
              },
              {
                "function": "print_info",
                "line": 241
              },
              {
                "function": "print_info",
                "line": 242
              },
              {
                "function": "print_success",
                "line": 274
              },
              {
                "function": "print_error",
                "line": 277
              },
              {
                "function": "len",
                "line": 313
              },
              {
                "function": "print",
                "line": 324
              },
              {
                "function": "print",
                "line": 327
              },
              {
                "function": "main",
                "line": 332
              },
              {
                "function": "print_success",
                "line": 90
              },
              {
                "function": "hasattr",
                "line": 108
              },
              {
                "function": "then",
                "line": 106
              },
              {
                "function": "auto_approve_after_delay",
                "line": 109
              },
              {
                "function": "execute",
                "line": 233
              },
              {
                "function": "print_success",
                "line": 245
              },
              {
                "function": "print_error",
                "line": 248
              },
              {
                "function": "print_error",
                "line": 252
              },
              {
                "function": "append",
                "line": 304
              },
              {
                "function": "print",
                "line": 317
              },
              {
                "function": "print",
                "line": 319
              },
              {
                "function": "len",
                "line": 81
              },
              {
                "function": "call_tool",
                "line": 89
              },
              {
                "function": "print_error",
                "line": 92
              },
              {
                "function": "sleep",
                "line": 108
              },
              {
                "function": "len",
                "line": 157
              },
              {
                "function": "test_func",
                "line": 303
              },
              {
                "function": "print_error",
                "line": 306
              },
              {
                "function": "append",
                "line": 307
              },
              {
                "function": "len",
                "line": 321
              },
              {
                "function": "sleep",
                "line": 106
              },
              {
                "function": "auto_approve",
                "line": 107
              },
              {
                "function": "len",
                "line": 242
              },
              {
                "function": "get",
                "line": 242
              }
            ]
          },
          "backend/fixes/orchestrator_file_write_fix.py": {
            "functions": [
              {
                "name": "_extract_file_path",
                "line": 64,
                "async": false,
                "calls": [
                  "search",
                  "group"
                ],
                "parameters": [
                  "self",
                  "description"
                ],
                "decorators": [],
                "file": "backend/fixes/orchestrator_file_write_fix.py"
              },
              {
                "name": "_determine_file_path",
                "line": 84,
                "async": false,
                "calls": [
                  "lower",
                  "_extract_feature_name"
                ],
                "parameters": [
                  "self",
                  "description"
                ],
                "decorators": [],
                "file": "backend/fixes/orchestrator_file_write_fix.py"
              },
              {
                "name": "_extract_feature_name",
                "line": 123,
                "async": false,
                "calls": [
                  "replace",
                  "split",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "description"
                ],
                "decorators": [],
                "file": "backend/fixes/orchestrator_file_write_fix.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 68
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 127
              }
            ],
            "calls": [
              {
                "function": "lower",
                "line": 18
              },
              {
                "function": "any",
                "line": 19
              },
              {
                "function": "_extract_file_path",
                "line": 22
              },
              {
                "function": "lower",
                "line": 88
              },
              {
                "function": "_extract_feature_name",
                "line": 107
              },
              {
                "function": "split",
                "line": 133
              },
              {
                "function": "get_agent",
                "line": 26
              },
              {
                "function": "_execute_subtask_original",
                "line": 62
              },
              {
                "function": "search",
                "line": 78
              },
              {
                "function": "replace",
                "line": 138
              },
              {
                "function": "hasattr",
                "line": 27
              },
              {
                "function": "get_agent",
                "line": 51
              },
              {
                "function": "group",
                "line": 80
              },
              {
                "function": "lower",
                "line": 133
              },
              {
                "function": "info",
                "line": 33
              },
              {
                "function": "_determine_file_path",
                "line": 31
              },
              {
                "function": "implement_code_to_file",
                "line": 35
              },
              {
                "function": "get",
                "line": 40
              },
              {
                "function": "error",
                "line": 46
              },
              {
                "function": "hasattr",
                "line": 53
              },
              {
                "function": "len",
                "line": 134
              },
              {
                "function": "create_redis_config",
                "line": 54
              },
              {
                "function": "hasattr",
                "line": 57
              },
              {
                "function": "get",
                "line": 41
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 55
              },
              {
                "function": "create_docker_compose",
                "line": 58
              },
              {
                "function": "get",
                "line": 59
              }
            ]
          },
          "backend/fixes/task_request_enhancement.py": {
            "functions": [
              {
                "name": "enhance_subtask_for_file_writing",
                "line": 27,
                "async": false,
                "calls": [
                  "any",
                  "get",
                  "lower"
                ],
                "parameters": [
                  "subtask"
                ],
                "decorators": [],
                "file": "backend/fixes/task_request_enhancement.py"
              },
              {
                "name": "to_file_task",
                "line": 17,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/fixes/task_request_enhancement.py"
              }
            ],
            "classes": [
              {
                "name": "EnhancedTaskRequest",
                "line": 9,
                "methods": [
                  "to_file_task"
                ],
                "bases": [],
                "file": "backend/fixes/task_request_enhancement.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 6
              }
            ],
            "calls": [
              {
                "function": "field",
                "line": 14
              },
              {
                "function": "lower",
                "line": 31
              },
              {
                "function": "any",
                "line": 34
              },
              {
                "function": "_original_decompose",
                "line": 57
              },
              {
                "function": "enhance_subtask_for_file_writing",
                "line": 62
              },
              {
                "function": "append",
                "line": 63
              },
              {
                "function": "info",
                "line": 68
              },
              {
                "function": "append",
                "line": 22
              },
              {
                "function": "get",
                "line": 31
              },
              {
                "function": "lower",
                "line": 43
              },
              {
                "function": "get",
                "line": 66
              },
              {
                "function": "lower",
                "line": 45
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "len",
                "line": 68
              },
              {
                "function": "get",
                "line": 45
              }
            ]
          },
          "backend/core/memory_manager.py": {
            "functions": [
              {
                "name": "get_memory_manager",
                "line": 59,
                "async": false,
                "calls": [
                  "MemoryManager"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/core/memory_manager.py"
              },
              {
                "name": "__init__",
                "line": 31,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/memory_manager.py"
              },
              {
                "name": "store",
                "line": 39,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "memory_type",
                  "data"
                ],
                "decorators": [],
                "file": "backend/core/memory_manager.py"
              },
              {
                "name": "retrieve",
                "line": 43,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "memory_type",
                  "query"
                ],
                "decorators": [],
                "file": "backend/core/memory_manager.py"
              },
              {
                "name": "clear",
                "line": 47,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "memory_type"
                ],
                "decorators": [],
                "file": "backend/core/memory_manager.py"
              }
            ],
            "classes": [
              {
                "name": "MemoryType",
                "line": 13,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/core/memory_manager.py"
              },
              {
                "name": "MemoryManager",
                "line": 20,
                "methods": [
                  "__init__",
                  "store",
                  "retrieve",
                  "clear"
                ],
                "bases": [],
                "file": "backend/core/memory_manager.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "List",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 10
              },
              {
                "function": "debug",
                "line": 37
              },
              {
                "function": "append",
                "line": 41
              },
              {
                "function": "get",
                "line": 45
              },
              {
                "function": "MemoryManager",
                "line": 63
              }
            ]
          },
          "backend/core/pause_handler.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 31,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self",
                  "project_path"
                ],
                "decorators": [],
                "file": "backend/core/pause_handler.py"
              },
              {
                "name": "pause",
                "line": 42,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self",
                  "task_id",
                  "state",
                  "reason"
                ],
                "decorators": [],
                "file": "backend/core/pause_handler.py"
              },
              {
                "name": "resume",
                "line": 50,
                "async": false,
                "calls": [
                  "info",
                  "get",
                  "pop"
                ],
                "parameters": [
                  "self",
                  "task_id"
                ],
                "decorators": [],
                "file": "backend/core/pause_handler.py"
              },
              {
                "name": "is_paused",
                "line": 58,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "task_id"
                ],
                "decorators": [],
                "file": "backend/core/pause_handler.py"
              }
            ],
            "classes": [
              {
                "name": "PauseAction",
                "line": 13,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/core/pause_handler.py"
              },
              {
                "name": "PauseHandler",
                "line": 20,
                "methods": [
                  "__init__",
                  "pause",
                  "resume",
                  "is_paused"
                ],
                "bases": [],
                "file": "backend/core/pause_handler.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 10
              },
              {
                "function": "debug",
                "line": 40
              },
              {
                "function": "info",
                "line": 48
              },
              {
                "function": "pop",
                "line": 53
              },
              {
                "function": "info",
                "line": 54
              },
              {
                "function": "get",
                "line": 55
              }
            ]
          },
          "backend/core/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "memory_manager",
                "names": [
                  "MemoryManager",
                  "MemoryType",
                  "get_memory_manager"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "shared_context_manager",
                "names": [
                  "SharedContextManager",
                  "get_shared_context"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "conversation_context_manager",
                "names": [
                  "ConversationContextManager",
                  "get_conversation_context"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pause_handler",
                "names": [
                  "PauseHandler",
                  "PauseAction"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "git_checkpoint_manager",
                "names": [
                  "GitCheckpointManager"
                ],
                "line": 9
              }
            ],
            "calls": []
          },
          "backend/core/shared_context_manager.py": {
            "functions": [
              {
                "name": "get_shared_context",
                "line": 51,
                "async": false,
                "calls": [
                  "SharedContextManager"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "__init__",
                "line": 23,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "set",
                "line": 27,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "key",
                  "value"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "get",
                "line": 31,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "key",
                  "default"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "update",
                "line": 35,
                "async": false,
                "calls": [
                  "update"
                ],
                "parameters": [
                  "self",
                  "context"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "clear",
                "line": 39,
                "async": false,
                "calls": [
                  "clear"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              },
              {
                "name": "get_all",
                "line": 43,
                "async": false,
                "calls": [
                  "copy"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/shared_context_manager.py"
              }
            ],
            "classes": [
              {
                "name": "SharedContextManager",
                "line": 12,
                "methods": [
                  "__init__",
                  "set",
                  "get",
                  "update",
                  "clear",
                  "get_all"
                ],
                "bases": [],
                "file": "backend/core/shared_context_manager.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 25
              },
              {
                "function": "get",
                "line": 33
              },
              {
                "function": "update",
                "line": 37
              },
              {
                "function": "clear",
                "line": 41
              },
              {
                "function": "copy",
                "line": 45
              },
              {
                "function": "SharedContextManager",
                "line": 55
              }
            ]
          },
          "backend/core/conversation_context_manager.py": {
            "functions": [
              {
                "name": "get_conversation_context",
                "line": 50,
                "async": false,
                "calls": [
                  "ConversationContextManager"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/core/conversation_context_manager.py"
              },
              {
                "name": "__init__",
                "line": 23,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/conversation_context_manager.py"
              },
              {
                "name": "add_message",
                "line": 27,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "conversation_id",
                  "role",
                  "content"
                ],
                "decorators": [],
                "file": "backend/core/conversation_context_manager.py"
              },
              {
                "name": "get_conversation",
                "line": 37,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "conversation_id"
                ],
                "decorators": [],
                "file": "backend/core/conversation_context_manager.py"
              },
              {
                "name": "clear_conversation",
                "line": 41,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "conversation_id"
                ],
                "decorators": [],
                "file": "backend/core/conversation_context_manager.py"
              }
            ],
            "classes": [
              {
                "name": "ConversationContextManager",
                "line": 12,
                "methods": [
                  "__init__",
                  "add_message",
                  "get_conversation",
                  "clear_conversation"
                ],
                "bases": [],
                "file": "backend/core/conversation_context_manager.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "List",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 25
              },
              {
                "function": "append",
                "line": 32
              },
              {
                "function": "get",
                "line": 39
              },
              {
                "function": "ConversationContextManager",
                "line": 54
              }
            ]
          },
          "backend/core/git_checkpoint_manager.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 23,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self",
                  "project_path"
                ],
                "decorators": [],
                "file": "backend/core/git_checkpoint_manager.py"
              },
              {
                "name": "create_checkpoint",
                "line": 34,
                "async": false,
                "calls": [
                  "append",
                  "info",
                  "len"
                ],
                "parameters": [
                  "self",
                  "name",
                  "message"
                ],
                "decorators": [],
                "file": "backend/core/git_checkpoint_manager.py"
              },
              {
                "name": "list_checkpoints",
                "line": 45,
                "async": false,
                "calls": [
                  "copy"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/git_checkpoint_manager.py"
              },
              {
                "name": "rollback_to",
                "line": 49,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self",
                  "checkpoint_id"
                ],
                "decorators": [],
                "file": "backend/core/git_checkpoint_manager.py"
              }
            ],
            "classes": [
              {
                "name": "GitCheckpointManager",
                "line": 12,
                "methods": [
                  "__init__",
                  "create_checkpoint",
                  "list_checkpoints",
                  "rollback_to"
                ],
                "bases": [],
                "file": "backend/core/git_checkpoint_manager.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "List",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 32
              },
              {
                "function": "append",
                "line": 37
              },
              {
                "function": "info",
                "line": 42
              },
              {
                "function": "copy",
                "line": 47
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "len",
                "line": 36
              }
            ]
          },
          "backend/core/exceptions.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 13,
                "async": false,
                "calls": [
                  "__init__",
                  "super",
                  "append",
                  "get",
                  "join"
                ],
                "parameters": [
                  "self",
                  "dependencies"
                ],
                "decorators": [],
                "file": "backend/core/exceptions.py"
              },
              {
                "name": "__init__",
                "line": 40,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "component",
                  "file",
                  "line"
                ],
                "decorators": [],
                "file": "backend/core/exceptions.py"
              },
              {
                "name": "__init__",
                "line": 65,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "component",
                  "reason",
                  "solution",
                  "file",
                  "line"
                ],
                "decorators": [],
                "file": "backend/core/exceptions.py"
              }
            ],
            "classes": [
              {
                "name": "DependencyError",
                "line": 6,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "Exception"
                ],
                "file": "backend/core/exceptions.py"
              },
              {
                "name": "CacheNotAvailableError",
                "line": 33,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "Exception"
                ],
                "file": "backend/core/exceptions.py"
              },
              {
                "name": "SystemNotReadyError",
                "line": 58,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "Exception"
                ],
                "file": "backend/core/exceptions.py"
              }
            ],
            "imports": [],
            "calls": [
              {
                "function": "join",
                "line": 29
              },
              {
                "function": "__init__",
                "line": 30
              },
              {
                "function": "__init__",
                "line": 55
              },
              {
                "function": "__init__",
                "line": 77
              },
              {
                "function": "get",
                "line": 19
              },
              {
                "function": "get",
                "line": 20
              },
              {
                "function": "get",
                "line": 21
              },
              {
                "function": "append",
                "line": 23
              },
              {
                "function": "super",
                "line": 30
              },
              {
                "function": "super",
                "line": 55
              },
              {
                "function": "super",
                "line": 77
              }
            ]
          },
          "backend/core/analysis/semgrep_analyzer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/semgrep_analyzer.py"
              }
            ],
            "classes": [
              {
                "name": "SemgrepAnalyzer",
                "line": 12,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/core/analysis/semgrep_analyzer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Callable",
                  "Optional"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 19
              },
              {
                "function": "progress_callback",
                "line": 41
              }
            ]
          },
          "backend/core/analysis/vulture_analyzer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/vulture_analyzer.py"
              }
            ],
            "classes": [
              {
                "name": "VultureAnalyzer",
                "line": 12,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/core/analysis/vulture_analyzer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Callable",
                  "Optional"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 19
              },
              {
                "function": "progress_callback",
                "line": 40
              }
            ]
          },
          "backend/core/analysis/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [],
            "calls": []
          },
          "backend/core/analysis/radon_metrics.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 18,
                "async": false,
                "calls": [
                  "debug"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/radon_metrics.py"
              }
            ],
            "classes": [
              {
                "name": "RadonMetrics",
                "line": 12,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/core/analysis/radon_metrics.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Callable",
                  "Optional"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 9
              },
              {
                "function": "debug",
                "line": 19
              },
              {
                "function": "progress_callback",
                "line": 40
              }
            ]
          },
          "backend/core/analysis/layer_analyzer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 56,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_classify_files_into_layers",
                "line": 139,
                "async": false,
                "calls": [
                  "_detect_file_layer",
                  "keys"
                ],
                "parameters": [
                  "self",
                  "ast_data"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_detect_file_layer",
                "line": 154,
                "async": false,
                "calls": [
                  "defaultdict",
                  "max",
                  "lower",
                  "basename",
                  "items"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_build_layer_structure",
                "line": 193,
                "async": false,
                "calls": [
                  "defaultdict",
                  "sort",
                  "append",
                  "get",
                  "items",
                  "len"
                ],
                "parameters": [
                  "self",
                  "file_layers"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_detect_layer_violations",
                "line": 221,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "_check_layer_violation",
                  "items",
                  "_resolve_import_to_file"
                ],
                "parameters": [
                  "self",
                  "file_layers",
                  "import_graph"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_resolve_import_to_file",
                "line": 254,
                "async": false,
                "calls": [
                  "replace",
                  "keys"
                ],
                "parameters": [
                  "self",
                  "import_name",
                  "file_layers"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_check_layer_violation",
                "line": 274,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "from_file",
                  "from_layer",
                  "to_file",
                  "to_layer"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_calculate_quality_score",
                "line": 331,
                "async": false,
                "calls": [
                  "defaultdict",
                  "max",
                  "min",
                  "len",
                  "round",
                  "values"
                ],
                "parameters": [
                  "self",
                  "file_layers",
                  "violations",
                  "ast_data"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_calculate_metrics",
                "line": 373,
                "async": false,
                "calls": [
                  "values",
                  "dict",
                  "defaultdict",
                  "len"
                ],
                "parameters": [
                  "self",
                  "file_layers",
                  "violations",
                  "ast_data"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              },
              {
                "name": "_empty_layer_analysis",
                "line": 405,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              }
            ],
            "classes": [
              {
                "name": "LayerAnalyzer",
                "line": 15,
                "methods": [
                  "__init__",
                  "_classify_files_into_layers",
                  "_detect_file_layer",
                  "_build_layer_structure",
                  "_detect_layer_violations",
                  "_resolve_import_to_file",
                  "_check_layer_violation",
                  "_calculate_quality_score",
                  "_calculate_metrics",
                  "_empty_layer_analysis"
                ],
                "bases": [],
                "file": "backend/core/analysis/layer_analyzer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Set",
                  "Tuple"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "collections",
                "names": [
                  "defaultdict"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "info",
                "line": 99
              },
              {
                "function": "get",
                "line": 101
              },
              {
                "function": "get",
                "line": 102
              },
              {
                "function": "_classify_files_into_layers",
                "line": 109
              },
              {
                "function": "info",
                "line": 110
              },
              {
                "function": "_build_layer_structure",
                "line": 113
              },
              {
                "function": "_detect_layer_violations",
                "line": 117
              },
              {
                "function": "info",
                "line": 119
              },
              {
                "function": "_calculate_quality_score",
                "line": 122
              },
              {
                "function": "_calculate_metrics",
                "line": 126
              },
              {
                "function": "info",
                "line": 136
              },
              {
                "function": "keys",
                "line": 148
              },
              {
                "function": "lower",
                "line": 163
              },
              {
                "function": "defaultdict",
                "line": 166
              },
              {
                "function": "items",
                "line": 168
              },
              {
                "function": "defaultdict",
                "line": 198
              },
              {
                "function": "items",
                "line": 199
              },
              {
                "function": "items",
                "line": 204
              },
              {
                "function": "sort",
                "line": 217
              },
              {
                "function": "items",
                "line": 236
              },
              {
                "function": "keys",
                "line": 265
              },
              {
                "function": "get",
                "line": 293
              },
              {
                "function": "get",
                "line": 294
              },
              {
                "function": "get",
                "line": 296
              },
              {
                "function": "get",
                "line": 297
              },
              {
                "function": "get",
                "line": 298
              },
              {
                "function": "len",
                "line": 345
              },
              {
                "function": "len",
                "line": 350
              },
              {
                "function": "len",
                "line": 354
              },
              {
                "function": "len",
                "line": 355
              },
              {
                "function": "min",
                "line": 358
              },
              {
                "function": "defaultdict",
                "line": 361
              },
              {
                "function": "values",
                "line": 362
              },
              {
                "function": "max",
                "line": 369
              },
              {
                "function": "round",
                "line": 371
              },
              {
                "function": "len",
                "line": 382
              },
              {
                "function": "len",
                "line": 383
              },
              {
                "function": "len",
                "line": 387
              },
              {
                "function": "len",
                "line": 388
              },
              {
                "function": "defaultdict",
                "line": 391
              },
              {
                "function": "values",
                "line": 392
              },
              {
                "function": "warning",
                "line": 105
              },
              {
                "function": "_empty_layer_analysis",
                "line": 106
              },
              {
                "function": "_detect_file_layer",
                "line": 149
              },
              {
                "function": "max",
                "line": 187
              },
              {
                "function": "append",
                "line": 200
              },
              {
                "function": "get",
                "line": 205
              },
              {
                "function": "append",
                "line": 207
              },
              {
                "function": "get",
                "line": 237
              },
              {
                "function": "replace",
                "line": 267
              },
              {
                "function": "len",
                "line": 365
              },
              {
                "function": "len",
                "line": 365
              },
              {
                "function": "min",
                "line": 369
              },
              {
                "function": "len",
                "line": 399
              },
              {
                "function": "dict",
                "line": 402
              },
              {
                "function": "get",
                "line": 101
              },
              {
                "function": "basename",
                "line": 181
              },
              {
                "function": "_resolve_import_to_file",
                "line": 241
              },
              {
                "function": "get",
                "line": 245
              },
              {
                "function": "_check_layer_violation",
                "line": 248
              },
              {
                "function": "len",
                "line": 110
              },
              {
                "function": "len",
                "line": 119
              },
              {
                "function": "len",
                "line": 211
              },
              {
                "function": "append",
                "line": 250
              },
              {
                "function": "replace",
                "line": 267
              }
            ]
          },
          "backend/core/analysis/call_graph_analyzer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 27,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_build_function_registry",
                "line": 120,
                "async": false,
                "calls": [
                  "get",
                  "items"
                ],
                "parameters": [
                  "self",
                  "ast_data"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_build_call_relationships",
                "line": 144,
                "async": false,
                "calls": [
                  "defaultdict",
                  "append",
                  "get",
                  "dict",
                  "_resolve_function_id",
                  "items"
                ],
                "parameters": [
                  "self",
                  "ast_data",
                  "function_registry"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_resolve_function_id",
                "line": 179,
                "async": false,
                "calls": [
                  "endswith"
                ],
                "parameters": [
                  "self",
                  "func_name",
                  "current_file",
                  "function_registry"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_detect_entry_points",
                "line": 206,
                "async": false,
                "calls": [
                  "append",
                  "any",
                  "items",
                  "len"
                ],
                "parameters": [
                  "self",
                  "function_registry",
                  "reverse_call_graph"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_find_unused_functions",
                "line": 240,
                "async": false,
                "calls": [
                  "startswith",
                  "append",
                  "items",
                  "len",
                  "endswith"
                ],
                "parameters": [
                  "self",
                  "function_registry",
                  "reverse_call_graph",
                  "entry_points"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_detect_hot_paths",
                "line": 275,
                "async": false,
                "calls": [
                  "sort",
                  "_bfs_paths",
                  "append",
                  "len"
                ],
                "parameters": [
                  "self",
                  "call_graph",
                  "entry_points"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_bfs_paths",
                "line": 304,
                "async": false,
                "calls": [
                  "add",
                  "append",
                  "get",
                  "deque",
                  "set",
                  "len",
                  "popleft"
                ],
                "parameters": [
                  "self",
                  "start",
                  "call_graph",
                  "max_depth"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_build_nodes",
                "line": 336,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "items",
                  "len"
                ],
                "parameters": [
                  "self",
                  "function_registry",
                  "call_graph",
                  "reverse_call_graph"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_build_edges",
                "line": 367,
                "async": false,
                "calls": [
                  "append",
                  "split",
                  "get",
                  "items"
                ],
                "parameters": [
                  "self",
                  "call_graph",
                  "ast_data"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_analyze_clusters",
                "line": 399,
                "async": false,
                "calls": [
                  "split",
                  "defaultdict",
                  "sort",
                  "append",
                  "round",
                  "get",
                  "items",
                  "len",
                  "enumerate"
                ],
                "parameters": [
                  "self",
                  "call_graph",
                  "function_registry"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_calculate_metrics",
                "line": 446,
                "async": false,
                "calls": [
                  "_calculate_call_depth",
                  "round",
                  "max",
                  "len"
                ],
                "parameters": [
                  "self",
                  "nodes",
                  "edges",
                  "call_graph"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_calculate_call_depth",
                "line": 477,
                "async": false,
                "calls": [
                  "add",
                  "_calculate_call_depth",
                  "get",
                  "max",
                  "set",
                  "copy"
                ],
                "parameters": [
                  "self",
                  "func_id",
                  "call_graph",
                  "visited"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              },
              {
                "name": "_empty_call_graph",
                "line": 505,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              }
            ],
            "classes": [
              {
                "name": "CallGraphAnalyzer",
                "line": 14,
                "methods": [
                  "__init__",
                  "_build_function_registry",
                  "_build_call_relationships",
                  "_resolve_function_id",
                  "_detect_entry_points",
                  "_find_unused_functions",
                  "_detect_hot_paths",
                  "_bfs_paths",
                  "_build_nodes",
                  "_build_edges",
                  "_analyze_clusters",
                  "_calculate_metrics",
                  "_calculate_call_depth",
                  "_empty_call_graph"
                ],
                "bases": [],
                "file": "backend/core/analysis/call_graph_analyzer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Set",
                  "Tuple"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "collections",
                "names": [
                  "defaultdict",
                  "deque"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "info",
                "line": 65
              },
              {
                "function": "get",
                "line": 67
              },
              {
                "function": "_build_function_registry",
                "line": 73
              },
              {
                "function": "info",
                "line": 74
              },
              {
                "function": "_build_call_relationships",
                "line": 77
              },
              {
                "function": "_detect_entry_points",
                "line": 82
              },
              {
                "function": "info",
                "line": 84
              },
              {
                "function": "_find_unused_functions",
                "line": 87
              },
              {
                "function": "info",
                "line": 89
              },
              {
                "function": "_detect_hot_paths",
                "line": 92
              },
              {
                "function": "_build_nodes",
                "line": 95
              },
              {
                "function": "_build_edges",
                "line": 98
              },
              {
                "function": "_analyze_clusters",
                "line": 101
              },
              {
                "function": "_calculate_metrics",
                "line": 104
              },
              {
                "function": "info",
                "line": 117
              },
              {
                "function": "items",
                "line": 129
              },
              {
                "function": "defaultdict",
                "line": 157
              },
              {
                "function": "defaultdict",
                "line": 158
              },
              {
                "function": "items",
                "line": 160
              },
              {
                "function": "items",
                "line": 223
              },
              {
                "function": "items",
                "line": 258
              },
              {
                "function": "sort",
                "line": 300
              },
              {
                "function": "deque",
                "line": 314
              },
              {
                "function": "set",
                "line": 315
              },
              {
                "function": "items",
                "line": 347
              },
              {
                "function": "items",
                "line": 377
              },
              {
                "function": "defaultdict",
                "line": 408
              },
              {
                "function": "enumerate",
                "line": 415
              },
              {
                "function": "sort",
                "line": 442
              },
              {
                "function": "len",
                "line": 455
              },
              {
                "function": "len",
                "line": 456
              },
              {
                "function": "add",
                "line": 492
              },
              {
                "function": "get",
                "line": 494
              },
              {
                "function": "max",
                "line": 498
              },
              {
                "function": "warning",
                "line": 69
              },
              {
                "function": "_empty_call_graph",
                "line": 70
              },
              {
                "function": "get",
                "line": 130
              },
              {
                "function": "get",
                "line": 165
              },
              {
                "function": "dict",
                "line": 177
              },
              {
                "function": "dict",
                "line": 177
              },
              {
                "function": "endswith",
                "line": 200
              },
              {
                "function": "_bfs_paths",
                "line": 289
              },
              {
                "function": "popleft",
                "line": 318
              },
              {
                "function": "add",
                "line": 325
              },
              {
                "function": "append",
                "line": 327
              },
              {
                "function": "get",
                "line": 330
              },
              {
                "function": "len",
                "line": 348
              },
              {
                "function": "len",
                "line": 349
              },
              {
                "function": "append",
                "line": 354
              },
              {
                "function": "append",
                "line": 412
              },
              {
                "function": "items",
                "line": 415
              },
              {
                "function": "_calculate_call_depth",
                "line": 462
              },
              {
                "function": "max",
                "line": 463
              },
              {
                "function": "round",
                "line": 472
              },
              {
                "function": "len",
                "line": 473
              },
              {
                "function": "len",
                "line": 474
              },
              {
                "function": "set",
                "line": 487
              },
              {
                "function": "get",
                "line": 67
              },
              {
                "function": "_resolve_function_id",
                "line": 169
              },
              {
                "function": "append",
                "line": 228
              },
              {
                "function": "any",
                "line": 235
              },
              {
                "function": "append",
                "line": 271
              },
              {
                "function": "len",
                "line": 320
              },
              {
                "function": "get",
                "line": 348
              },
              {
                "function": "get",
                "line": 349
              },
              {
                "function": "get",
                "line": 352
              },
              {
                "function": "get",
                "line": 384
              },
              {
                "function": "get",
                "line": 385
              },
              {
                "function": "append",
                "line": 390
              },
              {
                "function": "split",
                "line": 411
              },
              {
                "function": "len",
                "line": 416
              },
              {
                "function": "append",
                "line": 431
              },
              {
                "function": "_calculate_call_depth",
                "line": 499
              },
              {
                "function": "len",
                "line": 74
              },
              {
                "function": "len",
                "line": 84
              },
              {
                "function": "len",
                "line": 89
              },
              {
                "function": "len",
                "line": 117
              },
              {
                "function": "len",
                "line": 117
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "get",
                "line": 137
              },
              {
                "function": "get",
                "line": 138
              },
              {
                "function": "get",
                "line": 139
              },
              {
                "function": "append",
                "line": 174
              },
              {
                "function": "append",
                "line": 175
              },
              {
                "function": "len",
                "line": 232
              },
              {
                "function": "append",
                "line": 236
              },
              {
                "function": "startswith",
                "line": 262
              },
              {
                "function": "endswith",
                "line": 262
              },
              {
                "function": "len",
                "line": 270
              },
              {
                "function": "len",
                "line": 292
              },
              {
                "function": "append",
                "line": 293
              },
              {
                "function": "append",
                "line": 332
              },
              {
                "function": "get",
                "line": 362
              },
              {
                "function": "split",
                "line": 380
              },
              {
                "function": "split",
                "line": 381
              },
              {
                "function": "get",
                "line": 422
              },
              {
                "function": "copy",
                "line": 499
              },
              {
                "function": "get",
                "line": 387
              },
              {
                "function": "len",
                "line": 435
              },
              {
                "function": "round",
                "line": 436
              },
              {
                "function": "len",
                "line": 296
              }
            ]
          },
          "backend/core/indexing/tree_sitter_indexer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 20,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_extract_function_calls",
                "line": 94,
                "async": false,
                "calls": [
                  "list",
                  "walk",
                  "isinstance",
                  "append",
                  "_get_call_name",
                  "set"
                ],
                "parameters": [
                  "self",
                  "func_node"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_get_call_name",
                "line": 104,
                "async": false,
                "calls": [
                  "isinstance"
                ],
                "parameters": [
                  "self",
                  "call_node"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_get_name",
                "line": 113,
                "async": false,
                "calls": [
                  "isinstance",
                  "str",
                  "_get_attribute_path"
                ],
                "parameters": [
                  "self",
                  "node"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_get_attribute_path",
                "line": 121,
                "async": false,
                "calls": [
                  "isinstance",
                  "append",
                  "join",
                  "reversed"
                ],
                "parameters": [
                  "self",
                  "node"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_get_decorator_name",
                "line": 132,
                "async": false,
                "calls": [
                  "isinstance",
                  "str",
                  "_get_call_name"
                ],
                "parameters": [
                  "self",
                  "decorator"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              },
              {
                "name": "_extract_import",
                "line": 140,
                "async": false,
                "calls": [
                  "isinstance"
                ],
                "parameters": [
                  "self",
                  "node"
                ],
                "decorators": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              }
            ],
            "classes": [
              {
                "name": "TreeSitterIndexer",
                "line": 14,
                "methods": [
                  "__init__",
                  "_extract_function_calls",
                  "_get_call_name",
                  "_get_name",
                  "_get_attribute_path",
                  "_get_decorator_name",
                  "_extract_import"
                ],
                "bases": [],
                "file": "backend/core/indexing/tree_sitter_indexer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "ast",
                "names": [
                  "ast"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "info",
                "line": 22
              },
              {
                "function": "walk",
                "line": 97
              },
              {
                "function": "list",
                "line": 102
              },
              {
                "function": "isinstance",
                "line": 107
              },
              {
                "function": "isinstance",
                "line": 115
              },
              {
                "function": "str",
                "line": 119
              },
              {
                "function": "isinstance",
                "line": 125
              },
              {
                "function": "isinstance",
                "line": 128
              },
              {
                "function": "join",
                "line": 130
              },
              {
                "function": "isinstance",
                "line": 134
              },
              {
                "function": "str",
                "line": 138
              },
              {
                "function": "isinstance",
                "line": 142
              },
              {
                "function": "endswith",
                "line": 36
              },
              {
                "function": "parse",
                "line": 43
              },
              {
                "function": "walk",
                "line": 51
              },
              {
                "function": "isinstance",
                "line": 98
              },
              {
                "function": "set",
                "line": 102
              },
              {
                "function": "isinstance",
                "line": 109
              },
              {
                "function": "isinstance",
                "line": 117
              },
              {
                "function": "append",
                "line": 126
              },
              {
                "function": "append",
                "line": 129
              },
              {
                "function": "reversed",
                "line": 130
              },
              {
                "function": "isinstance",
                "line": 136
              },
              {
                "function": "isinstance",
                "line": 149
              },
              {
                "function": "open",
                "line": 40
              },
              {
                "function": "read",
                "line": 41
              },
              {
                "function": "isinstance",
                "line": 52
              },
              {
                "function": "error",
                "line": 91
              },
              {
                "function": "_get_call_name",
                "line": 99
              },
              {
                "function": "_get_attribute_path",
                "line": 118
              },
              {
                "function": "_get_call_name",
                "line": 137
              },
              {
                "function": "_extract_function_calls",
                "line": 53
              },
              {
                "function": "append",
                "line": 54
              },
              {
                "function": "isinstance",
                "line": 63
              },
              {
                "function": "append",
                "line": 101
              },
              {
                "function": "append",
                "line": 65
              },
              {
                "function": "isinstance",
                "line": 72
              },
              {
                "function": "isinstance",
                "line": 57
              },
              {
                "function": "append",
                "line": 73
              },
              {
                "function": "isinstance",
                "line": 75
              },
              {
                "function": "_get_decorator_name",
                "line": 60
              },
              {
                "function": "walk",
                "line": 64
              },
              {
                "function": "isinstance",
                "line": 64
              },
              {
                "function": "_extract_import",
                "line": 73
              },
              {
                "function": "_get_call_name",
                "line": 76
              },
              {
                "function": "_get_name",
                "line": 69
              },
              {
                "function": "append",
                "line": 78
              }
            ]
          },
          "backend/core/indexing/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [],
            "calls": []
          },
          "backend/core/indexing/code_indexer.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 22,
                "async": false,
                "calls": [
                  "TreeSitterIndexer"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/core/indexing/code_indexer.py"
              },
              {
                "name": "_find_python_files",
                "line": 108,
                "async": false,
                "calls": [
                  "endswith",
                  "append",
                  "walk",
                  "join"
                ],
                "parameters": [
                  "self",
                  "root_path"
                ],
                "decorators": [],
                "file": "backend/core/indexing/code_indexer.py"
              },
              {
                "name": "_count_total_lines",
                "line": 123,
                "async": false,
                "calls": [
                  "readlines",
                  "open",
                  "len"
                ],
                "parameters": [
                  "self",
                  "files"
                ],
                "decorators": [],
                "file": "backend/core/indexing/code_indexer.py"
              }
            ],
            "classes": [
              {
                "name": "CodeIndexer",
                "line": 16,
                "methods": [
                  "__init__",
                  "_find_python_files",
                  "_count_total_lines"
                ],
                "bases": [],
                "file": "backend/core/indexing/code_indexer.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Callable",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "tree_sitter_indexer",
                "names": [
                  "TreeSitterIndexer"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "TreeSitterIndexer",
                "line": 23
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "_find_python_files",
                "line": 56
              },
              {
                "function": "len",
                "line": 57
              },
              {
                "function": "info",
                "line": 59
              },
              {
                "function": "enumerate",
                "line": 67
              },
              {
                "function": "info",
                "line": 98
              },
              {
                "function": "walk",
                "line": 112
              },
              {
                "function": "relpath",
                "line": 72
              },
              {
                "function": "get",
                "line": 81
              },
              {
                "function": "get",
                "line": 85
              },
              {
                "function": "len",
                "line": 92
              },
              {
                "function": "len",
                "line": 93
              },
              {
                "function": "sum",
                "line": 94
              },
              {
                "function": "_count_total_lines",
                "line": 95
              },
              {
                "function": "progress_callback",
                "line": 53
              },
              {
                "function": "index_file",
                "line": 71
              },
              {
                "function": "get",
                "line": 77
              },
              {
                "function": "append",
                "line": 83
              },
              {
                "function": "append",
                "line": 87
              },
              {
                "function": "endswith",
                "line": 117
              },
              {
                "function": "progress_callback",
                "line": 69
              },
              {
                "function": "get",
                "line": 77
              },
              {
                "function": "len",
                "line": 94
              },
              {
                "function": "join",
                "line": 118
              },
              {
                "function": "append",
                "line": 119
              },
              {
                "function": "open",
                "line": 128
              },
              {
                "function": "len",
                "line": 129
              },
              {
                "function": "values",
                "line": 94
              },
              {
                "function": "readlines",
                "line": 129
              },
              {
                "function": "basename",
                "line": 69
              }
            ]
          },
          "backend/config/capabilities_loader.py": {
            "functions": [
              {
                "name": "get_capabilities_loader",
                "line": 187,
                "async": false,
                "calls": [
                  "CapabilitiesLoader"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "apply_capabilities_to_agent",
                "line": 194,
                "async": false,
                "calls": [
                  "apply_to_config",
                  "get_capabilities_loader"
                ],
                "parameters": [
                  "agent_config"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "__init__",
                "line": 17,
                "async": false,
                "calls": [
                  "_load_capabilities",
                  "dirname",
                  "join"
                ],
                "parameters": [
                  "self",
                  "config_path"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "_load_capabilities",
                "line": 32,
                "async": false,
                "calls": [
                  "info",
                  "safe_load",
                  "error",
                  "get",
                  "open",
                  "warning",
                  "len",
                  "exists"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "get_agent_capabilities",
                "line": 49,
                "async": false,
                "calls": [
                  "replace",
                  "info",
                  "get"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "apply_to_config",
                "line": 83,
                "async": false,
                "calls": [
                  "get_agent_capabilities",
                  "isinstance",
                  "get",
                  "debug",
                  "getattr"
                ],
                "parameters": [
                  "self",
                  "agent_config"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "can_agent_write",
                "line": 113,
                "async": false,
                "calls": [
                  "startswith",
                  "split",
                  "get_agent_capabilities",
                  "get",
                  "fnmatch",
                  "rstrip",
                  "len",
                  "abspath",
                  "lstrip"
                ],
                "parameters": [
                  "self",
                  "agent_name",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              },
              {
                "name": "get_all_capabilities",
                "line": 180,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/config/capabilities_loader.py"
              }
            ],
            "classes": [
              {
                "name": "CapabilitiesLoader",
                "line": 14,
                "methods": [
                  "__init__",
                  "_load_capabilities",
                  "get_agent_capabilities",
                  "apply_to_config",
                  "can_agent_write",
                  "get_all_capabilities"
                ],
                "bases": [],
                "file": "backend/config/capabilities_loader.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "yaml",
                "names": [
                  "yaml"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 146
              },
              {
                "type": "import",
                "module": "fnmatch",
                "names": [
                  "fnmatch"
                ],
                "line": 147
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "get_capabilities_loader",
                "line": 204
              },
              {
                "function": "apply_to_config",
                "line": 205
              },
              {
                "function": "_load_capabilities",
                "line": 30
              },
              {
                "function": "get",
                "line": 65
              },
              {
                "function": "replace",
                "line": 72
              },
              {
                "function": "info",
                "line": 77
              },
              {
                "function": "getattr",
                "line": 93
              },
              {
                "function": "get_agent_capabilities",
                "line": 97
              },
              {
                "function": "getattr",
                "line": 101
              },
              {
                "function": "debug",
                "line": 110
              },
              {
                "function": "get_agent_capabilities",
                "line": 124
              },
              {
                "function": "get",
                "line": 135
              },
              {
                "function": "abspath",
                "line": 140
              },
              {
                "function": "get",
                "line": 182
              },
              {
                "function": "CapabilitiesLoader",
                "line": 191
              },
              {
                "function": "join",
                "line": 25
              },
              {
                "function": "info",
                "line": 42
              },
              {
                "function": "get",
                "line": 69
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "isinstance",
                "line": 107
              },
              {
                "function": "get",
                "line": 127
              },
              {
                "function": "dirname",
                "line": 26
              },
              {
                "function": "exists",
                "line": 35
              },
              {
                "function": "warning",
                "line": 36
              },
              {
                "function": "open",
                "line": 39
              },
              {
                "function": "safe_load",
                "line": 40
              },
              {
                "function": "error",
                "line": 46
              },
              {
                "function": "startswith",
                "line": 151
              },
              {
                "function": "abspath",
                "line": 174
              },
              {
                "function": "startswith",
                "line": 175
              },
              {
                "function": "get",
                "line": 110
              },
              {
                "function": "split",
                "line": 158
              },
              {
                "function": "fnmatch",
                "line": 170
              },
              {
                "function": "len",
                "line": 42
              },
              {
                "function": "len",
                "line": 159
              },
              {
                "function": "rstrip",
                "line": 160
              },
              {
                "function": "lstrip",
                "line": 161
              },
              {
                "function": "startswith",
                "line": 164
              },
              {
                "function": "get",
                "line": 42
              },
              {
                "function": "lstrip",
                "line": 165
              },
              {
                "function": "fnmatch",
                "line": 166
              },
              {
                "function": "lstrip",
                "line": 166
              },
              {
                "function": "len",
                "line": 165
              }
            ]
          },
          "backend/config/settings.py": {
            "functions": [
              {
                "name": "get_language_directive",
                "line": 124,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "cls"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/config/settings.py"
              },
              {
                "name": "get_timeout",
                "line": 129,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "cls",
                  "task_type"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/config/settings.py"
              },
              {
                "name": "update_from_vscode",
                "line": 139,
                "async": false,
                "calls": [
                  "_auto_detect_provider"
                ],
                "parameters": [
                  "cls",
                  "vscode_settings"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/config/settings.py"
              },
              {
                "name": "_auto_detect_provider",
                "line": 229,
                "async": false,
                "calls": [
                  "startswith",
                  "lower"
                ],
                "parameters": [
                  "cls",
                  "model"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/config/settings.py"
              },
              {
                "name": "to_dict",
                "line": 251,
                "async": false,
                "calls": [],
                "parameters": [
                  "cls"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/config/settings.py"
              }
            ],
            "classes": [
              {
                "name": "Settings",
                "line": 9,
                "methods": [
                  "get_language_directive",
                  "get_timeout",
                  "update_from_vscode",
                  "_auto_detect_provider",
                  "to_dict"
                ],
                "bases": [],
                "file": "backend/config/settings.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 7
              }
            ],
            "calls": [
              {
                "function": "Settings",
                "line": 320
              },
              {
                "function": "getenv",
                "line": 14
              },
              {
                "function": "getenv",
                "line": 55
              },
              {
                "function": "lower",
                "line": 54
              },
              {
                "function": "get",
                "line": 126
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "lower",
                "line": 239
              },
              {
                "function": "startswith",
                "line": 240
              },
              {
                "function": "_auto_detect_provider",
                "line": 176
              },
              {
                "function": "startswith",
                "line": 242
              },
              {
                "function": "getenv",
                "line": 54
              },
              {
                "function": "startswith",
                "line": 244
              }
            ]
          },
          "backend/tests/test_cache_manager.py": {
            "functions": [],
            "classes": [
              {
                "name": "TestAgent",
                "line": 43,
                "methods": [],
                "bases": [],
                "file": "backend/tests/test_cache_manager.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "pytest",
                "names": [
                  "pytest"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "unittest.mock",
                "names": [
                  "Mock",
                  "patch",
                  "AsyncMock"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "backend.core.cache_manager",
                "names": [
                  "CacheManager",
                  "cache_agent_response"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "CacheManager",
                "line": 16
              },
              {
                "function": "CacheManager",
                "line": 26
              },
              {
                "function": "AsyncMock",
                "line": 27
              },
              {
                "function": "assert_called_once",
                "line": 32
              },
              {
                "function": "dumps",
                "line": 35
              },
              {
                "function": "TestAgent",
                "line": 51
              },
              {
                "function": "run",
                "line": 70
              },
              {
                "function": "patch",
                "line": 18
              },
              {
                "function": "AsyncMock",
                "line": 19
              },
              {
                "function": "set",
                "line": 31
              },
              {
                "function": "get",
                "line": 36
              },
              {
                "function": "cache_agent_response",
                "line": 46
              },
              {
                "function": "patch",
                "line": 54
              },
              {
                "function": "AsyncMock",
                "line": 55
              },
              {
                "function": "test_cache_manager_connect",
                "line": 70
              },
              {
                "function": "connect",
                "line": 20
              },
              {
                "function": "expensive_operation",
                "line": 60
              },
              {
                "function": "expensive_operation",
                "line": 65
              }
            ]
          },
          "backend/tests/test_server_auto.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 5
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 48
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "print",
                "line": 96
              },
              {
                "function": "append",
                "line": 101
              },
              {
                "function": "append",
                "line": 104
              },
              {
                "function": "append",
                "line": 107
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 111
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "all",
                "line": 116
              },
              {
                "function": "run",
                "line": 125
              },
              {
                "function": "exit",
                "line": 126
              },
              {
                "function": "ClientSession",
                "line": 18
              },
              {
                "function": "ClientSession",
                "line": 33
              },
              {
                "function": "ClientSession",
                "line": 50
              },
              {
                "function": "print",
                "line": 117
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "run_all_tests",
                "line": 125
              },
              {
                "function": "test_health_check",
                "line": 101
              },
              {
                "function": "test_agents_endpoint",
                "line": 104
              },
              {
                "function": "test_websocket_connection",
                "line": 107
              },
              {
                "function": "get",
                "line": 20
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 26
              },
              {
                "function": "get",
                "line": 35
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "ws_connect",
                "line": 52
              },
              {
                "function": "loads",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "loads",
                "line": 68
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "loads",
                "line": 73
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "loads",
                "line": 81
              },
              {
                "function": "print",
                "line": 83
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "len",
                "line": 112
              },
              {
                "function": "sum",
                "line": 113
              },
              {
                "function": "json",
                "line": 21
              },
              {
                "function": "json",
                "line": 36
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "len",
                "line": 40
              },
              {
                "function": "receive",
                "line": 54
              },
              {
                "function": "send_json",
                "line": 60
              },
              {
                "function": "receive",
                "line": 67
              },
              {
                "function": "receive",
                "line": 72
              },
              {
                "function": "send_json",
                "line": 78
              },
              {
                "function": "receive",
                "line": 80
              },
              {
                "function": "close",
                "line": 85
              },
              {
                "function": "len",
                "line": 114
              },
              {
                "function": "sum",
                "line": 114
              },
              {
                "function": "dumps",
                "line": 22
              },
              {
                "function": "get",
                "line": 69
              },
              {
                "function": "get",
                "line": 74
              },
              {
                "function": "get",
                "line": 69
              }
            ]
          },
          "backend/tests/test_file_capabilities_simple.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "tempfile",
                "names": [
                  "tempfile"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "shutil",
                "names": [
                  "shutil"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "agents.tools.file_tools",
                "names": [
                  "FileSystemTools"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "config.capabilities_loader",
                "names": [
                  "get_capabilities_loader"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 133
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 13
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "print",
                "line": 21
              },
              {
                "function": "mkdtemp",
                "line": 24
              },
              {
                "function": "print",
                "line": 25
              },
              {
                "function": "print",
                "line": 82
              },
              {
                "function": "get_capabilities_loader",
                "line": 84
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 119
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "print",
                "line": 121
              },
              {
                "function": "run",
                "line": 138
              },
              {
                "function": "dirname",
                "line": 13
              },
              {
                "function": "FileSystemTools",
                "line": 28
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "get_audit_log",
                "line": 69
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "rmtree",
                "line": 76
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "get_agent_capabilities",
                "line": 95
              },
              {
                "function": "get",
                "line": 96
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "can_agent_write",
                "line": 112
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "print",
                "line": 129
              },
              {
                "function": "main",
                "line": 138
              },
              {
                "function": "abspath",
                "line": 13
              },
              {
                "function": "write_file",
                "line": 32
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "join",
                "line": 42
              },
              {
                "function": "exists",
                "line": 43
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "write_file",
                "line": 55
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "print",
                "line": 100
              },
              {
                "function": "test_file_tools",
                "line": 124
              },
              {
                "function": "test_capabilities_loader",
                "line": 125
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print_exc",
                "line": 134
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "open",
                "line": 45
              },
              {
                "function": "read",
                "line": 46
              },
              {
                "function": "len",
                "line": 70
              },
              {
                "function": "len",
                "line": 47
              }
            ]
          },
          "backend/tests/test_direct_file_write.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 71
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 9
              },
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "print",
                "line": 17
              },
              {
                "function": "run",
                "line": 75
              },
              {
                "function": "CodeSmithAgent",
                "line": 21
              },
              {
                "function": "print",
                "line": 22
              },
              {
                "function": "print",
                "line": 23
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 36
              },
              {
                "function": "print",
                "line": 39
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 41
              },
              {
                "function": "test_direct_file_write",
                "line": 75
              },
              {
                "function": "implement_code_to_file",
                "line": 37
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 45
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "exists",
                "line": 49
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 70
              },
              {
                "function": "print_exc",
                "line": 72
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "remove",
                "line": 59
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "get",
                "line": 40
              },
              {
                "function": "get",
                "line": 41
              },
              {
                "function": "open",
                "line": 51
              },
              {
                "function": "read",
                "line": 52
              },
              {
                "function": "get",
                "line": 44
              },
              {
                "function": "get",
                "line": 45
              },
              {
                "function": "len",
                "line": 53
              },
              {
                "function": "len",
                "line": 55
              }
            ]
          },
          "backend/tests/test_real_agent.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 15
              },
              {
                "function": "print",
                "line": 16
              },
              {
                "function": "run",
                "line": 83
              },
              {
                "function": "exit",
                "line": 84
              },
              {
                "function": "ClientSession",
                "line": 18
              },
              {
                "function": "test_real_agent",
                "line": 83
              },
              {
                "function": "ws_connect",
                "line": 20
              },
              {
                "function": "loads",
                "line": 23
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 27
              },
              {
                "function": "loads",
                "line": 36
              },
              {
                "function": "print",
                "line": 37
              },
              {
                "function": "loads",
                "line": 41
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "print",
                "line": 44
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "loads",
                "line": 59
              },
              {
                "function": "print",
                "line": 60
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "get",
                "line": 64
              },
              {
                "function": "print",
                "line": 71
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "print",
                "line": 76
              },
              {
                "function": "print",
                "line": 79
              },
              {
                "function": "receive",
                "line": 22
              },
              {
                "function": "send_json",
                "line": 28
              },
              {
                "function": "receive",
                "line": 35
              },
              {
                "function": "wait_for",
                "line": 40
              },
              {
                "function": "send_json",
                "line": 48
              },
              {
                "function": "receive",
                "line": 55
              },
              {
                "function": "wait_for",
                "line": 58
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 68
              },
              {
                "function": "close",
                "line": 70
              },
              {
                "function": "receive",
                "line": 40
              },
              {
                "function": "receive",
                "line": 58
              },
              {
                "function": "lower",
                "line": 65
              },
              {
                "function": "lower",
                "line": 65
              },
              {
                "function": "get",
                "line": 37
              },
              {
                "function": "get",
                "line": 43
              },
              {
                "function": "get",
                "line": 61
              },
              {
                "function": "get",
                "line": 44
              }
            ]
          },
          "backend/tests/test_server.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 18
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print",
                "line": 51
              },
              {
                "function": "print",
                "line": 108
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "append",
                "line": 115
              },
              {
                "function": "append",
                "line": 118
              },
              {
                "function": "append",
                "line": 121
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 126
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "print",
                "line": 128
              },
              {
                "function": "all",
                "line": 130
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "input",
                "line": 142
              },
              {
                "function": "run",
                "line": 145
              },
              {
                "function": "exit",
                "line": 146
              },
              {
                "function": "ClientSession",
                "line": 20
              },
              {
                "function": "ClientSession",
                "line": 36
              },
              {
                "function": "ClientSession",
                "line": 53
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "run_all_tests",
                "line": 145
              },
              {
                "function": "test_health_check",
                "line": 115
              },
              {
                "function": "test_agents_endpoint",
                "line": 118
              },
              {
                "function": "test_websocket_connection",
                "line": 121
              },
              {
                "function": "get",
                "line": 22
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "get",
                "line": 38
              },
              {
                "function": "print",
                "line": 40
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "ws_connect",
                "line": 55
              },
              {
                "function": "loads",
                "line": 58
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 62
              },
              {
                "function": "loads",
                "line": 71
              },
              {
                "function": "print",
                "line": 72
              },
              {
                "function": "loads",
                "line": 76
              },
              {
                "function": "print",
                "line": 77
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "loads",
                "line": 87
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 91
              },
              {
                "function": "loads",
                "line": 95
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "len",
                "line": 126
              },
              {
                "function": "sum",
                "line": 127
              },
              {
                "function": "json",
                "line": 23
              },
              {
                "function": "json",
                "line": 39
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "len",
                "line": 43
              },
              {
                "function": "receive",
                "line": 57
              },
              {
                "function": "send_json",
                "line": 63
              },
              {
                "function": "receive",
                "line": 70
              },
              {
                "function": "receive",
                "line": 75
              },
              {
                "function": "send_json",
                "line": 81
              },
              {
                "function": "receive",
                "line": 86
              },
              {
                "function": "send_json",
                "line": 92
              },
              {
                "function": "receive",
                "line": 94
              },
              {
                "function": "close",
                "line": 99
              },
              {
                "function": "len",
                "line": 128
              },
              {
                "function": "sum",
                "line": 128
              },
              {
                "function": "dumps",
                "line": 24
              }
            ]
          },
          "backend/tests/test_agent_write_integration.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "tempfile",
                "names": [
                  "tempfile"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "shutil",
                "names": [
                  "shutil"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 19
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 127
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 162
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 15
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "print",
                "line": 24
              },
              {
                "function": "mkdtemp",
                "line": 27
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 74
              },
              {
                "function": "mkdtemp",
                "line": 77
              },
              {
                "function": "print",
                "line": 78
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "print",
                "line": 147
              },
              {
                "function": "print",
                "line": 148
              },
              {
                "function": "print",
                "line": 149
              },
              {
                "function": "run",
                "line": 167
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "ArchitectAgent",
                "line": 32
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "rmtree",
                "line": 68
              },
              {
                "function": "print",
                "line": 69
              },
              {
                "function": "CodeSmithAgent",
                "line": 82
              },
              {
                "function": "print",
                "line": 97
              },
              {
                "function": "rmtree",
                "line": 119
              },
              {
                "function": "print",
                "line": 120
              },
              {
                "function": "ClientSession",
                "line": 129
              },
              {
                "function": "print",
                "line": 142
              },
              {
                "function": "print",
                "line": 156
              },
              {
                "function": "print",
                "line": 157
              },
              {
                "function": "print",
                "line": 158
              },
              {
                "function": "main",
                "line": 167
              },
              {
                "function": "abspath",
                "line": 15
              },
              {
                "function": "create_redis_config",
                "line": 42
              },
              {
                "function": "join",
                "line": 51
              },
              {
                "function": "exists",
                "line": 52
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "implement_code_to_file",
                "line": 92
              },
              {
                "function": "join",
                "line": 101
              },
              {
                "function": "exists",
                "line": 102
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "test_architect_creates_redis_config",
                "line": 152
              },
              {
                "function": "test_codesmith_writes_code",
                "line": 153
              },
              {
                "function": "test_agent_via_api",
                "line": 154
              },
              {
                "function": "print",
                "line": 161
              },
              {
                "function": "print_exc",
                "line": 163
              },
              {
                "function": "print",
                "line": 53
              },
              {
                "function": "print",
                "line": 63
              },
              {
                "function": "print",
                "line": 103
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "get",
                "line": 132
              },
              {
                "function": "print",
                "line": 134
              },
              {
                "function": "print",
                "line": 137
              },
              {
                "function": "get",
                "line": 47
              },
              {
                "function": "open",
                "line": 56
              },
              {
                "function": "read",
                "line": 57
              },
              {
                "function": "print",
                "line": 59
              },
              {
                "function": "print",
                "line": 61
              },
              {
                "function": "get",
                "line": 97
              },
              {
                "function": "open",
                "line": 106
              },
              {
                "function": "read",
                "line": 107
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "print",
                "line": 112
              },
              {
                "function": "json",
                "line": 133
              },
              {
                "function": "get",
                "line": 65
              },
              {
                "function": "get",
                "line": 116
              },
              {
                "function": "len",
                "line": 134
              },
              {
                "function": "len",
                "line": 109
              }
            ]
          },
          "backend/tests/test_agent_file_capabilities.py": {
            "functions": [
              {
                "name": "main",
                "line": 273,
                "async": false,
                "calls": [
                  "main",
                  "print"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/tests/test_agent_file_capabilities.py"
              },
              {
                "name": "setup_method",
                "line": 28,
                "async": false,
                "calls": [
                  "mkdtemp"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/tests/test_agent_file_capabilities.py"
              },
              {
                "name": "teardown_method",
                "line": 33,
                "async": false,
                "calls": [
                  "rmtree",
                  "exists"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/tests/test_agent_file_capabilities.py"
              }
            ],
            "classes": [
              {
                "name": "TestAgentFileCapabilities",
                "line": 25,
                "methods": [
                  "setup_method",
                  "teardown_method"
                ],
                "bases": [],
                "file": "backend/tests/test_agent_file_capabilities.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "tempfile",
                "names": [
                  "tempfile"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "shutil",
                "names": [
                  "shutil"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "pytest",
                "names": [
                  "pytest"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "BaseAgent",
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "agents.tools.file_tools",
                "names": [
                  "FileSystemTools"
                ],
                "line": 19
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 21
              },
              {
                "type": "from_import",
                "module": "config.capabilities_loader",
                "names": [
                  "get_capabilities_loader"
                ],
                "line": 22
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 16
              },
              {
                "function": "dirname",
                "line": 16
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "main",
                "line": 278
              },
              {
                "function": "main",
                "line": 282
              },
              {
                "function": "dirname",
                "line": 16
              },
              {
                "function": "mkdtemp",
                "line": 30
              },
              {
                "function": "exists",
                "line": 35
              },
              {
                "function": "FileSystemTools",
                "line": 41
              },
              {
                "function": "FileSystemTools",
                "line": 49
              },
              {
                "function": "exists",
                "line": 60
              },
              {
                "function": "FileSystemTools",
                "line": 70
              },
              {
                "function": "FileSystemTools",
                "line": 87
              },
              {
                "function": "FileSystemTools",
                "line": 103
              },
              {
                "function": "exists",
                "line": 124
              },
              {
                "function": "CodeSmithAgent",
                "line": 130
              },
              {
                "function": "FileSystemTools",
                "line": 133
              },
              {
                "function": "ArchitectAgent",
                "line": 151
              },
              {
                "function": "FileSystemTools",
                "line": 154
              },
              {
                "function": "ArchitectAgent",
                "line": 175
              },
              {
                "function": "FileSystemTools",
                "line": 178
              },
              {
                "function": "FileSystemTools",
                "line": 196
              },
              {
                "function": "get_audit_log",
                "line": 210
              },
              {
                "function": "get_capabilities_loader",
                "line": 217
              },
              {
                "function": "get_agent_capabilities",
                "line": 220
              },
              {
                "function": "get_agent_capabilities",
                "line": 224
              },
              {
                "function": "can_agent_write",
                "line": 228
              },
              {
                "function": "can_agent_write",
                "line": 231
              },
              {
                "function": "AgentConfig",
                "line": 238
              },
              {
                "function": "BaseAgent",
                "line": 246
              },
              {
                "function": "FileSystemTools",
                "line": 258
              },
              {
                "function": "join",
                "line": 269
              },
              {
                "function": "exists",
                "line": 270
              },
              {
                "function": "abspath",
                "line": 16
              },
              {
                "function": "rmtree",
                "line": 36
              },
              {
                "function": "len",
                "line": 44
              },
              {
                "function": "write_file",
                "line": 52
              },
              {
                "function": "join",
                "line": 60
              },
              {
                "function": "open",
                "line": 63
              },
              {
                "function": "read",
                "line": 64
              },
              {
                "function": "write_file",
                "line": 73
              },
              {
                "function": "exists",
                "line": 82
              },
              {
                "function": "write_file",
                "line": 90
              },
              {
                "function": "write_file",
                "line": 108
              },
              {
                "function": "write_file",
                "line": 116
              },
              {
                "function": "implement_code_to_file",
                "line": 136
              },
              {
                "function": "exists",
                "line": 142
              },
              {
                "function": "create_redis_config",
                "line": 157
              },
              {
                "function": "join",
                "line": 163
              },
              {
                "function": "exists",
                "line": 164
              },
              {
                "function": "create_docker_compose",
                "line": 181
              },
              {
                "function": "join",
                "line": 184
              },
              {
                "function": "exists",
                "line": 185
              },
              {
                "function": "write_file",
                "line": 199
              },
              {
                "function": "write_file",
                "line": 200
              },
              {
                "function": "write_file",
                "line": 201
              },
              {
                "function": "len",
                "line": 204
              },
              {
                "function": "len",
                "line": 211
              },
              {
                "function": "get",
                "line": 221
              },
              {
                "function": "len",
                "line": 222
              },
              {
                "function": "get",
                "line": 225
              },
              {
                "function": "write_implementation",
                "line": 250
              },
              {
                "function": "lower",
                "line": 253
              },
              {
                "function": "write_file",
                "line": 261
              },
              {
                "function": "join",
                "line": 63
              },
              {
                "function": "join",
                "line": 82
              },
              {
                "function": "join",
                "line": 142
              },
              {
                "function": "open",
                "line": 167
              },
              {
                "function": "read",
                "line": 168
              },
              {
                "function": "open",
                "line": 188
              },
              {
                "function": "read",
                "line": 189
              },
              {
                "function": "get",
                "line": 222
              }
            ]
          },
          "backend/tests/test_integration.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 20,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/tests/test_integration.py"
              },
              {
                "name": "record_result",
                "line": 382,
                "async": false,
                "calls": [
                  "print",
                  "append",
                  "now",
                  "isoformat"
                ],
                "parameters": [
                  "self",
                  "test_name",
                  "success",
                  "details"
                ],
                "decorators": [],
                "file": "backend/tests/test_integration.py"
              },
              {
                "name": "print_summary",
                "line": 406,
                "async": false,
                "calls": [
                  "print"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/tests/test_integration.py"
              }
            ],
            "classes": [
              {
                "name": "IntegrationTestSuite",
                "line": 17,
                "methods": [
                  "__init__",
                  "record_result",
                  "print_summary"
                ],
                "bases": [],
                "file": "backend/tests/test_integration.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "print",
                "line": 434
              },
              {
                "function": "IntegrationTestSuite",
                "line": 452
              },
              {
                "function": "exit",
                "line": 456
              },
              {
                "function": "run",
                "line": 459
              },
              {
                "function": "print",
                "line": 28
              },
              {
                "function": "print",
                "line": 29
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 32
              },
              {
                "function": "print",
                "line": 33
              },
              {
                "function": "print",
                "line": 34
              },
              {
                "function": "print_summary",
                "line": 57
              },
              {
                "function": "append",
                "line": 400
              },
              {
                "function": "print",
                "line": 404
              },
              {
                "function": "print",
                "line": 408
              },
              {
                "function": "print",
                "line": 409
              },
              {
                "function": "print",
                "line": 410
              },
              {
                "function": "print",
                "line": 411
              },
              {
                "function": "print",
                "line": 412
              },
              {
                "function": "print",
                "line": 413
              },
              {
                "function": "print",
                "line": 414
              },
              {
                "function": "print",
                "line": 422
              },
              {
                "function": "run_all_tests",
                "line": 453
              },
              {
                "function": "main",
                "line": 459
              },
              {
                "function": "print",
                "line": 49
              },
              {
                "function": "print",
                "line": 50
              },
              {
                "function": "ClientSession",
                "line": 61
              },
              {
                "function": "ClientSession",
                "line": 92
              },
              {
                "function": "ClientSession",
                "line": 124
              },
              {
                "function": "ClientSession",
                "line": 166
              },
              {
                "function": "ClientSession",
                "line": 215
              },
              {
                "function": "ClientSession",
                "line": 263
              },
              {
                "function": "ClientSession",
                "line": 310
              },
              {
                "function": "ClientSession",
                "line": 341
              },
              {
                "function": "isoformat",
                "line": 397
              },
              {
                "function": "print",
                "line": 417
              },
              {
                "function": "print",
                "line": 425
              },
              {
                "function": "print",
                "line": 427
              },
              {
                "function": "ClientSession",
                "line": 437
              },
              {
                "function": "print",
                "line": 445
              },
              {
                "function": "print",
                "line": 446
              },
              {
                "function": "print",
                "line": 447
              },
              {
                "function": "print",
                "line": 448
              },
              {
                "function": "exit",
                "line": 449
              },
              {
                "function": "ws_connect",
                "line": 125
              },
              {
                "function": "ws_connect",
                "line": 167
              },
              {
                "function": "range",
                "line": 219
              },
              {
                "function": "enumerate",
                "line": 227
              },
              {
                "function": "all",
                "line": 249
              },
              {
                "function": "record_result",
                "line": 250
              },
              {
                "function": "ws_connect",
                "line": 264
              },
              {
                "function": "ws_connect",
                "line": 311
              },
              {
                "function": "loads",
                "line": 360
              },
              {
                "function": "loads",
                "line": 372
              },
              {
                "function": "record_result",
                "line": 377
              },
              {
                "function": "get",
                "line": 438
              },
              {
                "function": "isoformat",
                "line": 31
              },
              {
                "function": "test_func",
                "line": 52
              },
              {
                "function": "record_result",
                "line": 54
              },
              {
                "function": "get",
                "line": 65
              },
              {
                "function": "record_result",
                "line": 71
              },
              {
                "function": "record_result",
                "line": 73
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "record_result",
                "line": 84
              },
              {
                "function": "record_result",
                "line": 86
              },
              {
                "function": "ws_connect",
                "line": 94
              },
              {
                "function": "loads",
                "line": 97
              },
              {
                "function": "record_result",
                "line": 100
              },
              {
                "function": "loads",
                "line": 106
              },
              {
                "function": "record_result",
                "line": 109
              },
              {
                "function": "record_result",
                "line": 114
              },
              {
                "function": "receive",
                "line": 127
              },
              {
                "function": "receive",
                "line": 169
              },
              {
                "function": "range",
                "line": 181
              },
              {
                "function": "any",
                "line": 186
              },
              {
                "function": "any",
                "line": 187
              },
              {
                "function": "next",
                "line": 190
              },
              {
                "function": "any",
                "line": 195
              },
              {
                "function": "record_result",
                "line": 201
              },
              {
                "function": "append",
                "line": 221
              },
              {
                "function": "send_json",
                "line": 228
              },
              {
                "function": "append",
                "line": 233
              },
              {
                "function": "gather",
                "line": 235
              },
              {
                "function": "append",
                "line": 241
              },
              {
                "function": "gather",
                "line": 243
              },
              {
                "function": "record_result",
                "line": 257
              },
              {
                "function": "receive",
                "line": 266
              },
              {
                "function": "now",
                "line": 279
              },
              {
                "function": "record_result",
                "line": 293
              },
              {
                "function": "receive",
                "line": 313
              },
              {
                "function": "ws_connect",
                "line": 344
              },
              {
                "function": "receive",
                "line": 345
              },
              {
                "function": "send_json",
                "line": 348
              },
              {
                "function": "close",
                "line": 355
              },
              {
                "function": "ws_connect",
                "line": 358
              },
              {
                "function": "wait_for",
                "line": 359
              },
              {
                "function": "send_json",
                "line": 363
              },
              {
                "function": "receive",
                "line": 370
              },
              {
                "function": "wait_for",
                "line": 371
              },
              {
                "function": "close",
                "line": 374
              },
              {
                "function": "get",
                "line": 376
              },
              {
                "function": "record_result",
                "line": 380
              },
              {
                "function": "now",
                "line": 397
              },
              {
                "function": "print",
                "line": 420
              },
              {
                "function": "print",
                "line": 440
              },
              {
                "function": "print",
                "line": 442
              },
              {
                "function": "exit",
                "line": 443
              },
              {
                "function": "str",
                "line": 54
              },
              {
                "function": "json",
                "line": 66
              },
              {
                "function": "str",
                "line": 73
              },
              {
                "function": "json",
                "line": 79
              },
              {
                "function": "str",
                "line": 86
              },
              {
                "function": "wait_for",
                "line": 96
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "get",
                "line": 100
              },
              {
                "function": "send_json",
                "line": 104
              },
              {
                "function": "wait_for",
                "line": 105
              },
              {
                "function": "get",
                "line": 108
              },
              {
                "function": "close",
                "line": 111
              },
              {
                "function": "str",
                "line": 114
              },
              {
                "function": "loads",
                "line": 142
              },
              {
                "function": "loads",
                "line": 146
              },
              {
                "function": "record_result",
                "line": 153
              },
              {
                "function": "send_json",
                "line": 173
              },
              {
                "function": "append",
                "line": 183
              },
              {
                "function": "record_result",
                "line": 208
              },
              {
                "function": "ws_connect",
                "line": 220
              },
              {
                "function": "receive",
                "line": 223
              },
              {
                "function": "receive",
                "line": 241
              },
              {
                "function": "close",
                "line": 247
              },
              {
                "function": "str",
                "line": 257
              },
              {
                "function": "send_json",
                "line": 270
              },
              {
                "function": "total_seconds",
                "line": 281
              },
              {
                "function": "len",
                "line": 289
              },
              {
                "function": "get",
                "line": 290
              },
              {
                "function": "record_result",
                "line": 300
              },
              {
                "function": "loads",
                "line": 321
              },
              {
                "function": "record_result",
                "line": 325
              },
              {
                "function": "receive",
                "line": 359
              },
              {
                "function": "receive",
                "line": 371
              },
              {
                "function": "str",
                "line": 380
              },
              {
                "function": "now",
                "line": 31
              },
              {
                "function": "get",
                "line": 69
              },
              {
                "function": "len",
                "line": 82
              },
              {
                "function": "receive",
                "line": 96
              },
              {
                "function": "receive",
                "line": 105
              },
              {
                "function": "send_json",
                "line": 134
              },
              {
                "function": "wait_for",
                "line": 141
              },
              {
                "function": "wait_for",
                "line": 145
              },
              {
                "function": "record_result",
                "line": 160
              },
              {
                "function": "wait_for",
                "line": 182
              },
              {
                "function": "loads",
                "line": 183
              },
              {
                "function": "get",
                "line": 191
              },
              {
                "function": "str",
                "line": 208
              },
              {
                "function": "isinstance",
                "line": 249
              },
              {
                "function": "len",
                "line": 253
              },
              {
                "function": "append",
                "line": 284
              },
              {
                "function": "str",
                "line": 300
              },
              {
                "function": "send_json",
                "line": 317
              },
              {
                "function": "wait_for",
                "line": 320
              },
              {
                "function": "get",
                "line": 328
              },
              {
                "function": "record_result",
                "line": 333
              },
              {
                "function": "record_result",
                "line": 335
              },
              {
                "function": "get",
                "line": 82
              },
              {
                "function": "len",
                "line": 84
              },
              {
                "function": "receive",
                "line": 141
              },
              {
                "function": "receive",
                "line": 145
              },
              {
                "function": "get",
                "line": 149
              },
              {
                "function": "get",
                "line": 150
              },
              {
                "function": "str",
                "line": 160
              },
              {
                "function": "receive",
                "line": 182
              },
              {
                "function": "get",
                "line": 186
              },
              {
                "function": "get",
                "line": 187
              },
              {
                "function": "lower",
                "line": 196
              },
              {
                "function": "wait_for",
                "line": 283
              },
              {
                "function": "loads",
                "line": 284
              },
              {
                "function": "len",
                "line": 296
              },
              {
                "function": "receive",
                "line": 320
              },
              {
                "function": "str",
                "line": 335
              },
              {
                "function": "get",
                "line": 84
              },
              {
                "function": "len",
                "line": 156
              },
              {
                "function": "get",
                "line": 191
              },
              {
                "function": "now",
                "line": 281
              },
              {
                "function": "receive",
                "line": 283
              },
              {
                "function": "get",
                "line": 156
              }
            ]
          },
          "backend/agents/agent_registry.py": {
            "functions": [
              {
                "name": "get_agent_registry",
                "line": 317,
                "async": false,
                "calls": [
                  "AgentRegistry"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "__new__",
                "line": 56,
                "async": false,
                "calls": [
                  "super",
                  "__new__"
                ],
                "parameters": [
                  "cls"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "__init__",
                "line": 62,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "get_agent",
                "line": 167,
                "async": false,
                "calls": [
                  "warning"
                ],
                "parameters": [
                  "self",
                  "agent_id"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "get_available_agents",
                "line": 177,
                "async": false,
                "calls": [
                  "append",
                  "items"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "find_agent_by_capability",
                "line": 247,
                "async": false,
                "calls": [
                  "items"
                ],
                "parameters": [
                  "self",
                  "capability"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "get_agents_by_capability",
                "line": 257,
                "async": false,
                "calls": [
                  "append",
                  "items"
                ],
                "parameters": [
                  "self",
                  "capability"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "get_status",
                "line": 283,
                "async": false,
                "calls": [
                  "values",
                  "get_available_agents",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/agent_registry.py"
              }
            ],
            "classes": [
              {
                "name": "AgentType",
                "line": 24,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "RegisteredAgent",
                "line": 39,
                "methods": [],
                "bases": [],
                "file": "backend/agents/agent_registry.py"
              },
              {
                "name": "AgentRegistry",
                "line": 48,
                "methods": [
                  "__new__",
                  "__init__",
                  "get_agent",
                  "get_available_agents",
                  "find_agent_by_capability",
                  "get_agents_by_capability",
                  "get_status"
                ],
                "bases": [],
                "file": "backend/agents/agent_registry.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "BaseAgent",
                  "TaskRequest",
                  "TaskResult"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "specialized.orchestrator_agent_v2",
                "names": [
                  "OrchestratorAgentV2"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "config.capabilities_loader",
                "names": [
                  "apply_capabilities_to_agent"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "specialized.research_agent",
                "names": [
                  "ResearchAgent"
                ],
                "line": 83
              },
              {
                "type": "from_import",
                "module": "specialized.fixer_gpt_agent",
                "names": [
                  "FixerGPTAgent"
                ],
                "line": 91
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 22
              },
              {
                "function": "warning",
                "line": 20
              },
              {
                "function": "info",
                "line": 70
              },
              {
                "function": "info",
                "line": 76
              },
              {
                "function": "info",
                "line": 104
              },
              {
                "function": "warning",
                "line": 174
              },
              {
                "function": "items",
                "line": 182
              },
              {
                "function": "get_agent",
                "line": 202
              },
              {
                "function": "items",
                "line": 251
              },
              {
                "function": "items",
                "line": 262
              },
              {
                "function": "items",
                "line": 272
              },
              {
                "function": "info",
                "line": 298
              },
              {
                "function": "items",
                "line": 300
              },
              {
                "function": "clear",
                "line": 311
              },
              {
                "function": "info",
                "line": 312
              },
              {
                "function": "AgentRegistry",
                "line": 321
              },
              {
                "function": "__new__",
                "line": 58
              },
              {
                "function": "register_agent",
                "line": 79
              },
              {
                "function": "info",
                "line": 85
              },
              {
                "function": "info",
                "line": 93
              },
              {
                "function": "isinstance",
                "line": 133
              },
              {
                "function": "RegisteredAgent",
                "line": 144
              },
              {
                "function": "info",
                "line": 155
              },
              {
                "function": "append",
                "line": 183
              },
              {
                "function": "warning",
                "line": 206
              },
              {
                "function": "get_agent",
                "line": 207
              },
              {
                "function": "len",
                "line": 288
              },
              {
                "function": "sum",
                "line": 289
              },
              {
                "function": "sum",
                "line": 290
              },
              {
                "function": "get_available_agents",
                "line": 291
              },
              {
                "function": "OrchestratorAgentV2",
                "line": 79
              },
              {
                "function": "register_agent",
                "line": 84
              },
              {
                "function": "warning",
                "line": 87
              },
              {
                "function": "register_agent",
                "line": 92
              },
              {
                "function": "warning",
                "line": 95
              },
              {
                "function": "apply_capabilities_to_agent",
                "line": 113
              },
              {
                "function": "isinstance",
                "line": 117
              },
              {
                "function": "warning",
                "line": 129
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "isinstance",
                "line": 138
              },
              {
                "function": "error",
                "line": 164
              },
              {
                "function": "TaskResult",
                "line": 210
              },
              {
                "function": "execute_with_memory",
                "line": 225
              },
              {
                "function": "error",
                "line": 234
              },
              {
                "function": "TaskResult",
                "line": 240
              },
              {
                "function": "append",
                "line": 264
              },
              {
                "function": "hasattr",
                "line": 275
              },
              {
                "function": "hasattr",
                "line": 303
              },
              {
                "function": "info",
                "line": 306
              },
              {
                "function": "super",
                "line": 58
              },
              {
                "function": "ResearchAgent",
                "line": 84
              },
              {
                "function": "FixerGPTAgent",
                "line": 92
              },
              {
                "function": "len",
                "line": 104
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "get",
                "line": 119
              },
              {
                "function": "info",
                "line": 120
              },
              {
                "function": "append",
                "line": 137
              },
              {
                "function": "AgentType",
                "line": 146
              },
              {
                "function": "error",
                "line": 281
              },
              {
                "function": "error",
                "line": 309
              },
              {
                "function": "publish",
                "line": 276
              },
              {
                "function": "values",
                "line": 289
              },
              {
                "function": "values",
                "line": 290
              },
              {
                "function": "cleanup",
                "line": 304
              },
              {
                "function": "hasattr",
                "line": 140
              },
              {
                "function": "str",
                "line": 140
              },
              {
                "function": "str",
                "line": 242
              }
            ]
          },
          "backend/agents/tools/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "file_tools",
                "names": [
                  "FileSystemTools",
                  "FileOperation"
                ],
                "line": 6
              }
            ],
            "calls": []
          },
          "backend/agents/tools/file_tools.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 35,
                "async": false,
                "calls": [
                  "join",
                  "makedirs",
                  "getcwd"
                ],
                "parameters": [
                  "self",
                  "workspace_path"
                ],
                "decorators": [],
                "file": "backend/agents/tools/file_tools.py"
              },
              {
                "name": "_validate_path",
                "line": 55,
                "async": false,
                "calls": [
                  "startswith",
                  "isabs",
                  "match",
                  "lstrip",
                  "Path",
                  "join",
                  "str",
                  "fnmatch",
                  "abspath",
                  "relative_to"
                ],
                "parameters": [
                  "self",
                  "file_path",
                  "agent_name",
                  "allowed_paths"
                ],
                "decorators": [],
                "file": "backend/agents/tools/file_tools.py"
              },
              {
                "name": "_create_backup",
                "line": 118,
                "async": false,
                "calls": [
                  "info",
                  "now",
                  "error",
                  "join",
                  "copy2",
                  "basename",
                  "strftime",
                  "exists"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/agents/tools/file_tools.py"
              },
              {
                "name": "_log_operation",
                "line": 143,
                "async": false,
                "calls": [
                  "write",
                  "info",
                  "append",
                  "asdict",
                  "open",
                  "dumps",
                  "join",
                  "dirname",
                  "makedirs",
                  "error"
                ],
                "parameters": [
                  "self",
                  "operation"
                ],
                "decorators": [],
                "file": "backend/agents/tools/file_tools.py"
              },
              {
                "name": "get_audit_log",
                "line": 449,
                "async": false,
                "calls": [
                  "asdict"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "backend/agents/tools/file_tools.py"
              }
            ],
            "classes": [
              {
                "name": "FileOperation",
                "line": 18,
                "methods": [],
                "bases": [],
                "file": "backend/agents/tools/file_tools.py"
              },
              {
                "name": "FileSystemTools",
                "line": 29,
                "methods": [
                  "__init__",
                  "_validate_path",
                  "_create_backup",
                  "_log_operation",
                  "get_audit_log"
                ],
                "bases": [],
                "file": "backend/agents/tools/file_tools.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "shutil",
                "names": [
                  "shutil"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Optional",
                  "Any"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "asdict"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "fnmatch",
                "names": [
                  "fnmatch"
                ],
                "line": 87
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 15
              },
              {
                "function": "join",
                "line": 44
              },
              {
                "function": "makedirs",
                "line": 47
              },
              {
                "function": "isabs",
                "line": 69
              },
              {
                "function": "strftime",
                "line": 131
              },
              {
                "function": "join",
                "line": 133
              },
              {
                "function": "append",
                "line": 145
              },
              {
                "function": "join",
                "line": 148
              },
              {
                "function": "makedirs",
                "line": 149
              },
              {
                "function": "_validate_path",
                "line": 182
              },
              {
                "function": "abspath",
                "line": 200
              },
              {
                "function": "exists",
                "line": 208
              },
              {
                "function": "abspath",
                "line": 274
              },
              {
                "function": "abspath",
                "line": 317
              },
              {
                "function": "_validate_path",
                "line": 329
              },
              {
                "function": "_create_backup",
                "line": 339
              },
              {
                "function": "abspath",
                "line": 419
              },
              {
                "function": "getcwd",
                "line": 42
              },
              {
                "function": "abspath",
                "line": 70
              },
              {
                "function": "abspath",
                "line": 72
              },
              {
                "function": "relative_to",
                "line": 76
              },
              {
                "function": "startswith",
                "line": 82
              },
              {
                "function": "exists",
                "line": 128
              },
              {
                "function": "copy2",
                "line": 136
              },
              {
                "function": "info",
                "line": 137
              },
              {
                "function": "dirname",
                "line": 149
              },
              {
                "function": "open",
                "line": 151
              },
              {
                "function": "write",
                "line": 152
              },
              {
                "function": "info",
                "line": 156
              },
              {
                "function": "error",
                "line": 158
              },
              {
                "function": "FileOperation",
                "line": 184
              },
              {
                "function": "_log_operation",
                "line": 192
              },
              {
                "function": "join",
                "line": 200
              },
              {
                "function": "makedirs",
                "line": 204
              },
              {
                "function": "_create_backup",
                "line": 209
              },
              {
                "function": "FileOperation",
                "line": 216
              },
              {
                "function": "_log_operation",
                "line": 224
              },
              {
                "function": "join",
                "line": 274
              },
              {
                "function": "exists",
                "line": 277
              },
              {
                "function": "FileOperation",
                "line": 278
              },
              {
                "function": "_log_operation",
                "line": 286
              },
              {
                "function": "write_file",
                "line": 296
              },
              {
                "function": "join",
                "line": 317
              },
              {
                "function": "exists",
                "line": 320
              },
              {
                "function": "FileOperation",
                "line": 363
              },
              {
                "function": "_log_operation",
                "line": 371
              },
              {
                "function": "join",
                "line": 419
              },
              {
                "function": "exists",
                "line": 421
              },
              {
                "function": "asdict",
                "line": 461
              },
              {
                "function": "join",
                "line": 72
              },
              {
                "function": "relative_to",
                "line": 92
              },
              {
                "function": "str",
                "line": 93
              },
              {
                "function": "lstrip",
                "line": 100
              },
              {
                "function": "fnmatch",
                "line": 103
              },
              {
                "function": "now",
                "line": 131
              },
              {
                "function": "basename",
                "line": 132
              },
              {
                "function": "error",
                "line": 140
              },
              {
                "function": "dirname",
                "line": 204
              },
              {
                "function": "open",
                "line": 213
              },
              {
                "function": "write",
                "line": 214
              },
              {
                "function": "len",
                "line": 232
              },
              {
                "function": "FileOperation",
                "line": 236
              },
              {
                "function": "_log_operation",
                "line": 244
              },
              {
                "function": "open",
                "line": 343
              },
              {
                "function": "readlines",
                "line": 344
              },
              {
                "function": "get",
                "line": 348
              },
              {
                "function": "get",
                "line": 349
              },
              {
                "function": "get",
                "line": 350
              },
              {
                "function": "open",
                "line": 360
              },
              {
                "function": "writelines",
                "line": 361
              },
              {
                "function": "len",
                "line": 378
              },
              {
                "function": "FileOperation",
                "line": 382
              },
              {
                "function": "_log_operation",
                "line": 390
              },
              {
                "function": "open",
                "line": 430
              },
              {
                "function": "read",
                "line": 431
              },
              {
                "function": "len",
                "line": 438
              },
              {
                "function": "asdict",
                "line": 460
              },
              {
                "function": "Path",
                "line": 76
              },
              {
                "function": "match",
                "line": 109
              },
              {
                "function": "dumps",
                "line": 152
              },
              {
                "function": "isoformat",
                "line": 185
              },
              {
                "function": "isoformat",
                "line": 217
              },
              {
                "function": "str",
                "line": 248
              },
              {
                "function": "isoformat",
                "line": 279
              },
              {
                "function": "isoformat",
                "line": 364
              },
              {
                "function": "exists",
                "line": 393
              },
              {
                "function": "copy2",
                "line": 394
              },
              {
                "function": "info",
                "line": 395
              },
              {
                "function": "str",
                "line": 399
              },
              {
                "function": "str",
                "line": 444
              },
              {
                "function": "Path",
                "line": 92
              },
              {
                "function": "asdict",
                "line": 152
              },
              {
                "function": "isoformat",
                "line": 237
              },
              {
                "function": "str",
                "line": 242
              },
              {
                "function": "len",
                "line": 352
              },
              {
                "function": "insert",
                "line": 355
              },
              {
                "function": "isoformat",
                "line": 383
              },
              {
                "function": "str",
                "line": 388
              },
              {
                "function": "Path",
                "line": 109
              },
              {
                "function": "now",
                "line": 185
              },
              {
                "function": "now",
                "line": 217
              },
              {
                "function": "now",
                "line": 279
              },
              {
                "function": "len",
                "line": 354
              },
              {
                "function": "now",
                "line": 364
              },
              {
                "function": "now",
                "line": 237
              },
              {
                "function": "len",
                "line": 356
              },
              {
                "function": "now",
                "line": 383
              }
            ]
          },
          "backend/agents/tools/browser_tester.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 36,
                "async": false,
                "calls": [
                  "ImportError"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/tools/browser_tester.py"
              }
            ],
            "classes": [
              {
                "name": "BrowserTester",
                "line": 22,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/agents/tools/browser_tester.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "playwright.async_api",
                "names": [
                  "async_playwright",
                  "Browser",
                  "Page",
                  "Error"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 345
              },
              {
                "type": "import",
                "module": "socket",
                "names": [
                  "socket"
                ],
                "line": 346
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "warning",
                "line": 19
              },
              {
                "function": "info",
                "line": 60
              },
              {
                "function": "info",
                "line": 64
              },
              {
                "function": "info",
                "line": 77
              },
              {
                "function": "info",
                "line": 105
              },
              {
                "function": "info",
                "line": 231
              },
              {
                "function": "get",
                "line": 294
              },
              {
                "function": "get",
                "line": 295
              },
              {
                "function": "dirname",
                "line": 355
              },
              {
                "function": "info",
                "line": 358
              },
              {
                "function": "Popen",
                "line": 361
              },
              {
                "function": "info",
                "line": 371
              },
              {
                "function": "len",
                "line": 398
              },
              {
                "function": "len",
                "line": 399
              },
              {
                "function": "len",
                "line": 400
              },
              {
                "function": "BrowserTester",
                "line": 417
              },
              {
                "function": "print",
                "line": 420
              },
              {
                "function": "print",
                "line": 421
              },
              {
                "function": "print",
                "line": 422
              },
              {
                "function": "print",
                "line": 428
              },
              {
                "function": "print",
                "line": 430
              },
              {
                "function": "ImportError",
                "line": 38
              },
              {
                "function": "start",
                "line": 47
              },
              {
                "function": "stop",
                "line": 52
              },
              {
                "function": "error",
                "line": 57
              },
              {
                "function": "start",
                "line": 61
              },
              {
                "function": "launch",
                "line": 62
              },
              {
                "function": "new_page",
                "line": 63
              },
              {
                "function": "terminate",
                "line": 75
              },
              {
                "function": "basename",
                "line": 119
              },
              {
                "function": "info",
                "line": 123
              },
              {
                "function": "time",
                "line": 124
              },
              {
                "function": "int",
                "line": 128
              },
              {
                "function": "info",
                "line": 129
              },
              {
                "function": "on",
                "line": 133
              },
              {
                "function": "append",
                "line": 138
              },
              {
                "function": "info",
                "line": 139
              },
              {
                "function": "info",
                "line": 173
              },
              {
                "function": "info",
                "line": 182
              },
              {
                "function": "append",
                "line": 187
              },
              {
                "function": "info",
                "line": 200
              },
              {
                "function": "basename",
                "line": 245
              },
              {
                "function": "append",
                "line": 254
              },
              {
                "function": "on",
                "line": 258
              },
              {
                "function": "append",
                "line": 280
              },
              {
                "function": "socket",
                "line": 349
              },
              {
                "function": "bind",
                "line": 350
              },
              {
                "function": "listen",
                "line": 351
              },
              {
                "function": "abspath",
                "line": 355
              },
              {
                "function": "sleep",
                "line": 369
              },
              {
                "function": "title",
                "line": 393
              },
              {
                "function": "test_tetris_app",
                "line": 419
              },
              {
                "function": "close",
                "line": 69
              },
              {
                "function": "close",
                "line": 71
              },
              {
                "function": "stop",
                "line": 73
              },
              {
                "function": "_start_local_server",
                "line": 117
              },
              {
                "function": "goto",
                "line": 125
              },
              {
                "function": "screenshot",
                "line": 137
              },
              {
                "function": "query_selector",
                "line": 142
              },
              {
                "function": "info",
                "line": 145
              },
              {
                "function": "append",
                "line": 147
              },
              {
                "function": "error",
                "line": 149
              },
              {
                "function": "query_selector",
                "line": 152
              },
              {
                "function": "info",
                "line": 155
              },
              {
                "function": "append",
                "line": 157
              },
              {
                "function": "query_selector",
                "line": 161
              },
              {
                "function": "info",
                "line": 163
              },
              {
                "function": "info",
                "line": 167
              },
              {
                "function": "append",
                "line": 169
              },
              {
                "function": "press",
                "line": 174
              },
              {
                "function": "wait_for_timeout",
                "line": 175
              },
              {
                "function": "press",
                "line": 176
              },
              {
                "function": "wait_for_timeout",
                "line": 177
              },
              {
                "function": "press",
                "line": 178
              },
              {
                "function": "wait_for_timeout",
                "line": 179
              },
              {
                "function": "press",
                "line": 180
              },
              {
                "function": "screenshot",
                "line": 186
              },
              {
                "function": "extend",
                "line": 191
              },
              {
                "function": "error",
                "line": 192
              },
              {
                "function": "info",
                "line": 195
              },
              {
                "function": "get",
                "line": 198
              },
              {
                "function": "append",
                "line": 203
              },
              {
                "function": "error",
                "line": 205
              },
              {
                "function": "_start_local_server",
                "line": 243
              },
              {
                "function": "goto",
                "line": 249
              },
              {
                "function": "screenshot",
                "line": 253
              },
              {
                "function": "enumerate",
                "line": 262
              },
              {
                "function": "extend",
                "line": 275
              },
              {
                "function": "screenshot",
                "line": 279
              },
              {
                "function": "len",
                "line": 283
              },
              {
                "function": "append",
                "line": 286
              },
              {
                "function": "error",
                "line": 288
              },
              {
                "function": "str",
                "line": 334
              },
              {
                "function": "getsockname",
                "line": 352
              },
              {
                "function": "str",
                "line": 362
              },
              {
                "function": "query_selector_all",
                "line": 398
              },
              {
                "function": "query_selector_all",
                "line": 399
              },
              {
                "function": "query_selector_all",
                "line": 400
              },
              {
                "function": "async_playwright",
                "line": 61
              },
              {
                "function": "get_event_loop",
                "line": 124
              },
              {
                "function": "time",
                "line": 126
              },
              {
                "function": "append",
                "line": 133
              },
              {
                "function": "click",
                "line": 164
              },
              {
                "function": "wait_for_timeout",
                "line": 165
              },
              {
                "function": "len",
                "line": 198
              },
              {
                "function": "append",
                "line": 258
              },
              {
                "function": "query_selector",
                "line": 301
              },
              {
                "function": "get",
                "line": 310
              },
              {
                "function": "str",
                "line": 133
              },
              {
                "function": "str",
                "line": 258
              },
              {
                "function": "append",
                "line": 265
              },
              {
                "function": "click",
                "line": 303
              },
              {
                "function": "query_selector",
                "line": 309
              },
              {
                "function": "get_event_loop",
                "line": 126
              },
              {
                "function": "str",
                "line": 203
              },
              {
                "function": "_execute_scenario",
                "line": 264
              },
              {
                "function": "get",
                "line": 267
              },
              {
                "function": "append",
                "line": 268
              },
              {
                "function": "append",
                "line": 271
              },
              {
                "function": "str",
                "line": 286
              },
              {
                "function": "type",
                "line": 312
              },
              {
                "function": "query_selector",
                "line": 318
              },
              {
                "function": "get",
                "line": 321
              },
              {
                "function": "text_content",
                "line": 320
              },
              {
                "function": "get",
                "line": 268
              },
              {
                "function": "str",
                "line": 271
              }
            ]
          },
          "backend/agents/specialized/fixerbot_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 63,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "ClaudeCodeConfig",
                  "super",
                  "is_available",
                  "ClaudeCodeService",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixerbot_agent.py"
              },
              {
                "name": "_match_pattern",
                "line": 187,
                "async": false,
                "calls": [
                  "any",
                  "search",
                  "items"
                ],
                "parameters": [
                  "self",
                  "error_text",
                  "files"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixerbot_agent.py"
              }
            ],
            "classes": [
              {
                "name": "FixerBotAgent",
                "line": 20,
                "methods": [
                  "__init__",
                  "_match_pattern"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/fixerbot_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List",
                  "Tuple"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "utils.claude_code_service",
                "names": [
                  "ClaudeCodeService",
                  "ClaudeCodeConfig"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 275
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "AgentConfig",
                "line": 64
              },
              {
                "function": "__init__",
                "line": 79
              },
              {
                "function": "ClaudeCodeService",
                "line": 81
              },
              {
                "function": "items",
                "line": 198
              },
              {
                "function": "getattr",
                "line": 238
              },
              {
                "function": "search",
                "line": 312
              },
              {
                "function": "TaskRequest",
                "line": 472
              },
              {
                "function": "ClaudeCodeConfig",
                "line": 82
              },
              {
                "function": "is_available",
                "line": 84
              },
              {
                "function": "error",
                "line": 85
              },
              {
                "function": "info",
                "line": 95
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "join",
                "line": 162
              },
              {
                "function": "TaskResult",
                "line": 164
              },
              {
                "function": "any",
                "line": 200
              },
              {
                "function": "error",
                "line": 241
              },
              {
                "function": "run",
                "line": 276
              },
              {
                "function": "strip",
                "line": 281
              },
              {
                "function": "open",
                "line": 293
              },
              {
                "function": "read",
                "line": 294
              },
              {
                "function": "replace",
                "line": 303
              },
              {
                "function": "sub",
                "line": 313
              },
              {
                "function": "info",
                "line": 325
              },
              {
                "function": "is_available",
                "line": 402
              },
              {
                "function": "join",
                "line": 410
              },
              {
                "function": "execute",
                "line": 476
              },
              {
                "function": "super",
                "line": 79
              },
              {
                "function": "isinstance",
                "line": 106
              },
              {
                "function": "lower",
                "line": 119
              },
              {
                "function": "_match_pattern",
                "line": 120
              },
              {
                "function": "info",
                "line": 133
              },
              {
                "function": "append",
                "line": 135
              },
              {
                "function": "len",
                "line": 138
              },
              {
                "function": "len",
                "line": 138
              },
              {
                "function": "info",
                "line": 142
              },
              {
                "function": "append",
                "line": 149
              },
              {
                "function": "enumerate",
                "line": 150
              },
              {
                "function": "append",
                "line": 158
              },
              {
                "function": "error",
                "line": 179
              },
              {
                "function": "TaskResult",
                "line": 181
              },
              {
                "function": "any",
                "line": 207
              },
              {
                "function": "fix_method",
                "line": 250
              },
              {
                "function": "error",
                "line": 253
              },
              {
                "function": "open",
                "line": 322
              },
              {
                "function": "write",
                "line": 323
              },
              {
                "function": "complete",
                "line": 448
              },
              {
                "function": "error",
                "line": 460
              },
              {
                "function": "get",
                "line": 473
              },
              {
                "function": "get",
                "line": 474
              },
              {
                "function": "get",
                "line": 107
              },
              {
                "function": "get",
                "line": 108
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "info",
                "line": 111
              },
              {
                "function": "info",
                "line": 112
              },
              {
                "function": "info",
                "line": 123
              },
              {
                "function": "append",
                "line": 125
              },
              {
                "function": "info",
                "line": 127
              },
              {
                "function": "append",
                "line": 128
              },
              {
                "function": "_ai_powered_fix",
                "line": 134
              },
              {
                "function": "_ai_powered_fix",
                "line": 143
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "append",
                "line": 152
              },
              {
                "function": "append",
                "line": 153
              },
              {
                "function": "get",
                "line": 154
              },
              {
                "function": "append",
                "line": 160
              },
              {
                "function": "str",
                "line": 258
              },
              {
                "function": "split",
                "line": 282
              },
              {
                "function": "join",
                "line": 416
              },
              {
                "function": "join",
                "line": 427
              },
              {
                "function": "str",
                "line": 119
              },
              {
                "function": "_apply_pattern_fix",
                "line": 124
              },
              {
                "function": "append",
                "line": 155
              },
              {
                "function": "len",
                "line": 171
              },
              {
                "function": "len",
                "line": 172
              },
              {
                "function": "isoformat",
                "line": 174
              },
              {
                "function": "search",
                "line": 207
              },
              {
                "function": "len",
                "line": 133
              },
              {
                "function": "len",
                "line": 149
              },
              {
                "function": "len",
                "line": 158
              },
              {
                "function": "strip",
                "line": 282
              },
              {
                "function": "chr",
                "line": 416
              },
              {
                "function": "chr",
                "line": 427
              },
              {
                "function": "str",
                "line": 462
              },
              {
                "function": "len",
                "line": 111
              },
              {
                "function": "now",
                "line": 174
              },
              {
                "function": "str",
                "line": 183
              }
            ]
          },
          "backend/agents/specialized/reviewer_gpt_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 37,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "OpenAIService"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              },
              {
                "name": "check_asimov_violations",
                "line": 205,
                "async": false,
                "calls": [
                  "append",
                  "search",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "code"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              },
              {
                "name": "_calculate_html_app_quality_score",
                "line": 429,
                "async": false,
                "calls": [
                  "max",
                  "get",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "test_result"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              },
              {
                "name": "_get_recommendation",
                "line": 463,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "quality_score",
                  "test_result"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              },
              {
                "name": "_format_metrics",
                "line": 478,
                "async": false,
                "calls": [
                  "join",
                  "isinstance",
                  "items",
                  "append"
                ],
                "parameters": [
                  "self",
                  "metrics"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              }
            ],
            "classes": [
              {
                "name": "ReviewerGPTAgent",
                "line": 27,
                "methods": [
                  "__init__",
                  "check_asimov_violations",
                  "_calculate_html_app_quality_score",
                  "_get_recommendation",
                  "_format_metrics"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/reviewer_gpt_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List",
                  "Callable"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "base.prime_directives",
                "names": [
                  "PrimeDirectives"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "tools.browser_tester",
                "names": [
                  "BrowserTester",
                  "PLAYWRIGHT_AVAILABLE"
                ],
                "line": 22
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 230
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "warning",
                "line": 25
              },
              {
                "function": "AgentConfig",
                "line": 38
              },
              {
                "function": "__init__",
                "line": 53
              },
              {
                "function": "OpenAIService",
                "line": 54
              },
              {
                "function": "lower",
                "line": 231
              },
              {
                "function": "check_asimov_violations",
                "line": 263
              },
              {
                "function": "get",
                "line": 317
              },
              {
                "function": "get",
                "line": 336
              },
              {
                "function": "info",
                "line": 374
              },
              {
                "function": "get",
                "line": 446
              },
              {
                "function": "get",
                "line": 448
              },
              {
                "function": "get",
                "line": 450
              },
              {
                "function": "get",
                "line": 452
              },
              {
                "function": "get",
                "line": 454
              },
              {
                "function": "len",
                "line": 458
              },
              {
                "function": "max",
                "line": 461
              },
              {
                "function": "len",
                "line": 467
              },
              {
                "function": "items",
                "line": 481
              },
              {
                "function": "join",
                "line": 487
              },
              {
                "function": "TaskRequest",
                "line": 491
              },
              {
                "function": "lower",
                "line": 67
              },
              {
                "function": "any",
                "line": 70
              },
              {
                "function": "any",
                "line": 74
              },
              {
                "function": "get",
                "line": 79
              },
              {
                "function": "info",
                "line": 146
              },
              {
                "function": "TaskResult",
                "line": 184
              },
              {
                "function": "search",
                "line": 234
              },
              {
                "function": "search",
                "line": 244
              },
              {
                "function": "lower",
                "line": 293
              },
              {
                "function": "append",
                "line": 294
              },
              {
                "function": "perform_global_error_search",
                "line": 308
              },
              {
                "function": "len",
                "line": 323
              },
              {
                "function": "enforce_global_error_search",
                "line": 331
              },
              {
                "function": "len",
                "line": 347
              },
              {
                "function": "len",
                "line": 348
              },
              {
                "function": "len",
                "line": 349
              },
              {
                "function": "exists",
                "line": 387
              },
              {
                "function": "get",
                "line": 442
              },
              {
                "function": "get",
                "line": 458
              },
              {
                "function": "min",
                "line": 461
              },
              {
                "function": "get",
                "line": 467
              },
              {
                "function": "isinstance",
                "line": 482
              },
              {
                "function": "execute",
                "line": 495
              },
              {
                "function": "super",
                "line": 53
              },
              {
                "function": "get",
                "line": 84
              },
              {
                "function": "get",
                "line": 85
              },
              {
                "function": "info",
                "line": 95
              },
              {
                "function": "get_completion",
                "line": 173
              },
              {
                "function": "Exception",
                "line": 182
              },
              {
                "function": "error",
                "line": 197
              },
              {
                "function": "TaskResult",
                "line": 198
              },
              {
                "function": "append",
                "line": 235
              },
              {
                "function": "append",
                "line": 245
              },
              {
                "function": "append",
                "line": 266
              },
              {
                "function": "append",
                "line": 340
              },
              {
                "function": "get",
                "line": 347
              },
              {
                "function": "BrowserTester",
                "line": 399
              },
              {
                "function": "_calculate_html_app_quality_score",
                "line": 407
              },
              {
                "function": "_get_recommendation",
                "line": 411
              },
              {
                "function": "info",
                "line": 413
              },
              {
                "function": "error",
                "line": 418
              },
              {
                "function": "append",
                "line": 484
              },
              {
                "function": "append",
                "line": 486
              },
              {
                "function": "get",
                "line": 492
              },
              {
                "function": "get",
                "line": 493
              },
              {
                "function": "endswith",
                "line": 89
              },
              {
                "function": "test_html_application",
                "line": 101
              },
              {
                "function": "info",
                "line": 104
              },
              {
                "function": "TaskResult",
                "line": 105
              },
              {
                "function": "warning",
                "line": 123
              },
              {
                "function": "TaskResult",
                "line": 124
              },
              {
                "function": "lower",
                "line": 181
              },
              {
                "function": "lower",
                "line": 181
              },
              {
                "function": "fix_function",
                "line": 339
              },
              {
                "function": "append",
                "line": 342
              },
              {
                "function": "isoformat",
                "line": 191
              },
              {
                "function": "enforce_global_error_search",
                "line": 277
              },
              {
                "function": "get",
                "line": 281
              },
              {
                "function": "append",
                "line": 282
              },
              {
                "function": "test_tetris_app",
                "line": 402
              },
              {
                "function": "test_generic_html_app",
                "line": 404
              },
              {
                "function": "str",
                "line": 342
              },
              {
                "function": "len",
                "line": 123
              },
              {
                "function": "now",
                "line": 191
              },
              {
                "function": "str",
                "line": 200
              },
              {
                "function": "str",
                "line": 421
              },
              {
                "function": "_format_metrics",
                "line": 113
              },
              {
                "function": "join",
                "line": 116
              },
              {
                "function": "join",
                "line": 132
              },
              {
                "function": "join",
                "line": 135
              },
              {
                "function": "join",
                "line": 138
              },
              {
                "function": "chr",
                "line": 116
              },
              {
                "function": "chr",
                "line": 132
              },
              {
                "function": "chr",
                "line": 135
              },
              {
                "function": "chr",
                "line": 138
              }
            ]
          },
          "backend/agents/specialized/tradestrat_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 28,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "ClaudeCodeConfig",
                  "super",
                  "is_available",
                  "ClaudeCodeService",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/tradestrat_agent.py"
              }
            ],
            "classes": [
              {
                "name": "TradeStratAgent",
                "line": 18,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/tradestrat_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "utils.claude_code_service",
                "names": [
                  "ClaudeCodeService",
                  "ClaudeCodeConfig"
                ],
                "line": 14
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 16
              },
              {
                "function": "AgentConfig",
                "line": 29
              },
              {
                "function": "__init__",
                "line": 44
              },
              {
                "function": "ClaudeCodeService",
                "line": 46
              },
              {
                "function": "TaskRequest",
                "line": 108
              },
              {
                "function": "ClaudeCodeConfig",
                "line": 47
              },
              {
                "function": "is_available",
                "line": 49
              },
              {
                "function": "error",
                "line": 50
              },
              {
                "function": "TaskResult",
                "line": 83
              },
              {
                "function": "execute",
                "line": 112
              },
              {
                "function": "super",
                "line": 44
              },
              {
                "function": "is_available",
                "line": 74
              },
              {
                "function": "Exception",
                "line": 75
              },
              {
                "function": "complete",
                "line": 77
              },
              {
                "function": "error",
                "line": 95
              },
              {
                "function": "TaskResult",
                "line": 96
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "get",
                "line": 110
              },
              {
                "function": "isoformat",
                "line": 90
              },
              {
                "function": "now",
                "line": 90
              }
            ]
          },
          "backend/agents/specialized/docubot_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 28,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "OpenAIService"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/docubot_agent.py"
              }
            ],
            "classes": [
              {
                "name": "DocuBotAgent",
                "line": 18,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/docubot_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 14
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 16
              },
              {
                "function": "AgentConfig",
                "line": 29
              },
              {
                "function": "__init__",
                "line": 43
              },
              {
                "function": "OpenAIService",
                "line": 44
              },
              {
                "function": "TaskRequest",
                "line": 97
              },
              {
                "function": "TaskResult",
                "line": 72
              },
              {
                "function": "execute",
                "line": 101
              },
              {
                "function": "super",
                "line": 43
              },
              {
                "function": "get_completion",
                "line": 62
              },
              {
                "function": "Exception",
                "line": 70
              },
              {
                "function": "error",
                "line": 83
              },
              {
                "function": "TaskResult",
                "line": 85
              },
              {
                "function": "get",
                "line": 98
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "lower",
                "line": 69
              },
              {
                "function": "lower",
                "line": 69
              },
              {
                "function": "isoformat",
                "line": 78
              },
              {
                "function": "now",
                "line": 78
              },
              {
                "function": "str",
                "line": 87
              }
            ]
          },
          "backend/agents/specialized/architect_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 116,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "super",
                  "VultureAnalyzer",
                  "getcwd",
                  "getenv",
                  "CacheNotAvailableError",
                  "RadonMetrics",
                  "abspath",
                  "SemgrepAnalyzer",
                  "start",
                  "LayerAnalyzer",
                  "_load_architecture_patterns",
                  "apply_capabilities_to_agent",
                  "dirname",
                  "ProjectCache",
                  "__init__",
                  "warning",
                  "LightweightCodeSearch",
                  "OpenAIService",
                  "info",
                  "TreeSitterIndexer",
                  "CallGraphAnalyzer",
                  "SmartFileWatcher",
                  "CodeIndexer",
                  "_load_tech_stacks",
                  "basename",
                  "DiagramService"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_parse_architecture_response",
                "line": 484,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "capitalize",
                  "ArchitectureDesign",
                  "lower",
                  "upper"
                ],
                "parameters": [
                  "self",
                  "response",
                  "requirements"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_extract_features",
                "line": 600,
                "async": false,
                "calls": [
                  "append",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_load_architecture_patterns",
                "line": 619,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "__del__",
                "line": 742,
                "async": false,
                "calls": [
                  "stop",
                  "info",
                  "error",
                  "hasattr"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_load_tech_stacks",
                "line": 754,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_generate_redis_config",
                "line": 845,
                "async": false,
                "calls": [
                  "now",
                  "get",
                  "isoformat",
                  "join",
                  "keys"
                ],
                "parameters": [
                  "self",
                  "params"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_generate_docker_compose",
                "line": 912,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "services"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "_detect_request_type",
                "line": 1391,
                "async": false,
                "calls": [
                  "any",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/architect_agent.py"
              }
            ],
            "classes": [
              {
                "name": "ArchitectureDesign",
                "line": 94,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/architect_agent.py"
              },
              {
                "name": "ArchitectAgent",
                "line": 106,
                "methods": [
                  "__init__",
                  "_parse_architecture_response",
                  "_extract_features",
                  "_load_architecture_patterns",
                  "__del__",
                  "_load_tech_stacks",
                  "_generate_redis_config",
                  "_generate_docker_compose",
                  "_detect_request_type"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/architect_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "config",
                "names": [
                  "settings"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 24
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 25
              },
              {
                "type": "from_import",
                "module": "core.exceptions",
                "names": [
                  "DependencyError"
                ],
                "line": 31
              },
              {
                "type": "from_import",
                "module": "services.project_cache",
                "names": [
                  "ProjectCache"
                ],
                "line": 34
              },
              {
                "type": "from_import",
                "module": "services.smart_file_watcher",
                "names": [
                  "SmartFileWatcher"
                ],
                "line": 35
              },
              {
                "type": "from_import",
                "module": "services.code_search",
                "names": [
                  "LightweightCodeSearch"
                ],
                "line": 36
              },
              {
                "type": "from_import",
                "module": "core.indexing.tree_sitter_indexer",
                "names": [
                  "TreeSitterIndexer"
                ],
                "line": 50
              },
              {
                "type": "from_import",
                "module": "core.indexing.code_indexer",
                "names": [
                  "CodeIndexer"
                ],
                "line": 51
              },
              {
                "type": "from_import",
                "module": "core.analysis.semgrep_analyzer",
                "names": [
                  "SemgrepAnalyzer"
                ],
                "line": 65
              },
              {
                "type": "from_import",
                "module": "core.analysis.vulture_analyzer",
                "names": [
                  "VultureAnalyzer"
                ],
                "line": 66
              },
              {
                "type": "from_import",
                "module": "core.analysis.radon_metrics",
                "names": [
                  "RadonMetrics"
                ],
                "line": 67
              },
              {
                "type": "from_import",
                "module": "core.analysis.call_graph_analyzer",
                "names": [
                  "CallGraphAnalyzer"
                ],
                "line": 68
              },
              {
                "type": "from_import",
                "module": "core.analysis.layer_analyzer",
                "names": [
                  "LayerAnalyzer"
                ],
                "line": 69
              },
              {
                "type": "from_import",
                "module": "services.diagram_service",
                "names": [
                  "DiagramService"
                ],
                "line": 86
              },
              {
                "type": "from_import",
                "module": "config.capabilities_loader",
                "names": [
                  "apply_capabilities_to_agent"
                ],
                "line": 134
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 1442
              },
              {
                "type": "from_import",
                "module": "core.exceptions",
                "names": [
                  "CacheNotAvailableError"
                ],
                "line": 165
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 376
              },
              {
                "type": "from_import",
                "module": "core.exceptions",
                "names": [
                  "SystemNotReadyError"
                ],
                "line": 434
              },
              {
                "type": "from_import",
                "module": "api.server",
                "names": [
                  "manager"
                ],
                "line": 1437
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 21
              },
              {
                "function": "append",
                "line": 26
              },
              {
                "function": "dirname",
                "line": 26
              },
              {
                "function": "info",
                "line": 53
              },
              {
                "function": "info",
                "line": 71
              },
              {
                "function": "info",
                "line": 88
              },
              {
                "function": "dirname",
                "line": 26
              },
              {
                "function": "warning",
                "line": 39
              },
              {
                "function": "warning",
                "line": 40
              },
              {
                "function": "warning",
                "line": 55
              },
              {
                "function": "warning",
                "line": 56
              },
              {
                "function": "warning",
                "line": 73
              },
              {
                "function": "warning",
                "line": 74
              },
              {
                "function": "warning",
                "line": 90
              },
              {
                "function": "AgentConfig",
                "line": 117
              },
              {
                "function": "__init__",
                "line": 139
              },
              {
                "function": "OpenAIService",
                "line": 146
              },
              {
                "function": "getenv",
                "line": 152
              },
              {
                "function": "abspath",
                "line": 155
              },
              {
                "function": "info",
                "line": 156
              },
              {
                "function": "TreeSitterIndexer",
                "line": 188
              },
              {
                "function": "CodeIndexer",
                "line": 189
              },
              {
                "function": "info",
                "line": 190
              },
              {
                "function": "_load_architecture_patterns",
                "line": 218
              },
              {
                "function": "_load_tech_stacks",
                "line": 221
              },
              {
                "function": "now",
                "line": 227
              },
              {
                "function": "_parse_architecture_response",
                "line": 482
              },
              {
                "function": "ArchitectureDesign",
                "line": 545
              },
              {
                "function": "append",
                "line": 562
              },
              {
                "function": "append",
                "line": 563
              },
              {
                "function": "append",
                "line": 564
              },
              {
                "function": "append",
                "line": 566
              },
              {
                "function": "append",
                "line": 573
              },
              {
                "function": "append",
                "line": 577
              },
              {
                "function": "append",
                "line": 581
              },
              {
                "function": "append",
                "line": 582
              },
              {
                "function": "append",
                "line": 583
              },
              {
                "function": "append",
                "line": 585
              },
              {
                "function": "append",
                "line": 586
              },
              {
                "function": "append",
                "line": 587
              },
              {
                "function": "append",
                "line": 589
              },
              {
                "function": "append",
                "line": 590
              },
              {
                "function": "append",
                "line": 592
              },
              {
                "function": "append",
                "line": 593
              },
              {
                "function": "append",
                "line": 595
              },
              {
                "function": "append",
                "line": 596
              },
              {
                "function": "join",
                "line": 598
              },
              {
                "function": "lower",
                "line": 612
              },
              {
                "function": "info",
                "line": 673
              },
              {
                "function": "info",
                "line": 692
              },
              {
                "function": "abspath",
                "line": 700
              },
              {
                "function": "info",
                "line": 738
              },
              {
                "function": "get",
                "line": 771
              },
              {
                "function": "info",
                "line": 994
              },
              {
                "function": "_detect_request_type",
                "line": 998
              },
              {
                "function": "info",
                "line": 999
              },
              {
                "function": "info",
                "line": 1002
              },
              {
                "function": "info",
                "line": 1021
              },
              {
                "function": "info",
                "line": 1077
              },
              {
                "function": "info",
                "line": 1119
              },
              {
                "function": "append",
                "line": 1170
              },
              {
                "function": "get",
                "line": 1173
              },
              {
                "function": "append",
                "line": 1174
              },
              {
                "function": "append",
                "line": 1175
              },
              {
                "function": "append",
                "line": 1176
              },
              {
                "function": "append",
                "line": 1177
              },
              {
                "function": "append",
                "line": 1178
              },
              {
                "function": "append",
                "line": 1179
              },
              {
                "function": "get",
                "line": 1182
              },
              {
                "function": "get",
                "line": 1189
              },
              {
                "function": "get",
                "line": 1201
              },
              {
                "function": "append",
                "line": 1202
              },
              {
                "function": "append",
                "line": 1203
              },
              {
                "function": "append",
                "line": 1204
              },
              {
                "function": "append",
                "line": 1205
              },
              {
                "function": "get",
                "line": 1208
              },
              {
                "function": "append",
                "line": 1213
              },
              {
                "function": "enumerate",
                "line": 1216
              },
              {
                "function": "get",
                "line": 1225
              },
              {
                "function": "join",
                "line": 1231
              },
              {
                "function": "get",
                "line": 1241
              },
              {
                "function": "get",
                "line": 1242
              },
              {
                "function": "get",
                "line": 1243
              },
              {
                "function": "get",
                "line": 1244
              },
              {
                "function": "append",
                "line": 1267
              },
              {
                "function": "append",
                "line": 1282
              },
              {
                "function": "append",
                "line": 1297
              },
              {
                "function": "get",
                "line": 1306
              },
              {
                "function": "append",
                "line": 1318
              },
              {
                "function": "get",
                "line": 1327
              },
              {
                "function": "append",
                "line": 1339
              },
              {
                "function": "get",
                "line": 1365
              },
              {
                "function": "get",
                "line": 1366
              },
              {
                "function": "get",
                "line": 1367
              },
              {
                "function": "items",
                "line": 1370
              },
              {
                "function": "lower",
                "line": 1393
              },
              {
                "function": "any",
                "line": 1396
              },
              {
                "function": "debug",
                "line": 1417
              },
              {
                "function": "get",
                "line": 1423
              },
              {
                "function": "dirname",
                "line": 26
              },
              {
                "function": "apply_capabilities_to_agent",
                "line": 135
              },
              {
                "function": "getcwd",
                "line": 151
              },
              {
                "function": "dirname",
                "line": 151
              },
              {
                "function": "info",
                "line": 162
              },
              {
                "function": "ProjectCache",
                "line": 163
              },
              {
                "function": "LightweightCodeSearch",
                "line": 173
              },
              {
                "function": "SmartFileWatcher",
                "line": 176
              },
              {
                "function": "start",
                "line": 177
              },
              {
                "function": "info",
                "line": 179
              },
              {
                "function": "warning",
                "line": 185
              },
              {
                "function": "SemgrepAnalyzer",
                "line": 193
              },
              {
                "function": "VultureAnalyzer",
                "line": 194
              },
              {
                "function": "RadonMetrics",
                "line": 195
              },
              {
                "function": "CallGraphAnalyzer",
                "line": 196
              },
              {
                "function": "LayerAnalyzer",
                "line": 197
              },
              {
                "function": "info",
                "line": 198
              },
              {
                "function": "warning",
                "line": 205
              },
              {
                "function": "DiagramService",
                "line": 208
              },
              {
                "function": "warning",
                "line": 211
              },
              {
                "function": "hasattr",
                "line": 232
              },
              {
                "function": "isinstance",
                "line": 249
              },
              {
                "function": "get",
                "line": 249
              },
              {
                "function": "isinstance",
                "line": 250
              },
              {
                "function": "get",
                "line": 250
              },
              {
                "function": "get",
                "line": 254
              },
              {
                "function": "abspath",
                "line": 255
              },
              {
                "function": "info",
                "line": 256
              },
              {
                "function": "join",
                "line": 270
              },
              {
                "function": "makedirs",
                "line": 271
              },
              {
                "function": "lower",
                "line": 277
              },
              {
                "function": "info",
                "line": 278
              },
              {
                "function": "info",
                "line": 279
              },
              {
                "function": "any",
                "line": 282
              },
              {
                "function": "total_seconds",
                "line": 360
              },
              {
                "function": "TaskResult",
                "line": 362
              },
              {
                "function": "complete",
                "line": 424
              },
              {
                "function": "loads",
                "line": 431
              },
              {
                "function": "complete",
                "line": 479
              },
              {
                "function": "lower",
                "line": 496
              },
              {
                "function": "lower",
                "line": 503
              },
              {
                "function": "append",
                "line": 504
              },
              {
                "function": "append",
                "line": 512
              },
              {
                "function": "lower",
                "line": 519
              },
              {
                "function": "append",
                "line": 520
              },
              {
                "function": "append",
                "line": 568
              },
              {
                "function": "append",
                "line": 569
              },
              {
                "function": "append",
                "line": 570
              },
              {
                "function": "append",
                "line": 571
              },
              {
                "function": "append",
                "line": 575
              },
              {
                "function": "append",
                "line": 579
              },
              {
                "function": "info",
                "line": 653
              },
              {
                "function": "invalidate",
                "line": 657
              },
              {
                "function": "info",
                "line": 658
              },
              {
                "function": "clear_all",
                "line": 661
              },
              {
                "function": "info",
                "line": 662
              },
              {
                "function": "_send_progress",
                "line": 674
              },
              {
                "function": "invalidate_cache",
                "line": 677
              },
              {
                "function": "understand_system",
                "line": 680
              },
              {
                "function": "_send_progress",
                "line": 693
              },
              {
                "function": "getcwd",
                "line": 700
              },
              {
                "function": "info",
                "line": 703
              },
              {
                "function": "info",
                "line": 715
              },
              {
                "function": "info",
                "line": 721
              },
              {
                "function": "info",
                "line": 727
              },
              {
                "function": "invalidate",
                "line": 734
              },
              {
                "function": "_send_progress",
                "line": 737
              },
              {
                "function": "get",
                "line": 772
              },
              {
                "function": "_generate_redis_config",
                "line": 790
              },
              {
                "function": "_generate_docker_compose",
                "line": 825
              },
              {
                "function": "warning",
                "line": 979
              },
              {
                "function": "get",
                "line": 987
              },
              {
                "function": "_send_progress",
                "line": 995
              },
              {
                "function": "_send_progress",
                "line": 1003
              },
              {
                "function": "get",
                "line": 1012
              },
              {
                "function": "_send_progress",
                "line": 1022
              },
              {
                "function": "get",
                "line": 1030
              },
              {
                "function": "get",
                "line": 1031
              },
              {
                "function": "get",
                "line": 1032
              },
              {
                "function": "get",
                "line": 1055
              },
              {
                "function": "info",
                "line": 1062
              },
              {
                "function": "get",
                "line": 1067
              },
              {
                "function": "info",
                "line": 1074
              },
              {
                "function": "_send_progress",
                "line": 1078
              },
              {
                "function": "get",
                "line": 1082
              },
              {
                "function": "isoformat",
                "line": 1107
              },
              {
                "function": "set",
                "line": 1112
              },
              {
                "function": "info",
                "line": 1113
              },
              {
                "function": "get",
                "line": 1131
              },
              {
                "function": "get",
                "line": 1132
              },
              {
                "function": "items",
                "line": 1134
              },
              {
                "function": "info",
                "line": 1149
              },
              {
                "function": "append",
                "line": 1183
              },
              {
                "function": "append",
                "line": 1184
              },
              {
                "function": "append",
                "line": 1185
              },
              {
                "function": "append",
                "line": 1186
              },
              {
                "function": "append",
                "line": 1191
              },
              {
                "function": "append",
                "line": 1198
              },
              {
                "function": "get",
                "line": 1209
              },
              {
                "function": "append",
                "line": 1210
              },
              {
                "function": "_generate_improvement_suggestions",
                "line": 1215
              },
              {
                "function": "append",
                "line": 1217
              },
              {
                "function": "append",
                "line": 1218
              },
              {
                "function": "append",
                "line": 1219
              },
              {
                "function": "append",
                "line": 1222
              },
              {
                "function": "append",
                "line": 1226
              },
              {
                "function": "append",
                "line": 1227
              },
              {
                "function": "append",
                "line": 1228
              },
              {
                "function": "append",
                "line": 1229
              },
              {
                "function": "_check_for_technology",
                "line": 1247
              },
              {
                "function": "_check_for_technology",
                "line": 1248
              },
              {
                "function": "append",
                "line": 1252
              },
              {
                "function": "get",
                "line": 1307
              },
              {
                "function": "append",
                "line": 1308
              },
              {
                "function": "append",
                "line": 1329
              },
              {
                "function": "generate_architecture_diagram",
                "line": 1384
              },
              {
                "function": "any",
                "line": 1398
              },
              {
                "function": "debug",
                "line": 1419
              },
              {
                "function": "debug",
                "line": 1425
              },
              {
                "function": "debug",
                "line": 1443
              },
              {
                "function": "debug",
                "line": 1444
              },
              {
                "function": "abspath",
                "line": 26
              },
              {
                "function": "super",
                "line": 139
              },
              {
                "function": "basename",
                "line": 151
              },
              {
                "function": "getcwd",
                "line": 151
              },
              {
                "function": "CacheNotAvailableError",
                "line": 166
              },
              {
                "function": "isinstance",
                "line": 236
              },
              {
                "function": "getcwd",
                "line": 254
              },
              {
                "function": "hasattr",
                "line": 259
              },
              {
                "function": "getattr",
                "line": 260
              },
              {
                "function": "_send_progress",
                "line": 274
              },
              {
                "function": "info",
                "line": 283
              },
              {
                "function": "info",
                "line": 286
              },
              {
                "function": "error",
                "line": 375
              },
              {
                "function": "error",
                "line": 377
              },
              {
                "function": "TaskResult",
                "line": 385
              },
              {
                "function": "SystemNotReadyError",
                "line": 435
              },
              {
                "function": "dumps",
                "line": 464
              },
              {
                "function": "lower",
                "line": 498
              },
              {
                "function": "lower",
                "line": 511
              },
              {
                "function": "lower",
                "line": 511
              },
              {
                "function": "lower",
                "line": 533
              },
              {
                "function": "append",
                "line": 534
              },
              {
                "function": "lower",
                "line": 542
              },
              {
                "function": "append",
                "line": 543
              },
              {
                "function": "get",
                "line": 546
              },
              {
                "function": "append",
                "line": 615
              },
              {
                "function": "refresh_analysis",
                "line": 697
              },
              {
                "function": "_send_progress",
                "line": 704
              },
              {
                "function": "invalidate",
                "line": 706
              },
              {
                "function": "build_full_index",
                "line": 710
              },
              {
                "function": "set",
                "line": 712
              },
              {
                "function": "_send_progress",
                "line": 716
              },
              {
                "function": "invalidate",
                "line": 718
              },
              {
                "function": "_send_progress",
                "line": 722
              },
              {
                "function": "invalidate",
                "line": 724
              },
              {
                "function": "_send_progress",
                "line": 728
              },
              {
                "function": "invalidate",
                "line": 730
              },
              {
                "function": "hasattr",
                "line": 748
              },
              {
                "function": "stop",
                "line": 749
              },
              {
                "function": "info",
                "line": 750
              },
              {
                "function": "error",
                "line": 752
              },
              {
                "function": "execute",
                "line": 773
              },
              {
                "function": "write_implementation",
                "line": 793
              },
              {
                "function": "get",
                "line": 795
              },
              {
                "function": "info",
                "line": 796
              },
              {
                "function": "error",
                "line": 803
              },
              {
                "function": "write_implementation",
                "line": 828
              },
              {
                "function": "get",
                "line": 830
              },
              {
                "function": "info",
                "line": 831
              },
              {
                "function": "error",
                "line": 838
              },
              {
                "function": "get",
                "line": 853
              },
              {
                "function": "get",
                "line": 854
              },
              {
                "function": "isoformat",
                "line": 907
              },
              {
                "function": "info",
                "line": 989
              },
              {
                "function": "_send_progress",
                "line": 1007
              },
              {
                "function": "build_full_index",
                "line": 1015
              },
              {
                "function": "set",
                "line": 1018
              },
              {
                "function": "_send_progress",
                "line": 1035
              },
              {
                "function": "run_analysis",
                "line": 1036
              },
              {
                "function": "set",
                "line": 1038
              },
              {
                "function": "_send_progress",
                "line": 1041
              },
              {
                "function": "find_dead_code",
                "line": 1042
              },
              {
                "function": "set",
                "line": 1044
              },
              {
                "function": "_send_progress",
                "line": 1047
              },
              {
                "function": "calculate_all_metrics",
                "line": 1048
              },
              {
                "function": "set",
                "line": 1050
              },
              {
                "function": "_send_progress",
                "line": 1058
              },
              {
                "function": "build_call_graph",
                "line": 1059
              },
              {
                "function": "set",
                "line": 1061
              },
              {
                "function": "_send_progress",
                "line": 1070
              },
              {
                "function": "detect_system_layers",
                "line": 1071
              },
              {
                "function": "set",
                "line": 1073
              },
              {
                "function": "set",
                "line": 1096
              },
              {
                "function": "_index_functions_for_search",
                "line": 1117
              },
              {
                "function": "get",
                "line": 1135
              },
              {
                "function": "error",
                "line": 1151
              },
              {
                "function": "understand_system",
                "line": 1160
              },
              {
                "function": "get",
                "line": 1182
              },
              {
                "function": "get",
                "line": 1192
              },
              {
                "function": "append",
                "line": 1193
              },
              {
                "function": "get",
                "line": 1194
              },
              {
                "function": "append",
                "line": 1195
              },
              {
                "function": "get",
                "line": 1196
              },
              {
                "function": "append",
                "line": 1197
              },
              {
                "function": "append",
                "line": 1221
              },
              {
                "function": "get",
                "line": 1225
              },
              {
                "function": "get",
                "line": 1328
              },
              {
                "function": "get",
                "line": 1328
              },
              {
                "function": "hasattr",
                "line": 1358
              },
              {
                "function": "warning",
                "line": 1362
              },
              {
                "function": "lower",
                "line": 1371
              },
              {
                "function": "lower",
                "line": 1371
              },
              {
                "function": "understand_system",
                "line": 1381
              },
              {
                "function": "any",
                "line": 1400
              },
              {
                "function": "debug",
                "line": 1435
              },
              {
                "function": "error",
                "line": 1464
              },
              {
                "function": "getcwd",
                "line": 151
              },
              {
                "function": "info",
                "line": 262
              },
              {
                "function": "stop",
                "line": 263
              },
              {
                "function": "ProjectCache",
                "line": 265
              },
              {
                "function": "SmartFileWatcher",
                "line": 266
              },
              {
                "function": "start",
                "line": 267
              },
              {
                "function": "info",
                "line": 268
              },
              {
                "function": "_send_progress",
                "line": 284
              },
              {
                "function": "info",
                "line": 288
              },
              {
                "function": "join",
                "line": 292
              },
              {
                "function": "append",
                "line": 295
              },
              {
                "function": "info",
                "line": 296
              },
              {
                "function": "warning",
                "line": 299
              },
              {
                "function": "info",
                "line": 304
              },
              {
                "function": "info",
                "line": 324
              },
              {
                "function": "locals",
                "line": 339
              },
              {
                "function": "analyze_requirements",
                "line": 355
              },
              {
                "function": "design_architecture",
                "line": 356
              },
              {
                "function": "generate_documentation",
                "line": 357
              },
              {
                "function": "capitalize",
                "line": 534
              },
              {
                "function": "upper",
                "line": 543
              },
              {
                "function": "get",
                "line": 582
              },
              {
                "function": "get",
                "line": 583
              },
              {
                "function": "get",
                "line": 586
              },
              {
                "function": "get",
                "line": 587
              },
              {
                "function": "_send_progress",
                "line": 709
              },
              {
                "function": "TaskRequest",
                "line": 773
              },
              {
                "function": "str",
                "line": 806
              },
              {
                "function": "str",
                "line": 841
              },
              {
                "function": "join",
                "line": 908
              },
              {
                "function": "_send_progress",
                "line": 990
              },
              {
                "function": "generate_architecture_diagram",
                "line": 1086
              },
              {
                "function": "generate_architecture_diagram",
                "line": 1087
              },
              {
                "function": "generate_architecture_diagram",
                "line": 1088
              },
              {
                "function": "generate_dependency_graph",
                "line": 1089
              },
              {
                "function": "generate_sequence_diagram",
                "line": 1092
              },
              {
                "function": "generate_state_diagram",
                "line": 1093
              },
              {
                "function": "now",
                "line": 1107
              },
              {
                "function": "len",
                "line": 1119
              },
              {
                "function": "get",
                "line": 1175
              },
              {
                "function": "get",
                "line": 1176
              },
              {
                "function": "get",
                "line": 1177
              },
              {
                "function": "get",
                "line": 1178
              },
              {
                "function": "get",
                "line": 1179
              },
              {
                "function": "get",
                "line": 1203
              },
              {
                "function": "get",
                "line": 1204
              },
              {
                "function": "get",
                "line": 1205
              },
              {
                "function": "search_pattern",
                "line": 1359
              },
              {
                "function": "len",
                "line": 1360
              },
              {
                "function": "any",
                "line": 1402
              },
              {
                "function": "info",
                "line": 1448
              },
              {
                "function": "info",
                "line": 1455
              },
              {
                "function": "warning",
                "line": 1460
              },
              {
                "function": "warning",
                "line": 1462
              },
              {
                "function": "loads",
                "line": 239
              },
              {
                "function": "info",
                "line": 240
              },
              {
                "function": "isinstance",
                "line": 244
              },
              {
                "function": "warning",
                "line": 245
              },
              {
                "function": "understand_system",
                "line": 289
              },
              {
                "function": "open",
                "line": 293
              },
              {
                "function": "dump",
                "line": 294
              },
              {
                "function": "analyze_requirements",
                "line": 300
              },
              {
                "function": "join",
                "line": 314
              },
              {
                "function": "append",
                "line": 317
              },
              {
                "function": "info",
                "line": 318
              },
              {
                "function": "join",
                "line": 330
              },
              {
                "function": "append",
                "line": 333
              },
              {
                "function": "info",
                "line": 334
              },
              {
                "function": "now",
                "line": 360
              },
              {
                "function": "str",
                "line": 380
              },
              {
                "function": "type",
                "line": 381
              },
              {
                "function": "now",
                "line": 907
              },
              {
                "function": "keys",
                "line": 908
              },
              {
                "function": "len",
                "line": 1074
              },
              {
                "function": "get",
                "line": 1090
              },
              {
                "function": "get",
                "line": 1119
              },
              {
                "function": "get",
                "line": 1139
              },
              {
                "function": "get",
                "line": 1140
              },
              {
                "function": "get",
                "line": 1141
              },
              {
                "function": "get",
                "line": 1143
              },
              {
                "function": "get",
                "line": 1144
              },
              {
                "function": "get",
                "line": 1145
              },
              {
                "function": "index_function",
                "line": 1147
              },
              {
                "function": "get",
                "line": 1314
              },
              {
                "function": "get",
                "line": 1335
              },
              {
                "function": "str",
                "line": 1371
              },
              {
                "function": "any",
                "line": 1404
              },
              {
                "function": "warning",
                "line": 1439
              },
              {
                "function": "send_json",
                "line": 1449
              },
              {
                "function": "error",
                "line": 1457
              },
              {
                "function": "warning",
                "line": 242
              },
              {
                "function": "analyze_infrastructure_improvements",
                "line": 308
              },
              {
                "function": "open",
                "line": 315
              },
              {
                "function": "write",
                "line": 316
              },
              {
                "function": "generate_architecture_flowchart",
                "line": 327
              },
              {
                "function": "open",
                "line": 331
              },
              {
                "function": "write",
                "line": 332
              },
              {
                "function": "len",
                "line": 340
              },
              {
                "function": "analyze_requirements",
                "line": 346
              },
              {
                "function": "design_architecture",
                "line": 347
              },
              {
                "function": "generate_documentation",
                "line": 348
              },
              {
                "function": "format_exc",
                "line": 377
              },
              {
                "function": "hasattr",
                "line": 382
              },
              {
                "function": "type",
                "line": 382
              },
              {
                "function": "hasattr",
                "line": 383
              },
              {
                "function": "repr",
                "line": 383
              },
              {
                "function": "get",
                "line": 1142
              },
              {
                "function": "get",
                "line": 1309
              },
              {
                "function": "any",
                "line": 1406
              },
              {
                "function": "list",
                "line": 1444
              },
              {
                "function": "basename",
                "line": 342
              },
              {
                "function": "str",
                "line": 437
              },
              {
                "function": "get",
                "line": 1119
              },
              {
                "function": "get",
                "line": 1330
              },
              {
                "function": "get",
                "line": 1330
              },
              {
                "function": "any",
                "line": 1408
              },
              {
                "function": "keys",
                "line": 1444
              },
              {
                "function": "isoformat",
                "line": 1453
              },
              {
                "function": "list",
                "line": 1462
              },
              {
                "function": "type",
                "line": 245
              },
              {
                "function": "any",
                "line": 1410
              },
              {
                "function": "keys",
                "line": 1462
              },
              {
                "function": "now",
                "line": 1453
              }
            ]
          },
          "backend/agents/specialized/codesmith_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 89,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "ClaudeCodeConfig",
                  "super",
                  "VultureAnalyzer",
                  "TreeSitterIndexer",
                  "apply_capabilities_to_agent",
                  "is_available",
                  "CodeIndexer",
                  "warning",
                  "ClaudeCodeService",
                  "RadonMetrics",
                  "DiagramService",
                  "error",
                  "_load_language_configs",
                  "_load_code_patterns"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "format_implementation",
                "line": 890,
                "async": false,
                "calls": [
                  "join",
                  "append"
                ],
                "parameters": [
                  "self",
                  "implementation"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_detect_language",
                "line": 926,
                "async": false,
                "calls": [
                  "lower",
                  "items"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_extract_functionality",
                "line": 953,
                "async": false,
                "calls": [
                  "split",
                  "lower",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "response"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_assess_complexity",
                "line": 965,
                "async": false,
                "calls": [
                  "any",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_generate_filename",
                "line": 978,
                "async": false,
                "calls": [
                  "split",
                  "get",
                  "join",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "prompt",
                  "language"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_extract_dependencies",
                "line": 1004,
                "async": false,
                "calls": [
                  "list",
                  "startswith",
                  "findall",
                  "split",
                  "set"
                ],
                "parameters": [
                  "self",
                  "code",
                  "language"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_get_test_framework",
                "line": 1027,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "language"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_load_code_patterns",
                "line": 1046,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_load_language_configs",
                "line": 1068,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_generate_fix_suggestion",
                "line": 1681,
                "async": false,
                "calls": [
                  "join",
                  "append"
                ],
                "parameters": [
                  "self",
                  "issues",
                  "line_content"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_check_for_hallucination",
                "line": 1769,
                "async": false,
                "calls": [
                  "error",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "content"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_validate_workspace_context",
                "line": 1791,
                "async": false,
                "calls": [
                  "info",
                  "getcwd",
                  "warning",
                  "join",
                  "exists"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_enforce_asimov_rule_1",
                "line": 1825,
                "async": false,
                "calls": [
                  "info",
                  "warning",
                  "any",
                  "ValueError",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_extract_file_path",
                "line": 1978,
                "async": false,
                "calls": [
                  "search",
                  "group"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_generate_file_path",
                "line": 1995,
                "async": false,
                "calls": [
                  "lower",
                  "_extract_feature_name"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "_extract_feature_name",
                "line": 2028,
                "async": false,
                "calls": [
                  "findall",
                  "replace",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "prompt"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              }
            ],
            "classes": [
              {
                "name": "CodeImplementation",
                "line": 69,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/codesmith_agent.py"
              },
              {
                "name": "CodeSmithAgent",
                "line": 79,
                "methods": [
                  "__init__",
                  "format_implementation",
                  "_detect_language",
                  "_extract_functionality",
                  "_assess_complexity",
                  "_generate_filename",
                  "_extract_dependencies",
                  "_get_test_framework",
                  "_load_code_patterns",
                  "_load_language_configs",
                  "_generate_fix_suggestion",
                  "_check_for_hallucination",
                  "_validate_workspace_context",
                  "_enforce_asimov_rule_1",
                  "_extract_file_path",
                  "_generate_file_path",
                  "_extract_feature_name"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/codesmith_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "utils.claude_code_service",
                "names": [
                  "ClaudeCodeService",
                  "ClaudeCodeConfig"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 23
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 24
              },
              {
                "type": "from_import",
                "module": "core.exceptions",
                "names": [
                  "DependencyError"
                ],
                "line": 30
              },
              {
                "type": "from_import",
                "module": "core.indexing.tree_sitter_indexer",
                "names": [
                  "TreeSitterIndexer"
                ],
                "line": 33
              },
              {
                "type": "from_import",
                "module": "core.indexing.code_indexer",
                "names": [
                  "CodeIndexer"
                ],
                "line": 34
              },
              {
                "type": "from_import",
                "module": "core.analysis.vulture_analyzer",
                "names": [
                  "VultureAnalyzer"
                ],
                "line": 47
              },
              {
                "type": "from_import",
                "module": "core.analysis.radon_metrics",
                "names": [
                  "RadonMetrics"
                ],
                "line": 48
              },
              {
                "type": "from_import",
                "module": "services.diagram_service",
                "names": [
                  "DiagramService"
                ],
                "line": 61
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 1795
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 1980
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 2030
              },
              {
                "type": "from_import",
                "module": "config.capabilities_loader",
                "names": [
                  "apply_capabilities_to_agent"
                ],
                "line": 108
              },
              {
                "type": "from_import",
                "module": "agents.agent_registry",
                "names": [
                  "get_agent_registry"
                ],
                "line": 1240
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 1597
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 2106
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 20
              },
              {
                "function": "append",
                "line": 25
              },
              {
                "function": "dirname",
                "line": 25
              },
              {
                "function": "info",
                "line": 36
              },
              {
                "function": "info",
                "line": 50
              },
              {
                "function": "info",
                "line": 63
              },
              {
                "function": "dirname",
                "line": 25
              },
              {
                "function": "warning",
                "line": 38
              },
              {
                "function": "warning",
                "line": 52
              },
              {
                "function": "warning",
                "line": 65
              },
              {
                "function": "AgentConfig",
                "line": 90
              },
              {
                "function": "__init__",
                "line": 113
              },
              {
                "function": "ClaudeCodeService",
                "line": 116
              },
              {
                "function": "_load_code_patterns",
                "line": 160
              },
              {
                "function": "_load_language_configs",
                "line": 163
              },
              {
                "function": "now",
                "line": 169
              },
              {
                "function": "_detect_language",
                "line": 317
              },
              {
                "function": "get",
                "line": 367
              },
              {
                "function": "_generate_filename",
                "line": 403
              },
              {
                "function": "_extract_dependencies",
                "line": 406
              },
              {
                "function": "CodeImplementation",
                "line": 408
              },
              {
                "function": "_get_test_framework",
                "line": 421
              },
              {
                "function": "join",
                "line": 573
              },
              {
                "function": "join",
                "line": 576
              },
              {
                "function": "exists",
                "line": 578
              },
              {
                "function": "join",
                "line": 614
              },
              {
                "function": "append",
                "line": 617
              },
              {
                "function": "info",
                "line": 618
              },
              {
                "function": "join",
                "line": 660
              },
              {
                "function": "append",
                "line": 663
              },
              {
                "function": "info",
                "line": 664
              },
              {
                "function": "join",
                "line": 801
              },
              {
                "function": "makedirs",
                "line": 802
              },
              {
                "function": "append",
                "line": 805
              },
              {
                "function": "info",
                "line": 806
              },
              {
                "function": "join",
                "line": 881
              },
              {
                "function": "makedirs",
                "line": 882
              },
              {
                "function": "append",
                "line": 885
              },
              {
                "function": "info",
                "line": 886
              },
              {
                "function": "append",
                "line": 895
              },
              {
                "function": "append",
                "line": 896
              },
              {
                "function": "append",
                "line": 897
              },
              {
                "function": "append",
                "line": 898
              },
              {
                "function": "append",
                "line": 906
              },
              {
                "function": "append",
                "line": 907
              },
              {
                "function": "append",
                "line": 908
              },
              {
                "function": "append",
                "line": 909
              },
              {
                "function": "append",
                "line": 921
              },
              {
                "function": "append",
                "line": 922
              },
              {
                "function": "join",
                "line": 924
              },
              {
                "function": "lower",
                "line": 930
              },
              {
                "function": "items",
                "line": 945
              },
              {
                "function": "split",
                "line": 958
              },
              {
                "function": "lower",
                "line": 969
              },
              {
                "function": "any",
                "line": 971
              },
              {
                "function": "list",
                "line": 1023
              },
              {
                "function": "get",
                "line": 1044
              },
              {
                "function": "info",
                "line": 1107
              },
              {
                "function": "get",
                "line": 1113
              },
              {
                "function": "get",
                "line": 1163
              },
              {
                "function": "get",
                "line": 1164
              },
              {
                "function": "get",
                "line": 1167
              },
              {
                "function": "get",
                "line": 1200
              },
              {
                "function": "get",
                "line": 1287
              },
              {
                "function": "get",
                "line": 1288
              },
              {
                "function": "get",
                "line": 1325
              },
              {
                "function": "items",
                "line": 1329
              },
              {
                "function": "get",
                "line": 1358
              },
              {
                "function": "get",
                "line": 1388
              },
              {
                "function": "now",
                "line": 1400
              },
              {
                "function": "info",
                "line": 1401
              },
              {
                "function": "info",
                "line": 1507
              },
              {
                "function": "info",
                "line": 1594
              },
              {
                "function": "info",
                "line": 1700
              },
              {
                "function": "lower",
                "line": 1782
              },
              {
                "function": "getcwd",
                "line": 1804
              },
              {
                "function": "warning",
                "line": 1817
              },
              {
                "function": "any",
                "line": 1840
              },
              {
                "function": "info",
                "line": 1843
              },
              {
                "function": "lower",
                "line": 1997
              },
              {
                "function": "_extract_feature_name",
                "line": 2014
              },
              {
                "function": "findall",
                "line": 2037
              },
              {
                "function": "info",
                "line": 2061
              },
              {
                "function": "info",
                "line": 2062
              },
              {
                "function": "info",
                "line": 2063
              },
              {
                "function": "dirname",
                "line": 25
              },
              {
                "function": "apply_capabilities_to_agent",
                "line": 109
              },
              {
                "function": "ClaudeCodeConfig",
                "line": 117
              },
              {
                "function": "is_available",
                "line": 124
              },
              {
                "function": "error",
                "line": 130
              },
              {
                "function": "TreeSitterIndexer",
                "line": 135
              },
              {
                "function": "CodeIndexer",
                "line": 136
              },
              {
                "function": "warning",
                "line": 140
              },
              {
                "function": "VultureAnalyzer",
                "line": 143
              },
              {
                "function": "RadonMetrics",
                "line": 144
              },
              {
                "function": "warning",
                "line": 148
              },
              {
                "function": "DiagramService",
                "line": 151
              },
              {
                "function": "warning",
                "line": 154
              },
              {
                "function": "_validate_workspace_context",
                "line": 174
              },
              {
                "function": "get",
                "line": 180
              },
              {
                "function": "lower",
                "line": 181
              },
              {
                "function": "any",
                "line": 201
              },
              {
                "function": "any",
                "line": 230
              },
              {
                "function": "total_seconds",
                "line": 291
              },
              {
                "function": "TaskResult",
                "line": 293
              },
              {
                "function": "is_available",
                "line": 345
              },
              {
                "function": "Exception",
                "line": 346
              },
              {
                "function": "complete",
                "line": 348
              },
              {
                "function": "_extract_functionality",
                "line": 353
              },
              {
                "function": "_assess_complexity",
                "line": 356
              },
              {
                "function": "is_available",
                "line": 393
              },
              {
                "function": "Exception",
                "line": 394
              },
              {
                "function": "generate_code",
                "line": 396
              },
              {
                "function": "is_available",
                "line": 447
              },
              {
                "function": "Exception",
                "line": 448
              },
              {
                "function": "complete",
                "line": 450
              },
              {
                "function": "is_available",
                "line": 482
              },
              {
                "function": "Exception",
                "line": 483
              },
              {
                "function": "complete",
                "line": 485
              },
              {
                "function": "is_available",
                "line": 524
              },
              {
                "function": "Exception",
                "line": 525
              },
              {
                "function": "complete",
                "line": 527
              },
              {
                "function": "is_available",
                "line": 561
              },
              {
                "function": "Exception",
                "line": 562
              },
              {
                "function": "complete",
                "line": 564
              },
              {
                "function": "open",
                "line": 615
              },
              {
                "function": "write",
                "line": 616
              },
              {
                "function": "open",
                "line": 661
              },
              {
                "function": "write",
                "line": 662
              },
              {
                "function": "dirname",
                "line": 802
              },
              {
                "function": "open",
                "line": 803
              },
              {
                "function": "write",
                "line": 804
              },
              {
                "function": "dirname",
                "line": 882
              },
              {
                "function": "open",
                "line": 883
              },
              {
                "function": "write",
                "line": 884
              },
              {
                "function": "append",
                "line": 901
              },
              {
                "function": "append",
                "line": 904
              },
              {
                "function": "append",
                "line": 912
              },
              {
                "function": "append",
                "line": 913
              },
              {
                "function": "append",
                "line": 914
              },
              {
                "function": "append",
                "line": 915
              },
              {
                "function": "append",
                "line": 918
              },
              {
                "function": "append",
                "line": 919
              },
              {
                "function": "any",
                "line": 973
              },
              {
                "function": "split",
                "line": 996
              },
              {
                "function": "join",
                "line": 997
              },
              {
                "function": "get",
                "line": 1002
              },
              {
                "function": "findall",
                "line": 1013
              },
              {
                "function": "set",
                "line": 1023
              },
              {
                "function": "warning",
                "line": 1101
              },
              {
                "function": "build_full_index",
                "line": 1110
              },
              {
                "function": "find_dead_code",
                "line": 1116
              },
              {
                "function": "calculate_all_metrics",
                "line": 1119
              },
              {
                "function": "info",
                "line": 1134
              },
              {
                "function": "isinstance",
                "line": 1169
              },
              {
                "function": "complete",
                "line": 1188
              },
              {
                "function": "identify_refactoring_candidates",
                "line": 1203
              },
              {
                "function": "get_agent_registry",
                "line": 1241
              },
              {
                "function": "get_agent",
                "line": 1242
              },
              {
                "function": "any",
                "line": 1258
              },
              {
                "function": "append",
                "line": 1307
              },
              {
                "function": "get",
                "line": 1330
              },
              {
                "function": "process_message",
                "line": 1346
              },
              {
                "function": "get",
                "line": 1360
              },
              {
                "function": "generate_cleanup_script",
                "line": 1364
              },
              {
                "function": "get",
                "line": 1389
              },
              {
                "function": "join",
                "line": 1405
              },
              {
                "function": "find",
                "line": 1422
              },
              {
                "function": "info",
                "line": 1432
              },
              {
                "function": "info",
                "line": 1455
              },
              {
                "function": "find",
                "line": 1538
              },
              {
                "function": "rfind",
                "line": 1547
              },
              {
                "function": "info",
                "line": 1574
              },
              {
                "function": "max",
                "line": 1604
              },
              {
                "function": "min",
                "line": 1605
              },
              {
                "function": "run",
                "line": 1609
              },
              {
                "function": "join",
                "line": 1693
              },
              {
                "function": "append",
                "line": 1710
              },
              {
                "function": "_load_code_patterns",
                "line": 1741
              },
              {
                "function": "append",
                "line": 1742
              },
              {
                "function": "join",
                "line": 1745
              },
              {
                "function": "exists",
                "line": 1746
              },
              {
                "function": "info",
                "line": 1761
              },
              {
                "function": "join",
                "line": 1807
              },
              {
                "function": "exists",
                "line": 1808
              },
              {
                "function": "ValueError",
                "line": 1831
              },
              {
                "function": "warning",
                "line": 1841
              },
              {
                "function": "startswith",
                "line": 1880
              },
              {
                "function": "lower",
                "line": 1899
              },
              {
                "function": "any",
                "line": 1924
              },
              {
                "function": "strip",
                "line": 1956
              },
              {
                "function": "startswith",
                "line": 1965
              },
              {
                "function": "join",
                "line": 1969
              },
              {
                "function": "info",
                "line": 1970
              },
              {
                "function": "search",
                "line": 1989
              },
              {
                "function": "lower",
                "line": 2037
              },
              {
                "function": "replace",
                "line": 2042
              },
              {
                "function": "info",
                "line": 2067
              },
              {
                "function": "info",
                "line": 2078
              },
              {
                "function": "info",
                "line": 2081
              },
              {
                "function": "abspath",
                "line": 25
              },
              {
                "function": "super",
                "line": 113
              },
              {
                "function": "warning",
                "line": 176
              },
              {
                "function": "getcwd",
                "line": 180
              },
              {
                "function": "info",
                "line": 185
              },
              {
                "function": "_check_for_hallucination",
                "line": 189
              },
              {
                "function": "info",
                "line": 202
              },
              {
                "function": "total_seconds",
                "line": 205
              },
              {
                "function": "TaskResult",
                "line": 214
              },
              {
                "function": "_ai_detect_implementation_request",
                "line": 227
              },
              {
                "function": "total_seconds",
                "line": 236
              },
              {
                "function": "TaskResult",
                "line": 238
              },
              {
                "function": "_enforce_asimov_rule_1",
                "line": 256
              },
              {
                "function": "info",
                "line": 259
              },
              {
                "function": "error",
                "line": 305
              },
              {
                "function": "TaskResult",
                "line": 306
              },
              {
                "function": "get",
                "line": 413
              },
              {
                "function": "append",
                "line": 903
              },
              {
                "function": "lower",
                "line": 960
              },
              {
                "function": "strip",
                "line": 961
              },
              {
                "function": "findall",
                "line": 1019
              },
              {
                "function": "str",
                "line": 1173
              },
              {
                "function": "get",
                "line": 1178
              },
              {
                "function": "join",
                "line": 1179
              },
              {
                "function": "analyze_codebase",
                "line": 1198
              },
              {
                "function": "append",
                "line": 1222
              },
              {
                "function": "warning",
                "line": 1245
              },
              {
                "function": "any",
                "line": 1252
              },
              {
                "function": "append",
                "line": 1259
              },
              {
                "function": "info",
                "line": 1267
              },
              {
                "function": "info",
                "line": 1273
              },
              {
                "function": "warning",
                "line": 1275
              },
              {
                "function": "analyze_codebase",
                "line": 1285
              },
              {
                "function": "process_message",
                "line": 1305
              },
              {
                "function": "analyze_codebase",
                "line": 1322
              },
              {
                "function": "get",
                "line": 1325
              },
              {
                "function": "append",
                "line": 1332
              },
              {
                "function": "dumps",
                "line": 1341
              },
              {
                "function": "analyze_codebase",
                "line": 1356
              },
              {
                "function": "execute",
                "line": 1390
              },
              {
                "function": "exists",
                "line": 1408
              },
              {
                "function": "error",
                "line": 1409
              },
              {
                "function": "TaskResult",
                "line": 1410
              },
              {
                "function": "open",
                "line": 1418
              },
              {
                "function": "read",
                "line": 1419
              },
              {
                "function": "error",
                "line": 1424
              },
              {
                "function": "TaskResult",
                "line": 1425
              },
              {
                "function": "_direct_button_implementation",
                "line": 1456
              },
              {
                "function": "info",
                "line": 1460
              },
              {
                "function": "get",
                "line": 1470
              },
              {
                "function": "total_seconds",
                "line": 1471
              },
              {
                "function": "TaskResult",
                "line": 1472
              },
              {
                "function": "TaskResult",
                "line": 1486
              },
              {
                "function": "error",
                "line": 1494
              },
              {
                "function": "TaskResult",
                "line": 1495
              },
              {
                "function": "open",
                "line": 1511
              },
              {
                "function": "read",
                "line": 1512
              },
              {
                "function": "info",
                "line": 1516
              },
              {
                "function": "error",
                "line": 1540
              },
              {
                "function": "open",
                "line": 1571
              },
              {
                "function": "write",
                "line": 1572
              },
              {
                "function": "error",
                "line": 1583
              },
              {
                "function": "open",
                "line": 1600
              },
              {
                "function": "readlines",
                "line": 1601
              },
              {
                "function": "len",
                "line": 1605
              },
              {
                "function": "split",
                "line": 1621
              },
              {
                "function": "len",
                "line": 1626
              },
              {
                "function": "error",
                "line": 1675
              },
              {
                "function": "append",
                "line": 1687
              },
              {
                "function": "error",
                "line": 1765
              },
              {
                "function": "append",
                "line": 1766
              },
              {
                "function": "lower",
                "line": 1784
              },
              {
                "function": "error",
                "line": 1785
              },
              {
                "function": "error",
                "line": 1786
              },
              {
                "function": "info",
                "line": 1809
              },
              {
                "function": "complete",
                "line": 1878
              },
              {
                "function": "info",
                "line": 1882
              },
              {
                "function": "info",
                "line": 1884
              },
              {
                "function": "error",
                "line": 1888
              },
              {
                "function": "Exception",
                "line": 1890
              },
              {
                "function": "info",
                "line": 1903
              },
              {
                "function": "join",
                "line": 1904
              },
              {
                "function": "walk",
                "line": 1909
              },
              {
                "function": "join",
                "line": 1921
              },
              {
                "function": "_extract_feature_name",
                "line": 1930
              },
              {
                "function": "join",
                "line": 1932
              },
              {
                "function": "info",
                "line": 1933
              },
              {
                "function": "complete",
                "line": 1954
              },
              {
                "function": "_extract_feature_name",
                "line": 1961
              },
              {
                "function": "basename",
                "line": 1966
              },
              {
                "function": "error",
                "line": 1974
              },
              {
                "function": "Exception",
                "line": 1976
              },
              {
                "function": "group",
                "line": 1991
              },
              {
                "function": "lower",
                "line": 2044
              },
              {
                "function": "implement_with_patterns",
                "line": 2068
              },
              {
                "function": "error",
                "line": 2071
              },
              {
                "function": "write_implementation",
                "line": 2082
              },
              {
                "function": "get",
                "line": 2084
              },
              {
                "function": "info",
                "line": 2085
              },
              {
                "function": "len",
                "line": 2089
              },
              {
                "function": "format_exc",
                "line": 2107
              },
              {
                "function": "error",
                "line": 2108
              },
              {
                "function": "error",
                "line": 2109
              },
              {
                "function": "error",
                "line": 2110
              },
              {
                "function": "error",
                "line": 2111
              },
              {
                "function": "handle_button_implementation",
                "line": 186
              },
              {
                "function": "error",
                "line": 190
              },
              {
                "function": "TaskResult",
                "line": 191
              },
              {
                "function": "update_caches_for_external_changes",
                "line": 203
              },
              {
                "function": "implement_infrastructure",
                "line": 231
              },
              {
                "function": "_refresh_cache_if_needed",
                "line": 234
              },
              {
                "function": "_ai_determine_file_path",
                "line": 253
              },
              {
                "function": "implement_code_to_file",
                "line": 260
              },
              {
                "function": "get",
                "line": 265
              },
              {
                "function": "total_seconds",
                "line": 266
              },
              {
                "function": "TaskResult",
                "line": 267
              },
              {
                "function": "TaskResult",
                "line": 281
              },
              {
                "function": "lower",
                "line": 354
              },
              {
                "function": "lower",
                "line": 354
              },
              {
                "function": "lower",
                "line": 355
              },
              {
                "function": "lower",
                "line": 355
              },
              {
                "function": "str",
                "line": 399
              },
              {
                "function": "join",
                "line": 512
              },
              {
                "function": "open",
                "line": 580
              },
              {
                "function": "load",
                "line": 581
              },
              {
                "function": "warning",
                "line": 583
              },
              {
                "function": "lower",
                "line": 996
              },
              {
                "function": "split",
                "line": 1014
              },
              {
                "function": "complete",
                "line": 1155
              },
              {
                "function": "error",
                "line": 1158
              },
              {
                "function": "isinstance",
                "line": 1170
              },
              {
                "function": "get",
                "line": 1170
              },
              {
                "function": "str",
                "line": 1170
              },
              {
                "function": "process_message",
                "line": 1220
              },
              {
                "function": "append",
                "line": 1253
              },
              {
                "function": "append",
                "line": 1254
              },
              {
                "function": "isinstance",
                "line": 1264
              },
              {
                "function": "get",
                "line": 1264
              },
              {
                "function": "isinstance",
                "line": 1265
              },
              {
                "function": "get",
                "line": 1265
              },
              {
                "function": "refresh_cache_after_implementation",
                "line": 1268
              },
              {
                "function": "get",
                "line": 1295
              },
              {
                "function": "get",
                "line": 1296
              },
              {
                "function": "get",
                "line": 1297
              },
              {
                "function": "get",
                "line": 1300
              },
              {
                "function": "startswith",
                "line": 1331
              },
              {
                "function": "startswith",
                "line": 1331
              },
              {
                "function": "get",
                "line": 1360
              },
              {
                "function": "TaskRequest",
                "line": 1390
              },
              {
                "function": "get",
                "line": 1459
              },
              {
                "function": "count",
                "line": 1635
              },
              {
                "function": "range",
                "line": 1648
              },
              {
                "function": "strip",
                "line": 1655
              },
              {
                "function": "strip",
                "line": 1662
              },
              {
                "function": "join",
                "line": 1663
              },
              {
                "function": "_generate_fix_suggestion",
                "line": 1666
              },
              {
                "function": "str",
                "line": 1678
              },
              {
                "function": "append",
                "line": 1689
              },
              {
                "function": "hasattr",
                "line": 1716
              },
              {
                "function": "info",
                "line": 1721
              },
              {
                "function": "append",
                "line": 1723
              },
              {
                "function": "hasattr",
                "line": 1732
              },
              {
                "function": "join",
                "line": 1749
              },
              {
                "function": "exists",
                "line": 1750
              },
              {
                "function": "str",
                "line": 1766
              },
              {
                "function": "lower",
                "line": 1840
              },
              {
                "function": "upper",
                "line": 1880
              },
              {
                "function": "len",
                "line": 2063
              },
              {
                "function": "split",
                "line": 2089
              },
              {
                "function": "str",
                "line": 2114
              },
              {
                "function": "now",
                "line": 291
              },
              {
                "function": "get",
                "line": 399
              },
              {
                "function": "str",
                "line": 1170
              },
              {
                "function": "total_seconds",
                "line": 1414
              },
              {
                "function": "total_seconds",
                "line": 1429
              },
              {
                "function": "get",
                "line": 1459
              },
              {
                "function": "implement_code_to_file",
                "line": 1462
              },
              {
                "function": "error",
                "line": 1467
              },
              {
                "function": "total_seconds",
                "line": 1490
              },
              {
                "function": "total_seconds",
                "line": 1499
              },
              {
                "function": "dirname",
                "line": 1613
              },
              {
                "function": "append",
                "line": 1623
              },
              {
                "function": "append",
                "line": 1637
              },
              {
                "function": "append",
                "line": 1641
              },
              {
                "function": "split",
                "line": 1645
              },
              {
                "function": "len",
                "line": 1648
              },
              {
                "function": "endswith",
                "line": 1655
              },
              {
                "function": "any",
                "line": 1656
              },
              {
                "function": "append",
                "line": 1657
              },
              {
                "function": "append",
                "line": 1691
              },
              {
                "function": "clear_cache",
                "line": 1717
              },
              {
                "function": "append",
                "line": 1718
              },
              {
                "function": "index_codebase",
                "line": 1722
              },
              {
                "function": "error",
                "line": 1726
              },
              {
                "function": "append",
                "line": 1727
              },
              {
                "function": "clear_cache",
                "line": 1733
              },
              {
                "function": "append",
                "line": 1734
              },
              {
                "function": "error",
                "line": 1737
              },
              {
                "function": "append",
                "line": 1738
              },
              {
                "function": "len",
                "line": 1761
              },
              {
                "function": "len",
                "line": 1761
              },
              {
                "function": "relpath",
                "line": 1913
              },
              {
                "function": "len",
                "line": 1916
              },
              {
                "function": "len",
                "line": 2038
              },
              {
                "function": "len",
                "line": 2078
              },
              {
                "function": "len",
                "line": 2088
              },
              {
                "function": "update_context",
                "line": 2093
              },
              {
                "function": "total_seconds",
                "line": 195
              },
              {
                "function": "now",
                "line": 205
              },
              {
                "function": "join",
                "line": 208
              },
              {
                "function": "join",
                "line": 209
              },
              {
                "function": "join",
                "line": 212
              },
              {
                "function": "now",
                "line": 236
              },
              {
                "function": "join",
                "line": 240
              },
              {
                "function": "total_seconds",
                "line": 285
              },
              {
                "function": "chr",
                "line": 512
              },
              {
                "function": "len",
                "line": 997
              },
              {
                "function": "startswith",
                "line": 1023
              },
              {
                "function": "list",
                "line": 1267
              },
              {
                "function": "list",
                "line": 1271
              },
              {
                "function": "now",
                "line": 1471
              },
              {
                "function": "get",
                "line": 1480
              },
              {
                "function": "str",
                "line": 1586
              },
              {
                "function": "strip",
                "line": 1623
              },
              {
                "function": "append",
                "line": 1651
              },
              {
                "function": "rename",
                "line": 1754
              },
              {
                "function": "append",
                "line": 1755
              },
              {
                "function": "strip",
                "line": 1880
              },
              {
                "function": "join",
                "line": 1913
              },
              {
                "function": "startswith",
                "line": 1914
              },
              {
                "function": "append",
                "line": 1915
              },
              {
                "function": "now",
                "line": 266
              },
              {
                "function": "get",
                "line": 275
              },
              {
                "function": "str",
                "line": 308
              },
              {
                "function": "set",
                "line": 1267
              },
              {
                "function": "set",
                "line": 1271
              },
              {
                "function": "get",
                "line": 1476
              },
              {
                "function": "get",
                "line": 1488
              },
              {
                "function": "str",
                "line": 1497
              },
              {
                "function": "strip",
                "line": 1645
              },
              {
                "function": "strip",
                "line": 1655
              },
              {
                "function": "error",
                "line": 1758
              },
              {
                "function": "append",
                "line": 1759
              },
              {
                "function": "isoformat",
                "line": 2099
              },
              {
                "function": "len",
                "line": 240
              },
              {
                "function": "get",
                "line": 270
              },
              {
                "function": "get",
                "line": 271
              },
              {
                "function": "get",
                "line": 283
              },
              {
                "function": "now",
                "line": 1414
              },
              {
                "function": "now",
                "line": 1429
              },
              {
                "function": "now",
                "line": 1490
              },
              {
                "function": "now",
                "line": 1499
              },
              {
                "function": "now",
                "line": 195
              },
              {
                "function": "now",
                "line": 285
              },
              {
                "function": "now",
                "line": 2099
              },
              {
                "function": "split",
                "line": 1645
              }
            ]
          },
          "backend/agents/specialized/fixer_gpt_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 38,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "OpenAIService",
                  "info",
                  "getattr"
                ],
                "parameters": [
                  "self",
                  "model"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixer_gpt_agent.py"
              },
              {
                "name": "_create_fresh_perspective_prompt",
                "line": 70,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "issue",
                  "previous_attempts",
                  "research_results"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixer_gpt_agent.py"
              },
              {
                "name": "_format_previous_attempts",
                "line": 110,
                "async": false,
                "calls": [
                  "enumerate",
                  "get"
                ],
                "parameters": [
                  "self",
                  "attempts"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixer_gpt_agent.py"
              },
              {
                "name": "_format_research_results",
                "line": 124,
                "async": false,
                "calls": [
                  "enumerate",
                  "get"
                ],
                "parameters": [
                  "self",
                  "research"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/fixer_gpt_agent.py"
              }
            ],
            "classes": [
              {
                "name": "FixerGPTAgent",
                "line": 20,
                "methods": [
                  "__init__",
                  "_create_fresh_perspective_prompt",
                  "_format_previous_attempts",
                  "_format_research_results"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/fixer_gpt_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "backend.config.settings",
                "names": [
                  "Settings"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "AgentConfig",
                "line": 49
              },
              {
                "function": "__init__",
                "line": 64
              },
              {
                "function": "OpenAIService",
                "line": 67
              },
              {
                "function": "info",
                "line": 68
              },
              {
                "function": "enumerate",
                "line": 116
              },
              {
                "function": "enumerate",
                "line": 130
              },
              {
                "function": "info",
                "line": 248
              },
              {
                "function": "getattr",
                "line": 47
              },
              {
                "function": "info",
                "line": 152
              },
              {
                "function": "get",
                "line": 158
              },
              {
                "function": "get",
                "line": 159
              },
              {
                "function": "get",
                "line": 160
              },
              {
                "function": "info",
                "line": 163
              },
              {
                "function": "_create_fresh_perspective_prompt",
                "line": 167
              },
              {
                "function": "_format_previous_attempts",
                "line": 174
              },
              {
                "function": "_format_research_results",
                "line": 175
              },
              {
                "function": "info",
                "line": 197
              },
              {
                "function": "get",
                "line": 209
              },
              {
                "function": "info",
                "line": 211
              },
              {
                "function": "TaskResult",
                "line": 213
              },
              {
                "function": "getattr",
                "line": 59
              },
              {
                "function": "getattr",
                "line": 60
              },
              {
                "function": "super",
                "line": 64
              },
              {
                "function": "chat_completion",
                "line": 199
              },
              {
                "function": "error",
                "line": 228
              },
              {
                "function": "TaskResult",
                "line": 229
              },
              {
                "function": "join",
                "line": 256
              },
              {
                "function": "chat_completion",
                "line": 267
              },
              {
                "function": "get",
                "line": 278
              },
              {
                "function": "isoformat",
                "line": 280
              },
              {
                "function": "error",
                "line": 284
              },
              {
                "function": "get",
                "line": 118
              },
              {
                "function": "get",
                "line": 131
              },
              {
                "function": "get",
                "line": 119
              },
              {
                "function": "get",
                "line": 132
              },
              {
                "function": "get",
                "line": 133
              },
              {
                "function": "len",
                "line": 163
              },
              {
                "function": "len",
                "line": 164
              },
              {
                "function": "len",
                "line": 211
              },
              {
                "function": "len",
                "line": 220
              },
              {
                "function": "len",
                "line": 221
              },
              {
                "function": "isoformat",
                "line": 223
              },
              {
                "function": "chr",
                "line": 256
              },
              {
                "function": "now",
                "line": 280
              },
              {
                "function": "enumerate",
                "line": 256
              },
              {
                "function": "str",
                "line": 286
              },
              {
                "function": "now",
                "line": 223
              },
              {
                "function": "str",
                "line": 231
              },
              {
                "function": "type",
                "line": 233
              }
            ]
          },
          "backend/agents/specialized/performance_bot.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 48,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "OpenAIService"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/performance_bot.py"
              },
              {
                "name": "_extract_bottlenecks",
                "line": 194,
                "async": false,
                "calls": [
                  "list",
                  "append",
                  "sort_stats",
                  "items",
                  "round"
                ],
                "parameters": [
                  "self",
                  "stats"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/performance_bot.py"
              },
              {
                "name": "_parse_profile_stats",
                "line": 275,
                "async": false,
                "calls": [
                  "split",
                  "append",
                  "isdigit",
                  "join",
                  "len",
                  "replace",
                  "splitlines"
                ],
                "parameters": [
                  "self",
                  "stats_output"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/performance_bot.py"
              },
              {
                "name": "_format_profile_results",
                "line": 296,
                "async": false,
                "calls": [
                  "title",
                  "append",
                  "get",
                  "join",
                  "items",
                  "replace",
                  "enumerate"
                ],
                "parameters": [
                  "self",
                  "profile"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/performance_bot.py"
              },
              {
                "name": "_format_package_analysis",
                "line": 437,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "len"
                ],
                "parameters": [
                  "self",
                  "package_name",
                  "analysis"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/performance_bot.py"
              }
            ],
            "classes": [
              {
                "name": "PerformanceProfile",
                "line": 29,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/performance_bot.py"
              },
              {
                "name": "PerformanceBot",
                "line": 38,
                "methods": [
                  "__init__",
                  "_extract_bottlenecks",
                  "_parse_profile_stats",
                  "_format_profile_results",
                  "_format_package_analysis"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/performance_bot.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "cProfile",
                "names": [
                  "cProfile"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "pstats",
                "names": [
                  "pstats"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "io",
                "names": [
                  "io"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "tracemalloc",
                "names": [
                  "tracemalloc"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "tempfile",
                "names": [
                  "tempfile"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "shutil",
                "names": [
                  "shutil"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 19
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 22
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 23
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 24
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 335
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 26
              },
              {
                "function": "AgentConfig",
                "line": 49
              },
              {
                "function": "__init__",
                "line": 64
              },
              {
                "function": "OpenAIService",
                "line": 65
              },
              {
                "function": "now",
                "line": 69
              },
              {
                "function": "get",
                "line": 109
              },
              {
                "function": "get",
                "line": 114
              },
              {
                "function": "_format_profile_results",
                "line": 124
              },
              {
                "function": "sort_stats",
                "line": 199
              },
              {
                "function": "sort_stats",
                "line": 212
              },
              {
                "function": "splitlines",
                "line": 277
              },
              {
                "function": "append",
                "line": 299
              },
              {
                "function": "append",
                "line": 302
              },
              {
                "function": "append",
                "line": 303
              },
              {
                "function": "append",
                "line": 304
              },
              {
                "function": "append",
                "line": 305
              },
              {
                "function": "append",
                "line": 308
              },
              {
                "function": "items",
                "line": 309
              },
              {
                "function": "append",
                "line": 311
              },
              {
                "function": "append",
                "line": 324
              },
              {
                "function": "enumerate",
                "line": 325
              },
              {
                "function": "join",
                "line": 328
              },
              {
                "function": "get",
                "line": 332
              },
              {
                "function": "info",
                "line": 342
              },
              {
                "function": "mkdtemp",
                "line": 345
              },
              {
                "function": "join",
                "line": 382
              },
              {
                "function": "listdir",
                "line": 386
              },
              {
                "function": "walk",
                "line": 405
              },
              {
                "function": "append",
                "line": 440
              },
              {
                "function": "append",
                "line": 445
              },
              {
                "function": "append",
                "line": 446
              },
              {
                "function": "append",
                "line": 447
              },
              {
                "function": "append",
                "line": 448
              },
              {
                "function": "append",
                "line": 449
              },
              {
                "function": "append",
                "line": 463
              },
              {
                "function": "append",
                "line": 464
              },
              {
                "function": "join",
                "line": 467
              },
              {
                "function": "append",
                "line": 477
              },
              {
                "function": "join",
                "line": 479
              },
              {
                "function": "TaskRequest",
                "line": 487
              },
              {
                "function": "get",
                "line": 518
              },
              {
                "function": "append",
                "line": 524
              },
              {
                "function": "enumerate",
                "line": 526
              },
              {
                "function": "append",
                "line": 535
              },
              {
                "function": "append",
                "line": 536
              },
              {
                "function": "join",
                "line": 538
              },
              {
                "function": "get",
                "line": 542
              },
              {
                "function": "lower",
                "line": 72
              },
              {
                "function": "total_seconds",
                "line": 87
              },
              {
                "function": "TaskResult",
                "line": 89
              },
              {
                "function": "NamedTemporaryFile",
                "line": 130
              },
              {
                "function": "write",
                "line": 131
              },
              {
                "function": "Profile",
                "line": 136
              },
              {
                "function": "start",
                "line": 139
              },
              {
                "function": "time",
                "line": 143
              },
              {
                "function": "enable",
                "line": 144
              },
              {
                "function": "disable",
                "line": 154
              },
              {
                "function": "stop",
                "line": 160
              },
              {
                "function": "StringIO",
                "line": 163
              },
              {
                "function": "Stats",
                "line": 164
              },
              {
                "function": "sort_stats",
                "line": 165
              },
              {
                "function": "print_stats",
                "line": 166
              },
              {
                "function": "_extract_bottlenecks",
                "line": 169
              },
              {
                "function": "PerformanceProfile",
                "line": 177
              },
              {
                "function": "unlink",
                "line": 192
              },
              {
                "function": "list",
                "line": 200
              },
              {
                "function": "list",
                "line": 213
              },
              {
                "function": "len",
                "line": 228
              },
              {
                "function": "count",
                "line": 232
              },
              {
                "function": "any",
                "line": 257
              },
              {
                "function": "append",
                "line": 258
              },
              {
                "function": "get",
                "line": 260
              },
              {
                "function": "append",
                "line": 261
              },
              {
                "function": "any",
                "line": 264
              },
              {
                "function": "append",
                "line": 268
              },
              {
                "function": "append",
                "line": 271
              },
              {
                "function": "split",
                "line": 284
              },
              {
                "function": "append",
                "line": 310
              },
              {
                "function": "append",
                "line": 315
              },
              {
                "function": "enumerate",
                "line": 316
              },
              {
                "function": "append",
                "line": 321
              },
              {
                "function": "append",
                "line": 326
              },
              {
                "function": "search",
                "line": 336
              },
              {
                "function": "run",
                "line": 349
              },
              {
                "function": "join",
                "line": 358
              },
              {
                "function": "run",
                "line": 359
              },
              {
                "function": "_format_package_analysis",
                "line": 371
              },
              {
                "function": "rmtree",
                "line": 378
              },
              {
                "function": "set",
                "line": 398
              },
              {
                "function": "list",
                "line": 433
              },
              {
                "function": "append",
                "line": 452
              },
              {
                "function": "append",
                "line": 455
              },
              {
                "function": "append",
                "line": 458
              },
              {
                "function": "append",
                "line": 461
              },
              {
                "function": "append",
                "line": 469
              },
              {
                "function": "execute",
                "line": 495
              },
              {
                "function": "isinstance",
                "line": 496
              },
              {
                "function": "str",
                "line": 496
              },
              {
                "function": "complete",
                "line": 513
              },
              {
                "function": "append",
                "line": 528
              },
              {
                "function": "append",
                "line": 529
              },
              {
                "function": "append",
                "line": 530
              },
              {
                "function": "append",
                "line": 531
              },
              {
                "function": "append",
                "line": 532
              },
              {
                "function": "_profile_python",
                "line": 548
              },
              {
                "function": "complete",
                "line": 564
              },
              {
                "function": "super",
                "line": 64
              },
              {
                "function": "error",
                "line": 97
              },
              {
                "function": "total_seconds",
                "line": 98
              },
              {
                "function": "TaskResult",
                "line": 99
              },
              {
                "function": "_profile_python",
                "line": 117
              },
              {
                "function": "get_traced_memory",
                "line": 140
              },
              {
                "function": "time",
                "line": 155
              },
              {
                "function": "get_traced_memory",
                "line": 158
              },
              {
                "function": "get_traced_memory",
                "line": 159
              },
              {
                "function": "_analyze_complexity",
                "line": 172
              },
              {
                "function": "_generate_suggestions",
                "line": 175
              },
              {
                "function": "items",
                "line": 200
              },
              {
                "function": "append",
                "line": 202
              },
              {
                "function": "items",
                "line": 213
              },
              {
                "function": "append",
                "line": 215
              },
              {
                "function": "splitlines",
                "line": 228
              },
              {
                "function": "count",
                "line": 229
              },
              {
                "function": "count",
                "line": 229
              },
              {
                "function": "count",
                "line": 230
              },
              {
                "function": "count",
                "line": 231
              },
              {
                "function": "count",
                "line": 231
              },
              {
                "function": "append",
                "line": 252
              },
              {
                "function": "append",
                "line": 265
              },
              {
                "function": "isdigit",
                "line": 285
              },
              {
                "function": "append",
                "line": 286
              },
              {
                "function": "append",
                "line": 318
              },
              {
                "function": "append",
                "line": 319
              },
              {
                "function": "append",
                "line": 320
              },
              {
                "function": "lower",
                "line": 336
              },
              {
                "function": "group",
                "line": 338
              },
              {
                "function": "_analyze_package_structure",
                "line": 369
              },
              {
                "function": "error",
                "line": 374
              },
              {
                "function": "replace",
                "line": 387
              },
              {
                "function": "lower",
                "line": 387
              },
              {
                "function": "join",
                "line": 388
              },
              {
                "function": "isdir",
                "line": 391
              },
              {
                "function": "endswith",
                "line": 407
              },
              {
                "function": "append",
                "line": 454
              },
              {
                "function": "append",
                "line": 460
              },
              {
                "function": "append",
                "line": 471
              },
              {
                "function": "_profile_python",
                "line": 527
              },
              {
                "function": "dumps",
                "line": 559
              },
              {
                "function": "_format_profile_results",
                "line": 566
              },
              {
                "function": "analyze_performance",
                "line": 76
              },
              {
                "function": "_profile_javascript",
                "line": 119
              },
              {
                "function": "open",
                "line": 148
              },
              {
                "function": "compile",
                "line": 149
              },
              {
                "function": "exec",
                "line": 150
              },
              {
                "function": "warning",
                "line": 152
              },
              {
                "function": "_parse_profile_stats",
                "line": 185
              },
              {
                "function": "count",
                "line": 230
              },
              {
                "function": "count",
                "line": 230
              },
              {
                "function": "append",
                "line": 254
              },
              {
                "function": "len",
                "line": 285
              },
              {
                "function": "join",
                "line": 408
              },
              {
                "function": "len",
                "line": 448
              },
              {
                "function": "len",
                "line": 449
              },
              {
                "function": "append",
                "line": 473
              },
              {
                "function": "append",
                "line": 475
              },
              {
                "function": "run_benchmarks",
                "line": 78
              },
              {
                "function": "now",
                "line": 87
              },
              {
                "function": "read",
                "line": 149
              },
              {
                "function": "getvalue",
                "line": 185
              },
              {
                "function": "round",
                "line": 205
              },
              {
                "function": "round",
                "line": 207
              },
              {
                "function": "round",
                "line": 219
              },
              {
                "function": "range",
                "line": 264
              },
              {
                "function": "replace",
                "line": 285
              },
              {
                "function": "join",
                "line": 291
              },
              {
                "function": "title",
                "line": 310
              },
              {
                "function": "str",
                "line": 375
              },
              {
                "function": "timestamp",
                "line": 488
              },
              {
                "function": "get",
                "line": 531
              },
              {
                "function": "suggest_optimizations",
                "line": 80
              },
              {
                "function": "now",
                "line": 98
              },
              {
                "function": "index",
                "line": 236
              },
              {
                "function": "len",
                "line": 264
              },
              {
                "function": "get",
                "line": 319
              },
              {
                "function": "get",
                "line": 320
              },
              {
                "function": "open",
                "line": 412
              },
              {
                "function": "read",
                "line": 413
              },
              {
                "function": "splitlines",
                "line": 414
              },
              {
                "function": "len",
                "line": 415
              },
              {
                "function": "extend",
                "line": 423
              },
              {
                "function": "extend",
                "line": 426
              },
              {
                "function": "analyze_external_package",
                "line": 82
              },
              {
                "function": "provide_performance_advice",
                "line": 85
              },
              {
                "function": "str",
                "line": 101
              },
              {
                "function": "replace",
                "line": 310
              },
              {
                "function": "now",
                "line": 488
              },
              {
                "function": "startswith",
                "line": 419
              },
              {
                "function": "startswith",
                "line": 419
              },
              {
                "function": "add",
                "line": 420
              },
              {
                "function": "strip",
                "line": 420
              },
              {
                "function": "strip",
                "line": 424
              },
              {
                "function": "strip",
                "line": 427
              },
              {
                "function": "startswith",
                "line": 424
              },
              {
                "function": "startswith",
                "line": 427
              },
              {
                "function": "strip",
                "line": 424
              },
              {
                "function": "strip",
                "line": 427
              }
            ]
          },
          "backend/agents/specialized/research_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 34,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "info",
                  "PerplexityService",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/research_agent.py"
              }
            ],
            "classes": [
              {
                "name": "ResearchAgent",
                "line": 24,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/research_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 17
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 18
              },
              {
                "type": "from_import",
                "module": "utils.perplexity_service",
                "names": [
                  "PerplexityService"
                ],
                "line": 20
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 19
              },
              {
                "function": "getLogger",
                "line": 22
              },
              {
                "function": "dirname",
                "line": 19
              },
              {
                "function": "dirname",
                "line": 19
              },
              {
                "function": "AgentConfig",
                "line": 35
              },
              {
                "function": "__init__",
                "line": 50
              },
              {
                "function": "info",
                "line": 67
              },
              {
                "function": "get",
                "line": 81
              },
              {
                "function": "info",
                "line": 117
              },
              {
                "function": "info",
                "line": 170
              },
              {
                "function": "lower",
                "line": 189
              },
              {
                "function": "any",
                "line": 190
              },
              {
                "function": "TaskRequest",
                "line": 282
              },
              {
                "function": "dirname",
                "line": 19
              },
              {
                "function": "PerplexityService",
                "line": 56
              },
              {
                "function": "info",
                "line": 57
              },
              {
                "function": "_perform_web_search",
                "line": 84
              },
              {
                "function": "isoformat",
                "line": 108
              },
              {
                "function": "isoformat",
                "line": 126
              },
              {
                "function": "lower",
                "line": 130
              },
              {
                "function": "isoformat",
                "line": 178
              },
              {
                "function": "info",
                "line": 227
              },
              {
                "function": "TaskResult",
                "line": 256
              },
              {
                "function": "execute",
                "line": 286
              },
              {
                "function": "abspath",
                "line": 19
              },
              {
                "function": "super",
                "line": 50
              },
              {
                "function": "error",
                "line": 59
              },
              {
                "function": "lower",
                "line": 140
              },
              {
                "function": "lower",
                "line": 230
              },
              {
                "function": "get",
                "line": 233
              },
              {
                "function": "enumerate",
                "line": 250
              },
              {
                "function": "error",
                "line": 269
              },
              {
                "function": "TaskResult",
                "line": 270
              },
              {
                "function": "get",
                "line": 283
              },
              {
                "function": "get",
                "line": 284
              },
              {
                "function": "now",
                "line": 108
              },
              {
                "function": "now",
                "line": 126
              },
              {
                "function": "now",
                "line": 178
              },
              {
                "function": "values",
                "line": 190
              },
              {
                "function": "get_latest_best_practices",
                "line": 231
              },
              {
                "function": "get",
                "line": 240
              },
              {
                "function": "get",
                "line": 245
              },
              {
                "function": "isinstance",
                "line": 251
              },
              {
                "function": "lower",
                "line": 234
              },
              {
                "function": "lower",
                "line": 234
              },
              {
                "function": "research_technology",
                "line": 238
              },
              {
                "function": "search_web",
                "line": 243
              },
              {
                "function": "isoformat",
                "line": 264
              },
              {
                "function": "split",
                "line": 236
              },
              {
                "function": "split",
                "line": 237
              },
              {
                "function": "len",
                "line": 263
              },
              {
                "function": "isupper",
                "line": 236
              },
              {
                "function": "get",
                "line": 252
              },
              {
                "function": "get",
                "line": 252
              },
              {
                "function": "now",
                "line": 264
              },
              {
                "function": "str",
                "line": 272
              },
              {
                "function": "len",
                "line": 236
              }
            ]
          },
          "backend/agents/specialized/orchestrator_agent_v2.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 50,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super",
                  "OpenAIService"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent_v2.py"
              },
              {
                "name": "set_planning_mode",
                "line": 154,
                "async": false,
                "calls": [
                  "info",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "mode"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent_v2.py"
              }
            ],
            "classes": [
              {
                "name": "SubTask",
                "line": 23,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent_v2.py"
              },
              {
                "name": "TaskDecomposition",
                "line": 36,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent_v2.py"
              },
              {
                "name": "OrchestratorAgentV2",
                "line": 45,
                "methods": [
                  "__init__",
                  "set_planning_mode"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/orchestrator_agent_v2.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 559
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 514
              },
              {
                "type": "from_import",
                "module": "agents.agent_registry",
                "names": [
                  "get_agent_registry"
                ],
                "line": 639
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 950
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 695
              },
              {
                "type": "from_import",
                "module": "api.server",
                "names": [
                  "manager"
                ],
                "line": 945
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 707
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 20
              },
              {
                "function": "field",
                "line": 29
              },
              {
                "function": "AgentConfig",
                "line": 51
              },
              {
                "function": "__init__",
                "line": 66
              },
              {
                "function": "OpenAIService",
                "line": 73
              },
              {
                "function": "info",
                "line": 172
              },
              {
                "function": "info",
                "line": 199
              },
              {
                "function": "replace",
                "line": 221
              },
              {
                "function": "TaskResult",
                "line": 270
              },
              {
                "function": "TaskResult",
                "line": 305
              },
              {
                "function": "info",
                "line": 331
              },
              {
                "function": "info",
                "line": 350
              },
              {
                "function": "info",
                "line": 355
              },
              {
                "function": "TaskResult",
                "line": 359
              },
              {
                "function": "any",
                "line": 386
              },
              {
                "function": "getenv",
                "line": 393
              },
              {
                "function": "info",
                "line": 506
              },
              {
                "function": "startswith",
                "line": 510
              },
              {
                "function": "getenv",
                "line": 560
              },
              {
                "function": "TaskDecomposition",
                "line": 569
              },
              {
                "function": "info",
                "line": 627
              },
              {
                "function": "info",
                "line": 643
              },
              {
                "function": "info",
                "line": 684
              },
              {
                "function": "error",
                "line": 760
              },
              {
                "function": "Exception",
                "line": 761
              },
              {
                "function": "get",
                "line": 778
              },
              {
                "function": "hasattr",
                "line": 814
              },
              {
                "function": "append",
                "line": 817
              },
              {
                "function": "enumerate",
                "line": 819
              },
              {
                "function": "append",
                "line": 850
              },
              {
                "function": "len",
                "line": 851
              },
              {
                "function": "join",
                "line": 859
              },
              {
                "function": "join",
                "line": 876
              },
              {
                "function": "debug",
                "line": 925
              },
              {
                "function": "get",
                "line": 931
              },
              {
                "function": "TaskRequest",
                "line": 977
              },
              {
                "function": "info",
                "line": 89
              },
              {
                "function": "info",
                "line": 92
              },
              {
                "function": "info",
                "line": 119
              },
              {
                "function": "info",
                "line": 130
              },
              {
                "function": "info",
                "line": 163
              },
              {
                "function": "warning",
                "line": 165
              },
              {
                "function": "_send_progress",
                "line": 173
              },
              {
                "function": "_send_progress",
                "line": 200
              },
              {
                "function": "info",
                "line": 210
              },
              {
                "function": "lower",
                "line": 218
              },
              {
                "function": "Exception",
                "line": 219
              },
              {
                "function": "get_completion",
                "line": 297
              },
              {
                "function": "hasattr",
                "line": 325
              },
              {
                "function": "isinstance",
                "line": 325
              },
              {
                "function": "get",
                "line": 326
              },
              {
                "function": "get",
                "line": 327
              },
              {
                "function": "get",
                "line": 328
              },
              {
                "function": "_send_progress",
                "line": 332
              },
              {
                "function": "_decompose_task_with_ai",
                "line": 333
              },
              {
                "function": "info",
                "line": 339
              },
              {
                "function": "_send_progress",
                "line": 351
              },
              {
                "function": "_execute_workflow",
                "line": 352
              },
              {
                "function": "_send_progress",
                "line": 356
              },
              {
                "function": "_synthesize_results",
                "line": 357
              },
              {
                "function": "any",
                "line": 379
              },
              {
                "function": "any",
                "line": 381
              },
              {
                "function": "info",
                "line": 388
              },
              {
                "function": "getcwd",
                "line": 393
              },
              {
                "function": "any",
                "line": 496
              },
              {
                "function": "get_completion",
                "line": 497
              },
              {
                "function": "findall",
                "line": 516
              },
              {
                "function": "loads",
                "line": 525
              },
              {
                "function": "TaskDecomposition",
                "line": 540
              },
              {
                "function": "getcwd",
                "line": 560
              },
              {
                "function": "any",
                "line": 564
              },
              {
                "function": "_send_progress",
                "line": 628
              },
              {
                "function": "get_agent_registry",
                "line": 640
              },
              {
                "function": "enumerate",
                "line": 668
              },
              {
                "function": "get_completion",
                "line": 798
              },
              {
                "function": "append",
                "line": 815
              },
              {
                "function": "get",
                "line": 820
              },
              {
                "function": "append",
                "line": 833
              },
              {
                "function": "append",
                "line": 834
              },
              {
                "function": "append",
                "line": 835
              },
              {
                "function": "append",
                "line": 840
              },
              {
                "function": "hasattr",
                "line": 842
              },
              {
                "function": "append",
                "line": 843
              },
              {
                "function": "append",
                "line": 844
              },
              {
                "function": "append",
                "line": 845
              },
              {
                "function": "append",
                "line": 847
              },
              {
                "function": "append",
                "line": 848
              },
              {
                "function": "append",
                "line": 853
              },
              {
                "function": "get",
                "line": 873
              },
              {
                "function": "append",
                "line": 874
              },
              {
                "function": "debug",
                "line": 927
              },
              {
                "function": "debug",
                "line": 933
              },
              {
                "function": "debug",
                "line": 951
              },
              {
                "function": "debug",
                "line": 952
              },
              {
                "function": "execute",
                "line": 981
              },
              {
                "function": "super",
                "line": 66
              },
              {
                "function": "hasattr",
                "line": 91
              },
              {
                "function": "hasattr",
                "line": 97
              },
              {
                "function": "isinstance",
                "line": 97
              },
              {
                "function": "get",
                "line": 98
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "info",
                "line": 100
              },
              {
                "function": "debug",
                "line": 101
              },
              {
                "function": "_send_progress",
                "line": 104
              },
              {
                "function": "any",
                "line": 111
              },
              {
                "function": "_send_progress",
                "line": 120
              },
              {
                "function": "hasattr",
                "line": 124
              },
              {
                "function": "isinstance",
                "line": 124
              },
              {
                "function": "get",
                "line": 125
              },
              {
                "function": "_analyze_intent",
                "line": 129
              },
              {
                "function": "_send_progress",
                "line": 131
              },
              {
                "function": "error",
                "line": 147
              },
              {
                "function": "TaskResult",
                "line": 148
              },
              {
                "function": "any",
                "line": 203
              },
              {
                "function": "get_completion",
                "line": 204
              },
              {
                "function": "_send_progress",
                "line": 211
              },
              {
                "function": "error",
                "line": 213
              },
              {
                "function": "replace",
                "line": 221
              },
              {
                "function": "_format_execution_plan",
                "line": 338
              },
              {
                "function": "_send_progress",
                "line": 340
              },
              {
                "function": "_send_progress",
                "line": 344
              },
              {
                "function": "info",
                "line": 382
              },
              {
                "function": "_send_progress",
                "line": 389
              },
              {
                "function": "_create_infrastructure_workflow",
                "line": 390
              },
              {
                "function": "strip",
                "line": 510
              },
              {
                "function": "info",
                "line": 519
              },
              {
                "function": "SubTask",
                "line": 529
              },
              {
                "function": "error",
                "line": 551
              },
              {
                "function": "Exception",
                "line": 552
              },
              {
                "function": "zip",
                "line": 657
              },
              {
                "function": "info",
                "line": 669
              },
              {
                "function": "TaskRequest",
                "line": 714
              },
              {
                "function": "any",
                "line": 724
              },
              {
                "function": "join",
                "line": 838
              },
              {
                "function": "append",
                "line": 839
              },
              {
                "function": "append",
                "line": 855
              },
              {
                "function": "append",
                "line": 857
              },
              {
                "function": "len",
                "line": 898
              },
              {
                "function": "get",
                "line": 903
              },
              {
                "function": "get_completion",
                "line": 910
              },
              {
                "function": "len",
                "line": 919
              },
              {
                "function": "debug",
                "line": 943
              },
              {
                "function": "error",
                "line": 972
              },
              {
                "function": "get",
                "line": 978
              },
              {
                "function": "get",
                "line": 979
              },
              {
                "function": "info",
                "line": 113
              },
              {
                "function": "info",
                "line": 115
              },
              {
                "function": "_describe_system",
                "line": 136
              },
              {
                "function": "_send_progress",
                "line": 214
              },
              {
                "function": "len",
                "line": 350
              },
              {
                "function": "len",
                "line": 365
              },
              {
                "function": "_send_progress",
                "line": 383
              },
              {
                "function": "_create_infrastructure_workflow",
                "line": 384
              },
              {
                "function": "lower",
                "line": 386
              },
              {
                "function": "get",
                "line": 544
              },
              {
                "function": "get",
                "line": 545
              },
              {
                "function": "get",
                "line": 546
              },
              {
                "function": "SubTask",
                "line": 574
              },
              {
                "function": "SubTask",
                "line": 582
              },
              {
                "function": "SubTask",
                "line": 590
              },
              {
                "function": "SubTask",
                "line": 598
              },
              {
                "function": "SubTask",
                "line": 606
              },
              {
                "function": "SubTask",
                "line": 614
              },
              {
                "function": "len",
                "line": 627
              },
              {
                "function": "len",
                "line": 643
              },
              {
                "function": "info",
                "line": 651
              },
              {
                "function": "append",
                "line": 652
              },
              {
                "function": "gather",
                "line": 656
              },
              {
                "function": "isinstance",
                "line": 658
              },
              {
                "function": "info",
                "line": 674
              },
              {
                "function": "len",
                "line": 684
              },
              {
                "function": "hasattr",
                "line": 699
              },
              {
                "function": "isinstance",
                "line": 701
              },
              {
                "function": "any",
                "line": 727
              },
              {
                "function": "wait_for",
                "line": 730
              },
              {
                "function": "hasattr",
                "line": 736
              },
              {
                "function": "error",
                "line": 738
              },
              {
                "function": "Exception",
                "line": 739
              },
              {
                "function": "error",
                "line": 746
              },
              {
                "function": "Exception",
                "line": 747
              },
              {
                "function": "error",
                "line": 751
              },
              {
                "function": "Exception",
                "line": 752
              },
              {
                "function": "error",
                "line": 755
              },
              {
                "function": "Exception",
                "line": 756
              },
              {
                "function": "list",
                "line": 759
              },
              {
                "function": "hasattr",
                "line": 786
              },
              {
                "function": "info",
                "line": 956
              },
              {
                "function": "info",
                "line": 963
              },
              {
                "function": "warning",
                "line": 968
              },
              {
                "function": "warning",
                "line": 970
              },
              {
                "function": "_send_progress",
                "line": 114
              },
              {
                "function": "_handle_complex_task",
                "line": 116
              },
              {
                "function": "_answer_directly",
                "line": 140
              },
              {
                "function": "_handle_complex_task",
                "line": 144
              },
              {
                "function": "lower",
                "line": 221
              },
              {
                "function": "len",
                "line": 351
              },
              {
                "function": "lower",
                "line": 379
              },
              {
                "function": "lower",
                "line": 381
              },
              {
                "function": "lower",
                "line": 387
              },
              {
                "function": "lower",
                "line": 496
              },
              {
                "function": "get",
                "line": 534
              },
              {
                "function": "get",
                "line": 535
              },
              {
                "function": "lower",
                "line": 564
              },
              {
                "function": "len",
                "line": 628
              },
              {
                "function": "_execute_subtask",
                "line": 652
              },
              {
                "function": "error",
                "line": 661
              },
              {
                "function": "info",
                "line": 664
              },
              {
                "function": "_execute_subtask",
                "line": 671
              },
              {
                "function": "error",
                "line": 678
              },
              {
                "function": "update",
                "line": 702
              },
              {
                "function": "isinstance",
                "line": 703
              },
              {
                "function": "dispatch_task",
                "line": 731
              },
              {
                "function": "keys",
                "line": 759
              },
              {
                "function": "warning",
                "line": 947
              },
              {
                "function": "send_json",
                "line": 957
              },
              {
                "function": "error",
                "line": 965
              },
              {
                "function": "lower",
                "line": 111
              },
              {
                "function": "lower",
                "line": 203
              },
              {
                "function": "join",
                "line": 389
              },
              {
                "function": "len",
                "line": 669
              },
              {
                "function": "warning",
                "line": 704
              },
              {
                "function": "warning",
                "line": 712
              },
              {
                "function": "lower",
                "line": 724
              },
              {
                "function": "str",
                "line": 754
              },
              {
                "function": "title",
                "line": 905
              },
              {
                "function": "list",
                "line": 952
              },
              {
                "function": "lower",
                "line": 112
              },
              {
                "function": "str",
                "line": 150
              },
              {
                "function": "str",
                "line": 214
              },
              {
                "function": "strip",
                "line": 221
              },
              {
                "function": "str",
                "line": 659
              },
              {
                "function": "len",
                "line": 674
              },
              {
                "function": "len",
                "line": 677
              },
              {
                "function": "str",
                "line": 677
              },
              {
                "function": "str",
                "line": 679
              },
              {
                "function": "update",
                "line": 708
              },
              {
                "function": "lower",
                "line": 727
              },
              {
                "function": "keys",
                "line": 952
              },
              {
                "function": "isoformat",
                "line": 961
              },
              {
                "function": "list",
                "line": 970
              },
              {
                "function": "join",
                "line": 114
              },
              {
                "function": "loads",
                "line": 708
              },
              {
                "function": "keys",
                "line": 970
              },
              {
                "function": "type",
                "line": 712
              },
              {
                "function": "now",
                "line": 961
              }
            ]
          },
          "backend/agents/specialized/opus_arbitrator_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 28,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "ClaudeCodeConfig",
                  "super",
                  "is_available",
                  "ClaudeCodeService",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/opus_arbitrator_agent.py"
              }
            ],
            "classes": [
              {
                "name": "OpusArbitratorAgent",
                "line": 18,
                "methods": [
                  "__init__"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/opus_arbitrator_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "utils.claude_code_service",
                "names": [
                  "ClaudeCodeService",
                  "ClaudeCodeConfig"
                ],
                "line": 14
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 16
              },
              {
                "function": "AgentConfig",
                "line": 29
              },
              {
                "function": "__init__",
                "line": 43
              },
              {
                "function": "ClaudeCodeService",
                "line": 45
              },
              {
                "function": "TaskRequest",
                "line": 150
              },
              {
                "function": "ClaudeCodeConfig",
                "line": 46
              },
              {
                "function": "is_available",
                "line": 48
              },
              {
                "function": "error",
                "line": 49
              },
              {
                "function": "TaskResult",
                "line": 62
              },
              {
                "function": "is_available",
                "line": 109
              },
              {
                "function": "Exception",
                "line": 110
              },
              {
                "function": "complete",
                "line": 112
              },
              {
                "function": "get_completion",
                "line": 131
              },
              {
                "function": "Exception",
                "line": 140
              },
              {
                "function": "execute",
                "line": 154
              },
              {
                "function": "super",
                "line": 43
              },
              {
                "function": "error",
                "line": 75
              },
              {
                "function": "error",
                "line": 78
              },
              {
                "function": "TaskResult",
                "line": 79
              },
              {
                "function": "lower",
                "line": 137
              },
              {
                "function": "lower",
                "line": 137
              },
              {
                "function": "get",
                "line": 151
              },
              {
                "function": "get",
                "line": 152
              },
              {
                "function": "lower",
                "line": 57
              },
              {
                "function": "lower",
                "line": 57
              },
              {
                "function": "resolve_conflict",
                "line": 58
              },
              {
                "function": "provide_judgment",
                "line": 60
              },
              {
                "function": "isoformat",
                "line": 70
              },
              {
                "function": "str",
                "line": 77
              },
              {
                "function": "now",
                "line": 70
              }
            ]
          },
          "backend/agents/specialized/orchestrator_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 75,
                "async": false,
                "calls": [
                  "AgentConfig",
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "_calculate_critical_path_duration",
                "line": 530,
                "async": false,
                "calls": [
                  "_get_chain_duration",
                  "max",
                  "sum"
                ],
                "parameters": [
                  "self",
                  "subtasks"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "_get_chain_duration",
                "line": 545,
                "async": false,
                "calls": [
                  "_get_chain_duration",
                  "max"
                ],
                "parameters": [
                  "self",
                  "start_task",
                  "all_tasks"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "_group_by_dependency_level",
                "line": 689,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "workflow"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "_dependencies_met",
                "line": 710,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "step",
                  "completed",
                  "workflow"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "format_orchestration_result",
                "line": 762,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "str",
                  "get"
                ],
                "parameters": [
                  "self",
                  "decomposition",
                  "results"
                ],
                "decorators": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              }
            ],
            "classes": [
              {
                "name": "SubTask",
                "line": 21,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "TaskDependency",
                "line": 34,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "TaskDecomposition",
                "line": 42,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "WorkflowStep",
                "line": 53,
                "methods": [],
                "bases": [],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              },
              {
                "name": "OrchestratorAgent",
                "line": 64,
                "methods": [
                  "__init__",
                  "_calculate_critical_path_duration",
                  "_get_chain_duration",
                  "_group_by_dependency_level",
                  "_dependencies_met",
                  "format_orchestration_result"
                ],
                "bases": [
                  "ChatAgent"
                ],
                "file": "backend/agents/specialized/orchestrator_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base.chat_agent",
                "names": [
                  "ChatAgent",
                  "StreamMessage"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult",
                  "AgentCapability"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "utils.openai_service",
                "names": [
                  "OpenAIService"
                ],
                "line": 318
              },
              {
                "type": "from_import",
                "module": "base.base_agent",
                "names": [
                  "TaskRequest"
                ],
                "line": 732
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 373
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "field",
                "line": 27
              },
              {
                "function": "AgentConfig",
                "line": 76
              },
              {
                "function": "__init__",
                "line": 90
              },
              {
                "function": "now",
                "line": 103
              },
              {
                "function": "lower",
                "line": 174
              },
              {
                "function": "any",
                "line": 176
              },
              {
                "function": "OpenAIService",
                "line": 320
              },
              {
                "function": "TaskDecomposition",
                "line": 520
              },
              {
                "function": "append",
                "line": 605
              },
              {
                "function": "set",
                "line": 654
              },
              {
                "function": "_group_by_dependency_level",
                "line": 657
              },
              {
                "function": "items",
                "line": 660
              },
              {
                "function": "info",
                "line": 729
              },
              {
                "function": "TaskRequest",
                "line": 734
              },
              {
                "function": "append",
                "line": 771
              },
              {
                "function": "append",
                "line": 772
              },
              {
                "function": "append",
                "line": 773
              },
              {
                "function": "append",
                "line": 774
              },
              {
                "function": "append",
                "line": 775
              },
              {
                "function": "append",
                "line": 776
              },
              {
                "function": "join",
                "line": 791
              },
              {
                "function": "info",
                "line": 801
              },
              {
                "function": "get",
                "line": 812
              },
              {
                "function": "total_seconds",
                "line": 118
              },
              {
                "function": "TaskResult",
                "line": 134
              },
              {
                "function": "any",
                "line": 178
              },
              {
                "function": "info",
                "line": 190
              },
              {
                "function": "_ai_decompose_task",
                "line": 226
              },
              {
                "function": "get",
                "line": 255
              },
              {
                "function": "enumerate",
                "line": 261
              },
              {
                "function": "get",
                "line": 289
              },
              {
                "function": "TaskDecomposition",
                "line": 297
              },
              {
                "function": "info",
                "line": 307
              },
              {
                "function": "loads",
                "line": 374
              },
              {
                "function": "get",
                "line": 378
              },
              {
                "function": "get",
                "line": 388
              },
              {
                "function": "TaskDecomposition",
                "line": 396
              },
              {
                "function": "info",
                "line": 406
              },
              {
                "function": "info",
                "line": 407
              },
              {
                "function": "_calculate_critical_path_duration",
                "line": 515
              },
              {
                "function": "sum",
                "line": 518
              },
              {
                "function": "sum",
                "line": 543
              },
              {
                "function": "max",
                "line": 559
              },
              {
                "function": "WorkflowStep",
                "line": 574
              },
              {
                "function": "append",
                "line": 579
              },
              {
                "function": "now",
                "line": 624
              },
              {
                "function": "now",
                "line": 642
              },
              {
                "function": "append",
                "line": 706
              },
              {
                "function": "sleep",
                "line": 746
              },
              {
                "function": "isoformat",
                "line": 753
              },
              {
                "function": "_execute_step",
                "line": 760
              },
              {
                "function": "get",
                "line": 779
              },
              {
                "function": "append",
                "line": 781
              },
              {
                "function": "append",
                "line": 782
              },
              {
                "function": "append",
                "line": 783
              },
              {
                "function": "get",
                "line": 813
              },
              {
                "function": "super",
                "line": 90
              },
              {
                "function": "analyze_task_complexity",
                "line": 107
              },
              {
                "function": "decompose_task",
                "line": 110
              },
              {
                "function": "create_workflow",
                "line": 113
              },
              {
                "function": "execute_workflow",
                "line": 116
              },
              {
                "function": "append",
                "line": 123
              },
              {
                "function": "error",
                "line": 151
              },
              {
                "function": "TaskResult",
                "line": 152
              },
              {
                "function": "search",
                "line": 164
              },
              {
                "function": "max",
                "line": 169
              },
              {
                "function": "search",
                "line": 195
              },
              {
                "function": "info",
                "line": 197
              },
              {
                "function": "store",
                "line": 233
              },
              {
                "function": "get",
                "line": 263
              },
              {
                "function": "get",
                "line": 264
              },
              {
                "function": "append",
                "line": 280
              },
              {
                "function": "_calculate_critical_path_duration",
                "line": 293
              },
              {
                "function": "sum",
                "line": 295
              },
              {
                "function": "error",
                "line": 311
              },
              {
                "function": "complete",
                "line": 365
              },
              {
                "function": "append",
                "line": 379
              },
              {
                "function": "_calculate_critical_path_duration",
                "line": 392
              },
              {
                "function": "sum",
                "line": 394
              },
              {
                "function": "error",
                "line": 412
              },
              {
                "function": "warning",
                "line": 413
              },
              {
                "function": "SubTask",
                "line": 425
              },
              {
                "function": "list",
                "line": 526
              },
              {
                "function": "_get_chain_duration",
                "line": 540
              },
              {
                "function": "max",
                "line": 541
              },
              {
                "function": "timestamp",
                "line": 582
              },
              {
                "function": "_execute_parallel_workflow",
                "line": 599
              },
              {
                "function": "_execute_sequential_workflow",
                "line": 602
              },
              {
                "function": "isoformat",
                "line": 606
              },
              {
                "function": "_dependencies_met",
                "line": 665
              },
              {
                "function": "enumerate",
                "line": 674
              },
              {
                "function": "execute",
                "line": 814
              },
              {
                "function": "format_orchestration_result",
                "line": 136
              },
              {
                "function": "get",
                "line": 167
              },
              {
                "function": "set",
                "line": 169
              },
              {
                "function": "len",
                "line": 196
              },
              {
                "function": "get",
                "line": 202
              },
              {
                "function": "info",
                "line": 208
              },
              {
                "function": "SubTask",
                "line": 280
              },
              {
                "function": "list",
                "line": 303
              },
              {
                "function": "SubTask",
                "line": 379
              },
              {
                "function": "list",
                "line": 402
              },
              {
                "function": "_create_sample_decomposition",
                "line": 414
              },
              {
                "function": "SubTask",
                "line": 435
              },
              {
                "function": "SubTask",
                "line": 442
              },
              {
                "function": "SubTask",
                "line": 450
              },
              {
                "function": "SubTask",
                "line": 461
              },
              {
                "function": "SubTask",
                "line": 468
              },
              {
                "function": "SubTask",
                "line": 475
              },
              {
                "function": "SubTask",
                "line": 483
              },
              {
                "function": "SubTask",
                "line": 491
              },
              {
                "function": "SubTask",
                "line": 499
              },
              {
                "function": "set",
                "line": 526
              },
              {
                "function": "_get_chain_duration",
                "line": 560
              },
              {
                "function": "_execute_step",
                "line": 630
              },
              {
                "function": "str",
                "line": 637
              },
              {
                "function": "error",
                "line": 639
              },
              {
                "function": "now",
                "line": 666
              },
              {
                "function": "append",
                "line": 668
              },
              {
                "function": "gather",
                "line": 672
              },
              {
                "function": "isinstance",
                "line": 675
              },
              {
                "function": "now",
                "line": 685
              },
              {
                "function": "capitalize",
                "line": 752
              },
              {
                "function": "now",
                "line": 753
              },
              {
                "function": "append",
                "line": 787
              },
              {
                "function": "append",
                "line": 789
              },
              {
                "function": "TaskRequest",
                "line": 814
              },
              {
                "function": "now",
                "line": 118
              },
              {
                "function": "len",
                "line": 140
              },
              {
                "function": "get",
                "line": 203
              },
              {
                "function": "isoformat",
                "line": 237
              },
              {
                "function": "lower",
                "line": 269
              },
              {
                "function": "lower",
                "line": 269
              },
              {
                "function": "set",
                "line": 303
              },
              {
                "function": "len",
                "line": 307
              },
              {
                "function": "set",
                "line": 402
              },
              {
                "function": "len",
                "line": 406
              },
              {
                "function": "get",
                "line": 407
              },
              {
                "function": "now",
                "line": 582
              },
              {
                "function": "now",
                "line": 606
              },
              {
                "function": "str",
                "line": 640
              },
              {
                "function": "_execute_step_async",
                "line": 668
              },
              {
                "function": "str",
                "line": 676
              },
              {
                "function": "add",
                "line": 683
              },
              {
                "function": "len",
                "line": 197
              },
              {
                "function": "append",
                "line": 205
              },
              {
                "function": "_adapt_decomposition_from_memory",
                "line": 214
              },
              {
                "function": "info",
                "line": 220
              },
              {
                "function": "warning",
                "line": 223
              },
              {
                "function": "lower",
                "line": 271
              },
              {
                "function": "lower",
                "line": 271
              },
              {
                "function": "get",
                "line": 284
              },
              {
                "function": "get",
                "line": 285
              },
              {
                "function": "get",
                "line": 286
              },
              {
                "function": "get",
                "line": 383
              },
              {
                "function": "get",
                "line": 384
              },
              {
                "function": "get",
                "line": 385
              },
              {
                "function": "str",
                "line": 678
              },
              {
                "function": "str",
                "line": 154
              },
              {
                "function": "len",
                "line": 208
              },
              {
                "function": "now",
                "line": 237
              },
              {
                "function": "lower",
                "line": 273
              },
              {
                "function": "lower",
                "line": 273
              },
              {
                "function": "lower",
                "line": 275
              },
              {
                "function": "lower",
                "line": 275
              },
              {
                "function": "lower",
                "line": 277
              },
              {
                "function": "str",
                "line": 789
              }
            ]
          },
          "backend/agents/base/base_agent.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 138,
                "async": false,
                "calls": [
                  "GitCheckpointManager",
                  "info",
                  "get_shared_context",
                  "_get_language_directive",
                  "cwd",
                  "PauseHandler",
                  "getcwd",
                  "isinstance",
                  "get",
                  "_load_instructions",
                  "FileSystemTools",
                  "getattr",
                  "set",
                  "get_memory_manager",
                  "str",
                  "get_conversation_context",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "config"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "_load_instructions",
                "line": 223,
                "async": false,
                "calls": [
                  "startswith",
                  "info",
                  "getcwd",
                  "append",
                  "warning",
                  "open",
                  "extend",
                  "join",
                  "dirname",
                  "read",
                  "replace",
                  "abspath",
                  "exists"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "_get_language_directive",
                "line": 256,
                "async": false,
                "calls": [
                  "get_language_directive"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "get_system_prompt",
                "line": 268,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "calculate_dynamic_timeout",
                "line": 558,
                "async": false,
                "calls": [
                  "info",
                  "max",
                  "get",
                  "lower",
                  "items",
                  "len",
                  "min"
                ],
                "parameters": [
                  "self",
                  "prompt",
                  "context"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "_compile_research_summary",
                "line": 847,
                "async": false,
                "calls": [
                  "extend",
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "findings"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "set_websocket_callback",
                "line": 1025,
                "async": false,
                "calls": [
                  "set_websocket_callback"
                ],
                "parameters": [
                  "self",
                  "callback"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "get_status",
                "line": 1031,
                "async": false,
                "calls": [
                  "isoformat",
                  "get_pause_state",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "__repr__",
                "line": 1201,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/base_agent.py"
              }
            ],
            "classes": [
              {
                "name": "AgentCapability",
                "line": 64,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "AgentConfig",
                "line": 80,
                "methods": [],
                "bases": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "TaskRequest",
                "line": 94,
                "methods": [],
                "bases": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "TaskResult",
                "line": 107,
                "methods": [],
                "bases": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "AgentMessage",
                "line": 119,
                "methods": [],
                "bases": [],
                "file": "backend/agents/base/base_agent.py"
              },
              {
                "name": "BaseAgent",
                "line": 128,
                "methods": [
                  "__init__",
                  "_load_instructions",
                  "_get_language_directive",
                  "get_system_prompt",
                  "calculate_dynamic_timeout",
                  "_compile_research_summary",
                  "set_websocket_callback",
                  "get_status",
                  "__repr__"
                ],
                "bases": [
                  "ABC"
                ],
                "file": "backend/agents/base/base_agent.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "abc",
                "names": [
                  "ABC",
                  "abstractmethod"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List",
                  "Optional",
                  "Callable"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "config.settings",
                "names": [
                  "settings"
                ],
                "line": 20
              },
              {
                "type": "from_import",
                "module": "core.memory_manager",
                "names": [
                  "get_memory_manager",
                  "MemoryType"
                ],
                "line": 28
              },
              {
                "type": "from_import",
                "module": "core.shared_context_manager",
                "names": [
                  "get_shared_context"
                ],
                "line": 29
              },
              {
                "type": "from_import",
                "module": "core.conversation_context_manager",
                "names": [
                  "get_conversation_context"
                ],
                "line": 30
              },
              {
                "type": "from_import",
                "module": "prime_directives",
                "names": [
                  "PrimeDirectives"
                ],
                "line": 38
              },
              {
                "type": "from_import",
                "module": "core.pause_handler",
                "names": [
                  "PauseHandler",
                  "PauseAction"
                ],
                "line": 46
              },
              {
                "type": "from_import",
                "module": "core.git_checkpoint_manager",
                "names": [
                  "GitCheckpointManager"
                ],
                "line": 47
              },
              {
                "type": "from_import",
                "module": "agents.tools.file_tools",
                "names": [
                  "FileSystemTools"
                ],
                "line": 55
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 1117
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 1118
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 1157
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 1158
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "asdict"
                ],
                "line": 1159
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 175
              },
              {
                "type": "from_import",
                "module": "agents.specialized.research_agent",
                "names": [
                  "ResearchAgent"
                ],
                "line": 755
              },
              {
                "type": "from_import",
                "module": "core.memory_manager",
                "names": [
                  "LearningEntry"
                ],
                "line": 1175
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 18
              },
              {
                "function": "getLogger",
                "line": 62
              },
              {
                "function": "dirname",
                "line": 18
              },
              {
                "function": "field",
                "line": 87
              },
              {
                "function": "field",
                "line": 97
              },
              {
                "function": "field",
                "line": 101
              },
              {
                "function": "field",
                "line": 112
              },
              {
                "function": "field",
                "line": 113
              },
              {
                "function": "field",
                "line": 114
              },
              {
                "function": "field",
                "line": 125
              },
              {
                "function": "dirname",
                "line": 18
              },
              {
                "function": "warning",
                "line": 24
              },
              {
                "function": "warning",
                "line": 34
              },
              {
                "function": "warning",
                "line": 42
              },
              {
                "function": "warning",
                "line": 51
              },
              {
                "function": "warning",
                "line": 59
              },
              {
                "function": "_load_instructions",
                "line": 143
              },
              {
                "function": "_get_language_directive",
                "line": 146
              },
              {
                "function": "set",
                "line": 170
              },
              {
                "function": "info",
                "line": 221
              },
              {
                "function": "info",
                "line": 307
              },
              {
                "function": "info",
                "line": 317
              },
              {
                "function": "info",
                "line": 325
              },
              {
                "function": "now",
                "line": 342
              },
              {
                "function": "total_seconds",
                "line": 481
              },
              {
                "function": "now",
                "line": 539
              },
              {
                "function": "lower",
                "line": 607
              },
              {
                "function": "items",
                "line": 610
              },
              {
                "function": "max",
                "line": 631
              },
              {
                "function": "info",
                "line": 633
              },
              {
                "function": "AgentMessage",
                "line": 890
              },
              {
                "function": "AgentMessage",
                "line": 919
              },
              {
                "function": "AgentMessage",
                "line": 945
              },
              {
                "function": "info",
                "line": 968
              },
              {
                "function": "info",
                "line": 972
              },
              {
                "function": "store_learning",
                "line": 1080
              },
              {
                "function": "info",
                "line": 1087
              },
              {
                "function": "get_relevant_learnings",
                "line": 1098
              },
              {
                "function": "join",
                "line": 1124
              },
              {
                "function": "makedirs",
                "line": 1125
              },
              {
                "function": "join",
                "line": 1134
              },
              {
                "function": "info",
                "line": 1149
              },
              {
                "function": "join",
                "line": 1161
              },
              {
                "function": "dirname",
                "line": 18
              },
              {
                "function": "get_memory_manager",
                "line": 158
              },
              {
                "function": "get_shared_context",
                "line": 159
              },
              {
                "function": "get_conversation_context",
                "line": 160
              },
              {
                "function": "str",
                "line": 176
              },
              {
                "function": "PauseHandler",
                "line": 177
              },
              {
                "function": "GitCheckpointManager",
                "line": 178
              },
              {
                "function": "getattr",
                "line": 185
              },
              {
                "function": "FileSystemTools",
                "line": 186
              },
              {
                "function": "hasattr",
                "line": 190
              },
              {
                "function": "PauseHandler",
                "line": 215
              },
              {
                "function": "GitCheckpointManager",
                "line": 216
              },
              {
                "function": "dirname",
                "line": 227
              },
              {
                "function": "startswith",
                "line": 231
              },
              {
                "function": "warning",
                "line": 253
              },
              {
                "function": "get_language_directive",
                "line": 259
              },
              {
                "function": "subscribe",
                "line": 288
              },
              {
                "function": "subscribe",
                "line": 294
              },
              {
                "function": "subscribe",
                "line": 300
              },
              {
                "function": "_process_broadcast",
                "line": 318
              },
              {
                "function": "_can_help_with",
                "line": 328
              },
              {
                "function": "validate_request",
                "line": 347
              },
              {
                "function": "info",
                "line": 387
              },
              {
                "function": "TaskResult",
                "line": 388
              },
              {
                "function": "get_context_for_agent",
                "line": 418
              },
              {
                "function": "info",
                "line": 437
              },
              {
                "function": "TaskResult",
                "line": 438
              },
              {
                "function": "add_entry",
                "line": 513
              },
              {
                "function": "items",
                "line": 616
              },
              {
                "function": "len",
                "line": 621
              },
              {
                "function": "max",
                "line": 622
              },
              {
                "function": "max",
                "line": 628
              },
              {
                "function": "min",
                "line": 631
              },
              {
                "function": "error",
                "line": 650
              },
              {
                "function": "error",
                "line": 659
              },
              {
                "function": "ResearchAgent",
                "line": 756
              },
              {
                "function": "_compile_research_summary",
                "line": 828
              },
              {
                "function": "append",
                "line": 859
              },
              {
                "function": "append",
                "line": 869
              },
              {
                "function": "append",
                "line": 878
              },
              {
                "function": "join",
                "line": 880
              },
              {
                "function": "warning",
                "line": 885
              },
              {
                "function": "publish",
                "line": 899
              },
              {
                "function": "publish",
                "line": 931
              },
              {
                "function": "sleep",
                "line": 934
              },
              {
                "function": "publish",
                "line": 953
              },
              {
                "function": "sleep",
                "line": 958
              },
              {
                "function": "Exception",
                "line": 992
              },
              {
                "function": "pause_task",
                "line": 999
              },
              {
                "function": "Exception",
                "line": 1004
              },
              {
                "function": "resume_task",
                "line": 1006
              },
              {
                "function": "Exception",
                "line": 1014
              },
              {
                "function": "stop_and_rollback",
                "line": 1016
              },
              {
                "function": "Exception",
                "line": 1021
              },
              {
                "function": "handle_clarification_response",
                "line": 1023
              },
              {
                "function": "set_websocket_callback",
                "line": 1029
              },
              {
                "function": "len",
                "line": 1041
              },
              {
                "function": "get_pause_state",
                "line": 1047
              },
              {
                "function": "warning",
                "line": 1057
              },
              {
                "function": "info",
                "line": 1104
              },
              {
                "function": "getcwd",
                "line": 1124
              },
              {
                "function": "open",
                "line": 1135
              },
              {
                "function": "dump",
                "line": 1136
              },
              {
                "function": "getcwd",
                "line": 1161
              },
              {
                "function": "exists",
                "line": 1163
              },
              {
                "function": "warning",
                "line": 1167
              },
              {
                "function": "info",
                "line": 1194
              },
              {
                "function": "cwd",
                "line": 176
              },
              {
                "function": "getcwd",
                "line": 185
              },
              {
                "function": "isinstance",
                "line": 191
              },
              {
                "function": "dirname",
                "line": 227
              },
              {
                "function": "append",
                "line": 233
              },
              {
                "function": "extend",
                "line": 237
              },
              {
                "function": "exists",
                "line": 244
              },
              {
                "function": "_register_communication_handlers",
                "line": 280
              },
              {
                "function": "_process_agent_request",
                "line": 310
              },
              {
                "function": "send_response",
                "line": 311
              },
              {
                "function": "send_response",
                "line": 329
              },
              {
                "function": "info",
                "line": 354
              },
              {
                "function": "info",
                "line": 370
              },
              {
                "function": "search",
                "line": 397
              },
              {
                "function": "get_relevant_patterns",
                "line": 409
              },
              {
                "function": "update_context",
                "line": 428
              },
              {
                "function": "execute",
                "line": 447
              },
              {
                "function": "is_paused",
                "line": 450
              },
              {
                "function": "info",
                "line": 472
              },
              {
                "function": "TaskResult",
                "line": 473
              },
              {
                "function": "store",
                "line": 486
              },
              {
                "function": "store_code_pattern",
                "line": 503
              },
              {
                "function": "update_context",
                "line": 525
              },
              {
                "function": "max",
                "line": 612
              },
              {
                "function": "len",
                "line": 623
              },
              {
                "function": "max",
                "line": 624
              },
              {
                "function": "len",
                "line": 627
              },
              {
                "function": "write_file",
                "line": 668
              },
              {
                "function": "get",
                "line": 676
              },
              {
                "function": "info",
                "line": 677
              },
              {
                "function": "error",
                "line": 691
              },
              {
                "function": "error",
                "line": 697
              },
              {
                "function": "create_file",
                "line": 732
              },
              {
                "function": "info",
                "line": 762
              },
              {
                "function": "isoformat",
                "line": 835
              },
              {
                "function": "error",
                "line": 839
              },
              {
                "function": "get",
                "line": 865
              },
              {
                "function": "extend",
                "line": 866
              },
              {
                "function": "extend",
                "line": 875
              },
              {
                "function": "timestamp",
                "line": 888
              },
              {
                "function": "wait_for",
                "line": 903
              },
              {
                "function": "warning",
                "line": 909
              },
              {
                "function": "timestamp",
                "line": 917
              },
              {
                "function": "isoformat",
                "line": 1040
              },
              {
                "function": "len",
                "line": 1062
              },
              {
                "function": "open",
                "line": 1171
              },
              {
                "function": "load",
                "line": 1172
              },
              {
                "function": "LearningEntry",
                "line": 1179
              },
              {
                "function": "error",
                "line": 1198
              },
              {
                "function": "get",
                "line": 192
              },
              {
                "function": "get",
                "line": 193
              },
              {
                "function": "dirname",
                "line": 227
              },
              {
                "function": "replace",
                "line": 233
              },
              {
                "function": "_process_agent_response",
                "line": 313
              },
              {
                "function": "_perform_mandatory_research",
                "line": 357
              },
              {
                "function": "format_challenge_response",
                "line": 374
              },
              {
                "function": "total_seconds",
                "line": 375
              },
              {
                "function": "TaskResult",
                "line": 376
              },
              {
                "function": "total_seconds",
                "line": 442
              },
              {
                "function": "wait_for_user_action",
                "line": 452
              },
              {
                "function": "TaskResult",
                "line": 457
              },
              {
                "function": "now",
                "line": 481
              },
              {
                "function": "lower",
                "line": 501
              },
              {
                "function": "create_checkpoint",
                "line": 544
              },
              {
                "function": "info",
                "line": 549
              },
              {
                "function": "warning",
                "line": 552
              },
              {
                "function": "min",
                "line": 618
              },
              {
                "function": "get",
                "line": 627
              },
              {
                "function": "len",
                "line": 633
              },
              {
                "function": "str",
                "line": 743
              },
              {
                "function": "append",
                "line": 767
              },
              {
                "function": "str",
                "line": 841
              },
              {
                "function": "isoformat",
                "line": 844
              },
              {
                "function": "get",
                "line": 855
              },
              {
                "function": "append",
                "line": 856
              },
              {
                "function": "_wait_for_response",
                "line": 904
              },
              {
                "function": "len",
                "line": 1149
              },
              {
                "function": "any",
                "line": 1190
              },
              {
                "function": "append",
                "line": 1191
              },
              {
                "function": "abspath",
                "line": 227
              },
              {
                "function": "join",
                "line": 239
              },
              {
                "function": "join",
                "line": 240
              },
              {
                "function": "_provide_help",
                "line": 331
              },
              {
                "function": "get",
                "line": 359
              },
              {
                "function": "get",
                "line": 360
              },
              {
                "function": "stop_and_rollback",
                "line": 456
              },
              {
                "function": "total_seconds",
                "line": 477
              },
              {
                "function": "isoformat",
                "line": 531
              },
              {
                "function": "store",
                "line": 680
              },
              {
                "function": "str",
                "line": 696
              },
              {
                "function": "get_latest_best_practices",
                "line": 766
              },
              {
                "function": "now",
                "line": 835
              },
              {
                "function": "join",
                "line": 859
              },
              {
                "function": "join",
                "line": 869
              },
              {
                "function": "get",
                "line": 875
              },
              {
                "function": "join",
                "line": 878
              },
              {
                "function": "now",
                "line": 888
              },
              {
                "function": "now",
                "line": 917
              },
              {
                "function": "type",
                "line": 1070
              },
              {
                "function": "str",
                "line": 1072
              },
              {
                "function": "len",
                "line": 1104
              },
              {
                "function": "get",
                "line": 1186
              },
              {
                "function": "getcwd",
                "line": 239
              },
              {
                "function": "open",
                "line": 246
              },
              {
                "function": "read",
                "line": 247
              },
              {
                "function": "info",
                "line": 248
              },
              {
                "function": "warning",
                "line": 251
              },
              {
                "function": "get",
                "line": 354
              },
              {
                "function": "len",
                "line": 370
              },
              {
                "function": "isoformat",
                "line": 432
              },
              {
                "function": "total_seconds",
                "line": 461
              },
              {
                "function": "get",
                "line": 691
              },
              {
                "function": "append",
                "line": 776
              },
              {
                "function": "append",
                "line": 788
              },
              {
                "function": "now",
                "line": 844
              },
              {
                "function": "get",
                "line": 370
              },
              {
                "function": "now",
                "line": 375
              },
              {
                "function": "get",
                "line": 381
              },
              {
                "function": "now",
                "line": 442
              },
              {
                "function": "execute",
                "line": 470
              },
              {
                "function": "now",
                "line": 531
              },
              {
                "function": "verify_technology_exists",
                "line": 775
              },
              {
                "function": "research_for_agent",
                "line": 784
              },
              {
                "function": "append",
                "line": 799
              },
              {
                "function": "now",
                "line": 432
              },
              {
                "function": "now",
                "line": 477
              },
              {
                "function": "get",
                "line": 684
              },
              {
                "function": "isoformat",
                "line": 685
              },
              {
                "function": "research_for_agent",
                "line": 795
              },
              {
                "function": "append",
                "line": 810
              },
              {
                "function": "append",
                "line": 821
              },
              {
                "function": "now",
                "line": 461
              },
              {
                "function": "research_for_agent",
                "line": 806
              },
              {
                "function": "research_for_agent",
                "line": 817
              },
              {
                "function": "now",
                "line": 685
              }
            ]
          },
          "backend/agents/base/prime_directives.py": {
            "functions": [
              {
                "name": "validate_request",
                "line": 126,
                "async": false,
                "calls": [
                  "check_research_requirements",
                  "get",
                  "_check_violations"
                ],
                "parameters": [
                  "cls",
                  "request"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "_check_violations",
                "line": 173,
                "async": false,
                "calls": [
                  "append",
                  "lower",
                  "items",
                  "len",
                  "search"
                ],
                "parameters": [
                  "cls",
                  "prompt",
                  "context"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "check_research_requirements",
                "line": 247,
                "async": false,
                "calls": [
                  "findall",
                  "list",
                  "append",
                  "get",
                  "join",
                  "set",
                  "lower",
                  "items",
                  "len",
                  "search"
                ],
                "parameters": [
                  "cls",
                  "prompt",
                  "context"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "format_challenge_response",
                "line": 316,
                "async": false,
                "calls": [
                  "enumerate",
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "cls",
                  "validation_result"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "get_directive_prompt",
                "line": 344,
                "async": false,
                "calls": [
                  "join",
                  "append"
                ],
                "parameters": [
                  "cls"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "check_global_error_search",
                "line": 365,
                "async": false,
                "calls": [],
                "parameters": [
                  "cls",
                  "error_found",
                  "file_location"
                ],
                "decorators": [
                  "classmethod"
                ],
                "file": "backend/agents/base/prime_directives.py"
              }
            ],
            "classes": [
              {
                "name": "Directive",
                "line": 15,
                "methods": [],
                "bases": [],
                "file": "backend/agents/base/prime_directives.py"
              },
              {
                "name": "PrimeDirectives",
                "line": 22,
                "methods": [
                  "validate_request",
                  "_check_violations",
                  "check_research_requirements",
                  "format_challenge_response",
                  "get_directive_prompt",
                  "check_global_error_search"
                ],
                "bases": [],
                "file": "backend/agents/base/prime_directives.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 384
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 385
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "Directive",
                "line": 30
              },
              {
                "function": "Directive",
                "line": 44
              },
              {
                "function": "Directive",
                "line": 58
              },
              {
                "function": "Directive",
                "line": 73
              },
              {
                "function": "Directive",
                "line": 85
              },
              {
                "function": "Directive",
                "line": 97
              },
              {
                "function": "Directive",
                "line": 109
              },
              {
                "function": "get",
                "line": 135
              },
              {
                "function": "get",
                "line": 136
              },
              {
                "function": "_check_violations",
                "line": 139
              },
              {
                "function": "check_research_requirements",
                "line": 142
              },
              {
                "function": "lower",
                "line": 204
              },
              {
                "function": "items",
                "line": 205
              },
              {
                "function": "lower",
                "line": 252
              },
              {
                "function": "items",
                "line": 286
              },
              {
                "function": "findall",
                "line": 293
              },
              {
                "function": "get",
                "line": 304
              },
              {
                "function": "join",
                "line": 341
              },
              {
                "function": "append",
                "line": 357
              },
              {
                "function": "append",
                "line": 358
              },
              {
                "function": "append",
                "line": 359
              },
              {
                "function": "append",
                "line": 360
              },
              {
                "function": "join",
                "line": 362
              },
              {
                "function": "search",
                "line": 206
              },
              {
                "function": "search",
                "line": 235
              },
              {
                "function": "search",
                "line": 287
              },
              {
                "function": "append",
                "line": 300
              },
              {
                "function": "append",
                "line": 301
              },
              {
                "function": "append",
                "line": 305
              },
              {
                "function": "append",
                "line": 306
              },
              {
                "function": "list",
                "line": 310
              },
              {
                "function": "append",
                "line": 321
              },
              {
                "function": "get",
                "line": 323
              },
              {
                "function": "get",
                "line": 329
              },
              {
                "function": "append",
                "line": 335
              },
              {
                "function": "append",
                "line": 336
              },
              {
                "function": "append",
                "line": 337
              },
              {
                "function": "append",
                "line": 338
              },
              {
                "function": "append",
                "line": 339
              },
              {
                "function": "append",
                "line": 349
              },
              {
                "function": "append",
                "line": 350
              },
              {
                "function": "append",
                "line": 351
              },
              {
                "function": "append",
                "line": 352
              },
              {
                "function": "append",
                "line": 355
              },
              {
                "function": "append",
                "line": 406
              },
              {
                "function": "append",
                "line": 407
              },
              {
                "function": "run",
                "line": 410
              },
              {
                "function": "get",
                "line": 154
              },
              {
                "function": "get",
                "line": 155
              },
              {
                "function": "append",
                "line": 207
              },
              {
                "function": "append",
                "line": 208
              },
              {
                "function": "append",
                "line": 224
              },
              {
                "function": "append",
                "line": 225
              },
              {
                "function": "append",
                "line": 236
              },
              {
                "function": "append",
                "line": 237
              },
              {
                "function": "append",
                "line": 288
              },
              {
                "function": "append",
                "line": 289
              },
              {
                "function": "len",
                "line": 309
              },
              {
                "function": "set",
                "line": 310
              },
              {
                "function": "join",
                "line": 311
              },
              {
                "function": "append",
                "line": 324
              },
              {
                "function": "enumerate",
                "line": 325
              },
              {
                "function": "append",
                "line": 327
              },
              {
                "function": "append",
                "line": 330
              },
              {
                "function": "enumerate",
                "line": 331
              },
              {
                "function": "append",
                "line": 333
              },
              {
                "function": "append",
                "line": 354
              },
              {
                "function": "extend",
                "line": 400
              },
              {
                "function": "extend",
                "line": 403
              },
              {
                "function": "getcwd",
                "line": 407
              },
              {
                "function": "len",
                "line": 415
              },
              {
                "function": "run",
                "line": 419
              },
              {
                "function": "str",
                "line": 431
              },
              {
                "function": "len",
                "line": 240
              },
              {
                "function": "len",
                "line": 240
              },
              {
                "function": "append",
                "line": 326
              },
              {
                "function": "append",
                "line": 332
              },
              {
                "function": "sum",
                "line": 422
              },
              {
                "function": "join",
                "line": 301
              },
              {
                "function": "split",
                "line": 413
              },
              {
                "function": "int",
                "line": 422
              },
              {
                "function": "strip",
                "line": 413
              },
              {
                "function": "split",
                "line": 422
              },
              {
                "function": "split",
                "line": 422
              },
              {
                "function": "strip",
                "line": 422
              }
            ]
          },
          "backend/agents/base/chat_agent.py": {
            "functions": [
              {
                "name": "__post_init__",
                "line": 26,
                "async": false,
                "calls": [
                  "now"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/chat_agent.py"
              },
              {
                "name": "to_dict",
                "line": 32,
                "async": false,
                "calls": [
                  "isoformat"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/chat_agent.py"
              },
              {
                "name": "__init__",
                "line": 47,
                "async": false,
                "calls": [
                  "__init__",
                  "super"
                ],
                "parameters": [
                  "self",
                  "config"
                ],
                "decorators": [],
                "file": "backend/agents/base/chat_agent.py"
              },
              {
                "name": "format_response",
                "line": 193,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "content",
                  "status"
                ],
                "decorators": [],
                "file": "backend/agents/base/chat_agent.py"
              },
              {
                "name": "get_chat_status",
                "line": 203,
                "async": false,
                "calls": [
                  "update",
                  "get_status",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/agents/base/chat_agent.py"
              }
            ],
            "classes": [
              {
                "name": "StreamMessage",
                "line": 18,
                "methods": [
                  "__post_init__",
                  "to_dict"
                ],
                "bases": [],
                "file": "backend/agents/base/chat_agent.py"
              },
              {
                "name": "ChatAgent",
                "line": 41,
                "methods": [
                  "__init__",
                  "format_response",
                  "get_chat_status"
                ],
                "bases": [
                  "BaseAgent"
                ],
                "file": "backend/agents/base/chat_agent.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "AsyncGenerator",
                  "Dict",
                  "Any",
                  "Optional",
                  "Callable"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "base_agent",
                "names": [
                  "BaseAgent",
                  "AgentConfig",
                  "TaskRequest",
                  "TaskResult"
                ],
                "line": 13
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 15
              },
              {
                "function": "__init__",
                "line": 48
              },
              {
                "function": "info",
                "line": 154
              },
              {
                "function": "items",
                "line": 190
              },
              {
                "function": "get_status",
                "line": 205
              },
              {
                "function": "update",
                "line": 206
              },
              {
                "function": "now",
                "line": 28
              },
              {
                "function": "isoformat",
                "line": 37
              },
              {
                "function": "StreamMessage",
                "line": 65
              },
              {
                "function": "_execute_streaming",
                "line": 95
              },
              {
                "function": "StreamMessage",
                "line": 101
              },
              {
                "function": "execute",
                "line": 131
              },
              {
                "function": "super",
                "line": 48
              },
              {
                "function": "timestamp",
                "line": 61
              },
              {
                "function": "StreamMessage",
                "line": 115
              },
              {
                "function": "error",
                "line": 123
              },
              {
                "function": "StreamMessage",
                "line": 135
              },
              {
                "function": "StreamMessage",
                "line": 142
              },
              {
                "function": "get",
                "line": 161
              },
              {
                "function": "TaskRequest",
                "line": 168
              },
              {
                "function": "handle_chat_stream",
                "line": 177
              },
              {
                "function": "error",
                "line": 181
              },
              {
                "function": "put",
                "line": 191
              },
              {
                "function": "len",
                "line": 207
              },
              {
                "function": "stream_callback",
                "line": 71
              },
              {
                "function": "search",
                "line": 77
              },
              {
                "function": "StreamMessage",
                "line": 84
              },
              {
                "function": "stream_callback",
                "line": 111
              },
              {
                "function": "receive_json",
                "line": 159
              },
              {
                "function": "send_json",
                "line": 182
              },
              {
                "function": "now",
                "line": 61
              },
              {
                "function": "stream_callback",
                "line": 97
              },
              {
                "function": "stream_callback",
                "line": 121
              },
              {
                "function": "send_json",
                "line": 164
              },
              {
                "function": "get",
                "line": 169
              },
              {
                "function": "get",
                "line": 170
              },
              {
                "function": "get",
                "line": 171
              },
              {
                "function": "get",
                "line": 172
              },
              {
                "function": "get",
                "line": 173
              },
              {
                "function": "send_json",
                "line": 178
              },
              {
                "function": "stream_callback",
                "line": 91
              },
              {
                "function": "to_dict",
                "line": 178
              },
              {
                "function": "str",
                "line": 184
              },
              {
                "function": "len",
                "line": 88
              },
              {
                "function": "str",
                "line": 117
              }
            ]
          },
          "backend/utils/perplexity_service.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 21,
                "async": false,
                "calls": [
                  "ValueError",
                  "info",
                  "getenv"
                ],
                "parameters": [
                  "self",
                  "model"
                ],
                "decorators": [],
                "file": "backend/utils/perplexity_service.py"
              },
              {
                "name": "test_connection",
                "line": 314,
                "async": false,
                "calls": [
                  "error",
                  "post"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/utils/perplexity_service.py"
              }
            ],
            "classes": [
              {
                "name": "PerplexityService",
                "line": 15,
                "methods": [
                  "__init__",
                  "test_connection"
                ],
                "bases": [],
                "file": "backend/utils/perplexity_service.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "AsyncGenerator"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "aiohttp",
                "names": [
                  "aiohttp"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "requests",
                "names": [
                  "requests"
                ],
                "line": 322
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "getenv",
                "line": 31
              },
              {
                "function": "info",
                "line": 42
              },
              {
                "function": "ValueError",
                "line": 33
              },
              {
                "function": "send_message",
                "line": 217
              },
              {
                "function": "get",
                "line": 227
              },
              {
                "function": "send_message",
                "line": 264
              },
              {
                "function": "get",
                "line": 274
              },
              {
                "function": "send_message",
                "line": 300
              },
              {
                "function": "get",
                "line": 309
              },
              {
                "function": "post",
                "line": 323
              },
              {
                "function": "ClientSession",
                "line": 94
              },
              {
                "function": "error",
                "line": 120
              },
              {
                "function": "ClientSession",
                "line": 159
              },
              {
                "function": "error",
                "line": 185
              },
              {
                "function": "join",
                "line": 255
              },
              {
                "function": "error",
                "line": 334
              },
              {
                "function": "error",
                "line": 337
              },
              {
                "function": "post",
                "line": 95
              },
              {
                "function": "post",
                "line": 160
              },
              {
                "function": "get",
                "line": 104
              },
              {
                "function": "get",
                "line": 105
              },
              {
                "function": "error",
                "line": 116
              },
              {
                "function": "Exception",
                "line": 117
              },
              {
                "function": "error",
                "line": 181
              },
              {
                "function": "Exception",
                "line": 182
              },
              {
                "function": "chr",
                "line": 255
              },
              {
                "function": "json",
                "line": 101
              },
              {
                "function": "get",
                "line": 111
              },
              {
                "function": "isoformat",
                "line": 112
              },
              {
                "function": "text",
                "line": 115
              },
              {
                "function": "text",
                "line": 180
              },
              {
                "function": "get",
                "line": 104
              },
              {
                "function": "strip",
                "line": 168
              },
              {
                "function": "startswith",
                "line": 169
              },
              {
                "function": "now",
                "line": 112
              },
              {
                "function": "decode",
                "line": 168
              },
              {
                "function": "get",
                "line": 104
              },
              {
                "function": "loads",
                "line": 173
              },
              {
                "function": "get",
                "line": 174
              },
              {
                "function": "get",
                "line": 174
              },
              {
                "function": "get",
                "line": 174
              }
            ]
          },
          "backend/utils/claude_code_service.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 33,
                "async": false,
                "calls": [
                  "ClaudeCodeConfig",
                  "_check_cli_availability"
                ],
                "parameters": [
                  "self",
                  "config"
                ],
                "decorators": [],
                "file": "backend/utils/claude_code_service.py"
              },
              {
                "name": "_check_cli_availability",
                "line": 40,
                "async": false,
                "calls": [
                  "run",
                  "info",
                  "error",
                  "strip"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/utils/claude_code_service.py"
              },
              {
                "name": "_parse_json_response",
                "line": 136,
                "async": false,
                "calls": [
                  "startswith",
                  "split",
                  "loads",
                  "isinstance",
                  "append",
                  "get",
                  "warning",
                  "join",
                  "type",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "response"
                ],
                "decorators": [],
                "file": "backend/utils/claude_code_service.py"
              },
              {
                "name": "is_available",
                "line": 252,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/utils/claude_code_service.py"
              }
            ],
            "classes": [
              {
                "name": "ClaudeCodeConfig",
                "line": 18,
                "methods": [],
                "bases": [],
                "file": "backend/utils/claude_code_service.py"
              },
              {
                "name": "ClaudeCodeService",
                "line": 25,
                "methods": [
                  "__init__",
                  "_check_cli_availability",
                  "_parse_json_response",
                  "is_available"
                ],
                "bases": [],
                "file": "backend/utils/claude_code_service.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 13
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 15
              },
              {
                "function": "_check_cli_availability",
                "line": 38
              },
              {
                "function": "split",
                "line": 138
              },
              {
                "function": "join",
                "line": 183
              },
              {
                "function": "ClaudeCodeConfig",
                "line": 34
              },
              {
                "function": "run",
                "line": 43
              },
              {
                "function": "error",
                "line": 77
              },
              {
                "function": "Exception",
                "line": 78
              },
              {
                "function": "extend",
                "line": 95
              },
              {
                "function": "info",
                "line": 108
              },
              {
                "function": "isinstance",
                "line": 178
              },
              {
                "function": "complete",
                "line": 210
              },
              {
                "function": "complete",
                "line": 245
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "error",
                "line": 54
              },
              {
                "function": "create_subprocess_exec",
                "line": 99
              },
              {
                "function": "wait_for",
                "line": 110
              },
              {
                "function": "error",
                "line": 117
              },
              {
                "function": "Exception",
                "line": 118
              },
              {
                "function": "_parse_json_response",
                "line": 122
              },
              {
                "function": "strip",
                "line": 124
              },
              {
                "function": "error",
                "line": 128
              },
              {
                "function": "error",
                "line": 129
              },
              {
                "function": "Exception",
                "line": 130
              },
              {
                "function": "error",
                "line": 133
              },
              {
                "function": "Exception",
                "line": 134
              },
              {
                "function": "strip",
                "line": 138
              },
              {
                "function": "strip",
                "line": 142
              },
              {
                "function": "loads",
                "line": 146
              },
              {
                "function": "append",
                "line": 179
              },
              {
                "function": "warning",
                "line": 181
              },
              {
                "function": "complete",
                "line": 267
              },
              {
                "function": "communicate",
                "line": 111
              },
              {
                "function": "decode",
                "line": 122
              },
              {
                "function": "get",
                "line": 149
              },
              {
                "function": "lower",
                "line": 249
              },
              {
                "function": "lower",
                "line": 249
              },
              {
                "function": "str",
                "line": 276
              },
              {
                "function": "decode",
                "line": 116
              },
              {
                "function": "decode",
                "line": 124
              },
              {
                "function": "str",
                "line": 132
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "get",
                "line": 153
              },
              {
                "function": "append",
                "line": 173
              },
              {
                "function": "strip",
                "line": 51
              },
              {
                "function": "encode",
                "line": 111
              },
              {
                "function": "append",
                "line": 155
              },
              {
                "function": "get",
                "line": 157
              },
              {
                "function": "startswith",
                "line": 172
              },
              {
                "function": "type",
                "line": 181
              },
              {
                "function": "isinstance",
                "line": 159
              },
              {
                "function": "append",
                "line": 160
              },
              {
                "function": "isinstance",
                "line": 161
              },
              {
                "function": "isinstance",
                "line": 163
              },
              {
                "function": "get",
                "line": 164
              },
              {
                "function": "isinstance",
                "line": 165
              },
              {
                "function": "isinstance",
                "line": 167
              },
              {
                "function": "get",
                "line": 163
              },
              {
                "function": "append",
                "line": 166
              },
              {
                "function": "append",
                "line": 168
              }
            ]
          },
          "backend/utils/openai_service.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 34,
                "async": false,
                "calls": [
                  "info",
                  "AsyncOpenAI",
                  "getenv",
                  "warning",
                  "OpenAIConfig"
                ],
                "parameters": [
                  "self",
                  "config",
                  "model"
                ],
                "decorators": [],
                "file": "backend/utils/openai_service.py"
              },
              {
                "name": "is_available",
                "line": 266,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/utils/openai_service.py"
              }
            ],
            "classes": [
              {
                "name": "OpenAIConfig",
                "line": 20,
                "methods": [],
                "bases": [],
                "file": "backend/utils/openai_service.py"
              },
              {
                "name": "OpenAIService",
                "line": 28,
                "methods": [
                  "__init__",
                  "is_available"
                ],
                "bases": [],
                "file": "backend/utils/openai_service.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional",
                  "AsyncGenerator"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "openai",
                "names": [
                  "AsyncOpenAI"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "dotenv",
                "names": [
                  "load_dotenv"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 204
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 81
              }
            ],
            "calls": [
              {
                "function": "load_dotenv",
                "line": 15
              },
              {
                "function": "getLogger",
                "line": 17
              },
              {
                "function": "append",
                "line": 71
              },
              {
                "function": "OpenAIConfig",
                "line": 36
              },
              {
                "function": "warning",
                "line": 46
              },
              {
                "function": "AsyncOpenAI",
                "line": 49
              },
              {
                "function": "info",
                "line": 50
              },
              {
                "function": "append",
                "line": 70
              },
              {
                "function": "complete",
                "line": 201
              },
              {
                "function": "loads",
                "line": 205
              },
              {
                "function": "complete",
                "line": 243
              },
              {
                "function": "complete",
                "line": 257
              },
              {
                "function": "range",
                "line": 89
              },
              {
                "function": "error",
                "line": 140
              },
              {
                "function": "create",
                "line": 153
              },
              {
                "function": "error",
                "line": 166
              },
              {
                "function": "getenv",
                "line": 37
              },
              {
                "function": "_stream_completion",
                "line": 75
              },
              {
                "function": "str",
                "line": 137
              },
              {
                "function": "str",
                "line": 141
              },
              {
                "function": "info",
                "line": 93
              },
              {
                "function": "min",
                "line": 96
              },
              {
                "function": "wait_for",
                "line": 107
              },
              {
                "function": "warning",
                "line": 113
              },
              {
                "function": "debug",
                "line": 114
              },
              {
                "function": "error",
                "line": 127
              },
              {
                "function": "str",
                "line": 167
              },
              {
                "function": "sleep",
                "line": 94
              },
              {
                "function": "create",
                "line": 108
              },
              {
                "function": "warning",
                "line": 120
              },
              {
                "function": "error",
                "line": 123
              },
              {
                "function": "lower",
                "line": 128
              },
              {
                "function": "sleep",
                "line": 130
              },
              {
                "function": "str",
                "line": 128
              }
            ]
          },
          "backend/utils/anthropic_service.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 34,
                "async": false,
                "calls": [
                  "info",
                  "getenv",
                  "warning",
                  "AsyncAnthropic",
                  "AnthropicConfig"
                ],
                "parameters": [
                  "self",
                  "config"
                ],
                "decorators": [],
                "file": "backend/utils/anthropic_service.py"
              },
              {
                "name": "_format_outputs",
                "line": 241,
                "async": false,
                "calls": [
                  "join",
                  "enumerate",
                  "get",
                  "append"
                ],
                "parameters": [
                  "self",
                  "outputs"
                ],
                "decorators": [],
                "file": "backend/utils/anthropic_service.py"
              },
              {
                "name": "is_available",
                "line": 251,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/utils/anthropic_service.py"
              }
            ],
            "classes": [
              {
                "name": "AnthropicConfig",
                "line": 20,
                "methods": [],
                "bases": [],
                "file": "backend/utils/anthropic_service.py"
              },
              {
                "name": "AnthropicService",
                "line": 28,
                "methods": [
                  "__init__",
                  "_format_outputs",
                  "is_available"
                ],
                "bases": [],
                "file": "backend/utils/anthropic_service.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional",
                  "AsyncGenerator"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "anthropic",
                "names": [
                  "AsyncAnthropic"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "dotenv",
                "names": [
                  "load_dotenv"
                ],
                "line": 12
              }
            ],
            "calls": [
              {
                "function": "load_dotenv",
                "line": 15
              },
              {
                "function": "getLogger",
                "line": 17
              },
              {
                "function": "enumerate",
                "line": 244
              },
              {
                "function": "join",
                "line": 249
              },
              {
                "function": "AnthropicConfig",
                "line": 36
              },
              {
                "function": "warning",
                "line": 43
              },
              {
                "function": "AsyncAnthropic",
                "line": 46
              },
              {
                "function": "info",
                "line": 47
              },
              {
                "function": "complete",
                "line": 150
              },
              {
                "function": "complete",
                "line": 187
              },
              {
                "function": "complete",
                "line": 229
              },
              {
                "function": "append",
                "line": 245
              },
              {
                "function": "error",
                "line": 91
              },
              {
                "function": "create",
                "line": 105
              },
              {
                "function": "error",
                "line": 120
              },
              {
                "function": "_format_outputs",
                "line": 217
              },
              {
                "function": "getenv",
                "line": 37
              },
              {
                "function": "_stream_completion",
                "line": 67
              },
              {
                "function": "create",
                "line": 74
              },
              {
                "function": "isinstance",
                "line": 84
              },
              {
                "function": "lower",
                "line": 191
              },
              {
                "function": "lower",
                "line": 191
              },
              {
                "function": "str",
                "line": 92
              },
              {
                "function": "hasattr",
                "line": 116
              },
              {
                "function": "hasattr",
                "line": 116
              },
              {
                "function": "get",
                "line": 246
              },
              {
                "function": "get",
                "line": 247
              },
              {
                "function": "str",
                "line": 121
              }
            ]
          },
          "backend/langgraph_system/intelligent_query_handler.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 35,
                "async": false,
                "calls": [
                  "_init_fallback_responses",
                  "_init_query_patterns"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "_init_fallback_responses",
                "line": 39,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "_init_query_patterns",
                "line": 119,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "analyze_query",
                "line": 148,
                "async": false,
                "calls": [
                  "split",
                  "get",
                  "any",
                  "QueryAnalysis",
                  "lower",
                  "len"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "get_intelligent_response",
                "line": 219,
                "async": false,
                "calls": [
                  "analyze_query",
                  "any",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "query",
                  "context"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "create_intelligent_execution_plan",
                "line": 256,
                "async": false,
                "calls": [
                  "get_intelligent_response",
                  "analyze_query",
                  "ExecutionStep"
                ],
                "parameters": [
                  "self",
                  "query",
                  "fallback_agent"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "enhance_orchestrator_step",
                "line": 344,
                "async": false,
                "calls": [
                  "get_intelligent_response",
                  "info",
                  "len"
                ],
                "parameters": [
                  "self",
                  "step",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "integrate_with_classification",
                "line": 359,
                "async": false,
                "calls": [
                  "_get_development_guidance",
                  "get"
                ],
                "parameters": [
                  "self",
                  "classification"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "_get_development_guidance",
                "line": 389,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "dev_type"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              }
            ],
            "classes": [
              {
                "name": "QueryAnalysis",
                "line": 17,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              },
              {
                "name": "IntelligentQueryHandler",
                "line": 29,
                "methods": [
                  "__init__",
                  "_init_fallback_responses",
                  "_init_query_patterns",
                  "analyze_query",
                  "get_intelligent_response",
                  "create_intelligent_execution_plan",
                  "enhance_orchestrator_step",
                  "integrate_with_classification",
                  "_get_development_guidance"
                ],
                "bases": [],
                "file": "backend/langgraph_system/intelligent_query_handler.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Tuple",
                  "Optional"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ExecutionStep"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "_init_fallback_responses",
                "line": 36
              },
              {
                "function": "_init_query_patterns",
                "line": 37
              },
              {
                "function": "lower",
                "line": 152
              },
              {
                "function": "any",
                "line": 168
              },
              {
                "function": "any",
                "line": 178
              },
              {
                "function": "get",
                "line": 203
              },
              {
                "function": "QueryAnalysis",
                "line": 208
              },
              {
                "function": "lower",
                "line": 224
              },
              {
                "function": "analyze_query",
                "line": 232
              },
              {
                "function": "analyze_query",
                "line": 264
              },
              {
                "function": "get",
                "line": 365
              },
              {
                "function": "get",
                "line": 369
              },
              {
                "function": "get",
                "line": 372
              },
              {
                "function": "get",
                "line": 375
              },
              {
                "function": "get",
                "line": 382
              },
              {
                "function": "get",
                "line": 431
              },
              {
                "function": "any",
                "line": 155
              },
              {
                "function": "any",
                "line": 160
              },
              {
                "function": "any",
                "line": 170
              },
              {
                "function": "any",
                "line": 180
              },
              {
                "function": "any",
                "line": 228
              },
              {
                "function": "get_intelligent_response",
                "line": 282
              },
              {
                "function": "ExecutionStep",
                "line": 333
              },
              {
                "function": "get_intelligent_response",
                "line": 351
              },
              {
                "function": "info",
                "line": 355
              },
              {
                "function": "get",
                "line": 376
              },
              {
                "function": "any",
                "line": 162
              },
              {
                "function": "any",
                "line": 172
              },
              {
                "function": "any",
                "line": 182
              },
              {
                "function": "split",
                "line": 191
              },
              {
                "function": "ExecutionStep",
                "line": 269
              },
              {
                "function": "ExecutionStep",
                "line": 285
              },
              {
                "function": "ExecutionStep",
                "line": 304
              },
              {
                "function": "ExecutionStep",
                "line": 312
              },
              {
                "function": "ExecutionStep",
                "line": 320
              },
              {
                "function": "_get_development_guidance",
                "line": 379
              },
              {
                "function": "any",
                "line": 184
              },
              {
                "function": "len",
                "line": 191
              },
              {
                "function": "len",
                "line": 355
              }
            ]
          },
          "backend/langgraph_system/cache_manager.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 24,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/cache_manager.py"
              },
              {
                "name": "check_docker_installed",
                "line": 28,
                "async": false,
                "calls": [
                  "run"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/cache_manager.py"
              },
              {
                "name": "check_redis_running",
                "line": 41,
                "async": false,
                "calls": [
                  "Redis",
                  "ping"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/cache_manager.py"
              },
              {
                "name": "start_redis_container",
                "line": 51,
                "async": false,
                "calls": [
                  "run",
                  "info",
                  "check_redis_running",
                  "append",
                  "str",
                  "sleep",
                  "check_docker_installed"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/cache_manager.py"
              },
              {
                "name": "fill_caches",
                "line": 131,
                "async": false,
                "calls": [
                  "append",
                  "extend",
                  "join",
                  "start_redis_container",
                  "set"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/cache_manager.py"
              }
            ],
            "classes": [
              {
                "name": "CacheManager",
                "line": 21,
                "methods": [
                  "__init__",
                  "check_docker_installed",
                  "check_redis_running",
                  "start_redis_container",
                  "fill_caches"
                ],
                "bases": [],
                "file": "backend/langgraph_system/cache_manager.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "redis",
                "names": [
                  "redis"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "__version__",
                "names": [
                  "__version_display__"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "insert",
                "line": 15
              },
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "dirname",
                "line": 15
              },
              {
                "function": "check_redis_running",
                "line": 66
              },
              {
                "function": "start_redis_container",
                "line": 141
              },
              {
                "function": "extend",
                "line": 157
              },
              {
                "function": "extend",
                "line": 158
              },
              {
                "function": "extend",
                "line": 159
              },
              {
                "function": "abspath",
                "line": 15
              },
              {
                "function": "run",
                "line": 31
              },
              {
                "function": "Redis",
                "line": 44
              },
              {
                "function": "ping",
                "line": 45
              },
              {
                "function": "check_docker_installed",
                "line": 60
              },
              {
                "function": "append",
                "line": 62
              },
              {
                "function": "append",
                "line": 69
              },
              {
                "function": "info",
                "line": 74
              },
              {
                "function": "run",
                "line": 75
              },
              {
                "function": "run",
                "line": 80
              },
              {
                "function": "append",
                "line": 85
              },
              {
                "function": "info",
                "line": 88
              },
              {
                "function": "run",
                "line": 96
              },
              {
                "function": "join",
                "line": 161
              },
              {
                "function": "append",
                "line": 104
              },
              {
                "function": "sleep",
                "line": 107
              },
              {
                "function": "check_redis_running",
                "line": 110
              },
              {
                "function": "append",
                "line": 120
              },
              {
                "function": "append",
                "line": 124
              },
              {
                "function": "append",
                "line": 127
              },
              {
                "function": "set",
                "line": 149
              },
              {
                "function": "set",
                "line": 150
              },
              {
                "function": "append",
                "line": 151
              },
              {
                "function": "append",
                "line": 113
              },
              {
                "function": "append",
                "line": 114
              },
              {
                "function": "append",
                "line": 117
              },
              {
                "function": "append",
                "line": 153
              },
              {
                "function": "str",
                "line": 126
              },
              {
                "function": "str",
                "line": 127
              }
            ]
          },
          "backend/langgraph_system/development_query_handler.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 33,
                "async": false,
                "calls": [
                  "getLogger"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "analyze_context",
                "line": 36,
                "async": false,
                "calls": [
                  "bool",
                  "sum",
                  "any",
                  "DevelopmentContext",
                  "lower",
                  "search"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_performance_query",
                "line": 77,
                "async": false,
                "calls": [
                  "analyze_context"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_bug_query",
                "line": 116,
                "async": false,
                "calls": [
                  "analyze_context"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_refactoring_query",
                "line": 162,
                "async": false,
                "calls": [
                  "analyze_context"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_testing_query",
                "line": 204,
                "async": false,
                "calls": [
                  "analyze_context"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_implementation_query",
                "line": 253,
                "async": false,
                "calls": [
                  "lower",
                  "any"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_technology_query",
                "line": 311,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_database_query",
                "line": 355,
                "async": false,
                "calls": [
                  "lower",
                  "any"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_ai_integration_query",
                "line": 417,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_error_diagnosis_query",
                "line": 470,
                "async": false,
                "calls": [
                  "lower",
                  "any"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_scope_clarification",
                "line": 546,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "get_handler_for_type",
                "line": 604,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "dev_type"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "handle_development_query",
                "line": 622,
                "async": false,
                "calls": [
                  "get_handler_for_type",
                  "handler"
                ],
                "parameters": [
                  "self",
                  "query",
                  "dev_type",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "suggest_next_steps",
                "line": 647,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "query_type"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              }
            ],
            "classes": [
              {
                "name": "DevelopmentContext",
                "line": 15,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              },
              {
                "name": "DevelopmentQueryHandler",
                "line": 27,
                "methods": [
                  "__init__",
                  "analyze_context",
                  "handle_performance_query",
                  "handle_bug_query",
                  "handle_refactoring_query",
                  "handle_testing_query",
                  "handle_implementation_query",
                  "handle_technology_query",
                  "handle_database_query",
                  "handle_ai_integration_query",
                  "handle_error_diagnosis_query",
                  "handle_scope_clarification",
                  "get_handler_for_type",
                  "handle_development_query",
                  "suggest_next_steps"
                ],
                "bases": [],
                "file": "backend/langgraph_system/development_query_handler.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List",
                  "Tuple"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "getLogger",
                "line": 34
              },
              {
                "function": "any",
                "line": 40
              },
              {
                "function": "bool",
                "line": 45
              },
              {
                "function": "any",
                "line": 48
              },
              {
                "function": "any",
                "line": 53
              },
              {
                "function": "any",
                "line": 58
              },
              {
                "function": "DevelopmentContext",
                "line": 65
              },
              {
                "function": "analyze_context",
                "line": 79
              },
              {
                "function": "analyze_context",
                "line": 118
              },
              {
                "function": "analyze_context",
                "line": 164
              },
              {
                "function": "analyze_context",
                "line": 206
              },
              {
                "function": "any",
                "line": 257
              },
              {
                "function": "any",
                "line": 358
              },
              {
                "function": "any",
                "line": 473
              },
              {
                "function": "get",
                "line": 620
              },
              {
                "function": "get_handler_for_type",
                "line": 635
              },
              {
                "function": "get",
                "line": 663
              },
              {
                "function": "search",
                "line": 45
              },
              {
                "function": "sum",
                "line": 63
              },
              {
                "function": "handler",
                "line": 638
              },
              {
                "function": "lower",
                "line": 40
              },
              {
                "function": "lower",
                "line": 48
              },
              {
                "function": "lower",
                "line": 53
              },
              {
                "function": "lower",
                "line": 58
              },
              {
                "function": "lower",
                "line": 257
              },
              {
                "function": "lower",
                "line": 358
              },
              {
                "function": "lower",
                "line": 473
              }
            ]
          },
          "backend/langgraph_system/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ExtendedAgentState",
                  "create_initial_state"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "workflow",
                "names": [
                  "create_agent_workflow"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "extensions",
                "names": [
                  "ToolRegistry",
                  "ApprovalManager",
                  "PersistentAgentMemory",
                  "DynamicWorkflowManager"
                ],
                "line": 8
              }
            ],
            "calls": []
          },
          "backend/langgraph_system/query_classifier.py": {
            "functions": [
              {
                "name": "summary",
                "line": 57,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "__init__",
                "line": 71,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "classify_query",
                "line": 161,
                "async": false,
                "calls": [
                  "_is_greeting",
                  "_calculate_coherence",
                  "encode",
                  "DetailedClassification",
                  "_calculate_confidence",
                  "_has_context_reference",
                  "_check_pattern",
                  "_prepare_responses",
                  "_calculate_safety",
                  "md5",
                  "hexdigest",
                  "lower",
                  "_determine_action",
                  "_check_development_patterns",
                  "strip",
                  "_is_nonsense"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_is_greeting",
                "line": 208,
                "async": false,
                "calls": [
                  "startswith",
                  "split",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_is_nonsense",
                "line": 228,
                "async": false,
                "calls": [
                  "split",
                  "match",
                  "set",
                  "len",
                  "search"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_has_context_reference",
                "line": 249,
                "async": false,
                "calls": [
                  "startswith"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_check_pattern",
                "line": 259,
                "async": false,
                "calls": [
                  "any"
                ],
                "parameters": [
                  "self",
                  "query",
                  "patterns"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_check_development_patterns",
                "line": 263,
                "async": false,
                "calls": [
                  "_has_context_reference",
                  "split",
                  "len",
                  "_check_pattern"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_calculate_coherence",
                "line": 319,
                "async": false,
                "calls": [
                  "split",
                  "match",
                  "max",
                  "set",
                  "min",
                  "len"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_calculate_confidence",
                "line": 342,
                "async": false,
                "calls": [
                  "max",
                  "min"
                ],
                "parameters": [
                  "self",
                  "classification"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_calculate_safety",
                "line": 364,
                "async": false,
                "calls": [
                  "get",
                  "max",
                  "min"
                ],
                "parameters": [
                  "self",
                  "classification",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_determine_action",
                "line": 386,
                "async": false,
                "calls": [
                  "_get_dev_agent"
                ],
                "parameters": [
                  "self",
                  "classification",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_get_dev_agent",
                "line": 436,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "dev_type"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_prepare_responses",
                "line": 450,
                "async": false,
                "calls": [
                  "split"
                ],
                "parameters": [
                  "self",
                  "classification"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "__init__",
                "line": 527,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "is_safe",
                "line": 530,
                "async": false,
                "calls": [
                  "_is_duplicate",
                  "get",
                  "warning",
                  "_detect_loop_pattern",
                  "_check_resource_exhaustion"
                ],
                "parameters": [
                  "self",
                  "classification",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_is_duplicate",
                "line": 562,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "query_hash"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_detect_loop_pattern",
                "line": 568,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "_check_resource_exhaustion",
                "line": 577,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "record_execution",
                "line": 589,
                "async": false,
                "calls": [
                  "append",
                  "now",
                  "len"
                ],
                "parameters": [
                  "self",
                  "query_hash"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/query_classifier.py"
              }
            ],
            "classes": [
              {
                "name": "DetailedClassification",
                "line": 18,
                "methods": [
                  "summary"
                ],
                "bases": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "EnhancedQueryClassifier",
                "line": 65,
                "methods": [
                  "__init__",
                  "classify_query",
                  "_is_greeting",
                  "_is_nonsense",
                  "_has_context_reference",
                  "_check_pattern",
                  "_check_development_patterns",
                  "_calculate_coherence",
                  "_calculate_confidence",
                  "_calculate_safety",
                  "_determine_action",
                  "_get_dev_agent",
                  "_prepare_responses"
                ],
                "bases": [],
                "file": "backend/langgraph_system/query_classifier.py"
              },
              {
                "name": "ExecutionGuard",
                "line": 518,
                "methods": [
                  "__init__",
                  "is_safe",
                  "_is_duplicate",
                  "_detect_loop_pattern",
                  "_check_resource_exhaustion",
                  "record_execution"
                ],
                "bases": [],
                "file": "backend/langgraph_system/query_classifier.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "hashlib",
                "names": [
                  "hashlib"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Optional",
                  "Tuple"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 12
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 14
              },
              {
                "function": "field",
                "line": 24
              },
              {
                "function": "strip",
                "line": 168
              },
              {
                "function": "DetailedClassification",
                "line": 171
              },
              {
                "function": "_is_greeting",
                "line": 177
              },
              {
                "function": "_is_nonsense",
                "line": 178
              },
              {
                "function": "_has_context_reference",
                "line": 179
              },
              {
                "function": "_check_pattern",
                "line": 182
              },
              {
                "function": "_check_pattern",
                "line": 183
              },
              {
                "function": "_check_pattern",
                "line": 184
              },
              {
                "function": "_check_pattern",
                "line": 185
              },
              {
                "function": "_check_pattern",
                "line": 186
              },
              {
                "function": "_check_pattern",
                "line": 187
              },
              {
                "function": "_check_development_patterns",
                "line": 190
              },
              {
                "function": "_calculate_coherence",
                "line": 196
              },
              {
                "function": "_calculate_confidence",
                "line": 197
              },
              {
                "function": "_calculate_safety",
                "line": 198
              },
              {
                "function": "_determine_action",
                "line": 201
              },
              {
                "function": "_prepare_responses",
                "line": 204
              },
              {
                "function": "split",
                "line": 216
              },
              {
                "function": "split",
                "line": 235
              },
              {
                "function": "any",
                "line": 261
              },
              {
                "function": "_check_pattern",
                "line": 272
              },
              {
                "function": "split",
                "line": 330
              },
              {
                "function": "max",
                "line": 340
              },
              {
                "function": "max",
                "line": 362
              },
              {
                "function": "max",
                "line": 384
              },
              {
                "function": "get",
                "line": 448
              },
              {
                "function": "_is_duplicate",
                "line": 541
              },
              {
                "function": "_detect_loop_pattern",
                "line": 551
              },
              {
                "function": "_check_resource_exhaustion",
                "line": 556
              },
              {
                "function": "get",
                "line": 570
              },
              {
                "function": "get",
                "line": 579
              },
              {
                "function": "get",
                "line": 583
              },
              {
                "function": "append",
                "line": 591
              },
              {
                "function": "len",
                "line": 231
              },
              {
                "function": "len",
                "line": 237
              },
              {
                "function": "match",
                "line": 241
              },
              {
                "function": "len",
                "line": 243
              },
              {
                "function": "_check_pattern",
                "line": 277
              },
              {
                "function": "len",
                "line": 324
              },
              {
                "function": "len",
                "line": 331
              },
              {
                "function": "match",
                "line": 337
              },
              {
                "function": "min",
                "line": 340
              },
              {
                "function": "min",
                "line": 362
              },
              {
                "function": "get",
                "line": 379
              },
              {
                "function": "min",
                "line": 384
              },
              {
                "function": "_get_dev_agent",
                "line": 412
              },
              {
                "function": "get",
                "line": 536
              },
              {
                "function": "warning",
                "line": 537
              },
              {
                "function": "warning",
                "line": 542
              },
              {
                "function": "warning",
                "line": 547
              },
              {
                "function": "warning",
                "line": 552
              },
              {
                "function": "warning",
                "line": 557
              },
              {
                "function": "len",
                "line": 571
              },
              {
                "function": "len",
                "line": 580
              },
              {
                "function": "len",
                "line": 584
              },
              {
                "function": "len",
                "line": 593
              },
              {
                "function": "lower",
                "line": 168
              },
              {
                "function": "hexdigest",
                "line": 173
              },
              {
                "function": "lower",
                "line": 218
              },
              {
                "function": "startswith",
                "line": 223
              },
              {
                "function": "startswith",
                "line": 223
              },
              {
                "function": "search",
                "line": 236
              },
              {
                "function": "set",
                "line": 243
              },
              {
                "function": "_has_context_reference",
                "line": 275
              },
              {
                "function": "_check_pattern",
                "line": 283
              },
              {
                "function": "len",
                "line": 326
              },
              {
                "function": "len",
                "line": 333
              },
              {
                "function": "len",
                "line": 337
              },
              {
                "function": "now",
                "line": 591
              },
              {
                "function": "len",
                "line": 244
              },
              {
                "function": "startswith",
                "line": 255
              },
              {
                "function": "startswith",
                "line": 255
              },
              {
                "function": "len",
                "line": 281
              },
              {
                "function": "_check_pattern",
                "line": 288
              },
              {
                "function": "set",
                "line": 337
              },
              {
                "function": "len",
                "line": 337
              },
              {
                "function": "md5",
                "line": 173
              },
              {
                "function": "split",
                "line": 281
              },
              {
                "function": "_has_context_reference",
                "line": 286
              },
              {
                "function": "_check_pattern",
                "line": 293
              },
              {
                "function": "get",
                "line": 537
              },
              {
                "function": "encode",
                "line": 173
              },
              {
                "function": "len",
                "line": 291
              },
              {
                "function": "_check_pattern",
                "line": 297
              },
              {
                "function": "_check_pattern",
                "line": 302
              },
              {
                "function": "split",
                "line": 291
              },
              {
                "function": "_check_pattern",
                "line": 307
              },
              {
                "function": "split",
                "line": 482
              },
              {
                "function": "len",
                "line": 300
              },
              {
                "function": "len",
                "line": 305
              },
              {
                "function": "_check_pattern",
                "line": 312
              },
              {
                "function": "split",
                "line": 300
              },
              {
                "function": "split",
                "line": 305
              },
              {
                "function": "len",
                "line": 315
              },
              {
                "function": "split",
                "line": 315
              }
            ]
          },
          "backend/langgraph_system/workflow_self_diagnosis.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 57,
                "async": false,
                "calls": [
                  "_initialize_patterns",
                  "deque"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_initialize_patterns",
                "line": 61,
                "async": false,
                "calls": [
                  "KnownAntiPattern"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "detect_patterns",
                "line": 138,
                "async": false,
                "calls": [
                  "append",
                  "now",
                  "_get_detection_reason",
                  "_check_pattern"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_check_pattern",
                "line": 154,
                "async": false,
                "calls": [
                  "get",
                  "_has_circular_dependencies",
                  "len"
                ],
                "parameters": [
                  "self",
                  "pattern",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_has_circular_dependencies",
                "line": 205,
                "async": false,
                "calls": [
                  "add",
                  "next",
                  "remove",
                  "set",
                  "has_cycle_from"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_get_detection_reason",
                "line": 231,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "pattern",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "__init__",
                "line": 254,
                "async": false,
                "calls": [
                  "_define_invariants"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_define_invariants",
                "line": 258,
                "async": false,
                "calls": [
                  "_check_dependencies_exist",
                  "get",
                  "any",
                  "_check_valid_transitions",
                  "len",
                  "_check_agent_capabilities",
                  "_check_unique_ids"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "check_all",
                "line": 328,
                "async": false,
                "calls": [
                  "append",
                  "error",
                  "now",
                  "len"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_check_valid_transitions",
                "line": 347,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_check_unique_ids",
                "line": 366,
                "async": false,
                "calls": [
                  "get",
                  "set",
                  "len"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_check_dependencies_exist",
                "line": 372,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_check_agent_capabilities",
                "line": 383,
                "async": false,
                "calls": [
                  "warning",
                  "any",
                  "get",
                  "lower"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "__init__",
                "line": 418,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "known_patterns",
                  "invariants"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_calculate_dependency_depth",
                "line": 679,
                "async": false,
                "calls": [
                  "get",
                  "max",
                  "get_depth"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_find_parallelizable_steps",
                "line": 693,
                "async": false,
                "calls": [
                  "add",
                  "append",
                  "set",
                  "len",
                  "_has_dependency_conflict"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_has_dependency_conflict",
                "line": 716,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "step1",
                  "step2",
                  "all_steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_is_in_cycle",
                "line": 721,
                "async": false,
                "calls": [
                  "add",
                  "next",
                  "remove",
                  "set",
                  "has_cycle"
                ],
                "parameters": [
                  "self",
                  "step",
                  "all_steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "__init__",
                "line": 755,
                "async": false,
                "calls": [
                  "_initialize_patterns",
                  "deque"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_initialize_patterns",
                "line": 760,
                "async": false,
                "calls": [
                  "_detect_collaboration_spiral",
                  "_detect_resource_spike",
                  "_detect_routing_loop",
                  "_detect_timeout_cluster",
                  "_detect_stuck_progress"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "analyze_patterns",
                "line": 790,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "extend",
                  "items",
                  "min",
                  "len",
                  "_detect_statistical_anomalies"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_routing_loop",
                "line": 831,
                "async": false,
                "calls": [
                  "get",
                  "all",
                  "len"
                ],
                "parameters": [
                  "self",
                  "history"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_collaboration_spiral",
                "line": 840,
                "async": false,
                "calls": [
                  "get",
                  "len"
                ],
                "parameters": [
                  "self",
                  "history"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_stuck_progress",
                "line": 853,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "metrics"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_resource_spike",
                "line": 858,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "metrics"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_timeout_cluster",
                "line": 863,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "events"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "_detect_statistical_anomalies",
                "line": 868,
                "async": false,
                "calls": [
                  "append",
                  "max",
                  "get",
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "__init__",
                "line": 910,
                "async": false,
                "calls": [
                  "deque"
                ],
                "parameters": [
                  "self",
                  "invariants",
                  "validator",
                  "pattern_engine"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "__init__",
                "line": 1104,
                "async": false,
                "calls": [
                  "SelfTestFramework",
                  "PatternRecognitionEngine",
                  "info",
                  "PreExecutionValidator",
                  "KnownAntiPatternsDatabase",
                  "WorkflowInvariants"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "get_diagnosis_report",
                "line": 1175,
                "async": false,
                "calls": [
                  "list",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "has_cycle_from",
                "line": 208,
                "async": false,
                "calls": [
                  "remove",
                  "add",
                  "next",
                  "has_cycle_from"
                ],
                "parameters": [
                  "step_id",
                  "visited",
                  "path"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "get_depth",
                "line": 681,
                "async": false,
                "calls": [
                  "get",
                  "get_depth",
                  "max"
                ],
                "parameters": [
                  "step_id",
                  "steps_dict"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "has_cycle",
                "line": 726,
                "async": false,
                "calls": [
                  "has_cycle",
                  "remove",
                  "add",
                  "next"
                ],
                "parameters": [
                  "s_id"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              }
            ],
            "classes": [
              {
                "name": "AntiPatternType",
                "line": 26,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "KnownAntiPattern",
                "line": 41,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "KnownAntiPatternsDatabase",
                "line": 51,
                "methods": [
                  "__init__",
                  "_initialize_patterns",
                  "detect_patterns",
                  "_check_pattern",
                  "_has_circular_dependencies",
                  "_get_detection_reason",
                  "has_cycle_from"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "WorkflowInvariants",
                "line": 248,
                "methods": [
                  "__init__",
                  "_define_invariants",
                  "check_all",
                  "_check_valid_transitions",
                  "_check_unique_ids",
                  "_check_dependencies_exist",
                  "_check_agent_capabilities"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "PreExecutionValidator",
                "line": 412,
                "methods": [
                  "__init__",
                  "_calculate_dependency_depth",
                  "_find_parallelizable_steps",
                  "_has_dependency_conflict",
                  "_is_in_cycle",
                  "get_depth",
                  "has_cycle"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "PatternRecognitionEngine",
                "line": 749,
                "methods": [
                  "__init__",
                  "_initialize_patterns",
                  "analyze_patterns",
                  "_detect_routing_loop",
                  "_detect_collaboration_spiral",
                  "_detect_stuck_progress",
                  "_detect_resource_spike",
                  "_detect_timeout_cluster",
                  "_detect_statistical_anomalies"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "SelfTestFramework",
                "line": 904,
                "methods": [
                  "__init__"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              },
              {
                "name": "WorkflowSelfDiagnosisSystem",
                "line": 1098,
                "methods": [
                  "__init__",
                  "get_diagnosis_report"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow_self_diagnosis.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Any",
                  "Tuple",
                  "Optional",
                  "Set"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime",
                  "timedelta"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "collections",
                "names": [
                  "defaultdict",
                  "deque"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ExtendedAgentState",
                  "ExecutionStep",
                  "TaskLedger",
                  "ProgressLedger"
                ],
                "line": 18
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 20
              },
              {
                "function": "_initialize_patterns",
                "line": 58
              },
              {
                "function": "deque",
                "line": 59
              },
              {
                "function": "set",
                "line": 224
              },
              {
                "function": "_define_invariants",
                "line": 255
              },
              {
                "function": "get",
                "line": 361
              },
              {
                "function": "get",
                "line": 368
              },
              {
                "function": "get",
                "line": 374
              },
              {
                "function": "get",
                "line": 396
              },
              {
                "function": "info",
                "line": 434
              },
              {
                "function": "range",
                "line": 439
              },
              {
                "function": "append",
                "line": 502
              },
              {
                "function": "get",
                "line": 523
              },
              {
                "function": "_calculate_dependency_depth",
                "line": 544
              },
              {
                "function": "set",
                "line": 554
              },
              {
                "function": "get",
                "line": 573
              },
              {
                "function": "defaultdict",
                "line": 576
              },
              {
                "function": "items",
                "line": 581
              },
              {
                "function": "enumerate",
                "line": 591
              },
              {
                "function": "get",
                "line": 610
              },
              {
                "function": "sum",
                "line": 613
              },
              {
                "function": "_find_parallelizable_steps",
                "line": 623
              },
              {
                "function": "copy",
                "line": 637
              },
              {
                "function": "max",
                "line": 691
              },
              {
                "function": "set",
                "line": 696
              },
              {
                "function": "set",
                "line": 723
              },
              {
                "function": "set",
                "line": 724
              },
              {
                "function": "has_cycle",
                "line": 744
              },
              {
                "function": "deque",
                "line": 756
              },
              {
                "function": "_initialize_patterns",
                "line": 758
              },
              {
                "function": "get",
                "line": 800
              },
              {
                "function": "get",
                "line": 801
              },
              {
                "function": "get",
                "line": 802
              },
              {
                "function": "items",
                "line": 805
              },
              {
                "function": "_detect_statistical_anomalies",
                "line": 816
              },
              {
                "function": "extend",
                "line": 817
              },
              {
                "function": "min",
                "line": 827
              },
              {
                "function": "all",
                "line": 838
              },
              {
                "function": "get",
                "line": 873
              },
              {
                "function": "get",
                "line": 886
              },
              {
                "function": "deque",
                "line": 919
              },
              {
                "function": "info",
                "line": 925
              },
              {
                "function": "check_all",
                "line": 937
              },
              {
                "function": "analyze_patterns",
                "line": 944
              },
              {
                "function": "update",
                "line": 953
              },
              {
                "function": "update",
                "line": 958
              },
              {
                "function": "values",
                "line": 965
              },
              {
                "function": "append",
                "line": 989
              },
              {
                "function": "now",
                "line": 990
              },
              {
                "function": "info",
                "line": 993
              },
              {
                "function": "info",
                "line": 994
              },
              {
                "function": "get",
                "line": 1000
              },
              {
                "function": "get",
                "line": 1001
              },
              {
                "function": "get",
                "line": 1018
              },
              {
                "function": "get",
                "line": 1043
              },
              {
                "function": "sum",
                "line": 1049
              },
              {
                "function": "sum",
                "line": 1053
              },
              {
                "function": "info",
                "line": 1071
              },
              {
                "function": "KnownAntiPatternsDatabase",
                "line": 1106
              },
              {
                "function": "WorkflowInvariants",
                "line": 1107
              },
              {
                "function": "PreExecutionValidator",
                "line": 1108
              },
              {
                "function": "PatternRecognitionEngine",
                "line": 1109
              },
              {
                "function": "SelfTestFramework",
                "line": 1110
              },
              {
                "function": "info",
                "line": 1116
              },
              {
                "function": "info",
                "line": 1127
              },
              {
                "function": "info",
                "line": 1128
              },
              {
                "function": "info",
                "line": 1129
              },
              {
                "function": "analyze_patterns",
                "line": 1138
              },
              {
                "function": "info",
                "line": 1151
              },
              {
                "function": "info",
                "line": 1152
              },
              {
                "function": "info",
                "line": 1153
              },
              {
                "function": "info",
                "line": 1154
              },
              {
                "function": "info",
                "line": 1155
              },
              {
                "function": "info",
                "line": 1156
              },
              {
                "function": "info",
                "line": 1157
              },
              {
                "function": "KnownAntiPattern",
                "line": 64
              },
              {
                "function": "KnownAntiPattern",
                "line": 72
              },
              {
                "function": "KnownAntiPattern",
                "line": 80
              },
              {
                "function": "KnownAntiPattern",
                "line": 88
              },
              {
                "function": "KnownAntiPattern",
                "line": 96
              },
              {
                "function": "KnownAntiPattern",
                "line": 104
              },
              {
                "function": "KnownAntiPattern",
                "line": 112
              },
              {
                "function": "KnownAntiPattern",
                "line": 120
              },
              {
                "function": "KnownAntiPattern",
                "line": 128
              },
              {
                "function": "_check_pattern",
                "line": 143
              },
              {
                "function": "get",
                "line": 159
              },
              {
                "function": "add",
                "line": 209
              },
              {
                "function": "add",
                "line": 210
              },
              {
                "function": "next",
                "line": 212
              },
              {
                "function": "remove",
                "line": 221
              },
              {
                "function": "get",
                "line": 235
              },
              {
                "function": "len",
                "line": 370
              },
              {
                "function": "len",
                "line": 370
              },
              {
                "function": "lower",
                "line": 398
              },
              {
                "function": "info",
                "line": 440
              },
              {
                "function": "check_all",
                "line": 445
              },
              {
                "function": "detect_patterns",
                "line": 455
              },
              {
                "function": "extend",
                "line": 487
              },
              {
                "function": "info",
                "line": 494
              },
              {
                "function": "len",
                "line": 511
              },
              {
                "function": "info",
                "line": 514
              },
              {
                "function": "error",
                "line": 516
              },
              {
                "function": "append",
                "line": 527
              },
              {
                "function": "len",
                "line": 535
              },
              {
                "function": "append",
                "line": 536
              },
              {
                "function": "append",
                "line": 546
              },
              {
                "function": "update",
                "line": 556
              },
              {
                "function": "append",
                "line": 615
              },
              {
                "function": "len",
                "line": 624
              },
              {
                "function": "sum",
                "line": 625
              },
              {
                "function": "append",
                "line": 626
              },
              {
                "function": "list",
                "line": 674
              },
              {
                "function": "info",
                "line": 675
              },
              {
                "function": "get",
                "line": 682
              },
              {
                "function": "add",
                "line": 712
              },
              {
                "function": "add",
                "line": 732
              },
              {
                "function": "add",
                "line": 733
              },
              {
                "function": "next",
                "line": 735
              },
              {
                "function": "remove",
                "line": 741
              },
              {
                "function": "len",
                "line": 818
              },
              {
                "function": "append",
                "line": 822
              },
              {
                "function": "len",
                "line": 823
              },
              {
                "function": "append",
                "line": 824
              },
              {
                "function": "len",
                "line": 833
              },
              {
                "function": "len",
                "line": 842
              },
              {
                "function": "get",
                "line": 850
              },
              {
                "function": "len",
                "line": 874
              },
              {
                "function": "sum",
                "line": 888
              },
              {
                "function": "sum",
                "line": 889
              },
              {
                "function": "len",
                "line": 890
              },
              {
                "function": "now",
                "line": 928
              },
              {
                "function": "extend",
                "line": 940
              },
              {
                "function": "_test_resource_health",
                "line": 951
              },
              {
                "function": "_test_performance_health",
                "line": 956
              },
              {
                "function": "_test_structural_health",
                "line": 961
              },
              {
                "function": "min",
                "line": 1003
              },
              {
                "function": "min",
                "line": 1004
              },
              {
                "function": "min",
                "line": 1030
              },
              {
                "function": "len",
                "line": 1050
              },
              {
                "function": "validate_comprehensive",
                "line": 1132
              },
              {
                "function": "run_comprehensive_health_check",
                "line": 1141
              },
              {
                "function": "error",
                "line": 1160
              },
              {
                "function": "run_comprehensive_health_check",
                "line": 1173
              },
              {
                "function": "len",
                "line": 1181
              },
              {
                "function": "len",
                "line": 1182
              },
              {
                "function": "_get_detection_reason",
                "line": 144
              },
              {
                "function": "append",
                "line": 145
              },
              {
                "function": "append",
                "line": 146
              },
              {
                "function": "_has_circular_dependencies",
                "line": 165
              },
              {
                "function": "has_cycle_from",
                "line": 227
              },
              {
                "function": "get",
                "line": 240
              },
              {
                "function": "len",
                "line": 345
              },
              {
                "function": "set",
                "line": 370
              },
              {
                "function": "error",
                "line": 447
              },
              {
                "function": "extend",
                "line": 448
              },
              {
                "function": "warning",
                "line": 457
              },
              {
                "function": "_validate_structure",
                "line": 470
              },
              {
                "function": "warning",
                "line": 472
              },
              {
                "function": "extend",
                "line": 473
              },
              {
                "function": "_validate_semantics",
                "line": 476
              },
              {
                "function": "warning",
                "line": 478
              },
              {
                "function": "extend",
                "line": 479
              },
              {
                "function": "_validate_performance",
                "line": 482
              },
              {
                "function": "info",
                "line": 484
              },
              {
                "function": "extend",
                "line": 485
              },
              {
                "function": "_attempt_fixes",
                "line": 495
              },
              {
                "function": "now",
                "line": 503
              },
              {
                "function": "len",
                "line": 505
              },
              {
                "function": "append",
                "line": 583
              },
              {
                "function": "get",
                "line": 641
              },
              {
                "function": "max",
                "line": 685
              },
              {
                "function": "get_depth",
                "line": 691
              },
              {
                "function": "len",
                "line": 710
              },
              {
                "function": "append",
                "line": 711
              },
              {
                "function": "len",
                "line": 875
              },
              {
                "function": "len",
                "line": 876
              },
              {
                "function": "max",
                "line": 876
              },
              {
                "function": "append",
                "line": 879
              },
              {
                "function": "append",
                "line": 893
              },
              {
                "function": "sum",
                "line": 966
              },
              {
                "function": "len",
                "line": 966
              },
              {
                "function": "append",
                "line": 980
              },
              {
                "function": "get",
                "line": 982
              },
              {
                "function": "append",
                "line": 983
              },
              {
                "function": "get",
                "line": 985
              },
              {
                "function": "append",
                "line": 986
              },
              {
                "function": "len",
                "line": 1009
              },
              {
                "function": "len",
                "line": 1010
              },
              {
                "function": "sum",
                "line": 1022
              },
              {
                "function": "len",
                "line": 1022
              },
              {
                "function": "sum",
                "line": 1026
              },
              {
                "function": "len",
                "line": 1026
              },
              {
                "function": "len",
                "line": 1054
              },
              {
                "function": "error",
                "line": 1162
              },
              {
                "function": "warning",
                "line": 1165
              },
              {
                "function": "list",
                "line": 1179
              },
              {
                "function": "list",
                "line": 1180
              },
              {
                "function": "get",
                "line": 165
              },
              {
                "function": "get",
                "line": 169
              },
              {
                "function": "set",
                "line": 227
              },
              {
                "function": "_check_valid_transitions",
                "line": 285
              },
              {
                "function": "_check_unique_ids",
                "line": 292
              },
              {
                "function": "_check_dependencies_exist",
                "line": 299
              },
              {
                "function": "_check_agent_capabilities",
                "line": 323
              },
              {
                "function": "append",
                "line": 335
              },
              {
                "function": "error",
                "line": 343
              },
              {
                "function": "any",
                "line": 403
              },
              {
                "function": "warning",
                "line": 404
              },
              {
                "function": "append",
                "line": 459
              },
              {
                "function": "sleep",
                "line": 499
              },
              {
                "function": "len",
                "line": 506
              },
              {
                "function": "get",
                "line": 510
              },
              {
                "function": "len",
                "line": 560
              },
              {
                "function": "append",
                "line": 561
              },
              {
                "function": "len",
                "line": 625
              },
              {
                "function": "lower",
                "line": 644
              },
              {
                "function": "has_cycle",
                "line": 738
              },
              {
                "function": "_detect_routing_loop",
                "line": 765
              },
              {
                "function": "_detect_collaboration_spiral",
                "line": 770
              },
              {
                "function": "_detect_stuck_progress",
                "line": 775
              },
              {
                "function": "_detect_resource_spike",
                "line": 780
              },
              {
                "function": "_detect_timeout_cluster",
                "line": 785
              },
              {
                "function": "append",
                "line": 808
              },
              {
                "function": "get",
                "line": 838
              },
              {
                "function": "get",
                "line": 838
              },
              {
                "function": "get",
                "line": 876
              },
              {
                "function": "len",
                "line": 1003
              },
              {
                "function": "len",
                "line": 1004
              },
              {
                "function": "max",
                "line": 1037
              },
              {
                "function": "state_provider",
                "line": 1076
              },
              {
                "function": "run_comprehensive_health_check",
                "line": 1079
              },
              {
                "function": "error",
                "line": 1083
              },
              {
                "function": "sleep",
                "line": 1089
              },
              {
                "function": "error",
                "line": 1092
              },
              {
                "function": "warning",
                "line": 1167
              },
              {
                "function": "now",
                "line": 148
              },
              {
                "function": "get",
                "line": 174
              },
              {
                "function": "get",
                "line": 175
              },
              {
                "function": "has_cycle_from",
                "line": 218
              },
              {
                "function": "any",
                "line": 265
              },
              {
                "function": "any",
                "line": 275
              },
              {
                "function": "get",
                "line": 316
              },
              {
                "function": "len",
                "line": 494
              },
              {
                "function": "len",
                "line": 516
              },
              {
                "function": "append",
                "line": 598
              },
              {
                "function": "lower",
                "line": 653
              },
              {
                "function": "len",
                "line": 675
              },
              {
                "function": "get_depth",
                "line": 685
              },
              {
                "function": "_has_dependency_conflict",
                "line": 706
              },
              {
                "function": "append",
                "line": 707
              },
              {
                "function": "add",
                "line": 708
              },
              {
                "function": "warning",
                "line": 1086
              },
              {
                "function": "sleep",
                "line": 1093
              },
              {
                "function": "get",
                "line": 180
              },
              {
                "function": "len",
                "line": 307
              },
              {
                "function": "len",
                "line": 308
              },
              {
                "function": "now",
                "line": 340
              },
              {
                "function": "len",
                "line": 447
              },
              {
                "function": "len",
                "line": 457
              },
              {
                "function": "len",
                "line": 472
              },
              {
                "function": "len",
                "line": 478
              },
              {
                "function": "len",
                "line": 484
              },
              {
                "function": "len",
                "line": 539
              },
              {
                "function": "len",
                "line": 629
              },
              {
                "function": "get",
                "line": 644
              },
              {
                "function": "append",
                "line": 649
              },
              {
                "function": "info",
                "line": 650
              },
              {
                "function": "_is_in_cycle",
                "line": 657
              },
              {
                "function": "lower",
                "line": 665
              },
              {
                "function": "get",
                "line": 667
              },
              {
                "function": "get",
                "line": 1162
              },
              {
                "function": "get",
                "line": 186
              },
              {
                "function": "get",
                "line": 307
              },
              {
                "function": "get",
                "line": 308
              },
              {
                "function": "get",
                "line": 653
              },
              {
                "function": "len",
                "line": 668
              },
              {
                "function": "append",
                "line": 670
              },
              {
                "function": "info",
                "line": 671
              },
              {
                "function": "len",
                "line": 187
              },
              {
                "function": "get",
                "line": 267
              },
              {
                "function": "get",
                "line": 277
              },
              {
                "function": "pop",
                "line": 659
              },
              {
                "function": "append",
                "line": 660
              },
              {
                "function": "info",
                "line": 661
              },
              {
                "function": "get",
                "line": 665
              },
              {
                "function": "get",
                "line": 200
              },
              {
                "function": "len",
                "line": 201
              }
            ]
          },
          "backend/langgraph_system/workflow.py": {
            "functions": [
              {
                "name": "create_agent_workflow",
                "line": 3015,
                "async": false,
                "calls": [
                  "AgentWorkflow",
                  "compile_workflow"
                ],
                "parameters": [
                  "websocket_manager",
                  "db_path",
                  "memory_db_path"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "__init__",
                "line": 105,
                "async": false,
                "calls": [
                  "ApprovalManager",
                  "_init_agent_memories",
                  "info",
                  "DynamicWorkflowManager",
                  "DevelopmentQueryHandler",
                  "EnhancedQueryClassifier",
                  "_init_real_agents",
                  "SafeOrchestratorExecutor",
                  "WorkflowSelfDiagnosisSystem",
                  "get_tool_registry",
                  "MemorySaver",
                  "IntelligentQueryHandler",
                  "error"
                ],
                "parameters": [
                  "self",
                  "websocket_manager",
                  "db_path",
                  "memory_db_path"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_init_agent_memories",
                "line": 182,
                "async": false,
                "calls": [
                  "PersistentAgentMemory"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_init_real_agents",
                "line": 203,
                "async": false,
                "calls": [
                  "info",
                  "ArchitectAgent",
                  "ResearchAgent",
                  "CodeSmithAgent",
                  "warning",
                  "OrchestratorAgent",
                  "ReviewerGPTAgent",
                  "len",
                  "FixerBotAgent",
                  "exception",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "create_task_ledger",
                "line": 251,
                "async": false,
                "calls": [
                  "extract_success_criteria",
                  "TaskLedger",
                  "get",
                  "now"
                ],
                "parameters": [
                  "self",
                  "task",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "extract_success_criteria",
                "line": 285,
                "async": false,
                "calls": [
                  "append",
                  "lower",
                  "any"
                ],
                "parameters": [
                  "self",
                  "task"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "create_progress_ledger",
                "line": 309,
                "async": false,
                "calls": [
                  "ProgressLedger",
                  "update_from_steps",
                  "len"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "identify_parallel_groups",
                "line": 372,
                "async": false,
                "calls": [
                  "add",
                  "append",
                  "set",
                  "len",
                  "_has_dependency_conflict"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_has_dependency_conflict",
                "line": 414,
                "async": false,
                "calls": [
                  "_get_all_dependencies"
                ],
                "parameters": [
                  "self",
                  "step1",
                  "step2",
                  "all_steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_get_all_dependencies",
                "line": 432,
                "async": false,
                "calls": [
                  "list",
                  "add",
                  "append",
                  "next",
                  "set",
                  "pop"
                ],
                "parameters": [
                  "self",
                  "step",
                  "all_steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "route_after_approval",
                "line": 1231,
                "async": false,
                "calls": [
                  "list",
                  "info",
                  "get",
                  "warning",
                  "len",
                  "enumerate",
                  "_dependencies_met"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "route_from_architect",
                "line": 1290,
                "async": false,
                "calls": [
                  "route_to_next_agent",
                  "list",
                  "info",
                  "get"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "route_to_next_agent",
                "line": 1319,
                "async": false,
                "calls": [
                  "list",
                  "update_from_steps",
                  "route_to_next_agent",
                  "info",
                  "now",
                  "get",
                  "any",
                  "create_task",
                  "warning",
                  "run_health_check",
                  "real_time_monitoring",
                  "check_and_handle_timeouts",
                  "len",
                  "error",
                  "_dependencies_met"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_dependencies_met",
                "line": 1418,
                "async": false,
                "calls": [
                  "next"
                ],
                "parameters": [
                  "self",
                  "step",
                  "all_steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_get_current_step",
                "line": 1426,
                "async": false,
                "calls": [
                  "get",
                  "next"
                ],
                "parameters": [
                  "self",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_get_step_by_agent",
                "line": 1433,
                "async": false,
                "calls": [
                  "reversed"
                ],
                "parameters": [
                  "self",
                  "state",
                  "agent"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_check_escalation_needed",
                "line": 1440,
                "async": false,
                "calls": [
                  "info",
                  "get",
                  "any",
                  "chr",
                  "insert",
                  "join",
                  "dirname",
                  "getattr",
                  "len",
                  "enumerate",
                  "error"
                ],
                "parameters": [
                  "self",
                  "state",
                  "suggested_agent",
                  "suggested_query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_calculate_agent_confidence",
                "line": 1903,
                "async": false,
                "calls": [
                  "debug",
                  "get",
                  "items"
                ],
                "parameters": [
                  "self",
                  "task_lower"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_create_single_agent_step",
                "line": 1958,
                "async": false,
                "calls": [
                  "info",
                  "enhance_orchestrator_step",
                  "get",
                  "ExecutionStep",
                  "len",
                  "get_intelligent_response"
                ],
                "parameters": [
                  "self",
                  "agent",
                  "task"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_detect_task_complexity",
                "line": 2006,
                "async": false,
                "calls": [
                  "info",
                  "split",
                  "any",
                  "lower",
                  "len",
                  "endswith",
                  "count",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "task"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_apply_plan_modifications",
                "line": 2194,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "plan",
                  "modifications"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "_format_proposal_for_user",
                "line": 2385,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "proposal"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "create_workflow",
                "line": 2791,
                "async": false,
                "calls": [
                  "add_edge",
                  "add_node",
                  "set_entry_point",
                  "StateGraph",
                  "add_conditional_edges"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              },
              {
                "name": "compile_workflow",
                "line": 2867,
                "async": false,
                "calls": [
                  "compile",
                  "info",
                  "create_workflow"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/workflow.py"
              }
            ],
            "classes": [
              {
                "name": "AgentWorkflow",
                "line": 100,
                "methods": [
                  "__init__",
                  "_init_agent_memories",
                  "_init_real_agents",
                  "create_task_ledger",
                  "extract_success_criteria",
                  "create_progress_ledger",
                  "identify_parallel_groups",
                  "_has_dependency_conflict",
                  "_get_all_dependencies",
                  "route_after_approval",
                  "route_from_architect",
                  "route_to_next_agent",
                  "_dependencies_met",
                  "_get_current_step",
                  "_get_step_by_agent",
                  "_check_escalation_needed",
                  "_calculate_agent_confidence",
                  "_create_single_agent_step",
                  "_detect_task_complexity",
                  "_apply_plan_modifications",
                  "_format_proposal_for_user",
                  "create_workflow",
                  "compile_workflow"
                ],
                "bases": [],
                "file": "backend/langgraph_system/workflow.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "langgraph.graph",
                "names": [
                  "StateGraph",
                  "END"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "langgraph.checkpoint.sqlite",
                "names": [
                  "SqliteSaver"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "langgraph.checkpoint.memory",
                "names": [
                  "MemorySaver"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ExtendedAgentState",
                  "create_initial_state",
                  "ExecutionStep",
                  "TaskLedger",
                  "ProgressLedger"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "extensions",
                "names": [
                  "ToolRegistry",
                  "ApprovalManager",
                  "PersistentAgentMemory",
                  "DynamicWorkflowManager",
                  "get_tool_registry"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "cache_manager",
                "names": [
                  "CacheManager"
                ],
                "line": 23
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 62
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 63
              },
              {
                "type": "from_import",
                "module": "intelligent_query_handler",
                "names": [
                  "IntelligentQueryHandler"
                ],
                "line": 29
              },
              {
                "type": "from_import",
                "module": "workflow_self_diagnosis",
                "names": [
                  "WorkflowSelfDiagnosisSystem"
                ],
                "line": 39
              },
              {
                "type": "from_import",
                "module": "safe_orchestrator_executor",
                "names": [
                  "SafeOrchestratorExecutor"
                ],
                "line": 49
              },
              {
                "type": "from_import",
                "module": "query_classifier",
                "names": [
                  "EnhancedQueryClassifier"
                ],
                "line": 50
              },
              {
                "type": "from_import",
                "module": "development_query_handler",
                "names": [
                  "DevelopmentQueryHandler"
                ],
                "line": 51
              },
              {
                "type": "from_import",
                "module": "agents.specialized.architect_agent",
                "names": [
                  "ArchitectAgent"
                ],
                "line": 70
              },
              {
                "type": "from_import",
                "module": "agents.specialized.codesmith_agent",
                "names": [
                  "CodeSmithAgent"
                ],
                "line": 71
              },
              {
                "type": "from_import",
                "module": "agents.specialized.reviewer_gpt_agent",
                "names": [
                  "ReviewerGPTAgent"
                ],
                "line": 72
              },
              {
                "type": "from_import",
                "module": "agents.specialized.fixerbot_agent",
                "names": [
                  "FixerBotAgent"
                ],
                "line": 73
              },
              {
                "type": "from_import",
                "module": "agents.base.base_agent",
                "names": [
                  "TaskRequest",
                  "TaskResult"
                ],
                "line": 74
              },
              {
                "type": "from_import",
                "module": "agents.specialized.orchestrator_agent",
                "names": [
                  "OrchestratorAgent"
                ],
                "line": 83
              },
              {
                "type": "from_import",
                "module": "agents.specialized.research_agent",
                "names": [
                  "ResearchAgent"
                ],
                "line": 92
              },
              {
                "type": "from_import",
                "module": "agents.specialized.fixer_gpt_agent",
                "names": [
                  "FixerGPTAgent"
                ],
                "line": 1182
              },
              {
                "type": "from_import",
                "module": "config.settings",
                "names": [
                  "Settings"
                ],
                "line": 1463
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 1466
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 1467
              },
              {
                "type": "from_import",
                "module": "config.settings",
                "names": [
                  "Settings"
                ],
                "line": 1469
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 2342
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 2343
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 2533
              },
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 2534
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 25
              },
              {
                "function": "append",
                "line": 64
              },
              {
                "function": "info",
                "line": 31
              },
              {
                "function": "info",
                "line": 41
              },
              {
                "function": "info",
                "line": 53
              },
              {
                "function": "dirname",
                "line": 64
              },
              {
                "function": "info",
                "line": 76
              },
              {
                "function": "info",
                "line": 85
              },
              {
                "function": "info",
                "line": 94
              },
              {
                "function": "AgentWorkflow",
                "line": 3031
              },
              {
                "function": "compile_workflow",
                "line": 3038
              },
              {
                "function": "warning",
                "line": 33
              },
              {
                "function": "warning",
                "line": 43
              },
              {
                "function": "warning",
                "line": 55
              },
              {
                "function": "dirname",
                "line": 64
              },
              {
                "function": "warning",
                "line": 78
              },
              {
                "function": "warning",
                "line": 87
              },
              {
                "function": "warning",
                "line": 88
              },
              {
                "function": "warning",
                "line": 96
              },
              {
                "function": "warning",
                "line": 97
              },
              {
                "function": "get_tool_registry",
                "line": 124
              },
              {
                "function": "ApprovalManager",
                "line": 125
              },
              {
                "function": "DynamicWorkflowManager",
                "line": 126
              },
              {
                "function": "_init_agent_memories",
                "line": 130
              },
              {
                "function": "_init_real_agents",
                "line": 134
              },
              {
                "function": "MemorySaver",
                "line": 180
              },
              {
                "function": "info",
                "line": 209
              },
              {
                "function": "now",
                "line": 255
              },
              {
                "function": "extract_success_criteria",
                "line": 256
              },
              {
                "function": "TaskLedger",
                "line": 275
              },
              {
                "function": "any",
                "line": 292
              },
              {
                "function": "any",
                "line": 294
              },
              {
                "function": "any",
                "line": 296
              },
              {
                "function": "any",
                "line": 298
              },
              {
                "function": "any",
                "line": 300
              },
              {
                "function": "ProgressLedger",
                "line": 313
              },
              {
                "function": "update_from_steps",
                "line": 323
              },
              {
                "function": "set",
                "line": 381
              },
              {
                "function": "_get_all_dependencies",
                "line": 423
              },
              {
                "function": "_get_all_dependencies",
                "line": 424
              },
              {
                "function": "set",
                "line": 436
              },
              {
                "function": "list",
                "line": 437
              },
              {
                "function": "info",
                "line": 457
              },
              {
                "function": "get",
                "line": 461
              },
              {
                "function": "create_progress_ledger",
                "line": 561
              },
              {
                "function": "info",
                "line": 563
              },
              {
                "function": "identify_parallel_groups",
                "line": 566
              },
              {
                "function": "list",
                "line": 632
              },
              {
                "function": "info",
                "line": 634
              },
              {
                "function": "store_memory",
                "line": 637
              },
              {
                "function": "info",
                "line": 654
              },
              {
                "function": "get",
                "line": 657
              },
              {
                "function": "info",
                "line": 701
              },
              {
                "function": "info",
                "line": 727
              },
              {
                "function": "discover_tools_for_agent",
                "line": 732
              },
              {
                "function": "_get_current_step",
                "line": 736
              },
              {
                "function": "info",
                "line": 737
              },
              {
                "function": "recall_similar",
                "line": 743
              },
              {
                "function": "extend",
                "line": 744
              },
              {
                "function": "info",
                "line": 893
              },
              {
                "function": "discover_tools_for_agent",
                "line": 897
              },
              {
                "function": "next",
                "line": 902
              },
              {
                "function": "info",
                "line": 910
              },
              {
                "function": "recall_similar",
                "line": 913
              },
              {
                "function": "info",
                "line": 969
              },
              {
                "function": "next",
                "line": 975
              },
              {
                "function": "info",
                "line": 983
              },
              {
                "function": "info",
                "line": 1040
              },
              {
                "function": "next",
                "line": 1046
              },
              {
                "function": "info",
                "line": 1054
              },
              {
                "function": "_get_step_by_agent",
                "line": 1057
              },
              {
                "function": "info",
                "line": 1099
              },
              {
                "function": "next",
                "line": 1103
              },
              {
                "function": "info",
                "line": 1111
              },
              {
                "function": "info",
                "line": 1166
              },
              {
                "function": "next",
                "line": 1170
              },
              {
                "function": "info",
                "line": 1178
              },
              {
                "function": "get",
                "line": 1244
              },
              {
                "function": "info",
                "line": 1245
              },
              {
                "function": "info",
                "line": 1246
              },
              {
                "function": "enumerate",
                "line": 1247
              },
              {
                "function": "route_to_next_agent",
                "line": 1317
              },
              {
                "function": "info",
                "line": 1327
              },
              {
                "function": "info",
                "line": 1328
              },
              {
                "function": "create_task",
                "line": 1331
              },
              {
                "function": "get",
                "line": 1334
              },
              {
                "function": "get",
                "line": 1355
              },
              {
                "function": "any",
                "line": 1362
              },
              {
                "function": "info",
                "line": 1415
              },
              {
                "function": "get",
                "line": 1428
              },
              {
                "function": "reversed",
                "line": 1435
              },
              {
                "function": "get",
                "line": 1471
              },
              {
                "function": "get",
                "line": 1472
              },
              {
                "function": "get",
                "line": 1473
              },
              {
                "function": "getattr",
                "line": 1586
              },
              {
                "function": "get",
                "line": 1617
              },
              {
                "function": "_detect_task_complexity",
                "line": 1639
              },
              {
                "function": "lower",
                "line": 1757
              },
              {
                "function": "lower",
                "line": 1773
              },
              {
                "function": "any",
                "line": 1781
              },
              {
                "function": "lower",
                "line": 1800
              },
              {
                "function": "any",
                "line": 1804
              },
              {
                "function": "any",
                "line": 1809
              },
              {
                "function": "_calculate_agent_confidence",
                "line": 1859
              },
              {
                "function": "info",
                "line": 1885
              },
              {
                "function": "items",
                "line": 1943
              },
              {
                "function": "items",
                "line": 1950
              },
              {
                "function": "ExecutionStep",
                "line": 1990
              },
              {
                "function": "lower",
                "line": 2013
              },
              {
                "function": "any",
                "line": 2044
              },
              {
                "function": "any",
                "line": 2062
              },
              {
                "function": "info",
                "line": 2067
              },
              {
                "function": "info",
                "line": 2080
              },
              {
                "function": "_create_single_agent_step",
                "line": 2115
              },
              {
                "function": "warning",
                "line": 2235
              },
              {
                "function": "info",
                "line": 2289
              },
              {
                "function": "get",
                "line": 2291
              },
              {
                "function": "_get_current_step",
                "line": 2292
              },
              {
                "function": "warning",
                "line": 2375
              },
              {
                "function": "info",
                "line": 2435
              },
              {
                "function": "get",
                "line": 2437
              },
              {
                "function": "get",
                "line": 2438
              },
              {
                "function": "info",
                "line": 2471
              },
              {
                "function": "info",
                "line": 2489
              },
              {
                "function": "get",
                "line": 2491
              },
              {
                "function": "get",
                "line": 2492
              },
              {
                "function": "warning",
                "line": 2552
              },
              {
                "function": "warning",
                "line": 2600
              },
              {
                "function": "warning",
                "line": 2651
              },
              {
                "function": "warning",
                "line": 2701
              },
              {
                "function": "warning",
                "line": 2749
              },
              {
                "function": "StateGraph",
                "line": 2795
              },
              {
                "function": "add_node",
                "line": 2798
              },
              {
                "function": "add_node",
                "line": 2799
              },
              {
                "function": "add_node",
                "line": 2800
              },
              {
                "function": "add_node",
                "line": 2801
              },
              {
                "function": "add_node",
                "line": 2802
              },
              {
                "function": "add_node",
                "line": 2803
              },
              {
                "function": "add_node",
                "line": 2804
              },
              {
                "function": "add_node",
                "line": 2805
              },
              {
                "function": "set_entry_point",
                "line": 2808
              },
              {
                "function": "add_edge",
                "line": 2812
              },
              {
                "function": "add_conditional_edges",
                "line": 2815
              },
              {
                "function": "add_conditional_edges",
                "line": 2833
              },
              {
                "function": "create_workflow",
                "line": 2872
              },
              {
                "function": "compile",
                "line": 2878
              },
              {
                "function": "info",
                "line": 2881
              },
              {
                "function": "create_initial_state",
                "line": 2909
              },
              {
                "function": "append",
                "line": 2918
              },
              {
                "function": "abspath",
                "line": 64
              },
              {
                "function": "PersistentAgentMemory",
                "line": 198
              },
              {
                "function": "warning",
                "line": 206
              },
              {
                "function": "info",
                "line": 243
              },
              {
                "function": "get",
                "line": 273
              },
              {
                "function": "append",
                "line": 293
              },
              {
                "function": "append",
                "line": 295
              },
              {
                "function": "append",
                "line": 297
              },
              {
                "function": "append",
                "line": 299
              },
              {
                "function": "append",
                "line": 301
              },
              {
                "function": "append",
                "line": 305
              },
              {
                "function": "list",
                "line": 368
              },
              {
                "function": "add",
                "line": 410
              },
              {
                "function": "pop",
                "line": 440
              },
              {
                "function": "next",
                "line": 441
              },
              {
                "function": "info",
                "line": 462
              },
              {
                "function": "get",
                "line": 463
              },
              {
                "function": "get",
                "line": 464
              },
              {
                "function": "get",
                "line": 465
              },
              {
                "function": "list",
                "line": 472
              },
              {
                "function": "append",
                "line": 473
              },
              {
                "function": "append",
                "line": 474
              },
              {
                "function": "list",
                "line": 483
              },
              {
                "function": "append",
                "line": 484
              },
              {
                "function": "info",
                "line": 493
              },
              {
                "function": "info",
                "line": 494
              },
              {
                "function": "_check_escalation_needed",
                "line": 497
              },
              {
                "function": "get",
                "line": 506
              },
              {
                "function": "ExecutionStep",
                "line": 509
              },
              {
                "function": "append",
                "line": 518
              },
              {
                "function": "list",
                "line": 519
              },
              {
                "function": "info",
                "line": 526
              },
              {
                "function": "recall_similar",
                "line": 537
              },
              {
                "function": "get_learned_solution",
                "line": 541
              },
              {
                "function": "_create_execution_plan",
                "line": 550
              },
              {
                "function": "create_task_ledger",
                "line": 556
              },
              {
                "function": "info",
                "line": 558
              },
              {
                "function": "info",
                "line": 568
              },
              {
                "function": "items",
                "line": 569
              },
              {
                "function": "info",
                "line": 575
              },
              {
                "function": "warning",
                "line": 617
              },
              {
                "function": "info",
                "line": 623
              },
              {
                "function": "get",
                "line": 660
              },
              {
                "function": "warning",
                "line": 697
              },
              {
                "function": "warning",
                "line": 739
              },
              {
                "function": "get",
                "line": 750
              },
              {
                "function": "warning",
                "line": 862
              },
              {
                "function": "list",
                "line": 866
              },
              {
                "function": "store_memory",
                "line": 868
              },
              {
                "function": "error",
                "line": 907
              },
              {
                "function": "info",
                "line": 924
              },
              {
                "function": "list",
                "line": 927
              },
              {
                "function": "info",
                "line": 928
              },
              {
                "function": "store_memory",
                "line": 948
              },
              {
                "function": "error",
                "line": 980
              },
              {
                "function": "list",
                "line": 992
              },
              {
                "function": "any",
                "line": 996
              },
              {
                "function": "error",
                "line": 1051
              },
              {
                "function": "isinstance",
                "line": 1060
              },
              {
                "function": "list",
                "line": 1075
              },
              {
                "function": "zip",
                "line": 1078
              },
              {
                "function": "error",
                "line": 1108
              },
              {
                "function": "list",
                "line": 1138
              },
              {
                "function": "list",
                "line": 1141
              },
              {
                "function": "append",
                "line": 1142
              },
              {
                "function": "info",
                "line": 1151
              },
              {
                "function": "error",
                "line": 1175
              },
              {
                "function": "get",
                "line": 1189
              },
              {
                "function": "FixerGPTAgent",
                "line": 1192
              },
              {
                "function": "TaskRequest",
                "line": 1195
              },
              {
                "function": "info",
                "line": 1209
              },
              {
                "function": "list",
                "line": 1214
              },
              {
                "function": "info",
                "line": 1221
              },
              {
                "function": "get",
                "line": 1240
              },
              {
                "function": "info",
                "line": 1241
              },
              {
                "function": "info",
                "line": 1248
              },
              {
                "function": "info",
                "line": 1280
              },
              {
                "function": "get",
                "line": 1297
              },
              {
                "function": "get",
                "line": 1298
              },
              {
                "function": "check_and_handle_timeouts",
                "line": 1331
              },
              {
                "function": "update_from_steps",
                "line": 1335
              },
              {
                "function": "info",
                "line": 1337
              },
              {
                "function": "create_task",
                "line": 1352
              },
              {
                "function": "info",
                "line": 1356
              },
              {
                "function": "warning",
                "line": 1364
              },
              {
                "function": "info",
                "line": 1373
              },
              {
                "function": "error",
                "line": 1399
              },
              {
                "function": "error",
                "line": 1400
              },
              {
                "function": "list",
                "line": 1406
              },
              {
                "function": "any",
                "line": 1408
              },
              {
                "function": "next",
                "line": 1421
              },
              {
                "function": "next",
                "line": 1430
              },
              {
                "function": "get",
                "line": 1518
              },
              {
                "function": "any",
                "line": 1571
              },
              {
                "function": "error",
                "line": 1588
              },
              {
                "function": "should_use_safe_execution",
                "line": 1622
              },
              {
                "function": "info",
                "line": 1623
              },
              {
                "function": "info",
                "line": 1643
              },
              {
                "function": "info",
                "line": 1669
              },
              {
                "function": "classify_query",
                "line": 1678
              },
              {
                "function": "any",
                "line": 1707
              },
              {
                "function": "info",
                "line": 1814
              },
              {
                "function": "info",
                "line": 1855
              },
              {
                "function": "max",
                "line": 1863
              },
              {
                "function": "info",
                "line": 1889
              },
              {
                "function": "create_intelligent_execution_plan",
                "line": 1890
              },
              {
                "function": "_create_single_agent_step",
                "line": 1898
              },
              {
                "function": "_create_single_agent_step",
                "line": 1901
              },
              {
                "function": "get_intelligent_response",
                "line": 1986
              },
              {
                "function": "info",
                "line": 1987
              },
              {
                "function": "enhance_orchestrator_step",
                "line": 2002
              },
              {
                "function": "any",
                "line": 2028
              },
              {
                "function": "info",
                "line": 2045
              },
              {
                "function": "any",
                "line": 2054
              },
              {
                "function": "info",
                "line": 2063
              },
              {
                "function": "warning",
                "line": 2077
              },
              {
                "function": "_create_single_agent_step",
                "line": 2078
              },
              {
                "function": "TaskRequest",
                "line": 2086
              },
              {
                "function": "get",
                "line": 2130
              },
              {
                "function": "any",
                "line": 2148
              },
              {
                "function": "get",
                "line": 2161
              },
              {
                "function": "get",
                "line": 2162
              },
              {
                "function": "lower",
                "line": 2208
              },
              {
                "function": "info",
                "line": 2209
              },
              {
                "function": "CacheManager",
                "line": 2210
              },
              {
                "function": "fill_caches",
                "line": 2211
              },
              {
                "function": "info",
                "line": 2216
              },
              {
                "function": "sleep",
                "line": 2236
              },
              {
                "function": "get",
                "line": 2553
              },
              {
                "function": "info",
                "line": 2565
              },
              {
                "function": "sleep",
                "line": 2601
              },
              {
                "function": "info",
                "line": 2615
              },
              {
                "function": "sleep",
                "line": 2652
              },
              {
                "function": "info",
                "line": 2665
              },
              {
                "function": "sleep",
                "line": 2702
              },
              {
                "function": "info",
                "line": 2724
              },
              {
                "function": "sleep",
                "line": 2750
              },
              {
                "function": "add_conditional_edges",
                "line": 2850
              },
              {
                "function": "compile_workflow",
                "line": 2927
              },
              {
                "function": "now",
                "line": 2951
              },
              {
                "function": "get",
                "line": 2954
              },
              {
                "function": "info",
                "line": 2993
              },
              {
                "function": "WorkflowSelfDiagnosisSystem",
                "line": 144
              },
              {
                "function": "info",
                "line": 145
              },
              {
                "function": "IntelligentQueryHandler",
                "line": 154
              },
              {
                "function": "info",
                "line": 155
              },
              {
                "function": "SafeOrchestratorExecutor",
                "line": 166
              },
              {
                "function": "EnhancedQueryClassifier",
                "line": 167
              },
              {
                "function": "DevelopmentQueryHandler",
                "line": 168
              },
              {
                "function": "info",
                "line": 169
              },
              {
                "function": "ArchitectAgent",
                "line": 213
              },
              {
                "function": "CodeSmithAgent",
                "line": 214
              },
              {
                "function": "ReviewerGPTAgent",
                "line": 215
              },
              {
                "function": "FixerBotAgent",
                "line": 216
              },
              {
                "function": "error",
                "line": 245
              },
              {
                "function": "exception",
                "line": 246
              },
              {
                "function": "len",
                "line": 314
              },
              {
                "function": "is_timeout",
                "line": 334
              },
              {
                "function": "warning",
                "line": 335
              },
              {
                "function": "append",
                "line": 338
              },
              {
                "function": "can_retry",
                "line": 346
              },
              {
                "function": "len",
                "line": 400
              },
              {
                "function": "get",
                "line": 468
              },
              {
                "function": "get",
                "line": 472
              },
              {
                "function": "get",
                "line": 483
              },
              {
                "function": "warning",
                "line": 503
              },
              {
                "function": "len",
                "line": 507
              },
              {
                "function": "info",
                "line": 543
              },
              {
                "function": "append",
                "line": 544
              },
              {
                "function": "info",
                "line": 571
              },
              {
                "function": "get",
                "line": 621
              },
              {
                "function": "get",
                "line": 621
              },
              {
                "function": "get",
                "line": 642
              },
              {
                "function": "info",
                "line": 664
              },
              {
                "function": "info",
                "line": 667
              },
              {
                "function": "_dependencies_met",
                "line": 707
              },
              {
                "function": "list",
                "line": 710
              },
              {
                "function": "info",
                "line": 711
              },
              {
                "function": "info",
                "line": 754
              },
              {
                "function": "list",
                "line": 758
              },
              {
                "function": "store_memory",
                "line": 761
              },
              {
                "function": "info",
                "line": 769
              },
              {
                "function": "info",
                "line": 774
              },
              {
                "function": "get",
                "line": 775
              },
              {
                "function": "_format_proposal_for_user",
                "line": 784
              },
              {
                "function": "append",
                "line": 787
              },
              {
                "function": "info",
                "line": 803
              },
              {
                "function": "get",
                "line": 809
              },
              {
                "function": "info",
                "line": 810
              },
              {
                "function": "info",
                "line": 814
              },
              {
                "function": "_format_proposal_for_user",
                "line": 824
              },
              {
                "function": "append",
                "line": 827
              },
              {
                "function": "list",
                "line": 845
              },
              {
                "function": "store_memory",
                "line": 848
              },
              {
                "function": "info",
                "line": 856
              },
              {
                "function": "_execute_architect_task",
                "line": 863
              },
              {
                "function": "error",
                "line": 877
              },
              {
                "function": "str",
                "line": 879
              },
              {
                "function": "append",
                "line": 880
              },
              {
                "function": "list",
                "line": 885
              },
              {
                "function": "_execute_codesmith_task",
                "line": 921
              },
              {
                "function": "error",
                "line": 957
              },
              {
                "function": "str",
                "line": 959
              },
              {
                "function": "list",
                "line": 961
              },
              {
                "function": "_execute_reviewer_task",
                "line": 987
              },
              {
                "function": "isinstance",
                "line": 995
              },
              {
                "function": "lower",
                "line": 995
              },
              {
                "function": "lower",
                "line": 995
              },
              {
                "function": "warning",
                "line": 1002
              },
              {
                "function": "info",
                "line": 1006
              },
              {
                "function": "isinstance",
                "line": 1009
              },
              {
                "function": "get",
                "line": 1009
              },
              {
                "function": "store_memory",
                "line": 1019
              },
              {
                "function": "error",
                "line": 1028
              },
              {
                "function": "str",
                "line": 1030
              },
              {
                "function": "list",
                "line": 1032
              },
              {
                "function": "get",
                "line": 1061
              },
              {
                "function": "_execute_fixer_task",
                "line": 1070
              },
              {
                "function": "get",
                "line": 1078
              },
              {
                "function": "learn_pattern",
                "line": 1079
              },
              {
                "function": "error",
                "line": 1086
              },
              {
                "function": "str",
                "line": 1088
              },
              {
                "function": "list",
                "line": 1090
              },
              {
                "function": "TaskRequest",
                "line": 1121
              },
              {
                "function": "info",
                "line": 1129
              },
              {
                "function": "warning",
                "line": 1132
              },
              {
                "function": "get",
                "line": 1141
              },
              {
                "function": "error",
                "line": 1154
              },
              {
                "function": "str",
                "line": 1156
              },
              {
                "function": "list",
                "line": 1157
              },
              {
                "function": "execute",
                "line": 1206
              },
              {
                "function": "error",
                "line": 1224
              },
              {
                "function": "str",
                "line": 1226
              },
              {
                "function": "list",
                "line": 1227
              },
              {
                "function": "info",
                "line": 1284
              },
              {
                "function": "info",
                "line": 1287
              },
              {
                "function": "get",
                "line": 1297
              },
              {
                "function": "info",
                "line": 1302
              },
              {
                "function": "run_health_check",
                "line": 1352
              },
              {
                "function": "_dependencies_met",
                "line": 1376
              },
              {
                "function": "error",
                "line": 1402
              },
              {
                "function": "info",
                "line": 1411
              },
              {
                "function": "route_to_next_agent",
                "line": 1412
              },
              {
                "function": "insert",
                "line": 1468
              },
              {
                "function": "len",
                "line": 1478
              },
              {
                "function": "info",
                "line": 1567
              },
              {
                "function": "warning",
                "line": 1658
              },
              {
                "function": "info",
                "line": 1682
              },
              {
                "function": "info",
                "line": 1694
              },
              {
                "function": "handle_development_query",
                "line": 1714
              },
              {
                "function": "lower",
                "line": 1730
              },
              {
                "function": "lower",
                "line": 1730
              },
              {
                "function": "ExecutionStep",
                "line": 1744
              },
              {
                "function": "ExecutionStep",
                "line": 1760
              },
              {
                "function": "ExecutionStep",
                "line": 1787
              },
              {
                "function": "ExecutionStep",
                "line": 1817
              },
              {
                "function": "ExecutionStep",
                "line": 1826
              },
              {
                "function": "ExecutionStep",
                "line": 1835
              },
              {
                "function": "ExecutionStep",
                "line": 1844
              },
              {
                "function": "items",
                "line": 1863
              },
              {
                "function": "info",
                "line": 1868
              },
              {
                "function": "_create_single_agent_step",
                "line": 1869
              },
              {
                "function": "info",
                "line": 1894
              },
              {
                "function": "get",
                "line": 1994
              },
              {
                "function": "len",
                "line": 2018
              },
              {
                "function": "len",
                "line": 2019
              },
              {
                "function": "any",
                "line": 2022
              },
              {
                "function": "count",
                "line": 2034
              },
              {
                "function": "len",
                "line": 2041
              },
              {
                "function": "len",
                "line": 2051
              },
              {
                "function": "endswith",
                "line": 2059
              },
              {
                "function": "execute",
                "line": 2087
              },
              {
                "function": "info",
                "line": 2107
              },
              {
                "function": "error",
                "line": 2111
              },
              {
                "function": "warning",
                "line": 2112
              },
              {
                "function": "append",
                "line": 2138
              },
              {
                "function": "len",
                "line": 2156
              },
              {
                "function": "list",
                "line": 2157
              },
              {
                "function": "store_memory",
                "line": 2173
              },
              {
                "function": "info",
                "line": 2189
              },
              {
                "function": "warning",
                "line": 2192
              },
              {
                "function": "TaskRequest",
                "line": 2219
              },
              {
                "function": "TaskRequest",
                "line": 2329
              },
              {
                "function": "search",
                "line": 2346
              },
              {
                "function": "loads",
                "line": 2350
              },
              {
                "function": "info",
                "line": 2357
              },
              {
                "function": "get",
                "line": 2399
              },
              {
                "function": "get",
                "line": 2404
              },
              {
                "function": "get",
                "line": 2407
              },
              {
                "function": "get",
                "line": 2410
              },
              {
                "function": "get",
                "line": 2413
              },
              {
                "function": "get",
                "line": 2416
              },
              {
                "function": "get",
                "line": 2449
              },
              {
                "function": "get",
                "line": 2452
              },
              {
                "function": "get",
                "line": 2455
              },
              {
                "function": "get",
                "line": 2458
              },
              {
                "function": "get",
                "line": 2462
              },
              {
                "function": "dumps",
                "line": 2498
              },
              {
                "function": "TaskRequest",
                "line": 2520
              },
              {
                "function": "search",
                "line": 2535
              },
              {
                "function": "loads",
                "line": 2539
              },
              {
                "function": "info",
                "line": 2540
              },
              {
                "function": "TaskRequest",
                "line": 2589
              },
              {
                "function": "TaskRequest",
                "line": 2640
              },
              {
                "function": "TaskRequest",
                "line": 2690
              },
              {
                "function": "TaskRequest",
                "line": 2729
              },
              {
                "function": "isoformat",
                "line": 2921
              },
              {
                "function": "ainvoke",
                "line": 2932
              },
              {
                "function": "get",
                "line": 2941
              },
              {
                "function": "info",
                "line": 2946
              },
              {
                "function": "info",
                "line": 2947
              },
              {
                "function": "_store_execution_for_learning",
                "line": 2987
              },
              {
                "function": "error",
                "line": 2997
              },
              {
                "function": "exception",
                "line": 2998
              },
              {
                "function": "append",
                "line": 3000
              },
              {
                "function": "error",
                "line": 147
              },
              {
                "function": "error",
                "line": 157
              },
              {
                "function": "error",
                "line": 171
              },
              {
                "function": "OrchestratorAgent",
                "line": 222
              },
              {
                "function": "info",
                "line": 227
              },
              {
                "function": "ResearchAgent",
                "line": 234
              },
              {
                "function": "info",
                "line": 239
              },
              {
                "function": "lower",
                "line": 292
              },
              {
                "function": "lower",
                "line": 294
              },
              {
                "function": "lower",
                "line": 296
              },
              {
                "function": "lower",
                "line": 298
              },
              {
                "function": "lower",
                "line": 300
              },
              {
                "function": "get_retry_delay",
                "line": 347
              },
              {
                "function": "info",
                "line": 348
              },
              {
                "function": "append",
                "line": 355
              },
              {
                "function": "error",
                "line": 361
              },
              {
                "function": "now",
                "line": 364
              },
              {
                "function": "_has_dependency_conflict",
                "line": 395
              },
              {
                "function": "append",
                "line": 396
              },
              {
                "function": "add",
                "line": 397
              },
              {
                "function": "get",
                "line": 479
              },
              {
                "function": "isoformat",
                "line": 489
              },
              {
                "function": "pre_execution_check",
                "line": 578
              },
              {
                "function": "error",
                "line": 584
              },
              {
                "function": "append",
                "line": 587
              },
              {
                "function": "ExecutionStep",
                "line": 596
              },
              {
                "function": "error",
                "line": 605
              },
              {
                "function": "info",
                "line": 608
              },
              {
                "function": "error",
                "line": 613
              },
              {
                "function": "warning",
                "line": 615
              },
              {
                "function": "len",
                "line": 634
              },
              {
                "function": "len",
                "line": 641
              },
              {
                "function": "info",
                "line": 672
              },
              {
                "function": "get",
                "line": 737
              },
              {
                "function": "_finalize_architecture",
                "line": 755
              },
              {
                "function": "_revise_proposal",
                "line": 777
              },
              {
                "function": "_execute_architect_task",
                "line": 813
              },
              {
                "function": "_create_architecture_proposal",
                "line": 817
              },
              {
                "function": "get",
                "line": 873
              },
              {
                "function": "get",
                "line": 953
              },
              {
                "function": "store_memory",
                "line": 1011
              },
              {
                "function": "execute",
                "line": 1126
              },
              {
                "function": "get",
                "line": 1143
              },
              {
                "function": "isoformat",
                "line": 1147
              },
              {
                "function": "get",
                "line": 1186
              },
              {
                "function": "len",
                "line": 1246
              },
              {
                "function": "info",
                "line": 1262
              },
              {
                "function": "_dependencies_met",
                "line": 1267
              },
              {
                "function": "info",
                "line": 1276
              },
              {
                "function": "info",
                "line": 1306
              },
              {
                "function": "route_to_next_agent",
                "line": 1314
              },
              {
                "function": "len",
                "line": 1328
              },
              {
                "function": "get",
                "line": 1340
              },
              {
                "function": "warning",
                "line": 1367
              },
              {
                "function": "now",
                "line": 1388
              },
              {
                "function": "now",
                "line": 1389
              },
              {
                "function": "info",
                "line": 1391
              },
              {
                "function": "info",
                "line": 1394
              },
              {
                "function": "join",
                "line": 1468
              },
              {
                "function": "join",
                "line": 1526
              },
              {
                "function": "create_safe_execution_plan",
                "line": 1627
              },
              {
                "function": "info",
                "line": 1629
              },
              {
                "function": "error",
                "line": 1632
              },
              {
                "function": "execute_safely",
                "line": 1647
              },
              {
                "function": "isinstance",
                "line": 1654
              },
              {
                "function": "_use_orchestrator_for_planning",
                "line": 1661
              },
              {
                "function": "ExecutionStep",
                "line": 1683
              },
              {
                "function": "ExecutionStep",
                "line": 1695
              },
              {
                "function": "sorted",
                "line": 1874
              },
              {
                "function": "debug",
                "line": 1947
              },
              {
                "function": "debug",
                "line": 1954
              },
              {
                "function": "split",
                "line": 2018
              },
              {
                "function": "split",
                "line": 2019
              },
              {
                "function": "len",
                "line": 2025
              },
              {
                "function": "split",
                "line": 2041
              },
              {
                "function": "split",
                "line": 2051
              },
              {
                "function": "len",
                "line": 2059
              },
              {
                "function": "append",
                "line": 2096
              },
              {
                "function": "set",
                "line": 2157
              },
              {
                "function": "execute",
                "line": 2228
              },
              {
                "function": "hasattr",
                "line": 2229
              },
              {
                "function": "str",
                "line": 2229
              },
              {
                "function": "error",
                "line": 2231
              },
              {
                "function": "execute",
                "line": 2338
              },
              {
                "function": "hasattr",
                "line": 2339
              },
              {
                "function": "str",
                "line": 2339
              },
              {
                "function": "group",
                "line": 2348
              },
              {
                "function": "all",
                "line": 2354
              },
              {
                "function": "ValueError",
                "line": 2355
              },
              {
                "function": "error",
                "line": 2361
              },
              {
                "function": "warning",
                "line": 2362
              },
              {
                "function": "execute",
                "line": 2529
              },
              {
                "function": "hasattr",
                "line": 2530
              },
              {
                "function": "str",
                "line": 2530
              },
              {
                "function": "group",
                "line": 2537
              },
              {
                "function": "error",
                "line": 2544
              },
              {
                "function": "warning",
                "line": 2545
              },
              {
                "function": "get",
                "line": 2572
              },
              {
                "function": "get",
                "line": 2573
              },
              {
                "function": "execute",
                "line": 2593
              },
              {
                "function": "hasattr",
                "line": 2594
              },
              {
                "function": "str",
                "line": 2594
              },
              {
                "function": "error",
                "line": 2596
              },
              {
                "function": "get",
                "line": 2622
              },
              {
                "function": "get",
                "line": 2623
              },
              {
                "function": "append",
                "line": 2635
              },
              {
                "function": "execute",
                "line": 2644
              },
              {
                "function": "hasattr",
                "line": 2645
              },
              {
                "function": "str",
                "line": 2645
              },
              {
                "function": "error",
                "line": 2647
              },
              {
                "function": "get",
                "line": 2672
              },
              {
                "function": "get",
                "line": 2673
              },
              {
                "function": "append",
                "line": 2685
              },
              {
                "function": "execute",
                "line": 2694
              },
              {
                "function": "hasattr",
                "line": 2695
              },
              {
                "function": "str",
                "line": 2695
              },
              {
                "function": "error",
                "line": 2697
              },
              {
                "function": "execute",
                "line": 2735
              },
              {
                "function": "info",
                "line": 2738
              },
              {
                "function": "error",
                "line": 2741
              },
              {
                "function": "error",
                "line": 2745
              },
              {
                "function": "get",
                "line": 2914
              },
              {
                "function": "hasattr",
                "line": 2943
              },
              {
                "function": "join",
                "line": 2960
              },
              {
                "function": "info",
                "line": 2980
              },
              {
                "function": "get_intelligent_response",
                "line": 2981
              },
              {
                "function": "_store_execution_for_learning",
                "line": 3006
              },
              {
                "function": "warning",
                "line": 229
              },
              {
                "function": "warning",
                "line": 241
              },
              {
                "function": "len",
                "line": 243
              },
              {
                "function": "isoformat",
                "line": 342
              },
              {
                "function": "add",
                "line": 445
              },
              {
                "function": "append",
                "line": 446
              },
              {
                "function": "get",
                "line": 494
              },
              {
                "function": "len",
                "line": 558
              },
              {
                "function": "len",
                "line": 568
              },
              {
                "function": "info",
                "line": 682
              },
              {
                "function": "get",
                "line": 766
              },
              {
                "function": "send_json",
                "line": 796
              },
              {
                "function": "send_json",
                "line": 836
              },
              {
                "function": "get",
                "line": 853
              },
              {
                "function": "str",
                "line": 882
              },
              {
                "function": "isoformat",
                "line": 883
              },
              {
                "function": "len",
                "line": 952
              },
              {
                "function": "str",
                "line": 995
              },
              {
                "function": "str",
                "line": 995
              },
              {
                "function": "get",
                "line": 1024
              },
              {
                "function": "str",
                "line": 1064
              },
              {
                "function": "len",
                "line": 1151
              },
              {
                "function": "get",
                "line": 1187
              },
              {
                "function": "len",
                "line": 1209
              },
              {
                "function": "warning",
                "line": 1257
              },
              {
                "function": "list",
                "line": 1260
              },
              {
                "function": "warning",
                "line": 1271
              },
              {
                "function": "list",
                "line": 1274
              },
              {
                "function": "real_time_monitoring",
                "line": 1344
              },
              {
                "function": "error",
                "line": 1346
              },
              {
                "function": "error",
                "line": 1347
              },
              {
                "function": "warning",
                "line": 1349
              },
              {
                "function": "warning",
                "line": 1380
              },
              {
                "function": "list",
                "line": 1383
              },
              {
                "function": "dirname",
                "line": 1468
              },
              {
                "function": "get",
                "line": 1572
              },
              {
                "function": "get",
                "line": 1573
              },
              {
                "function": "len",
                "line": 1662
              },
              {
                "function": "lower",
                "line": 1707
              },
              {
                "function": "ExecutionStep",
                "line": 1718
              },
              {
                "function": "len",
                "line": 1855
              },
              {
                "function": "items",
                "line": 1874
              },
              {
                "function": "info",
                "line": 1877
              },
              {
                "function": "_create_single_agent_step",
                "line": 1879
              },
              {
                "function": "info",
                "line": 1881
              },
              {
                "function": "_create_single_agent_step",
                "line": 1882
              },
              {
                "function": "get",
                "line": 1946
              },
              {
                "function": "get",
                "line": 1953
              },
              {
                "function": "len",
                "line": 1987
              },
              {
                "function": "split",
                "line": 2025
              },
              {
                "function": "strip",
                "line": 2059
              },
              {
                "function": "split",
                "line": 2059
              },
              {
                "function": "ExecutionStep",
                "line": 2096
              },
              {
                "function": "len",
                "line": 2149
              },
              {
                "function": "total_seconds",
                "line": 2166
              },
              {
                "function": "get",
                "line": 2185
              },
              {
                "function": "get",
                "line": 2548
              },
              {
                "function": "append",
                "line": 2582
              },
              {
                "function": "hasattr",
                "line": 2633
              },
              {
                "function": "now",
                "line": 2921
              },
              {
                "function": "append",
                "line": 2958
              },
              {
                "function": "info",
                "line": 2964
              },
              {
                "function": "get_intelligent_response",
                "line": 2965
              },
              {
                "function": "str",
                "line": 3001
              },
              {
                "function": "isoformat",
                "line": 3002
              },
              {
                "function": "now",
                "line": 489
              },
              {
                "function": "info",
                "line": 691
              },
              {
                "function": "str",
                "line": 952
              },
              {
                "function": "get",
                "line": 995
              },
              {
                "function": "get",
                "line": 1015
              },
              {
                "function": "len",
                "line": 1129
              },
              {
                "function": "now",
                "line": 1147
              },
              {
                "function": "list",
                "line": 1311
              },
              {
                "function": "get",
                "line": 1519
              },
              {
                "function": "chr",
                "line": 1526
              },
              {
                "function": "_use_orchestrator_for_planning",
                "line": 1650
              },
              {
                "function": "isinstance",
                "line": 1656
              },
              {
                "function": "len",
                "line": 1875
              },
              {
                "function": "len",
                "line": 2107
              },
              {
                "function": "hasattr",
                "line": 2142
              },
              {
                "function": "get",
                "line": 2143
              },
              {
                "function": "get",
                "line": 2182
              },
              {
                "function": "isoformat",
                "line": 2183
              },
              {
                "function": "get",
                "line": 2224
              },
              {
                "function": "get",
                "line": 2225
              },
              {
                "function": "str",
                "line": 2232
              },
              {
                "function": "get",
                "line": 2333
              },
              {
                "function": "get",
                "line": 2334
              },
              {
                "function": "chr",
                "line": 2446
              },
              {
                "function": "chr",
                "line": 2446
              },
              {
                "function": "get",
                "line": 2524
              },
              {
                "function": "get",
                "line": 2525
              },
              {
                "function": "str",
                "line": 2597
              },
              {
                "function": "update",
                "line": 2634
              },
              {
                "function": "str",
                "line": 2648
              },
              {
                "function": "append",
                "line": 2684
              },
              {
                "function": "str",
                "line": 2698
              },
              {
                "function": "str",
                "line": 2746
              },
              {
                "function": "str",
                "line": 2960
              },
              {
                "function": "now",
                "line": 342
              },
              {
                "function": "get",
                "line": 800
              },
              {
                "function": "get",
                "line": 840
              },
              {
                "function": "now",
                "line": 883
              },
              {
                "function": "enumerate",
                "line": 1526
              },
              {
                "function": "len",
                "line": 1629
              },
              {
                "function": "get",
                "line": 2097
              },
              {
                "function": "get",
                "line": 2098
              },
              {
                "function": "get",
                "line": 2099
              },
              {
                "function": "get",
                "line": 2100
              },
              {
                "function": "get",
                "line": 2101
              },
              {
                "function": "hasattr",
                "line": 2143
              },
              {
                "function": "hasattr",
                "line": 2149
              },
              {
                "function": "list",
                "line": 2355
              },
              {
                "function": "lower",
                "line": 2683
              },
              {
                "function": "lower",
                "line": 2683
              },
              {
                "function": "now",
                "line": 3002
              },
              {
                "function": "get",
                "line": 1347
              },
              {
                "function": "get",
                "line": 2099
              },
              {
                "function": "get",
                "line": 2104
              },
              {
                "function": "now",
                "line": 2183
              },
              {
                "function": "keys",
                "line": 2355
              },
              {
                "function": "get",
                "line": 1526
              },
              {
                "function": "str",
                "line": 2683
              },
              {
                "function": "str",
                "line": 2683
              },
              {
                "function": "len",
                "line": 2097
              }
            ]
          },
          "backend/langgraph_system/state.py": {
            "functions": [
              {
                "name": "create_initial_state",
                "line": 245,
                "async": false,
                "calls": [
                  "now",
                  "getcwd",
                  "ExtendedAgentState",
                  "str",
                  "uuid4"
                ],
                "parameters": [
                  "session_id",
                  "client_id",
                  "workspace_path",
                  "plan_first_mode",
                  "debug_mode"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "__post_init__",
                "line": 70,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "is_timeout",
                "line": 77,
                "async": false,
                "calls": [
                  "total_seconds",
                  "now"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "can_retry",
                "line": 84,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "get_retry_delay",
                "line": 88,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "__post_init__",
                "line": 109,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "__post_init__",
                "line": 132,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "update_from_steps",
                "line": 139,
                "async": false,
                "calls": [
                  "sum",
                  "len"
                ],
                "parameters": [
                  "self",
                  "steps"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/state.py"
              }
            ],
            "classes": [
              {
                "name": "ToolDefinition",
                "line": 14,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "MemoryEntry",
                "line": 26,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "ExecutionStep",
                "line": 37,
                "methods": [
                  "__post_init__",
                  "is_timeout",
                  "can_retry",
                  "get_retry_delay"
                ],
                "bases": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "TaskLedger",
                "line": 94,
                "methods": [
                  "__post_init__"
                ],
                "bases": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "ProgressLedger",
                "line": 116,
                "methods": [
                  "__post_init__",
                  "update_from_steps"
                ],
                "bases": [],
                "file": "backend/langgraph_system/state.py"
              },
              {
                "name": "ExtendedAgentState",
                "line": 151,
                "methods": [],
                "bases": [
                  "TypedDict"
                ],
                "file": "backend/langgraph_system/state.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "TypedDict",
                  "List",
                  "Dict",
                  "Any",
                  "Optional",
                  "Literal",
                  "Annotated"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "uuid",
                "names": [
                  "uuid"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "operator",
                "names": [
                  "operator"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 255
              }
            ],
            "calls": [
              {
                "function": "ExtendedAgentState",
                "line": 256
              },
              {
                "function": "len",
                "line": 141
              },
              {
                "function": "sum",
                "line": 142
              },
              {
                "function": "sum",
                "line": 143
              },
              {
                "function": "sum",
                "line": 144
              },
              {
                "function": "sum",
                "line": 145
              },
              {
                "function": "total_seconds",
                "line": 80
              },
              {
                "function": "now",
                "line": 326
              },
              {
                "function": "str",
                "line": 263
              },
              {
                "function": "getcwd",
                "line": 265
              },
              {
                "function": "uuid4",
                "line": 263
              },
              {
                "function": "now",
                "line": 80
              }
            ]
          },
          "backend/langgraph_system/safe_orchestrator_executor.py": {
            "functions": [
              {
                "name": "add_attempt",
                "line": 41,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "attempt"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "__init__",
                "line": 68,
                "async": false,
                "calls": [
                  "ExecutionHistory",
                  "getLogger",
                  "DevelopmentQueryHandler",
                  "EnhancedQueryClassifier",
                  "ExecutionGuard"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "_generate_query_hash",
                "line": 75,
                "async": false,
                "calls": [
                  "encode",
                  "md5",
                  "hexdigest",
                  "lower",
                  "strip"
                ],
                "parameters": [
                  "self",
                  "query"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "_detect_loop_pattern",
                "line": 80,
                "async": false,
                "calls": [
                  "warning",
                  "min",
                  "range",
                  "len"
                ],
                "parameters": [
                  "self",
                  "recent_hashes"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "_get_safe_fallback_response",
                "line": 102,
                "async": false,
                "calls": [
                  "handle_development_query"
                ],
                "parameters": [
                  "self",
                  "query",
                  "classification"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "get_execution_stats",
                "line": 314,
                "async": false,
                "calls": [
                  "split",
                  "get",
                  "sum",
                  "items",
                  "len",
                  "sorted"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "should_use_safe_execution",
                "line": 351,
                "async": false,
                "calls": [
                  "isinstance",
                  "append",
                  "get",
                  "any",
                  "classify_query",
                  "dict",
                  "set",
                  "len",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "query",
                  "state"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "reset_history",
                "line": 399,
                "async": false,
                "calls": [
                  "ExecutionHistory",
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              }
            ],
            "classes": [
              {
                "name": "ExecutionAttempt",
                "line": 21,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "ExecutionHistory",
                "line": 33,
                "methods": [
                  "add_attempt"
                ],
                "bases": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              },
              {
                "name": "SafeOrchestratorExecutor",
                "line": 53,
                "methods": [
                  "__init__",
                  "_generate_query_hash",
                  "_detect_loop_pattern",
                  "_get_safe_fallback_response",
                  "get_execution_stats",
                  "should_use_safe_execution",
                  "reset_history"
                ],
                "bases": [],
                "file": "backend/langgraph_system/safe_orchestrator_executor.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "hashlib",
                "names": [
                  "hashlib"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "List",
                  "Tuple"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime",
                  "timedelta"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "field"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "query_classifier",
                "names": [
                  "EnhancedQueryClassifier",
                  "ExecutionGuard",
                  "DetailedClassification"
                ],
                "line": 14
              },
              {
                "type": "from_import",
                "module": "development_query_handler",
                "names": [
                  "DevelopmentQueryHandler"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ExecutionStep",
                  "WorkflowState"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "field",
                "line": 35
              },
              {
                "function": "field",
                "line": 36
              },
              {
                "function": "field",
                "line": 37
              },
              {
                "function": "append",
                "line": 43
              },
              {
                "function": "EnhancedQueryClassifier",
                "line": 69
              },
              {
                "function": "DevelopmentQueryHandler",
                "line": 70
              },
              {
                "function": "ExecutionGuard",
                "line": 71
              },
              {
                "function": "ExecutionHistory",
                "line": 72
              },
              {
                "function": "getLogger",
                "line": 73
              },
              {
                "function": "strip",
                "line": 77
              },
              {
                "function": "range",
                "line": 93
              },
              {
                "function": "isinstance",
                "line": 172
              },
              {
                "function": "classify_query",
                "line": 178
              },
              {
                "function": "_generate_query_hash",
                "line": 181
              },
              {
                "function": "len",
                "line": 182
              },
              {
                "function": "ExecutionAttempt",
                "line": 185
              },
              {
                "function": "_detect_loop_pattern",
                "line": 212
              },
              {
                "function": "append",
                "line": 228
              },
              {
                "function": "len",
                "line": 317
              },
              {
                "function": "len",
                "line": 319
              },
              {
                "function": "isinstance",
                "line": 358
              },
              {
                "function": "classify_query",
                "line": 376
              },
              {
                "function": "ExecutionHistory",
                "line": 401
              },
              {
                "function": "info",
                "line": 402
              },
              {
                "function": "isinstance",
                "line": 415
              },
              {
                "function": "classify_query",
                "line": 420
              },
              {
                "function": "timestamp",
                "line": 422
              },
              {
                "function": "info",
                "line": 478
              },
              {
                "function": "hexdigest",
                "line": 78
              },
              {
                "function": "len",
                "line": 85
              },
              {
                "function": "min",
                "line": 93
              },
              {
                "function": "handle_development_query",
                "line": 115
              },
              {
                "function": "add_attempt",
                "line": 197
              },
              {
                "function": "add_attempt",
                "line": 215
              },
              {
                "function": "add_attempt",
                "line": 223
              },
              {
                "function": "sorted",
                "line": 327
              },
              {
                "function": "get",
                "line": 359
              },
              {
                "function": "any",
                "line": 367
              },
              {
                "function": "len",
                "line": 381
              },
              {
                "function": "len",
                "line": 385
              },
              {
                "function": "handle_development_query",
                "line": 427
              },
              {
                "function": "enumerate",
                "line": 431
              },
              {
                "function": "lower",
                "line": 77
              },
              {
                "function": "len",
                "line": 89
              },
              {
                "function": "warning",
                "line": 97
              },
              {
                "function": "wait_for",
                "line": 145
              },
              {
                "function": "error",
                "line": 151
              },
              {
                "function": "error",
                "line": 154
              },
              {
                "function": "hasattr",
                "line": 175
              },
              {
                "function": "dict",
                "line": 175
              },
              {
                "function": "now",
                "line": 188
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 199
              },
              {
                "function": "add_attempt",
                "line": 206
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 217
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 225
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 234
              },
              {
                "function": "add_attempt",
                "line": 236
              },
              {
                "function": "error",
                "line": 304
              },
              {
                "function": "str",
                "line": 305
              },
              {
                "function": "add_attempt",
                "line": 306
              },
              {
                "function": "pop",
                "line": 312
              },
              {
                "function": "sum",
                "line": 324
              },
              {
                "function": "items",
                "line": 328
              },
              {
                "function": "hasattr",
                "line": 362
              },
              {
                "function": "hasattr",
                "line": 363
              },
              {
                "function": "dict",
                "line": 363
              },
              {
                "function": "hasattr",
                "line": 388
              },
              {
                "function": "hasattr",
                "line": 418
              },
              {
                "function": "dict",
                "line": 418
              },
              {
                "function": "now",
                "line": 422
              },
              {
                "function": "ExecutionStep",
                "line": 432
              },
              {
                "function": "append",
                "line": 440
              },
              {
                "function": "enumerate",
                "line": 455
              },
              {
                "function": "ExecutionStep",
                "line": 468
              },
              {
                "function": "append",
                "line": 476
              },
              {
                "function": "md5",
                "line": 78
              },
              {
                "function": "len",
                "line": 95
              },
              {
                "function": "func",
                "line": 146
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 208
              },
              {
                "function": "add_attempt",
                "line": 243
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 307
              },
              {
                "function": "split",
                "line": 337
              },
              {
                "function": "get",
                "line": 338
              },
              {
                "function": "append",
                "line": 389
              },
              {
                "function": "isinstance",
                "line": 390
              },
              {
                "function": "len",
                "line": 393
              },
              {
                "function": "len",
                "line": 393
              },
              {
                "function": "ExecutionStep",
                "line": 456
              },
              {
                "function": "append",
                "line": 464
              },
              {
                "function": "len",
                "line": 478
              },
              {
                "function": "encode",
                "line": 78
              },
              {
                "function": "len",
                "line": 93
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 241
              },
              {
                "function": "hasattr",
                "line": 369
              },
              {
                "function": "append",
                "line": 391
              },
              {
                "function": "set",
                "line": 393
              },
              {
                "function": "lower",
                "line": 444
              },
              {
                "function": "lower",
                "line": 444
              },
              {
                "function": "handle_development_query",
                "line": 249
              },
              {
                "function": "info",
                "line": 277
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 298
              },
              {
                "function": "add_attempt",
                "line": 300
              },
              {
                "function": "get",
                "line": 391
              },
              {
                "function": "lower",
                "line": 446
              },
              {
                "function": "lower",
                "line": 446
              },
              {
                "function": "lower",
                "line": 448
              },
              {
                "function": "add_attempt",
                "line": 268
              },
              {
                "function": "add_attempt",
                "line": 272
              },
              {
                "function": "_execute_with_timeout",
                "line": 279
              },
              {
                "function": "add_attempt",
                "line": 288
              },
              {
                "function": "add_attempt",
                "line": 293
              },
              {
                "function": "get",
                "line": 370
              },
              {
                "function": "get",
                "line": 370
              },
              {
                "function": "lower",
                "line": 450
              },
              {
                "function": "ExecutionStep",
                "line": 257
              },
              {
                "function": "append",
                "line": 265
              },
              {
                "function": "str",
                "line": 287
              },
              {
                "function": "_get_safe_fallback_response",
                "line": 294
              },
              {
                "function": "join",
                "line": 267
              },
              {
                "function": "timestamp",
                "line": 258
              },
              {
                "function": "now",
                "line": 258
              }
            ]
          },
          "backend/langgraph_system/extensions/dynamic_workflow.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 48,
                "async": false,
                "calls": [
                  "_extract_base_structure"
                ],
                "parameters": [
                  "self",
                  "base_graph"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "_extract_base_structure",
                "line": 75,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "add_node",
                "line": 81,
                "async": false,
                "calls": [
                  "DynamicNode",
                  "info",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "name",
                  "func",
                  "node_type",
                  "description",
                  "metadata"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "remove_node",
                "line": 118,
                "async": false,
                "calls": [
                  "info",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "add_edge",
                "line": 149,
                "async": false,
                "calls": [
                  "error",
                  "DynamicEdge",
                  "info",
                  "append"
                ],
                "parameters": [
                  "self",
                  "source",
                  "target",
                  "condition",
                  "metadata"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "add_conditional_routing",
                "line": 188,
                "async": false,
                "calls": [
                  "append",
                  "info",
                  "ConditionalRoute"
                ],
                "parameters": [
                  "self",
                  "source",
                  "condition",
                  "routes",
                  "metadata"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "compile_graph",
                "line": 218,
                "async": false,
                "calls": [
                  "add_edge",
                  "info",
                  "append",
                  "add_node",
                  "StateGraph",
                  "compile",
                  "items",
                  "len",
                  "add_conditional_edges"
                ],
                "parameters": [
                  "self",
                  "state_class"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "create_template",
                "line": 272,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self",
                  "name",
                  "nodes",
                  "edges",
                  "routes",
                  "description"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "apply_template",
                "line": 303,
                "async": false,
                "calls": [
                  "add_edge",
                  "info",
                  "add_node",
                  "add_conditional_routing",
                  "items",
                  "error"
                ],
                "parameters": [
                  "self",
                  "template_name",
                  "node_prefix",
                  "parameter_mapping"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "rollback",
                "line": 361,
                "async": false,
                "calls": [
                  "info",
                  "max",
                  "warning",
                  "len",
                  "error"
                ],
                "parameters": [
                  "self",
                  "version"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "get_graph_info",
                "line": 387,
                "async": false,
                "calls": [
                  "list",
                  "keys",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "visualize_graph",
                "line": 402,
                "async": false,
                "calls": [
                  "ValueError",
                  "join",
                  "append",
                  "items"
                ],
                "parameters": [
                  "self",
                  "format"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              }
            ],
            "classes": [
              {
                "name": "DynamicNode",
                "line": 15,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "DynamicEdge",
                "line": 25,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "ConditionalRoute",
                "line": 34,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              },
              {
                "name": "DynamicWorkflowManager",
                "line": 42,
                "methods": [
                  "__init__",
                  "_extract_base_structure",
                  "add_node",
                  "remove_node",
                  "add_edge",
                  "add_conditional_routing",
                  "compile_graph",
                  "create_template",
                  "apply_template",
                  "rollback",
                  "get_graph_info",
                  "visualize_graph"
                ],
                "bases": [],
                "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Callable",
                  "Any",
                  "Optional",
                  "Literal"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "langgraph.graph",
                "names": [
                  "StateGraph",
                  "END"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "info",
                "line": 78
              },
              {
                "function": "DynamicNode",
                "line": 106
              },
              {
                "function": "info",
                "line": 115
              },
              {
                "function": "warning",
                "line": 146
              },
              {
                "function": "DynamicEdge",
                "line": 177
              },
              {
                "function": "append",
                "line": 184
              },
              {
                "function": "info",
                "line": 185
              },
              {
                "function": "ConditionalRoute",
                "line": 207
              },
              {
                "function": "append",
                "line": 214
              },
              {
                "function": "info",
                "line": 215
              },
              {
                "function": "StateGraph",
                "line": 228
              },
              {
                "function": "items",
                "line": 231
              },
              {
                "function": "items",
                "line": 235
              },
              {
                "function": "compile",
                "line": 263
              },
              {
                "function": "append",
                "line": 266
              },
              {
                "function": "info",
                "line": 269
              },
              {
                "function": "info",
                "line": 300
              },
              {
                "function": "info",
                "line": 358
              },
              {
                "function": "error",
                "line": 384
              },
              {
                "function": "_extract_base_structure",
                "line": 73
              },
              {
                "function": "warning",
                "line": 103
              },
              {
                "function": "info",
                "line": 143
              },
              {
                "function": "error",
                "line": 171
              },
              {
                "function": "error",
                "line": 174
              },
              {
                "function": "add_node",
                "line": 232
              },
              {
                "function": "add_node",
                "line": 236
              },
              {
                "function": "add_conditional_edges",
                "line": 256
              },
              {
                "function": "len",
                "line": 267
              },
              {
                "function": "error",
                "line": 321
              },
              {
                "function": "add_node",
                "line": 328
              },
              {
                "function": "add_edge",
                "line": 338
              },
              {
                "function": "add_conditional_routing",
                "line": 351
              },
              {
                "function": "warning",
                "line": 372
              },
              {
                "function": "max",
                "line": 377
              },
              {
                "function": "len",
                "line": 379
              },
              {
                "function": "info",
                "line": 381
              },
              {
                "function": "len",
                "line": 392
              },
              {
                "function": "list",
                "line": 393
              },
              {
                "function": "list",
                "line": 394
              },
              {
                "function": "len",
                "line": 396
              },
              {
                "function": "list",
                "line": 397
              },
              {
                "function": "len",
                "line": 399
              },
              {
                "function": "join",
                "line": 443
              },
              {
                "function": "add_edge",
                "line": 242
              },
              {
                "function": "add_edge",
                "line": 244
              },
              {
                "function": "add_edge",
                "line": 250
              },
              {
                "function": "add_edge",
                "line": 252
              },
              {
                "function": "keys",
                "line": 393
              },
              {
                "function": "keys",
                "line": 394
              },
              {
                "function": "len",
                "line": 395
              },
              {
                "function": "len",
                "line": 395
              },
              {
                "function": "keys",
                "line": 397
              },
              {
                "function": "append",
                "line": 429
              },
              {
                "function": "items",
                "line": 440
              },
              {
                "function": "append",
                "line": 472
              },
              {
                "function": "join",
                "line": 473
              },
              {
                "function": "ValueError",
                "line": 476
              },
              {
                "function": "items",
                "line": 349
              },
              {
                "function": "append",
                "line": 434
              },
              {
                "function": "append",
                "line": 436
              },
              {
                "function": "append",
                "line": 441
              },
              {
                "function": "append",
                "line": 458
              },
              {
                "function": "append",
                "line": 465
              },
              {
                "function": "items",
                "line": 469
              },
              {
                "function": "append",
                "line": 470
              }
            ]
          },
          "backend/langgraph_system/extensions/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "tool_discovery",
                "names": [
                  "ToolRegistry",
                  "tool",
                  "get_tool_registry"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "approval_manager",
                "names": [
                  "ApprovalManager"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "persistent_memory",
                "names": [
                  "PersistentAgentMemory"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "dynamic_workflow",
                "names": [
                  "DynamicWorkflowManager"
                ],
                "line": 9
              }
            ],
            "calls": []
          },
          "backend/langgraph_system/extensions/approval_manager.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 36,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "websocket_manager",
                  "timeout_seconds"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "_format_plan_for_ui",
                "line": 155,
                "async": false,
                "calls": [
                  "isinstance",
                  "asdict",
                  "_format_step",
                  "str",
                  "vars",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "plan"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "_format_step",
                "line": 176,
                "async": false,
                "calls": [
                  "get",
                  "asdict",
                  "vars",
                  "str",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "step"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "get_approval_status",
                "line": 218,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "approval_id"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "get_approval_history",
                "line": 224,
                "async": false,
                "calls": [
                  "sort"
                ],
                "parameters": [
                  "self",
                  "client_id",
                  "limit"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "cleanup_expired",
                "line": 253,
                "async": false,
                "calls": [
                  "info",
                  "now",
                  "append",
                  "cancel",
                  "items",
                  "done",
                  "len"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "get_pending_approvals",
                "line": 276,
                "async": false,
                "calls": [
                  "values"
                ],
                "parameters": [
                  "self",
                  "client_id"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              }
            ],
            "classes": [
              {
                "name": "ApprovalRequest",
                "line": 17,
                "methods": [],
                "bases": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              },
              {
                "name": "ApprovalManager",
                "line": 30,
                "methods": [
                  "__init__",
                  "_format_plan_for_ui",
                  "_format_step",
                  "get_approval_status",
                  "get_approval_history",
                  "cleanup_expired",
                  "get_pending_approvals"
                ],
                "bases": [],
                "file": "backend/langgraph_system/extensions/approval_manager.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "uuid",
                "names": [
                  "uuid"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Literal",
                  "Optional",
                  "List"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime",
                  "timedelta"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "dataclass",
                  "asdict"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "str",
                "line": 69
              },
              {
                "function": "ApprovalRequest",
                "line": 73
              },
              {
                "function": "Future",
                "line": 86
              },
              {
                "function": "isinstance",
                "line": 157
              },
              {
                "function": "hasattr",
                "line": 178
              },
              {
                "function": "sort",
                "line": 236
              },
              {
                "function": "now",
                "line": 255
              },
              {
                "function": "items",
                "line": 258
              },
              {
                "function": "info",
                "line": 274
              },
              {
                "function": "uuid4",
                "line": 69
              },
              {
                "function": "get",
                "line": 99
              },
              {
                "function": "get",
                "line": 100
              },
              {
                "function": "get",
                "line": 101
              },
              {
                "function": "append",
                "line": 117
              },
              {
                "function": "_format_plan_for_ui",
                "line": 130
              },
              {
                "function": "isoformat",
                "line": 132
              },
              {
                "function": "hasattr",
                "line": 163
              },
              {
                "function": "str",
                "line": 188
              },
              {
                "function": "warning",
                "line": 206
              },
              {
                "function": "done",
                "line": 211
              },
              {
                "function": "set_result",
                "line": 212
              },
              {
                "function": "info",
                "line": 213
              },
              {
                "function": "handle_user_response",
                "line": 241
              },
              {
                "function": "handle_user_response",
                "line": 248
              },
              {
                "function": "handle_user_response",
                "line": 300
              },
              {
                "function": "now",
                "line": 77
              },
              {
                "function": "_send_approval_request_to_ui",
                "line": 91
              },
              {
                "function": "wait_for",
                "line": 95
              },
              {
                "function": "warning",
                "line": 104
              },
              {
                "function": "error",
                "line": 108
              },
              {
                "function": "send_json",
                "line": 153
              },
              {
                "function": "hasattr",
                "line": 179
              },
              {
                "function": "asdict",
                "line": 179
              },
              {
                "function": "vars",
                "line": 179
              },
              {
                "function": "get",
                "line": 181
              },
              {
                "function": "get",
                "line": 182
              },
              {
                "function": "get",
                "line": 183
              },
              {
                "function": "get",
                "line": 184
              },
              {
                "function": "get",
                "line": 185
              },
              {
                "function": "get",
                "line": 186
              },
              {
                "function": "append",
                "line": 261
              },
              {
                "function": "values",
                "line": 279
              },
              {
                "function": "now",
                "line": 78
              },
              {
                "function": "timedelta",
                "line": 78
              },
              {
                "function": "_format_step",
                "line": 161
              },
              {
                "function": "str",
                "line": 173
              },
              {
                "function": "len",
                "line": 274
              },
              {
                "function": "hasattr",
                "line": 167
              },
              {
                "function": "asdict",
                "line": 167
              },
              {
                "function": "vars",
                "line": 167
              },
              {
                "function": "get",
                "line": 213
              },
              {
                "function": "done",
                "line": 266
              },
              {
                "function": "cancel",
                "line": 267
              },
              {
                "function": "str",
                "line": 108
              }
            ]
          },
          "backend/langgraph_system/extensions/tool_discovery.py": {
            "functions": [
              {
                "name": "tool",
                "line": 18,
                "async": false,
                "calls": [],
                "parameters": [
                  "name",
                  "description",
                  "tags"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "get_tool_registry",
                "line": 313,
                "async": false,
                "calls": [],
                "parameters": [],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "decorator",
                "line": 27,
                "async": false,
                "calls": [],
                "parameters": [
                  "func"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "__init__",
                "line": 41,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "auto_discover_tools",
                "line": 47,
                "async": false,
                "calls": [
                  "startswith",
                  "info",
                  "append",
                  "_create_tool_from_decorated",
                  "_create_tool_from_prefix",
                  "register_tool",
                  "getmembers",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "agent_instance"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "_create_tool_from_decorated",
                "line": 76,
                "async": false,
                "calls": [
                  "_extract_parameters",
                  "getattr",
                  "ToolDefinition"
                ],
                "parameters": [
                  "self",
                  "method",
                  "agent_name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "_create_tool_from_prefix",
                "line": 87,
                "async": false,
                "calls": [
                  "replace",
                  "ToolDefinition",
                  "_extract_parameters"
                ],
                "parameters": [
                  "self",
                  "method",
                  "agent_name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "_extract_parameters",
                "line": 99,
                "async": false,
                "calls": [
                  "get_type_hints",
                  "signature",
                  "items",
                  "_python_type_to_json_type"
                ],
                "parameters": [
                  "self",
                  "method"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "_python_type_to_json_type",
                "line": 132,
                "async": false,
                "calls": [
                  "get",
                  "hasattr"
                ],
                "parameters": [
                  "self",
                  "python_type"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "register_tool",
                "line": 153,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "tool",
                  "shared"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "discover_tools_for_agent",
                "line": 173,
                "async": false,
                "calls": [
                  "append"
                ],
                "parameters": [
                  "self",
                  "agent_name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "get_tool_schema",
                "line": 232,
                "async": false,
                "calls": [
                  "get",
                  "items"
                ],
                "parameters": [
                  "self",
                  "tool_name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "list_all_tools",
                "line": 253,
                "async": false,
                "calls": [
                  "get_tool_schema",
                  "keys"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "get_usage_stats",
                "line": 260,
                "async": false,
                "calls": [
                  "get"
                ],
                "parameters": [
                  "self",
                  "tool_name"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "export_tools",
                "line": 266,
                "async": false,
                "calls": [
                  "dump",
                  "asdict",
                  "dumps",
                  "ValueError",
                  "values"
                ],
                "parameters": [
                  "self",
                  "format"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              },
              {
                "name": "import_tools",
                "line": 283,
                "async": false,
                "calls": [
                  "loads",
                  "clear",
                  "ToolDefinition",
                  "safe_load",
                  "get",
                  "ValueError"
                ],
                "parameters": [
                  "self",
                  "data",
                  "format"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              }
            ],
            "classes": [
              {
                "name": "ToolRegistry",
                "line": 36,
                "methods": [
                  "__init__",
                  "auto_discover_tools",
                  "_create_tool_from_decorated",
                  "_create_tool_from_prefix",
                  "_extract_parameters",
                  "_python_type_to_json_type",
                  "register_tool",
                  "discover_tools_for_agent",
                  "get_tool_schema",
                  "list_all_tools",
                  "get_usage_stats",
                  "export_tools",
                  "import_tools"
                ],
                "bases": [],
                "file": "backend/langgraph_system/extensions/tool_discovery.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "inspect",
                "names": [
                  "inspect"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Callable",
                  "Any",
                  "Optional",
                  "get_type_hints"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "functools",
                "names": [
                  "wraps"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "dataclasses",
                "names": [
                  "asdict"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "ToolDefinition"
                ],
                "line": 13
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 204
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 228
              },
              {
                "type": "import",
                "module": "yaml",
                "names": [
                  "yaml"
                ],
                "line": 278
              },
              {
                "type": "import",
                "module": "yaml",
                "names": [
                  "yaml"
                ],
                "line": 288
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 15
              },
              {
                "function": "ToolRegistry",
                "line": 310
              },
              {
                "function": "getmembers",
                "line": 59
              },
              {
                "function": "ToolDefinition",
                "line": 78
              },
              {
                "function": "replace",
                "line": 89
              },
              {
                "function": "ToolDefinition",
                "line": 90
              },
              {
                "function": "signature",
                "line": 101
              },
              {
                "function": "items",
                "line": 109
              },
              {
                "function": "hasattr",
                "line": 147
              },
              {
                "function": "get",
                "line": 151
              },
              {
                "function": "clear",
                "line": 294
              },
              {
                "function": "clear",
                "line": 295
              },
              {
                "function": "clear",
                "line": 296
              },
              {
                "function": "get",
                "line": 299
              },
              {
                "function": "get",
                "line": 304
              },
              {
                "function": "get",
                "line": 305
              },
              {
                "function": "get",
                "line": 306
              },
              {
                "function": "hasattr",
                "line": 63
              },
              {
                "function": "get_type_hints",
                "line": 105
              },
              {
                "function": "get",
                "line": 149
              },
              {
                "function": "append",
                "line": 158
              },
              {
                "function": "append",
                "line": 162
              },
              {
                "function": "ValueError",
                "line": 198
              },
              {
                "function": "time",
                "line": 205
              },
              {
                "function": "iscoroutinefunction",
                "line": 210
              },
              {
                "function": "get_tool_schema",
                "line": 256
              },
              {
                "function": "get",
                "line": 263
              },
              {
                "function": "dumps",
                "line": 276
              },
              {
                "function": "loads",
                "line": 286
              },
              {
                "function": "ToolDefinition",
                "line": 301
              },
              {
                "function": "_create_tool_from_decorated",
                "line": 64
              },
              {
                "function": "startswith",
                "line": 66
              },
              {
                "function": "append",
                "line": 70
              },
              {
                "function": "register_tool",
                "line": 71
              },
              {
                "function": "info",
                "line": 72
              },
              {
                "function": "_extract_parameters",
                "line": 81
              },
              {
                "function": "getattr",
                "line": 84
              },
              {
                "function": "_extract_parameters",
                "line": 93
              },
              {
                "function": "_python_type_to_json_type",
                "line": 122
              },
              {
                "function": "append",
                "line": 186
              },
              {
                "function": "callable",
                "line": 213
              },
              {
                "function": "error",
                "line": 223
              },
              {
                "function": "keys",
                "line": 257
              },
              {
                "function": "asdict",
                "line": 269
              },
              {
                "function": "dump",
                "line": 279
              },
              {
                "function": "ValueError",
                "line": 281
              },
              {
                "function": "safe_load",
                "line": 289
              },
              {
                "function": "ValueError",
                "line": 291
              },
              {
                "function": "_create_tool_from_prefix",
                "line": 67
              },
              {
                "function": "append",
                "line": 181
              },
              {
                "function": "callable",
                "line": 211
              },
              {
                "function": "time",
                "line": 229
              },
              {
                "function": "values",
                "line": 269
              },
              {
                "function": "items",
                "line": 245
              },
              {
                "function": "get",
                "line": 246
              },
              {
                "function": "str",
                "line": 223
              }
            ]
          },
          "backend/langgraph_system/extensions/persistent_memory.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 35,
                "async": false,
                "calls": [
                  "OpenAIEmbeddings",
                  "_init_sqlite",
                  "warning",
                  "_init_vector_store"
                ],
                "parameters": [
                  "self",
                  "agent_name",
                  "db_path",
                  "vector_store_path",
                  "embedding_model"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "_init_sqlite",
                "line": 71,
                "async": false,
                "calls": [
                  "commit",
                  "connect",
                  "execute",
                  "close",
                  "cursor"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "_init_vector_store",
                "line": 136,
                "async": false,
                "calls": [
                  "info",
                  "_create_new_vector_store",
                  "error",
                  "Path",
                  "str",
                  "exists",
                  "load_local"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "_create_new_vector_store",
                "line": 158,
                "async": false,
                "calls": [
                  "info",
                  "now",
                  "from_texts",
                  "str",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "store_memory",
                "line": 175,
                "async": false,
                "calls": [
                  "_save_vector_store",
                  "now",
                  "commit",
                  "connect",
                  "append",
                  "execute",
                  "close",
                  "dumps",
                  "add_texts",
                  "str",
                  "pop",
                  "len",
                  "cursor",
                  "error"
                ],
                "parameters": [
                  "self",
                  "content",
                  "memory_type",
                  "importance",
                  "metadata",
                  "session_id"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "recall_similar",
                "line": 240,
                "async": false,
                "calls": [
                  "loads",
                  "_update_access_counts",
                  "now",
                  "fetchall",
                  "connect",
                  "append",
                  "execute",
                  "similarity_search_with_score",
                  "get",
                  "close",
                  "join",
                  "extend",
                  "MemoryEntry",
                  "fromisoformat",
                  "str",
                  "len",
                  "cursor",
                  "error"
                ],
                "parameters": [
                  "self",
                  "query",
                  "k",
                  "memory_types",
                  "min_importance"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "learn_pattern",
                "line": 330,
                "async": false,
                "calls": [
                  "encode",
                  "commit",
                  "fetchone",
                  "connect",
                  "execute",
                  "md5",
                  "close",
                  "dumps",
                  "hexdigest",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "pattern",
                  "solution",
                  "success",
                  "metadata"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "get_learned_solution",
                "line": 389,
                "async": false,
                "calls": [
                  "encode",
                  "info",
                  "fetchone",
                  "connect",
                  "execute",
                  "md5",
                  "close",
                  "hexdigest",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "pattern",
                  "min_success_rate"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "record_agent_interaction",
                "line": 417,
                "async": false,
                "calls": [
                  "commit",
                  "connect",
                  "execute",
                  "close",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "to_agent",
                  "interaction_type",
                  "content",
                  "result",
                  "session_id"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "get_interaction_history",
                "line": 438,
                "async": false,
                "calls": [
                  "fetchall",
                  "connect",
                  "append",
                  "execute",
                  "close",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "with_agent",
                  "limit"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "_update_access_counts",
                "line": 479,
                "async": false,
                "calls": [
                  "commit",
                  "connect",
                  "execute",
                  "close",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "memory_ids"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "_save_vector_store",
                "line": 499,
                "async": false,
                "calls": [
                  "mkdir",
                  "save_local",
                  "Path",
                  "str",
                  "error"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "consolidate_memories",
                "line": 508,
                "async": false,
                "calls": [
                  "info",
                  "now",
                  "timedelta",
                  "commit",
                  "connect",
                  "execute",
                  "close",
                  "cursor"
                ],
                "parameters": [
                  "self",
                  "max_age_days"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              },
              {
                "name": "get_memory_stats",
                "line": 530,
                "async": false,
                "calls": [
                  "fetchall",
                  "connect",
                  "fetchone",
                  "execute",
                  "close",
                  "len",
                  "cursor"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              }
            ],
            "classes": [
              {
                "name": "PersistentAgentMemory",
                "line": 30,
                "methods": [
                  "__init__",
                  "_init_sqlite",
                  "_init_vector_store",
                  "_create_new_vector_store",
                  "store_memory",
                  "recall_similar",
                  "learn_pattern",
                  "get_learned_solution",
                  "record_agent_interaction",
                  "get_interaction_history",
                  "_update_access_counts",
                  "_save_vector_store",
                  "consolidate_memories",
                  "get_memory_stats"
                ],
                "bases": [],
                "file": "backend/langgraph_system/extensions/persistent_memory.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sqlite3",
                "names": [
                  "sqlite3"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "pickle",
                "names": [
                  "pickle"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional",
                  "Literal"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime",
                  "timedelta"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 12
              },
              {
                "type": "import",
                "module": "numpy",
                "names": [
                  "numpy"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "state",
                "names": [
                  "MemoryEntry"
                ],
                "line": 25
              },
              {
                "type": "import",
                "module": "faiss",
                "names": [
                  "faiss"
                ],
                "line": 16
              },
              {
                "type": "from_import",
                "module": "langchain_openai",
                "names": [
                  "OpenAIEmbeddings"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "langchain_community.vectorstores",
                "names": [
                  "FAISS"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "hashlib",
                "names": [
                  "hashlib"
                ],
                "line": 343
              },
              {
                "type": "import",
                "module": "hashlib",
                "names": [
                  "hashlib"
                ],
                "line": 395
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 27
              },
              {
                "function": "getLogger",
                "line": 22
              },
              {
                "function": "warning",
                "line": 23
              },
              {
                "function": "_init_sqlite",
                "line": 56
              },
              {
                "function": "connect",
                "line": 73
              },
              {
                "function": "cursor",
                "line": 74
              },
              {
                "function": "execute",
                "line": 77
              },
              {
                "function": "execute",
                "line": 93
              },
              {
                "function": "execute",
                "line": 109
              },
              {
                "function": "execute",
                "line": 123
              },
              {
                "function": "execute",
                "line": 128
              },
              {
                "function": "commit",
                "line": 133
              },
              {
                "function": "close",
                "line": 134
              },
              {
                "function": "Path",
                "line": 141
              },
              {
                "function": "exists",
                "line": 143
              },
              {
                "function": "connect",
                "line": 189
              },
              {
                "function": "cursor",
                "line": 190
              },
              {
                "function": "execute",
                "line": 192
              },
              {
                "function": "commit",
                "line": 206
              },
              {
                "function": "close",
                "line": 207
              },
              {
                "function": "append",
                "line": 227
              },
              {
                "function": "_update_access_counts",
                "line": 326
              },
              {
                "function": "hexdigest",
                "line": 344
              },
              {
                "function": "connect",
                "line": 346
              },
              {
                "function": "cursor",
                "line": 347
              },
              {
                "function": "execute",
                "line": 350
              },
              {
                "function": "fetchone",
                "line": 356
              },
              {
                "function": "commit",
                "line": 385
              },
              {
                "function": "close",
                "line": 386
              },
              {
                "function": "hexdigest",
                "line": 396
              },
              {
                "function": "connect",
                "line": 398
              },
              {
                "function": "cursor",
                "line": 399
              },
              {
                "function": "execute",
                "line": 401
              },
              {
                "function": "fetchone",
                "line": 407
              },
              {
                "function": "close",
                "line": 408
              },
              {
                "function": "connect",
                "line": 426
              },
              {
                "function": "cursor",
                "line": 427
              },
              {
                "function": "execute",
                "line": 429
              },
              {
                "function": "commit",
                "line": 435
              },
              {
                "function": "close",
                "line": 436
              },
              {
                "function": "connect",
                "line": 444
              },
              {
                "function": "cursor",
                "line": 445
              },
              {
                "function": "fetchall",
                "line": 465
              },
              {
                "function": "close",
                "line": 476
              },
              {
                "function": "connect",
                "line": 484
              },
              {
                "function": "cursor",
                "line": 485
              },
              {
                "function": "commit",
                "line": 496
              },
              {
                "function": "close",
                "line": 497
              },
              {
                "function": "connect",
                "line": 510
              },
              {
                "function": "cursor",
                "line": 511
              },
              {
                "function": "execute",
                "line": 516
              },
              {
                "function": "commit",
                "line": 525
              },
              {
                "function": "close",
                "line": 526
              },
              {
                "function": "info",
                "line": 528
              },
              {
                "function": "connect",
                "line": 532
              },
              {
                "function": "cursor",
                "line": 533
              },
              {
                "function": "execute",
                "line": 538
              },
              {
                "function": "fetchall",
                "line": 546
              },
              {
                "function": "execute",
                "line": 553
              },
              {
                "function": "fetchone",
                "line": 559
              },
              {
                "function": "execute",
                "line": 567
              },
              {
                "function": "close",
                "line": 575
              },
              {
                "function": "len",
                "line": 584
              },
              {
                "function": "_create_new_vector_store",
                "line": 156
              },
              {
                "function": "from_texts",
                "line": 165
              },
              {
                "function": "info",
                "line": 170
              },
              {
                "function": "len",
                "line": 235
              },
              {
                "function": "pop",
                "line": 236
              },
              {
                "function": "len",
                "line": 290
              },
              {
                "function": "connect",
                "line": 291
              },
              {
                "function": "cursor",
                "line": 292
              },
              {
                "function": "append",
                "line": 302
              },
              {
                "function": "append",
                "line": 303
              },
              {
                "function": "execute",
                "line": 305
              },
              {
                "function": "fetchall",
                "line": 313
              },
              {
                "function": "close",
                "line": 323
              },
              {
                "function": "execute",
                "line": 363
              },
              {
                "function": "execute",
                "line": 371
              },
              {
                "function": "info",
                "line": 412
              },
              {
                "function": "execute",
                "line": 448
              },
              {
                "function": "execute",
                "line": 456
              },
              {
                "function": "append",
                "line": 466
              },
              {
                "function": "now",
                "line": 513
              },
              {
                "function": "timedelta",
                "line": 513
              },
              {
                "function": "fetchone",
                "line": 573
              },
              {
                "function": "OpenAIEmbeddings",
                "line": 62
              },
              {
                "function": "_init_vector_store",
                "line": 63
              },
              {
                "function": "load_local",
                "line": 146
              },
              {
                "function": "info",
                "line": 151
              },
              {
                "function": "error",
                "line": 172
              },
              {
                "function": "dumps",
                "line": 201
              },
              {
                "function": "add_texts",
                "line": 212
              },
              {
                "function": "_save_vector_store",
                "line": 222
              },
              {
                "function": "now",
                "line": 231
              },
              {
                "function": "similarity_search_with_score",
                "line": 264
              },
              {
                "function": "join",
                "line": 298
              },
              {
                "function": "append",
                "line": 299
              },
              {
                "function": "extend",
                "line": 300
              },
              {
                "function": "append",
                "line": 314
              },
              {
                "function": "get",
                "line": 326
              },
              {
                "function": "md5",
                "line": 344
              },
              {
                "function": "md5",
                "line": 396
              },
              {
                "function": "execute",
                "line": 489
              },
              {
                "function": "mkdir",
                "line": 503
              },
              {
                "function": "save_local",
                "line": 504
              },
              {
                "function": "warning",
                "line": 65
              },
              {
                "function": "str",
                "line": 147
              },
              {
                "function": "error",
                "line": 153
              },
              {
                "function": "_create_new_vector_store",
                "line": 154
              },
              {
                "function": "error",
                "line": 224
              },
              {
                "function": "append",
                "line": 274
              },
              {
                "function": "error",
                "line": 287
              },
              {
                "function": "MemoryEntry",
                "line": 314
              },
              {
                "function": "encode",
                "line": 344
              },
              {
                "function": "dumps",
                "line": 382
              },
              {
                "function": "encode",
                "line": 396
              },
              {
                "function": "str",
                "line": 504
              },
              {
                "function": "error",
                "line": 506
              },
              {
                "function": "get",
                "line": 271
              },
              {
                "function": "MemoryEntry",
                "line": 274
              },
              {
                "function": "len",
                "line": 283
              },
              {
                "function": "len",
                "line": 298
              },
              {
                "function": "join",
                "line": 308
              },
              {
                "function": "str",
                "line": 168
              },
              {
                "function": "get",
                "line": 269
              },
              {
                "function": "len",
                "line": 311
              },
              {
                "function": "fromisoformat",
                "line": 317
              },
              {
                "function": "loads",
                "line": 319
              },
              {
                "function": "Path",
                "line": 503
              },
              {
                "function": "now",
                "line": 168
              },
              {
                "function": "str",
                "line": 218
              },
              {
                "function": "get",
                "line": 276
              },
              {
                "function": "fromisoformat",
                "line": 277
              },
              {
                "function": "get",
                "line": 278
              },
              {
                "function": "get",
                "line": 280
              },
              {
                "function": "now",
                "line": 218
              },
              {
                "function": "get",
                "line": 277
              },
              {
                "function": "str",
                "line": 277
              },
              {
                "function": "now",
                "line": 277
              }
            ]
          },
          "backend/api/settings_endpoint.py": {
            "functions": [],
            "classes": [
              {
                "name": "SettingsUpdateRequest",
                "line": 22,
                "methods": [],
                "bases": [
                  "BaseModel"
                ],
                "file": "backend/api/settings_endpoint.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "fastapi",
                "names": [
                  "APIRouter",
                  "HTTPException"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pydantic",
                "names": [
                  "BaseModel"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Optional",
                  "Dict",
                  "Any"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "config.settings",
                "names": [
                  "Settings"
                ],
                "line": 16
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 14
              },
              {
                "function": "getLogger",
                "line": 18
              },
              {
                "function": "APIRouter",
                "line": 19
              },
              {
                "function": "get",
                "line": 27
              },
              {
                "function": "post",
                "line": 45
              },
              {
                "function": "get",
                "line": 78
              },
              {
                "function": "post",
                "line": 136
              },
              {
                "function": "get",
                "line": 192
              },
              {
                "function": "dirname",
                "line": 14
              },
              {
                "function": "dirname",
                "line": 14
              },
              {
                "function": "update_from_vscode",
                "line": 64
              },
              {
                "function": "info",
                "line": 66
              },
              {
                "function": "info",
                "line": 180
              },
              {
                "function": "append",
                "line": 210
              },
              {
                "function": "append",
                "line": 212
              },
              {
                "function": "append",
                "line": 216
              },
              {
                "function": "append",
                "line": 218
              },
              {
                "function": "append",
                "line": 242
              },
              {
                "function": "append",
                "line": 244
              },
              {
                "function": "append",
                "line": 248
              },
              {
                "function": "append",
                "line": 250
              },
              {
                "function": "append",
                "line": 254
              },
              {
                "function": "to_dict",
                "line": 261
              },
              {
                "function": "abspath",
                "line": 14
              },
              {
                "function": "to_dict",
                "line": 38
              },
              {
                "function": "error",
                "line": 41
              },
              {
                "function": "HTTPException",
                "line": 42
              },
              {
                "function": "to_dict",
                "line": 71
              },
              {
                "function": "error",
                "line": 74
              },
              {
                "function": "HTTPException",
                "line": 75
              },
              {
                "function": "to_dict",
                "line": 185
              },
              {
                "function": "error",
                "line": 188
              },
              {
                "function": "HTTPException",
                "line": 189
              },
              {
                "function": "append",
                "line": 224
              },
              {
                "function": "append",
                "line": 228
              },
              {
                "function": "append",
                "line": 232
              },
              {
                "function": "append",
                "line": 234
              },
              {
                "function": "append",
                "line": 238
              },
              {
                "function": "len",
                "line": 257
              },
              {
                "function": "len",
                "line": 258
              },
              {
                "function": "str",
                "line": 42
              },
              {
                "function": "len",
                "line": 66
              },
              {
                "function": "len",
                "line": 70
              },
              {
                "function": "str",
                "line": 75
              },
              {
                "function": "str",
                "line": 189
              },
              {
                "function": "join",
                "line": 224
              }
            ]
          },
          "backend/api/server_langgraph.py": {
            "functions": [
              {
                "name": "main",
                "line": 583,
                "async": false,
                "calls": [
                  "run",
                  "info",
                  "range",
                  "close",
                  "connect_ex",
                  "socket"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/api/server_langgraph.py"
              },
              {
                "name": "__init__",
                "line": 56,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/api/server_langgraph.py"
              },
              {
                "name": "disconnect",
                "line": 69,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self",
                  "client_id"
                ],
                "decorators": [],
                "file": "backend/api/server_langgraph.py"
              }
            ],
            "classes": [
              {
                "name": "ConnectionManager",
                "line": 55,
                "methods": [
                  "__init__",
                  "disconnect"
                ],
                "bases": [],
                "file": "backend/api/server_langgraph.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "fastapi",
                "names": [
                  "FastAPI",
                  "WebSocket",
                  "WebSocketDisconnect",
                  "HTTPException"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "fastapi.middleware.cors",
                "names": [
                  "CORSMiddleware"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "contextlib",
                "names": [
                  "asynccontextmanager"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "uuid",
                "names": [
                  "uuid"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "Optional",
                  "Set"
                ],
                "line": 13
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 14
              },
              {
                "type": "import",
                "module": "uvicorn",
                "names": [
                  "uvicorn"
                ],
                "line": 15
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "langgraph_system",
                "names": [
                  "create_agent_workflow",
                  "ExtendedAgentState",
                  "ToolRegistry",
                  "ApprovalManager",
                  "PersistentAgentMemory",
                  "DynamicWorkflowManager"
                ],
                "line": 23
              },
              {
                "type": "from_import",
                "module": "models_endpoint",
                "names": [
                  "router"
                ],
                "line": 33
              },
              {
                "type": "from_import",
                "module": "settings_endpoint",
                "names": [
                  "router"
                ],
                "line": 36
              },
              {
                "type": "from_import",
                "module": "__version__",
                "names": [
                  "__version__",
                  "__version_display__",
                  "__release_tag__"
                ],
                "line": 39
              },
              {
                "type": "import",
                "module": "socket",
                "names": [
                  "socket"
                ],
                "line": 588
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 146
              },
              {
                "type": "import",
                "module": "traceback",
                "names": [
                  "traceback"
                ],
                "line": 541
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 20
              },
              {
                "function": "basicConfig",
                "line": 42
              },
              {
                "function": "getLogger",
                "line": 47
              },
              {
                "function": "info",
                "line": 50
              },
              {
                "function": "info",
                "line": 51
              },
              {
                "function": "info",
                "line": 52
              },
              {
                "function": "ConnectionManager",
                "line": 97
              },
              {
                "function": "FastAPI",
                "line": 152
              },
              {
                "function": "add_middleware",
                "line": 159
              },
              {
                "function": "include_router",
                "line": 168
              },
              {
                "function": "info",
                "line": 169
              },
              {
                "function": "include_router",
                "line": 172
              },
              {
                "function": "info",
                "line": 173
              },
              {
                "function": "get",
                "line": 176
              },
              {
                "function": "get",
                "line": 185
              },
              {
                "function": "get",
                "line": 205
              },
              {
                "function": "get",
                "line": 227
              },
              {
                "function": "get",
                "line": 237
              },
              {
                "function": "post",
                "line": 254
              },
              {
                "function": "websocket",
                "line": 269
              },
              {
                "function": "post",
                "line": 552
              },
              {
                "function": "post",
                "line": 565
              },
              {
                "function": "dirname",
                "line": 20
              },
              {
                "function": "get_graph_info",
                "line": 234
              },
              {
                "function": "info",
                "line": 474
              },
              {
                "function": "info",
                "line": 477
              },
              {
                "function": "info",
                "line": 478
              },
              {
                "function": "info",
                "line": 479
              },
              {
                "function": "add_edge",
                "line": 572
              },
              {
                "function": "range",
                "line": 587
              },
              {
                "function": "info",
                "line": 596
              },
              {
                "function": "run",
                "line": 599
              },
              {
                "function": "main",
                "line": 610
              },
              {
                "function": "dirname",
                "line": 20
              },
              {
                "function": "info",
                "line": 67
              },
              {
                "function": "list",
                "line": 86
              },
              {
                "function": "info",
                "line": 108
              },
              {
                "function": "info",
                "line": 109
              },
              {
                "function": "info",
                "line": 110
              },
              {
                "function": "info",
                "line": 111
              },
              {
                "function": "info",
                "line": 114
              },
              {
                "function": "create_agent_workflow",
                "line": 115
              },
              {
                "function": "info",
                "line": 125
              },
              {
                "function": "info",
                "line": 126
              },
              {
                "function": "info",
                "line": 130
              },
              {
                "function": "info",
                "line": 134
              },
              {
                "function": "info",
                "line": 136
              },
              {
                "function": "info",
                "line": 137
              },
              {
                "function": "info",
                "line": 138
              },
              {
                "function": "info",
                "line": 143
              },
              {
                "function": "isoformat",
                "line": 180
              },
              {
                "function": "HTTPException",
                "line": 189
              },
              {
                "function": "discover_tools_for_agent",
                "line": 194
              },
              {
                "function": "HTTPException",
                "line": 209
              },
              {
                "function": "items",
                "line": 222
              },
              {
                "function": "HTTPException",
                "line": 231
              },
              {
                "function": "HTTPException",
                "line": 241
              },
              {
                "function": "visualize_graph",
                "line": 245
              },
              {
                "function": "HTTPException",
                "line": 258
              },
              {
                "function": "handle_user_response",
                "line": 261
              },
              {
                "function": "HTTPException",
                "line": 266
              },
              {
                "function": "connect",
                "line": 274
              },
              {
                "function": "str",
                "line": 279
              },
              {
                "function": "now",
                "line": 280
              },
              {
                "function": "info",
                "line": 289
              },
              {
                "function": "info",
                "line": 297
              },
              {
                "function": "get",
                "line": 457
              },
              {
                "function": "get",
                "line": 457
              },
              {
                "function": "error",
                "line": 467
              },
              {
                "function": "send_json",
                "line": 480
              },
              {
                "function": "info",
                "line": 488
              },
              {
                "function": "info",
                "line": 489
              },
              {
                "function": "info",
                "line": 490
              },
              {
                "function": "get",
                "line": 503
              },
              {
                "function": "append",
                "line": 529
              },
              {
                "function": "append",
                "line": 534
              },
              {
                "function": "HTTPException",
                "line": 556
              },
              {
                "function": "HTTPException",
                "line": 569
              },
              {
                "function": "HTTPException",
                "line": 580
              },
              {
                "function": "socket",
                "line": 589
              },
              {
                "function": "connect_ex",
                "line": 590
              },
              {
                "function": "close",
                "line": 591
              },
              {
                "function": "abspath",
                "line": 20
              },
              {
                "function": "accept",
                "line": 61
              },
              {
                "function": "now",
                "line": 64
              },
              {
                "function": "now",
                "line": 65
              },
              {
                "function": "info",
                "line": 73
              },
              {
                "function": "keys",
                "line": 86
              },
              {
                "function": "disconnect",
                "line": 94
              },
              {
                "function": "error",
                "line": 122
              },
              {
                "function": "RuntimeError",
                "line": 123
              },
              {
                "function": "error",
                "line": 147
              },
              {
                "function": "error",
                "line": 148
              },
              {
                "function": "list_all_tools",
                "line": 201
              },
              {
                "function": "HTTPException",
                "line": 219
              },
              {
                "function": "get_memory_stats",
                "line": 223
              },
              {
                "function": "HTTPException",
                "line": 251
              },
              {
                "function": "uuid4",
                "line": 279
              },
              {
                "function": "send_json",
                "line": 290
              },
              {
                "function": "get",
                "line": 302
              },
              {
                "function": "info",
                "line": 304
              },
              {
                "function": "info",
                "line": 305
              },
              {
                "function": "info",
                "line": 306
              },
              {
                "function": "disconnect",
                "line": 443
              },
              {
                "function": "info",
                "line": 446
              },
              {
                "function": "error",
                "line": 449
              },
              {
                "function": "disconnect",
                "line": 450
              },
              {
                "function": "send_json",
                "line": 460
              },
              {
                "function": "send_json",
                "line": 468
              },
              {
                "function": "execute",
                "line": 491
              },
              {
                "function": "send_json",
                "line": 514
              },
              {
                "function": "error",
                "line": 542
              },
              {
                "function": "error",
                "line": 543
              },
              {
                "function": "now",
                "line": 79
              },
              {
                "function": "now",
                "line": 180
              },
              {
                "function": "get_tool_schema",
                "line": 197
              },
              {
                "function": "get_memory_stats",
                "line": 216
              },
              {
                "function": "receive_json",
                "line": 301
              },
              {
                "function": "info",
                "line": 309
              },
              {
                "function": "get",
                "line": 478
              },
              {
                "function": "get",
                "line": 478
              },
              {
                "function": "get",
                "line": 479
              },
              {
                "function": "isoformat",
                "line": 532
              },
              {
                "function": "get",
                "line": 536
              },
              {
                "function": "isoformat",
                "line": 537
              },
              {
                "function": "send_json",
                "line": 544
              },
              {
                "function": "send_json",
                "line": 78
              },
              {
                "function": "error",
                "line": 81
              },
              {
                "function": "disconnect",
                "line": 82
              },
              {
                "function": "send_json",
                "line": 88
              },
              {
                "function": "error",
                "line": 90
              },
              {
                "function": "append",
                "line": 91
              },
              {
                "function": "len",
                "line": 130
              },
              {
                "function": "str",
                "line": 251
              },
              {
                "function": "uuid4",
                "line": 272
              },
              {
                "function": "get",
                "line": 308
              },
              {
                "function": "get",
                "line": 308
              },
              {
                "function": "handle_chat_message",
                "line": 312
              },
              {
                "function": "get",
                "line": 316
              },
              {
                "function": "get",
                "line": 317
              },
              {
                "function": "get",
                "line": 318
              },
              {
                "function": "info",
                "line": 320
              },
              {
                "function": "type",
                "line": 474
              },
              {
                "function": "get",
                "line": 490
              },
              {
                "function": "get",
                "line": 495
              },
              {
                "function": "get",
                "line": 496
              },
              {
                "function": "get",
                "line": 517
              },
              {
                "function": "type",
                "line": 126
              },
              {
                "function": "format_exc",
                "line": 148
              },
              {
                "function": "list",
                "line": 306
              },
              {
                "function": "error",
                "line": 323
              },
              {
                "function": "error",
                "line": 331
              },
              {
                "function": "hasattr",
                "line": 340
              },
              {
                "function": "items",
                "line": 343
              },
              {
                "function": "error",
                "line": 414
              },
              {
                "function": "info",
                "line": 423
              },
              {
                "function": "get",
                "line": 498
              },
              {
                "function": "send_json",
                "line": 506
              },
              {
                "function": "get",
                "line": 522
              },
              {
                "function": "get",
                "line": 523
              },
              {
                "function": "get",
                "line": 524
              },
              {
                "function": "now",
                "line": 532
              },
              {
                "function": "now",
                "line": 537
              },
              {
                "function": "format_exc",
                "line": 543
              },
              {
                "function": "format_exc",
                "line": 547
              },
              {
                "function": "keys",
                "line": 306
              },
              {
                "function": "send_json",
                "line": 324
              },
              {
                "function": "send_json",
                "line": 332
              },
              {
                "function": "info",
                "line": 349
              },
              {
                "function": "info",
                "line": 360
              },
              {
                "function": "error",
                "line": 408
              },
              {
                "function": "send_json",
                "line": 415
              },
              {
                "function": "get",
                "line": 422
              },
              {
                "function": "get",
                "line": 422
              },
              {
                "function": "get",
                "line": 521
              },
              {
                "function": "total_seconds",
                "line": 519
              },
              {
                "function": "send_json",
                "line": 352
              },
              {
                "function": "update_state",
                "line": 365
              },
              {
                "function": "info",
                "line": 376
              },
              {
                "function": "info",
                "line": 379
              },
              {
                "function": "info",
                "line": 399
              },
              {
                "function": "send_json",
                "line": 409
              },
              {
                "function": "send_json",
                "line": 428
              },
              {
                "function": "str",
                "line": 546
              },
              {
                "function": "ainvoke",
                "line": 380
              },
              {
                "function": "send_json",
                "line": 389
              },
              {
                "function": "error",
                "line": 402
              },
              {
                "function": "send_json",
                "line": 434
              },
              {
                "function": "send_json",
                "line": 437
              },
              {
                "function": "send_json",
                "line": 403
              },
              {
                "function": "get",
                "line": 392
              },
              {
                "function": "get",
                "line": 394
              },
              {
                "function": "isoformat",
                "line": 395
              },
              {
                "function": "now",
                "line": 395
              },
              {
                "function": "str",
                "line": 405
              }
            ]
          },
          "backend/api/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [],
            "calls": []
          },
          "backend/api/models_endpoint.py": {
            "functions": [
              {
                "name": "load_models_from_config",
                "line": 19,
                "async": false,
                "calls": [
                  "safe_load",
                  "append",
                  "get",
                  "open",
                  "join",
                  "dirname",
                  "items",
                  "lower",
                  "error"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/api/models_endpoint.py"
              },
              {
                "name": "load_models_from_available_json",
                "line": 83,
                "async": false,
                "calls": [
                  "warning",
                  "open",
                  "join",
                  "dirname",
                  "load"
                ],
                "parameters": [],
                "decorators": [],
                "file": "backend/api/models_endpoint.py"
              },
              {
                "name": "get_model_recommendations",
                "line": 102,
                "async": false,
                "calls": [
                  "replace",
                  "lower",
                  "sorted"
                ],
                "parameters": [
                  "provider",
                  "models"
                ],
                "decorators": [],
                "file": "backend/api/models_endpoint.py"
              },
              {
                "name": "get_latest_models",
                "line": 143,
                "async": false,
                "calls": [
                  "lower",
                  "sorted"
                ],
                "parameters": [
                  "models",
                  "limit"
                ],
                "decorators": [],
                "file": "backend/api/models_endpoint.py"
              }
            ],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "fastapi",
                "names": [
                  "APIRouter",
                  "HTTPException"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "yaml",
                "names": [
                  "yaml"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "List",
                  "Optional"
                ],
                "line": 11
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 12
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 14
              },
              {
                "function": "APIRouter",
                "line": 17
              },
              {
                "function": "get",
                "line": 149
              },
              {
                "function": "get",
                "line": 184
              },
              {
                "function": "get",
                "line": 212
              },
              {
                "function": "get",
                "line": 240
              },
              {
                "function": "get",
                "line": 268
              },
              {
                "function": "post",
                "line": 294
              },
              {
                "function": "get",
                "line": 310
              },
              {
                "function": "join",
                "line": 21
              },
              {
                "function": "join",
                "line": 85
              },
              {
                "function": "sorted",
                "line": 146
              },
              {
                "function": "dirname",
                "line": 21
              },
              {
                "function": "dirname",
                "line": 85
              },
              {
                "function": "load_models_from_config",
                "line": 154
              },
              {
                "function": "load_models_from_available_json",
                "line": 155
              },
              {
                "function": "load_models_from_config",
                "line": 188
              },
              {
                "function": "load_models_from_available_json",
                "line": 189
              },
              {
                "function": "list",
                "line": 198
              },
              {
                "function": "load_models_from_config",
                "line": 216
              },
              {
                "function": "load_models_from_available_json",
                "line": 217
              },
              {
                "function": "list",
                "line": 226
              },
              {
                "function": "load_models_from_config",
                "line": 244
              },
              {
                "function": "load_models_from_available_json",
                "line": 245
              },
              {
                "function": "list",
                "line": 254
              },
              {
                "function": "load_models_from_config",
                "line": 272
              },
              {
                "function": "items",
                "line": 275
              },
              {
                "function": "info",
                "line": 581
              },
              {
                "function": "dirname",
                "line": 21
              },
              {
                "function": "open",
                "line": 24
              },
              {
                "function": "safe_load",
                "line": 25
              },
              {
                "function": "items",
                "line": 30
              },
              {
                "function": "items",
                "line": 63
              },
              {
                "function": "error",
                "line": 80
              },
              {
                "function": "dirname",
                "line": 85
              },
              {
                "function": "open",
                "line": 88
              },
              {
                "function": "load",
                "line": 89
              },
              {
                "function": "warning",
                "line": 99
              },
              {
                "function": "sorted",
                "line": 111
              },
              {
                "function": "list",
                "line": 171
              },
              {
                "function": "isoformat",
                "line": 174
              },
              {
                "function": "list",
                "line": 175
              },
              {
                "function": "sum",
                "line": 176
              },
              {
                "function": "error",
                "line": 181
              },
              {
                "function": "HTTPException",
                "line": 182
              },
              {
                "function": "extend",
                "line": 194
              },
              {
                "function": "extend",
                "line": 196
              },
              {
                "function": "set",
                "line": 198
              },
              {
                "function": "get_latest_models",
                "line": 203
              },
              {
                "function": "get_model_recommendations",
                "line": 204
              },
              {
                "function": "len",
                "line": 205
              },
              {
                "function": "error",
                "line": 209
              },
              {
                "function": "HTTPException",
                "line": 210
              },
              {
                "function": "extend",
                "line": 222
              },
              {
                "function": "extend",
                "line": 224
              },
              {
                "function": "set",
                "line": 226
              },
              {
                "function": "get_latest_models",
                "line": 231
              },
              {
                "function": "get_model_recommendations",
                "line": 232
              },
              {
                "function": "len",
                "line": 233
              },
              {
                "function": "error",
                "line": 237
              },
              {
                "function": "HTTPException",
                "line": 238
              },
              {
                "function": "extend",
                "line": 250
              },
              {
                "function": "extend",
                "line": 252
              },
              {
                "function": "set",
                "line": 254
              },
              {
                "function": "get_latest_models",
                "line": 259
              },
              {
                "function": "get_model_recommendations",
                "line": 260
              },
              {
                "function": "len",
                "line": 261
              },
              {
                "function": "error",
                "line": 265
              },
              {
                "function": "HTTPException",
                "line": 266
              },
              {
                "function": "len",
                "line": 287
              },
              {
                "function": "error",
                "line": 291
              },
              {
                "function": "HTTPException",
                "line": 292
              },
              {
                "function": "isoformat",
                "line": 302
              },
              {
                "function": "error",
                "line": 307
              },
              {
                "function": "HTTPException",
                "line": 308
              },
              {
                "function": "error",
                "line": 585
              },
              {
                "function": "HTTPException",
                "line": 586
              },
              {
                "function": "get",
                "line": 31
              },
              {
                "function": "dirname",
                "line": 85
              },
              {
                "function": "lower",
                "line": 146
              },
              {
                "function": "extend",
                "line": 164
              },
              {
                "function": "extend",
                "line": 168
              },
              {
                "function": "set",
                "line": 171
              },
              {
                "function": "keys",
                "line": 175
              },
              {
                "function": "get",
                "line": 68
              },
              {
                "function": "lower",
                "line": 108
              },
              {
                "function": "now",
                "line": 174
              },
              {
                "function": "len",
                "line": 176
              },
              {
                "function": "now",
                "line": 302
              },
              {
                "function": "lower",
                "line": 34
              },
              {
                "function": "append",
                "line": 48
              },
              {
                "function": "append",
                "line": 70
              },
              {
                "function": "replace",
                "line": 111
              },
              {
                "function": "lower",
                "line": 117
              },
              {
                "function": "lower",
                "line": 122
              },
              {
                "function": "values",
                "line": 176
              },
              {
                "function": "get",
                "line": 282
              },
              {
                "function": "lower",
                "line": 36
              },
              {
                "function": "lower",
                "line": 125
              },
              {
                "function": "lower",
                "line": 126
              },
              {
                "function": "str",
                "line": 182
              },
              {
                "function": "str",
                "line": 210
              },
              {
                "function": "str",
                "line": 238
              },
              {
                "function": "str",
                "line": 266
              },
              {
                "function": "str",
                "line": 292
              },
              {
                "function": "str",
                "line": 308
              },
              {
                "function": "str",
                "line": 586
              },
              {
                "function": "get",
                "line": 72
              },
              {
                "function": "get",
                "line": 73
              },
              {
                "function": "lower",
                "line": 111
              },
              {
                "function": "lower",
                "line": 38
              },
              {
                "function": "lower",
                "line": 38
              },
              {
                "function": "append",
                "line": 58
              }
            ]
          },
          "backend/services/diagram_service.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 38,
                "async": false,
                "calls": [
                  "mkdir",
                  "info",
                  "Path"
                ],
                "parameters": [
                  "self",
                  "output_dir"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "generate_flowchart",
                "line": 51,
                "async": false,
                "calls": [
                  "warning",
                  "_generate_ascii_flowchart",
                  "_generate_mermaid_flowchart"
                ],
                "parameters": [
                  "self",
                  "nodes",
                  "format"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "generate_sequence_diagram",
                "line": 71,
                "async": false,
                "calls": [
                  "_generate_mermaid_sequence",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "interactions",
                  "format"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "generate_class_diagram",
                "line": 89,
                "async": false,
                "calls": [
                  "_generate_mermaid_class",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "classes",
                  "format"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "generate_architecture_diagram",
                "line": 107,
                "async": false,
                "calls": [
                  "_generate_mermaid_architecture",
                  "warning"
                ],
                "parameters": [
                  "self",
                  "components",
                  "format"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "_generate_mermaid_flowchart",
                "line": 125,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "nodes"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "_generate_mermaid_sequence",
                "line": 151,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "interactions"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "_generate_mermaid_class",
                "line": 168,
                "async": false,
                "calls": [
                  "join",
                  "append",
                  "get"
                ],
                "parameters": [
                  "self",
                  "classes"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "_generate_mermaid_architecture",
                "line": 201,
                "async": false,
                "calls": [
                  "isinstance",
                  "append",
                  "get",
                  "join",
                  "replace"
                ],
                "parameters": [
                  "self",
                  "components"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "_generate_ascii_flowchart",
                "line": 234,
                "async": false,
                "calls": [
                  "append",
                  "get",
                  "join",
                  "len",
                  "enumerate"
                ],
                "parameters": [
                  "self",
                  "nodes"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "save_diagram",
                "line": 260,
                "async": false,
                "calls": [
                  "info",
                  "write",
                  "open",
                  "warning",
                  "error"
                ],
                "parameters": [
                  "self",
                  "diagram",
                  "filename"
                ],
                "decorators": [],
                "file": "backend/services/diagram_service.py"
              }
            ],
            "classes": [
              {
                "name": "DiagramFormat",
                "line": 14,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "DiagramType",
                "line": 22,
                "methods": [],
                "bases": [
                  "Enum"
                ],
                "file": "backend/services/diagram_service.py"
              },
              {
                "name": "DiagramService",
                "line": 32,
                "methods": [
                  "__init__",
                  "generate_flowchart",
                  "generate_sequence_diagram",
                  "generate_class_diagram",
                  "generate_architecture_diagram",
                  "_generate_mermaid_flowchart",
                  "_generate_mermaid_sequence",
                  "_generate_mermaid_class",
                  "_generate_mermaid_architecture",
                  "_generate_ascii_flowchart",
                  "save_diagram"
                ],
                "bases": [],
                "file": "backend/services/diagram_service.py"
              }
            ],
            "imports": [
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "enum",
                "names": [
                  "Enum"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "info",
                "line": 49
              },
              {
                "function": "append",
                "line": 148
              },
              {
                "function": "join",
                "line": 149
              },
              {
                "function": "append",
                "line": 165
              },
              {
                "function": "join",
                "line": 166
              },
              {
                "function": "append",
                "line": 198
              },
              {
                "function": "join",
                "line": 199
              },
              {
                "function": "append",
                "line": 231
              },
              {
                "function": "join",
                "line": 232
              },
              {
                "function": "enumerate",
                "line": 238
              },
              {
                "function": "join",
                "line": 258
              },
              {
                "function": "Path",
                "line": 45
              },
              {
                "function": "mkdir",
                "line": 47
              },
              {
                "function": "_generate_mermaid_flowchart",
                "line": 64
              },
              {
                "function": "_generate_mermaid_sequence",
                "line": 84
              },
              {
                "function": "warning",
                "line": 86
              },
              {
                "function": "_generate_mermaid_sequence",
                "line": 87
              },
              {
                "function": "_generate_mermaid_class",
                "line": 102
              },
              {
                "function": "warning",
                "line": 104
              },
              {
                "function": "_generate_mermaid_class",
                "line": 105
              },
              {
                "function": "_generate_mermaid_architecture",
                "line": 120
              },
              {
                "function": "warning",
                "line": 122
              },
              {
                "function": "_generate_mermaid_architecture",
                "line": 123
              },
              {
                "function": "get",
                "line": 130
              },
              {
                "function": "get",
                "line": 131
              },
              {
                "function": "get",
                "line": 132
              },
              {
                "function": "get",
                "line": 156
              },
              {
                "function": "get",
                "line": 157
              },
              {
                "function": "get",
                "line": 158
              },
              {
                "function": "append",
                "line": 160
              },
              {
                "function": "get",
                "line": 173
              },
              {
                "function": "append",
                "line": 174
              },
              {
                "function": "get",
                "line": 177
              },
              {
                "function": "get",
                "line": 181
              },
              {
                "function": "append",
                "line": 184
              },
              {
                "function": "get",
                "line": 187
              },
              {
                "function": "get",
                "line": 207
              },
              {
                "function": "get",
                "line": 208
              },
              {
                "function": "get",
                "line": 209
              },
              {
                "function": "get",
                "line": 220
              },
              {
                "function": "get",
                "line": 222
              },
              {
                "function": "get",
                "line": 239
              },
              {
                "function": "get",
                "line": 240
              },
              {
                "function": "warning",
                "line": 272
              },
              {
                "function": "info",
                "line": 281
              },
              {
                "function": "_generate_ascii_flowchart",
                "line": 66
              },
              {
                "function": "warning",
                "line": 68
              },
              {
                "function": "_generate_mermaid_flowchart",
                "line": 69
              },
              {
                "function": "append",
                "line": 136
              },
              {
                "function": "append",
                "line": 146
              },
              {
                "function": "append",
                "line": 163
              },
              {
                "function": "append",
                "line": 178
              },
              {
                "function": "append",
                "line": 182
              },
              {
                "function": "get",
                "line": 188
              },
              {
                "function": "get",
                "line": 189
              },
              {
                "function": "replace",
                "line": 207
              },
              {
                "function": "append",
                "line": 212
              },
              {
                "function": "replace",
                "line": 220
              },
              {
                "function": "len",
                "line": 243
              },
              {
                "function": "append",
                "line": 245
              },
              {
                "function": "append",
                "line": 246
              },
              {
                "function": "append",
                "line": 247
              },
              {
                "function": "append",
                "line": 249
              },
              {
                "function": "append",
                "line": 250
              },
              {
                "function": "append",
                "line": 251
              },
              {
                "function": "append",
                "line": 255
              },
              {
                "function": "append",
                "line": 256
              },
              {
                "function": "open",
                "line": 278
              },
              {
                "function": "write",
                "line": 279
              },
              {
                "function": "error",
                "line": 284
              },
              {
                "function": "append",
                "line": 138
              },
              {
                "function": "append",
                "line": 192
              },
              {
                "function": "append",
                "line": 214
              },
              {
                "function": "append",
                "line": 216
              },
              {
                "function": "isinstance",
                "line": 223
              },
              {
                "function": "get",
                "line": 223
              },
              {
                "function": "isinstance",
                "line": 224
              },
              {
                "function": "get",
                "line": 224
              },
              {
                "function": "append",
                "line": 227
              },
              {
                "function": "append",
                "line": 229
              },
              {
                "function": "len",
                "line": 254
              },
              {
                "function": "append",
                "line": 140
              },
              {
                "function": "append",
                "line": 142
              },
              {
                "function": "append",
                "line": 194
              },
              {
                "function": "append",
                "line": 196
              },
              {
                "function": "get",
                "line": 207
              },
              {
                "function": "get",
                "line": 220
              }
            ]
          },
          "backend/services/__init__.py": {
            "functions": [],
            "classes": [],
            "imports": [
              {
                "type": "from_import",
                "module": "project_cache",
                "names": [
                  "ProjectCache"
                ],
                "line": 5
              },
              {
                "type": "from_import",
                "module": "smart_file_watcher",
                "names": [
                  "SmartFileWatcher"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "code_search",
                "names": [
                  "LightweightCodeSearch",
                  "SearchResult"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "diagram_service",
                "names": [
                  "DiagramService",
                  "DiagramFormat",
                  "DiagramType"
                ],
                "line": 8
              }
            ],
            "calls": []
          },
          "backend/services/project_cache.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 22,
                "async": false,
                "calls": [
                  "mkdir",
                  "info",
                  "timedelta",
                  "Path",
                  "error"
                ],
                "parameters": [
                  "self",
                  "project_root",
                  "cache_duration_hours"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "_get_cache_key",
                "line": 43,
                "async": false,
                "calls": [
                  "encode",
                  "hexdigest",
                  "md5"
                ],
                "parameters": [
                  "self",
                  "key"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "_get_cache_path",
                "line": 49,
                "async": false,
                "calls": [
                  "_get_cache_key"
                ],
                "parameters": [
                  "self",
                  "key"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "get",
                "line": 53,
                "async": false,
                "calls": [
                  "now",
                  "open",
                  "warning",
                  "debug",
                  "fromisoformat",
                  "load",
                  "unlink",
                  "exists",
                  "_get_cache_path"
                ],
                "parameters": [
                  "self",
                  "key"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "set",
                "line": 86,
                "async": false,
                "calls": [
                  "dump",
                  "now",
                  "open",
                  "warning",
                  "debug",
                  "isoformat",
                  "_get_cache_path"
                ],
                "parameters": [
                  "self",
                  "key",
                  "value"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "invalidate",
                "line": 111,
                "async": false,
                "calls": [
                  "debug",
                  "exists",
                  "_get_cache_path",
                  "unlink"
                ],
                "parameters": [
                  "self",
                  "key"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "clear_all",
                "line": 124,
                "async": false,
                "calls": [
                  "glob",
                  "info",
                  "unlink"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              },
              {
                "name": "get_stats",
                "line": 130,
                "async": false,
                "calls": [
                  "list",
                  "glob",
                  "sum",
                  "stat",
                  "str",
                  "len",
                  "round"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/project_cache.py"
              }
            ],
            "classes": [
              {
                "name": "ProjectCache",
                "line": 16,
                "methods": [
                  "__init__",
                  "_get_cache_key",
                  "_get_cache_path",
                  "get",
                  "set",
                  "invalidate",
                  "clear_all",
                  "get_stats"
                ],
                "bases": [],
                "file": "backend/services/project_cache.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "json",
                "names": [
                  "json"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "hashlib",
                "names": [
                  "hashlib"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Any",
                  "Dict",
                  "Optional"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime",
                  "timedelta"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 11
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 13
              },
              {
                "function": "Path",
                "line": 30
              },
              {
                "function": "timedelta",
                "line": 32
              },
              {
                "function": "hexdigest",
                "line": 46
              },
              {
                "function": "_get_cache_path",
                "line": 63
              },
              {
                "function": "_get_cache_path",
                "line": 94
              },
              {
                "function": "_get_cache_path",
                "line": 118
              },
              {
                "function": "exists",
                "line": 120
              },
              {
                "function": "glob",
                "line": 126
              },
              {
                "function": "info",
                "line": 128
              },
              {
                "function": "list",
                "line": 132
              },
              {
                "function": "sum",
                "line": 133
              },
              {
                "function": "mkdir",
                "line": 37
              },
              {
                "function": "info",
                "line": 38
              },
              {
                "function": "_get_cache_key",
                "line": 51
              },
              {
                "function": "exists",
                "line": 65
              },
              {
                "function": "fromisoformat",
                "line": 73
              },
              {
                "function": "debug",
                "line": 79
              },
              {
                "function": "debug",
                "line": 106
              },
              {
                "function": "unlink",
                "line": 121
              },
              {
                "function": "debug",
                "line": 122
              },
              {
                "function": "unlink",
                "line": 127
              },
              {
                "function": "glob",
                "line": 132
              },
              {
                "function": "len",
                "line": 136
              },
              {
                "function": "round",
                "line": 138
              },
              {
                "function": "str",
                "line": 139
              },
              {
                "function": "error",
                "line": 40
              },
              {
                "function": "md5",
                "line": 46
              },
              {
                "function": "open",
                "line": 69
              },
              {
                "function": "load",
                "line": 70
              },
              {
                "function": "debug",
                "line": 75
              },
              {
                "function": "unlink",
                "line": 76
              },
              {
                "function": "warning",
                "line": 83
              },
              {
                "function": "isoformat",
                "line": 98
              },
              {
                "function": "open",
                "line": 103
              },
              {
                "function": "dump",
                "line": 104
              },
              {
                "function": "warning",
                "line": 109
              },
              {
                "function": "encode",
                "line": 46
              },
              {
                "function": "now",
                "line": 74
              },
              {
                "function": "stat",
                "line": 133
              },
              {
                "function": "now",
                "line": 98
              }
            ]
          },
          "backend/services/smart_file_watcher.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 21,
                "async": false,
                "calls": [
                  "info",
                  "Path"
                ],
                "parameters": [
                  "self",
                  "project_root",
                  "cache",
                  "debounce_seconds"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "watch_file",
                "line": 38,
                "async": false,
                "calls": [
                  "add",
                  "_resolve_path",
                  "warning",
                  "stat",
                  "debug",
                  "set",
                  "exists"
                ],
                "parameters": [
                  "self",
                  "file_path",
                  "callback"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "watch_directory",
                "line": 64,
                "async": false,
                "calls": [
                  "glob",
                  "info",
                  "is_dir",
                  "_resolve_path",
                  "is_file",
                  "warning",
                  "watch_file",
                  "str"
                ],
                "parameters": [
                  "self",
                  "dir_path",
                  "pattern",
                  "callback"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "check_changes",
                "line": 86,
                "async": false,
                "calls": [
                  "list",
                  "info",
                  "fromtimestamp",
                  "error",
                  "warning",
                  "stat",
                  "str",
                  "items",
                  "callback",
                  "exists"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "stop_watching",
                "line": 120,
                "async": false,
                "calls": [
                  "_resolve_path",
                  "debug"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "stop_all",
                "line": 137,
                "async": false,
                "calls": [
                  "info",
                  "clear"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "get_watched_files",
                "line": 144,
                "async": false,
                "calls": [
                  "str",
                  "keys"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "_resolve_path",
                "line": 148,
                "async": false,
                "calls": [
                  "resolve",
                  "is_absolute",
                  "Path"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "start",
                "line": 155,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "stop",
                "line": 164,
                "async": false,
                "calls": [
                  "info"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              },
              {
                "name": "start_monitoring",
                "line": 169,
                "async": false,
                "calls": [
                  "info",
                  "sleep",
                  "check_changes"
                ],
                "parameters": [
                  "self",
                  "interval_seconds"
                ],
                "decorators": [],
                "file": "backend/services/smart_file_watcher.py"
              }
            ],
            "classes": [
              {
                "name": "SmartFileWatcher",
                "line": 15,
                "methods": [
                  "__init__",
                  "watch_file",
                  "watch_directory",
                  "check_changes",
                  "stop_watching",
                  "stop_all",
                  "get_watched_files",
                  "_resolve_path",
                  "start",
                  "stop",
                  "start_monitoring"
                ],
                "bases": [],
                "file": "backend/services/smart_file_watcher.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Set",
                  "Optional",
                  "Callable"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "datetime",
                "names": [
                  "datetime"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 10
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 12
              },
              {
                "function": "Path",
                "line": 30
              },
              {
                "function": "info",
                "line": 36
              },
              {
                "function": "_resolve_path",
                "line": 46
              },
              {
                "function": "debug",
                "line": 62
              },
              {
                "function": "_resolve_path",
                "line": 74
              },
              {
                "function": "glob",
                "line": 80
              },
              {
                "function": "info",
                "line": 84
              },
              {
                "function": "list",
                "line": 95
              },
              {
                "function": "_resolve_path",
                "line": 127
              },
              {
                "function": "debug",
                "line": 135
              },
              {
                "function": "clear",
                "line": 139
              },
              {
                "function": "clear",
                "line": 140
              },
              {
                "function": "info",
                "line": 142
              },
              {
                "function": "Path",
                "line": 150
              },
              {
                "function": "resolve",
                "line": 153
              },
              {
                "function": "info",
                "line": 162
              },
              {
                "function": "info",
                "line": 167
              },
              {
                "function": "info",
                "line": 177
              },
              {
                "function": "exists",
                "line": 48
              },
              {
                "function": "warning",
                "line": 49
              },
              {
                "function": "stat",
                "line": 53
              },
              {
                "function": "add",
                "line": 60
              },
              {
                "function": "is_dir",
                "line": 76
              },
              {
                "function": "warning",
                "line": 77
              },
              {
                "function": "is_file",
                "line": 81
              },
              {
                "function": "items",
                "line": 95
              },
              {
                "function": "str",
                "line": 146
              },
              {
                "function": "is_absolute",
                "line": 151
              },
              {
                "function": "set",
                "line": 59
              },
              {
                "function": "watch_file",
                "line": 82
              },
              {
                "function": "exists",
                "line": 96
              },
              {
                "function": "warning",
                "line": 97
              },
              {
                "function": "stat",
                "line": 101
              },
              {
                "function": "fromtimestamp",
                "line": 105
              },
              {
                "function": "info",
                "line": 116
              },
              {
                "function": "keys",
                "line": 146
              },
              {
                "function": "check_changes",
                "line": 181
              },
              {
                "function": "sleep",
                "line": 182
              },
              {
                "function": "info",
                "line": 184
              },
              {
                "function": "str",
                "line": 82
              },
              {
                "function": "str",
                "line": 105
              },
              {
                "function": "callback",
                "line": 112
              },
              {
                "function": "str",
                "line": 112
              },
              {
                "function": "error",
                "line": 114
              }
            ]
          },
          "backend/services/code_search.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 17,
                "async": false,
                "calls": [],
                "parameters": [
                  "self",
                  "file_path",
                  "line_number",
                  "line_content",
                  "context_before",
                  "context_after"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "to_dict",
                "line": 25,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "__init__",
                "line": 42,
                "async": false,
                "calls": [
                  "info",
                  "Path"
                ],
                "parameters": [
                  "self",
                  "project_root"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "search",
                "line": 57,
                "async": false,
                "calls": [
                  "_find_files",
                  "info",
                  "warning",
                  "_search_file",
                  "extend",
                  "compile",
                  "len",
                  "error"
                ],
                "parameters": [
                  "self",
                  "pattern",
                  "file_pattern",
                  "case_sensitive",
                  "context_lines",
                  "max_results"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "search_definition",
                "line": 99,
                "async": false,
                "calls": [
                  "get",
                  "search"
                ],
                "parameters": [
                  "self",
                  "symbol_name",
                  "symbol_type",
                  "file_pattern"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "search_usage",
                "line": 122,
                "async": false,
                "calls": [
                  "escape",
                  "search"
                ],
                "parameters": [
                  "self",
                  "symbol_name",
                  "file_pattern"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "_find_files",
                "line": 137,
                "async": false,
                "calls": [
                  "glob",
                  "append",
                  "is_file",
                  "_should_ignore"
                ],
                "parameters": [
                  "self",
                  "file_pattern"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "_should_ignore",
                "line": 151,
                "async": false,
                "calls": [
                  "match"
                ],
                "parameters": [
                  "self",
                  "file_path"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "_search_file",
                "line": 167,
                "async": false,
                "calls": [
                  "append",
                  "max",
                  "warning",
                  "open",
                  "str",
                  "min",
                  "rstrip",
                  "len",
                  "enumerate",
                  "relative_to",
                  "search",
                  "SearchResult",
                  "readlines"
                ],
                "parameters": [
                  "self",
                  "file_path",
                  "regex",
                  "context_lines",
                  "max_results"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "add_ignore_pattern",
                "line": 202,
                "async": false,
                "calls": [
                  "add"
                ],
                "parameters": [
                  "self",
                  "pattern"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "remove_ignore_pattern",
                "line": 206,
                "async": false,
                "calls": [
                  "discard"
                ],
                "parameters": [
                  "self",
                  "pattern"
                ],
                "decorators": [],
                "file": "backend/services/code_search.py"
              }
            ],
            "classes": [
              {
                "name": "SearchResult",
                "line": 14,
                "methods": [
                  "__init__",
                  "to_dict"
                ],
                "bases": [],
                "file": "backend/services/code_search.py"
              },
              {
                "name": "LightweightCodeSearch",
                "line": 36,
                "methods": [
                  "__init__",
                  "search",
                  "search_definition",
                  "search_usage",
                  "_find_files",
                  "_should_ignore",
                  "_search_file",
                  "add_ignore_pattern",
                  "remove_ignore_pattern"
                ],
                "bases": [],
                "file": "backend/services/code_search.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "re",
                "names": [
                  "re"
                ],
                "line": 6
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "List",
                  "Dict",
                  "Any",
                  "Optional",
                  "Set"
                ],
                "line": 8
              },
              {
                "type": "import",
                "module": "logging",
                "names": [
                  "logging"
                ],
                "line": 9
              }
            ],
            "calls": [
              {
                "function": "getLogger",
                "line": 11
              },
              {
                "function": "Path",
                "line": 49
              },
              {
                "function": "info",
                "line": 55
              },
              {
                "function": "_find_files",
                "line": 83
              },
              {
                "function": "info",
                "line": 96
              },
              {
                "function": "get",
                "line": 119
              },
              {
                "function": "search",
                "line": 120
              },
              {
                "function": "search",
                "line": 135
              },
              {
                "function": "glob",
                "line": 141
              },
              {
                "function": "add",
                "line": 204
              },
              {
                "function": "discard",
                "line": 208
              },
              {
                "function": "compile",
                "line": 77
              },
              {
                "function": "_should_ignore",
                "line": 143
              },
              {
                "function": "is_file",
                "line": 146
              },
              {
                "function": "enumerate",
                "line": 176
              },
              {
                "function": "error",
                "line": 79
              },
              {
                "function": "len",
                "line": 86
              },
              {
                "function": "extend",
                "line": 90
              },
              {
                "function": "escape",
                "line": 134
              },
              {
                "function": "append",
                "line": 147
              },
              {
                "function": "match",
                "line": 158
              },
              {
                "function": "open",
                "line": 173
              },
              {
                "function": "readlines",
                "line": 174
              },
              {
                "function": "search",
                "line": 180
              },
              {
                "function": "warning",
                "line": 198
              },
              {
                "function": "_search_file",
                "line": 90
              },
              {
                "function": "warning",
                "line": 94
              },
              {
                "function": "len",
                "line": 96
              },
              {
                "function": "len",
                "line": 177
              },
              {
                "function": "max",
                "line": 182
              },
              {
                "function": "min",
                "line": 183
              },
              {
                "function": "SearchResult",
                "line": 188
              },
              {
                "function": "append",
                "line": 195
              },
              {
                "function": "len",
                "line": 183
              },
              {
                "function": "rstrip",
                "line": 185
              },
              {
                "function": "rstrip",
                "line": 186
              },
              {
                "function": "len",
                "line": 91
              },
              {
                "function": "str",
                "line": 189
              },
              {
                "function": "rstrip",
                "line": 191
              },
              {
                "function": "relative_to",
                "line": 189
              }
            ]
          },
          "examples/claude_web_integration_example.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 24,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/claude_web_integration_example.py"
              },
              {
                "name": "start_proxy_server",
                "line": 28,
                "async": false,
                "calls": [
                  "print",
                  "Popen",
                  "sleep",
                  "Path"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/claude_web_integration_example.py"
              },
              {
                "name": "stop_proxy_server",
                "line": 49,
                "async": false,
                "calls": [
                  "terminate",
                  "wait",
                  "print",
                  "kill"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/claude_web_integration_example.py"
              },
              {
                "name": "interactive_mode",
                "line": 222,
                "async": false,
                "calls": [
                  "strip",
                  "create_claude_web_llm",
                  "print",
                  "lower",
                  "generate",
                  "input"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/claude_web_integration_example.py"
              }
            ],
            "classes": [
              {
                "name": "ClaudeWebIntegrationDemo",
                "line": 21,
                "methods": [
                  "__init__",
                  "start_proxy_server",
                  "stop_proxy_server",
                  "interactive_mode"
                ],
                "bases": [],
                "file": "examples/claude_web_integration_example.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "os",
                "names": [
                  "os"
                ],
                "line": 7
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 9
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any"
                ],
                "line": 10
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "ClaudeWebLLM",
                  "create_claude_web_llm"
                ],
                "line": 15
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.fastapi_server",
                "names": [
                  "run_server"
                ],
                "line": 16
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 17
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "signal",
                "names": [
                  "signal"
                ],
                "line": 19
              },
              {
                "type": "import",
                "module": "argparse",
                "names": [
                  "argparse"
                ],
                "line": 261
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 13
              },
              {
                "function": "str",
                "line": 13
              },
              {
                "function": "ArgumentParser",
                "line": 263
              },
              {
                "function": "add_argument",
                "line": 264
              },
              {
                "function": "add_argument",
                "line": 265
              },
              {
                "function": "add_argument",
                "line": 266
              },
              {
                "function": "parse_args",
                "line": 268
              },
              {
                "function": "ClaudeWebIntegrationDemo",
                "line": 270
              },
              {
                "function": "run",
                "line": 310
              },
              {
                "function": "print",
                "line": 30
              },
              {
                "function": "print",
                "line": 64
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "create_claude_web_llm",
                "line": 69
              },
              {
                "function": "get_model_info",
                "line": 72
              },
              {
                "function": "print",
                "line": 73
              },
              {
                "function": "items",
                "line": 74
              },
              {
                "function": "print",
                "line": 80
              },
              {
                "function": "print",
                "line": 93
              },
              {
                "function": "print",
                "line": 94
              },
              {
                "function": "print",
                "line": 95
              },
              {
                "function": "create_claude_web_llm",
                "line": 97
              },
              {
                "function": "print",
                "line": 101
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 115
              },
              {
                "function": "print",
                "line": 116
              },
              {
                "function": "create_claude_web_llm",
                "line": 118
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "print",
                "line": 141
              },
              {
                "function": "print",
                "line": 143
              },
              {
                "function": "print",
                "line": 144
              },
              {
                "function": "print",
                "line": 166
              },
              {
                "function": "print",
                "line": 167
              },
              {
                "function": "print",
                "line": 168
              },
              {
                "function": "print",
                "line": 172
              },
              {
                "function": "print",
                "line": 173
              },
              {
                "function": "print",
                "line": 174
              },
              {
                "function": "create_claude_web_llm",
                "line": 176
              },
              {
                "function": "print",
                "line": 178
              },
              {
                "function": "print",
                "line": 192
              },
              {
                "function": "print",
                "line": 193
              },
              {
                "function": "print",
                "line": 194
              },
              {
                "function": "print",
                "line": 224
              },
              {
                "function": "print",
                "line": 225
              },
              {
                "function": "print",
                "line": 226
              },
              {
                "function": "print",
                "line": 227
              },
              {
                "function": "print",
                "line": 228
              },
              {
                "function": "print",
                "line": 229
              },
              {
                "function": "create_claude_web_llm",
                "line": 231
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "start_proxy_server",
                "line": 274
              },
              {
                "function": "main",
                "line": 310
              },
              {
                "function": "Popen",
                "line": 33
              },
              {
                "function": "sleep",
                "line": 41
              },
              {
                "function": "print",
                "line": 42
              },
              {
                "function": "print",
                "line": 75
              },
              {
                "function": "generate",
                "line": 83
              },
              {
                "function": "print",
                "line": 84
              },
              {
                "function": "print",
                "line": 85
              },
              {
                "function": "print",
                "line": 105
              },
              {
                "function": "print",
                "line": 106
              },
              {
                "function": "print",
                "line": 127
              },
              {
                "function": "astream_generate",
                "line": 184
              },
              {
                "function": "start_proxy_server",
                "line": 197
              },
              {
                "function": "print",
                "line": 198
              },
              {
                "function": "print",
                "line": 209
              },
              {
                "function": "print",
                "line": 210
              },
              {
                "function": "print",
                "line": 211
              },
              {
                "function": "print",
                "line": 212
              },
              {
                "function": "print",
                "line": 213
              },
              {
                "function": "print",
                "line": 214
              },
              {
                "function": "print",
                "line": 215
              },
              {
                "function": "print",
                "line": 216
              },
              {
                "function": "stop_proxy_server",
                "line": 220
              },
              {
                "function": "start_proxy_server",
                "line": 285
              },
              {
                "function": "Path",
                "line": 13
              },
              {
                "function": "print",
                "line": 46
              },
              {
                "function": "terminate",
                "line": 53
              },
              {
                "function": "wait",
                "line": 54
              },
              {
                "function": "print",
                "line": 55
              },
              {
                "function": "print",
                "line": 88
              },
              {
                "function": "print",
                "line": 89
              },
              {
                "function": "agenerate",
                "line": 104
              },
              {
                "function": "print",
                "line": 109
              },
              {
                "function": "print",
                "line": 110
              },
              {
                "function": "generate",
                "line": 131
              },
              {
                "function": "print",
                "line": 132
              },
              {
                "function": "print",
                "line": 185
              },
              {
                "function": "print",
                "line": 188
              },
              {
                "function": "demo_direct_llm_usage",
                "line": 203
              },
              {
                "function": "demo_async_usage",
                "line": 204
              },
              {
                "function": "demo_agent_conversation_tracking",
                "line": 205
              },
              {
                "function": "demo_crewai_integration",
                "line": 206
              },
              {
                "function": "demo_streaming_concept",
                "line": 207
              },
              {
                "function": "strip",
                "line": 235
              },
              {
                "function": "print",
                "line": 276
              },
              {
                "function": "stop_proxy_server",
                "line": 282
              },
              {
                "function": "print",
                "line": 291
              },
              {
                "function": "print",
                "line": 297
              },
              {
                "function": "print",
                "line": 298
              },
              {
                "function": "print",
                "line": 299
              },
              {
                "function": "print",
                "line": 300
              },
              {
                "function": "print",
                "line": 301
              },
              {
                "function": "print",
                "line": 302
              },
              {
                "function": "print",
                "line": 303
              },
              {
                "function": "print",
                "line": 304
              },
              {
                "function": "print",
                "line": 305
              },
              {
                "function": "print",
                "line": 306
              },
              {
                "function": "kill",
                "line": 57
              },
              {
                "function": "wait",
                "line": 58
              },
              {
                "function": "print",
                "line": 135
              },
              {
                "function": "lower",
                "line": 237
              },
              {
                "function": "sleep",
                "line": 278
              },
              {
                "function": "interactive_mode",
                "line": 287
              },
              {
                "function": "stop_proxy_server",
                "line": 289
              },
              {
                "function": "run_full_demo",
                "line": 294
              },
              {
                "function": "input",
                "line": 235
              },
              {
                "function": "lower",
                "line": 239
              },
              {
                "function": "print",
                "line": 240
              },
              {
                "function": "Path",
                "line": 38
              },
              {
                "function": "lower",
                "line": 241
              },
              {
                "function": "print",
                "line": 242
              },
              {
                "function": "print",
                "line": 244
              },
              {
                "function": "print",
                "line": 246
              },
              {
                "function": "generate",
                "line": 248
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "print",
                "line": 251
              }
            ]
          },
          "examples/multi_agent_claude_web_demo.py": {
            "functions": [
              {
                "name": "__init__",
                "line": 24,
                "async": false,
                "calls": [],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/multi_agent_claude_web_demo.py"
              },
              {
                "name": "start_claude_web_server",
                "line": 29,
                "async": false,
                "calls": [
                  "print",
                  "Popen",
                  "sleep",
                  "Path"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/multi_agent_claude_web_demo.py"
              },
              {
                "name": "stop_claude_web_server",
                "line": 50,
                "async": false,
                "calls": [
                  "terminate",
                  "wait",
                  "print",
                  "kill"
                ],
                "parameters": [
                  "self"
                ],
                "decorators": [],
                "file": "examples/multi_agent_claude_web_demo.py"
              }
            ],
            "classes": [
              {
                "name": "MultiAgentClaudeWebDemo",
                "line": 21,
                "methods": [
                  "__init__",
                  "start_claude_web_server",
                  "stop_claude_web_server"
                ],
                "bases": [],
                "file": "examples/multi_agent_claude_web_demo.py"
              }
            ],
            "imports": [
              {
                "type": "import",
                "module": "asyncio",
                "names": [
                  "asyncio"
                ],
                "line": 6
              },
              {
                "type": "import",
                "module": "sys",
                "names": [
                  "sys"
                ],
                "line": 7
              },
              {
                "type": "from_import",
                "module": "pathlib",
                "names": [
                  "Path"
                ],
                "line": 8
              },
              {
                "type": "from_import",
                "module": "typing",
                "names": [
                  "Dict",
                  "Any",
                  "List"
                ],
                "line": 9
              },
              {
                "type": "import",
                "module": "subprocess",
                "names": [
                  "subprocess"
                ],
                "line": 10
              },
              {
                "type": "import",
                "module": "time",
                "names": [
                  "time"
                ],
                "line": 11
              },
              {
                "type": "import",
                "module": "signal",
                "names": [
                  "signal"
                ],
                "line": 12
              },
              {
                "type": "from_import",
                "module": "claude_web_proxy.crewai_integration",
                "names": [
                  "create_claude_web_llm"
                ],
                "line": 17
              },
              {
                "type": "from_import",
                "module": "orchestration.master_dispatcher",
                "names": [
                  "MasterDispatcher"
                ],
                "line": 18
              },
              {
                "type": "import",
                "module": "argparse",
                "names": [
                  "argparse"
                ],
                "line": 301
              }
            ],
            "calls": [
              {
                "function": "append",
                "line": 15
              },
              {
                "function": "str",
                "line": 15
              },
              {
                "function": "ArgumentParser",
                "line": 303
              },
              {
                "function": "add_argument",
                "line": 304
              },
              {
                "function": "add_argument",
                "line": 305
              },
              {
                "function": "add_argument",
                "line": 306
              },
              {
                "function": "add_argument",
                "line": 307
              },
              {
                "function": "parse_args",
                "line": 309
              },
              {
                "function": "MultiAgentClaudeWebDemo",
                "line": 311
              },
              {
                "function": "run",
                "line": 358
              },
              {
                "function": "print",
                "line": 31
              },
              {
                "function": "print",
                "line": 65
              },
              {
                "function": "print",
                "line": 66
              },
              {
                "function": "print",
                "line": 67
              },
              {
                "function": "print",
                "line": 86
              },
              {
                "function": "print",
                "line": 138
              },
              {
                "function": "print",
                "line": 139
              },
              {
                "function": "print",
                "line": 140
              },
              {
                "function": "create_claude_web_llm",
                "line": 142
              },
              {
                "function": "enumerate",
                "line": 171
              },
              {
                "function": "print",
                "line": 189
              },
              {
                "function": "print",
                "line": 190
              },
              {
                "function": "print",
                "line": 191
              },
              {
                "function": "create_claude_web_llm",
                "line": 193
              },
              {
                "function": "print",
                "line": 204
              },
              {
                "function": "print",
                "line": 236
              },
              {
                "function": "print",
                "line": 255
              },
              {
                "function": "print",
                "line": 256
              },
              {
                "function": "print",
                "line": 257
              },
              {
                "function": "start_claude_web_server",
                "line": 314
              },
              {
                "function": "main",
                "line": 358
              },
              {
                "function": "Popen",
                "line": 34
              },
              {
                "function": "sleep",
                "line": 42
              },
              {
                "function": "print",
                "line": 43
              },
              {
                "function": "create_claude_web_llm",
                "line": 71
              },
              {
                "function": "create_claude_web_llm",
                "line": 75
              },
              {
                "function": "create_claude_web_llm",
                "line": 79
              },
              {
                "function": "print",
                "line": 113
              },
              {
                "function": "print",
                "line": 114
              },
              {
                "function": "print",
                "line": 175
              },
              {
                "function": "print",
                "line": 176
              },
              {
                "function": "gather",
                "line": 230
              },
              {
                "function": "isinstance",
                "line": 239
              },
              {
                "function": "start_claude_web_server",
                "line": 260
              },
              {
                "function": "print",
                "line": 261
              },
              {
                "function": "print",
                "line": 265
              },
              {
                "function": "print",
                "line": 273
              },
              {
                "function": "print",
                "line": 274
              },
              {
                "function": "print",
                "line": 275
              },
              {
                "function": "print",
                "line": 277
              },
              {
                "function": "print",
                "line": 278
              },
              {
                "function": "print",
                "line": 279
              },
              {
                "function": "print",
                "line": 280
              },
              {
                "function": "print",
                "line": 281
              },
              {
                "function": "print",
                "line": 283
              },
              {
                "function": "print",
                "line": 284
              },
              {
                "function": "print",
                "line": 285
              },
              {
                "function": "print",
                "line": 286
              },
              {
                "function": "print",
                "line": 287
              },
              {
                "function": "print",
                "line": 289
              },
              {
                "function": "print",
                "line": 290
              },
              {
                "function": "print",
                "line": 291
              },
              {
                "function": "print",
                "line": 292
              },
              {
                "function": "print",
                "line": 293
              },
              {
                "function": "stop_claude_web_server",
                "line": 296
              },
              {
                "function": "start_claude_web_server",
                "line": 321
              },
              {
                "function": "Path",
                "line": 15
              },
              {
                "function": "print",
                "line": 47
              },
              {
                "function": "terminate",
                "line": 54
              },
              {
                "function": "wait",
                "line": 55
              },
              {
                "function": "print",
                "line": 56
              },
              {
                "function": "generate",
                "line": 118
              },
              {
                "function": "print",
                "line": 124
              },
              {
                "function": "print",
                "line": 125
              },
              {
                "function": "generate",
                "line": 179
              },
              {
                "function": "print",
                "line": 180
              },
              {
                "function": "sleep",
                "line": 185
              },
              {
                "function": "time",
                "line": 209
              },
              {
                "function": "get",
                "line": 240
              },
              {
                "function": "get",
                "line": 241
              },
              {
                "function": "print",
                "line": 251
              },
              {
                "function": "sleep",
                "line": 266
              },
              {
                "function": "demonstrate_agent_coordination",
                "line": 269
              },
              {
                "function": "demonstrate_conversation_continuity",
                "line": 270
              },
              {
                "function": "demonstrate_parallel_agent_execution",
                "line": 271
              },
              {
                "function": "stop_claude_web_server",
                "line": 318
              },
              {
                "function": "start_claude_web_server",
                "line": 328
              },
              {
                "function": "kill",
                "line": 58
              },
              {
                "function": "wait",
                "line": 59
              },
              {
                "function": "sleep",
                "line": 128
              },
              {
                "function": "print",
                "line": 131
              },
              {
                "function": "print",
                "line": 183
              },
              {
                "function": "len",
                "line": 204
              },
              {
                "function": "agenerate",
                "line": 210
              },
              {
                "function": "time",
                "line": 211
              },
              {
                "function": "len",
                "line": 236
              },
              {
                "function": "get",
                "line": 244
              },
              {
                "function": "len",
                "line": 245
              },
              {
                "function": "print",
                "line": 246
              },
              {
                "function": "get",
                "line": 248
              },
              {
                "function": "print",
                "line": 249
              },
              {
                "function": "demonstrate_agent_coordination",
                "line": 316
              },
              {
                "function": "stop_claude_web_server",
                "line": 325
              },
              {
                "function": "print",
                "line": 338
              },
              {
                "function": "print",
                "line": 339
              },
              {
                "function": "print",
                "line": 340
              },
              {
                "function": "print",
                "line": 341
              },
              {
                "function": "print",
                "line": 342
              },
              {
                "function": "print",
                "line": 343
              },
              {
                "function": "print",
                "line": 344
              },
              {
                "function": "print",
                "line": 345
              },
              {
                "function": "print",
                "line": 346
              },
              {
                "function": "print",
                "line": 347
              },
              {
                "function": "print",
                "line": 348
              },
              {
                "function": "print",
                "line": 349
              },
              {
                "function": "print",
                "line": 350
              },
              {
                "function": "print",
                "line": 351
              },
              {
                "function": "print",
                "line": 352
              },
              {
                "function": "print",
                "line": 353
              },
              {
                "function": "print",
                "line": 354
              },
              {
                "function": "str",
                "line": 225
              },
              {
                "function": "agent_task",
                "line": 231
              },
              {
                "function": "get",
                "line": 245
              },
              {
                "function": "demonstrate_conversation_continuity",
                "line": 323
              },
              {
                "function": "stop_claude_web_server",
                "line": 332
              },
              {
                "function": "run_comprehensive_demo",
                "line": 335
              },
              {
                "function": "Path",
                "line": 39
              },
              {
                "function": "len",
                "line": 124
              },
              {
                "function": "str",
                "line": 132
              },
              {
                "function": "demonstrate_parallel_agent_execution",
                "line": 330
              }
            ]
          }
        }
      },
      "import_graph": {
        "hello.py": [],
        "test_safe_executor_552.py": [
          "sys",
          "os",
          "asyncio",
          "datetime",
          "backend.__version__",
          "backend.langgraph_system.query_classifier",
          "backend.langgraph_system.development_query_handler",
          "backend.langgraph_system.safe_orchestrator_executor",
          "backend.langgraph_system.state"
        ],
        "verify_reviewer_test.py": [
          "os",
          "sys",
          "json",
          "datetime"
        ],
        "test_architecture_proposal_workflow.py": [
          "asyncio",
          "sys",
          "os",
          "json",
          "datetime",
          "langgraph_system.workflow",
          "langgraph_system.state",
          "traceback"
        ],
        "test_tetris_websocket_workflow.py": [
          "asyncio",
          "websockets",
          "json",
          "sys",
          "datetime",
          "subprocess",
          "traceback",
          "traceback"
        ],
        "test_new_features.py": [
          "asyncio",
          "logging",
          "sys",
          "backend.core.indexing.code_indexer",
          "backend.core.indexing.code_indexer",
          "backend.core.analysis.call_graph_analyzer",
          "backend.core.indexing.code_indexer",
          "backend.core.analysis.layer_analyzer",
          "backend.agents.tools.browser_tester",
          "backend.agents.specialized.architect_agent",
          "backend.agents.specialized.reviewer_gpt_agent",
          "traceback",
          "traceback",
          "traceback",
          "traceback",
          "traceback"
        ],
        "test_self_diagnosis.py": [
          "asyncio",
          "sys",
          "os",
          "logging",
          "datetime",
          "backend.langgraph_system.workflow_self_diagnosis",
          "backend.langgraph_system.state",
          "traceback"
        ],
        "test_indexing_progress.py": [
          "asyncio",
          "json",
          "websockets",
          "datetime"
        ],
        "test_available_models.py": [
          "asyncio",
          "os",
          "json",
          "datetime",
          "openai",
          "openai",
          "anthropic",
          "openai"
        ],
        "test_button_implementation.py": [
          "asyncio",
          "sys",
          "os",
          "backend.agents.specialized.codesmith_agent",
          "backend.agents.specialized.orchestrator_agent_v2",
          "backend.agents.base.base_agent"
        ],
        "test_routing_debug.py": [
          "asyncio",
          "sys",
          "os",
          "logging",
          "langgraph_system.workflow",
          "langgraph_system.state"
        ],
        "test_perplexity_integration.py": [
          "asyncio",
          "os",
          "sys",
          "pathlib",
          "dotenv",
          "backend.utils.perplexity_service",
          "backend.agents.specialized.research_agent",
          "backend.agents.base.base_agent",
          "traceback"
        ],
        "test_self_diagnosis_simple.py": [
          "sys",
          "os",
          "datetime",
          "dataclasses",
          "typing",
          "backend.langgraph_system.workflow_self_diagnosis",
          "backend.__version__"
        ],
        "test_intelligent_agents.py": [
          "asyncio",
          "sys",
          "os",
          "backend.agents.specialized.codesmith_agent",
          "backend.agents.specialized.orchestrator_agent_v2",
          "backend.agents.base.base_agent"
        ],
        "test_architect_progress.py": [
          "asyncio",
          "json",
          "websockets",
          "datetime"
        ],
        "test_complex_workflow_simulation.py": [
          "json",
          "sys",
          "os",
          "datetime",
          "typing",
          "backend.__version__"
        ],
        "test_no_cache.py": [
          "asyncio",
          "json",
          "websockets",
          "datetime"
        ],
        "test_simple_workflow.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime",
          "traceback"
        ],
        "test_progress_enhanced.py": [
          "asyncio",
          "json",
          "websockets",
          "datetime"
        ],
        "test_orchestrator_steps.py": [
          "asyncio",
          "logging",
          "sys",
          "pathlib",
          "langgraph_system.workflow",
          "agents.base.base_agent"
        ],
        "test_agent_collaboration.py": [
          "asyncio",
          "sys",
          "os",
          "backend.langgraph_system.workflow",
          "backend.langgraph_system.state",
          "os"
        ],
        "test_agents_fixed.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime",
          "traceback"
        ],
        "test_multi_agent_workflow.py": [
          "asyncio",
          "logging",
          "sys",
          "pathlib",
          "langgraph_system.workflow",
          "agents.specialized.orchestrator_agent",
          "agents.specialized.architect_agent",
          "agents.specialized.codesmith_agent",
          "agents.specialized.reviewer_gpt_agent",
          "agents.specialized.fixerbot_agent",
          "agents.base.base_agent",
          "traceback"
        ],
        "real_whiteboard_request.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime",
          "traceback"
        ],
        "test_final.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime"
        ],
        "test_tetris_workflow.py": [
          "asyncio",
          "websockets",
          "json",
          "sys",
          "datetime",
          "typing",
          "os",
          "traceback"
        ],
        "cli.py": [
          "asyncio",
          "sys",
          "os",
          "json",
          "typing",
          "datetime",
          "argparse",
          "rich.console",
          "rich.table",
          "rich.panel",
          "rich.progress",
          "rich.prompt",
          "rich.syntax",
          "rich",
          "orchestration.master_dispatcher",
          "agents",
          "re"
        ],
        "test_query_class.py": [
          "sys",
          "langgraph_system.query_classifier"
        ],
        "test_system.py": [
          "asyncio",
          "sys",
          "os",
          "datetime",
          "orchestration.master_dispatcher",
          "orchestration.intent_classifier",
          "orchestration.workflow_generator",
          "orchestration.execution_engine",
          "orchestration.learning_system"
        ],
        "test_code_verification.py": [
          "os",
          "re"
        ],
        "test_research_api.py": [
          "asyncio",
          "websockets",
          "json"
        ],
        "test_query_classifier_simple.py": [
          "sys",
          "os",
          "datetime",
          "backend.__version__"
        ],
        "test_websocket_messages.py": [
          "asyncio",
          "json",
          "websockets",
          "datetime"
        ],
        "test_complex_app_request.py": [
          "asyncio",
          "json",
          "sys",
          "os",
          "datetime",
          "typing",
          "backend.langgraph_system.workflow",
          "backend.langgraph_system.state",
          "backend.__version__",
          "traceback"
        ],
        "test_quick_approval.py": [
          "asyncio",
          "websockets",
          "json",
          "sys",
          "traceback"
        ],
        "test_quick_fix.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime"
        ],
        "test_instructions_learning.py": [
          "asyncio",
          "sys",
          "os",
          "agents.specialized.architect_agent",
          "agents.specialized.codesmith_agent",
          "agents.base.base_agent",
          "core.memory_manager"
        ],
        "test_tetris_now.py": [
          "asyncio",
          "sys",
          "os",
          "logging",
          "backend.langgraph_system.workflow",
          "traceback"
        ],
        "send_real_request.py": [
          "asyncio",
          "websockets",
          "json",
          "time",
          "datetime"
        ],
        "test_tetris_complete.py": [
          "asyncio",
          "websockets",
          "json",
          "time",
          "datetime",
          "traceback"
        ],
        "test_infrastructure_analysis.py": [
          "asyncio",
          "sys",
          "os",
          "agents.specialized.architect_agent",
          "agents.base.base_agent",
          "agents.specialized.architect_agent",
          "traceback"
        ],
        "test_tetris_simple.py": [
          "asyncio",
          "sys",
          "os",
          "langgraph_system.workflow",
          "logging",
          "traceback"
        ],
        "test_perplexity_raw.py": [
          "os",
          "requests",
          "pathlib",
          "dotenv",
          "traceback"
        ],
        "test_whiteboard_real.py": [
          "asyncio",
          "websockets",
          "json",
          "datetime"
        ],
        "claude_web_proxy/claude_browser.py": [
          "asyncio",
          "json",
          "os",
          "typing",
          "pathlib",
          "structlog",
          "playwright.async_api"
        ],
        "claude_web_proxy/quick_test.py": [
          "asyncio",
          "aiohttp",
          "sys",
          "pathlib",
          "time",
          "claude_web_proxy.crewai_integration"
        ],
        "claude_web_proxy/fastapi_server.py": [
          "asyncio",
          "json",
          "contextlib",
          "typing",
          "datetime",
          "fastapi",
          "fastapi.middleware.cors",
          "fastapi.responses",
          "pydantic",
          "structlog",
          "uvicorn",
          "claude_browser"
        ],
        "claude_web_proxy/crewai_integration.py": [
          "asyncio",
          "aiohttp",
          "json",
          "typing",
          "structlog",
          "crewai.llm",
          "crewai.agent",
          "concurrent.futures",
          "threading",
          "warnings"
        ],
        "claude_web_proxy/setup_and_test.py": [
          "asyncio",
          "json",
          "os",
          "sys",
          "time",
          "pathlib",
          "typing",
          "aiohttp",
          "structlog",
          "claude_web_proxy.claude_browser",
          "claude_web_proxy.fastapi_server",
          "multiprocessing",
          "subprocess",
          "signal",
          "argparse",
          "playwright",
          "fastapi",
          "uvicorn",
          "aiohttp",
          "claude_web_proxy.crewai_integration"
        ],
        "claude_web_proxy/__init__.py": [
          "claude_browser",
          "crewai_integration"
        ],
        "claude_web_proxy/debug_browser_api.py": [
          "asyncio",
          "sys",
          "pathlib",
          "traceback",
          "playwright.async_api",
          "structlog"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py": [
          "typing",
          "base_agent"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py": [
          "typing",
          "base_agent",
          "re"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py": [
          "abc",
          "typing",
          "os",
          "datetime",
          "re",
          "ast"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py": [
          "os",
          "aiohttp",
          "asyncio",
          "typing",
          "base_agent",
          "re"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py": [
          "base_agent",
          "architect_gpt",
          "codesmith_claude",
          "docu_bot",
          "reviewer_gpt",
          "fixer_bot",
          "trade_strat",
          "research_bot",
          "opus_arbitrator"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py": [
          "typing",
          "base_agent",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.crewai_integration"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py": [
          "typing",
          "base_agent",
          "re"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py": [
          "typing",
          "base_agent",
          "re",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.crewai_integration"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py": [
          "typing",
          "base_agent",
          "re"
        ],
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py": [
          "typing",
          "base_agent",
          "re",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.crewai_integration"
        ],
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py": [
          "asyncio",
          "os",
          "sys",
          "pathlib",
          "subprocess",
          "time",
          "typing",
          "claude_web_proxy.crewai_integration",
          "orchestration.master_dispatcher",
          "orchestration.intent_classifier",
          "argparse"
        ],
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py": [
          "asyncio",
          "sys",
          "pathlib",
          "claude_web_proxy.claude_browser",
          "structlog"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py": [
          "asyncio",
          "typing",
          "datetime",
          "time",
          "traceback"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py": [
          "typing",
          "dataclasses",
          "datetime",
          "json"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/__init__.py": [
          "master_dispatcher",
          "intent_classifier",
          "workflow_generator",
          "execution_engine",
          "learning_system"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py": [
          "re",
          "typing",
          "enum",
          "dataclasses"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py": [
          "asyncio",
          "typing",
          "dataclasses",
          "yaml",
          "json",
          "re",
          "datetime",
          "intent_classifier",
          "workflow_generator",
          "execution_engine",
          "learning_system",
          "shared_context",
          "agents"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py": [
          "abc",
          "typing",
          "dataclasses",
          "datetime",
          "json",
          "project_contexts",
          "project_contexts.base_project_context"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py": [
          "json",
          "os",
          "datetime",
          "pathlib",
          "typing",
          "statistics"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py": [
          "typing",
          "dataclasses",
          "json",
          "datetime"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py": [
          "re",
          "time",
          "typing",
          "base_quality_gate"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py": [
          "re",
          "time",
          "typing",
          "base_quality_gate"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py": [
          "re",
          "typing",
          "dataclasses",
          "abc",
          "json",
          "enum"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py": [
          "re",
          "time",
          "typing",
          "base_quality_gate"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py": [
          "re",
          "time",
          "typing",
          "base_quality_gate"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/__init__.py": [
          "base_quality_gate",
          "trading_quality_gate",
          "ron_strategy_quality_gate",
          "engine_parity_quality_gate",
          "security_quality_gate"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py": [
          "abc",
          "typing",
          "datetime",
          "logging",
          "base_workflow",
          "shared_context"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py": [
          "typing",
          "datetime",
          "logging",
          "base_workflow",
          "shared_context"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py": [
          "base_workflow",
          "generic_software_workflow",
          "trading_system_workflow"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py": [
          "abc",
          "typing",
          "datetime",
          "logging"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py": [
          "typing",
          "base_project_context",
          "json"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/__init__.py": [
          "base_project_context",
          "trading_project_context",
          "web_app_context"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py": [
          "typing",
          "base_project_context",
          "json"
        ],
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py": [
          "abc",
          "typing",
          "dataclasses"
        ],
        "backend/test_system_understanding.py": [
          "asyncio",
          "logging",
          "sys",
          "pathlib",
          "agents.specialized.architect_agent",
          "agents.specialized.codesmith_agent",
          "traceback",
          "traceback"
        ],
        "backend/__version__.py": [],
        "backend/test_infrastructure_comprehensive.py": [
          "asyncio",
          "sys",
          "os",
          "json",
          "agents.specialized.architect_agent",
          "agents.base.base_agent"
        ],
        "backend/test_api_keys.py": [
          "os",
          "sys",
          "asyncio",
          "dotenv",
          "utils.openai_service",
          "utils.anthropic_service",
          "requests"
        ],
        "backend/test_websocket_debug.py": [
          "asyncio",
          "json",
          "logging",
          "websockets",
          "sys",
          "time",
          "datetime"
        ],
        "backend/test_quick_infra.py": [
          "asyncio",
          "sys",
          "os",
          "agents.base.base_agent",
          "agents.specialized.architect_agent"
        ],
        "backend/quick_test_key.py": [
          "openai",
          "subprocess",
          "openai"
        ],
        "backend/test_v4_features.py": [
          "sys",
          "os",
          "agents.specialized.architect_agent"
        ],
        "backend/test_execution_time_fix.py": [
          "asyncio",
          "sys",
          "os",
          "agents.agent_registry",
          "agents.specialized.orchestrator_agent_v2",
          "agents.specialized.architect_agent"
        ],
        "backend/test_langgraph_system.py": [
          "asyncio",
          "sys",
          "os",
          "datetime",
          "langgraph_system",
          "langgraph_system.extensions"
        ],
        "backend/fixes/orchestrator_file_write_fix.py": [
          "re",
          "re"
        ],
        "backend/fixes/task_request_enhancement.py": [
          "dataclasses",
          "typing"
        ],
        "backend/core/memory_manager.py": [
          "enum",
          "typing",
          "logging"
        ],
        "backend/core/pause_handler.py": [
          "enum",
          "typing",
          "logging"
        ],
        "backend/core/__init__.py": [
          "memory_manager",
          "shared_context_manager",
          "conversation_context_manager",
          "pause_handler",
          "git_checkpoint_manager"
        ],
        "backend/core/shared_context_manager.py": [
          "typing",
          "logging"
        ],
        "backend/core/conversation_context_manager.py": [
          "typing",
          "logging"
        ],
        "backend/core/git_checkpoint_manager.py": [
          "typing",
          "logging"
        ],
        "backend/core/exceptions.py": [],
        "backend/core/analysis/semgrep_analyzer.py": [
          "logging",
          "typing"
        ],
        "backend/core/analysis/vulture_analyzer.py": [
          "logging",
          "typing"
        ],
        "backend/core/analysis/__init__.py": [],
        "backend/core/analysis/radon_metrics.py": [
          "logging",
          "typing"
        ],
        "backend/core/analysis/layer_analyzer.py": [
          "os",
          "logging",
          "typing",
          "collections"
        ],
        "backend/core/analysis/call_graph_analyzer.py": [
          "logging",
          "typing",
          "collections"
        ],
        "backend/core/indexing/tree_sitter_indexer.py": [
          "os",
          "ast",
          "typing",
          "logging"
        ],
        "backend/core/indexing/__init__.py": [],
        "backend/core/indexing/code_indexer.py": [
          "os",
          "asyncio",
          "typing",
          "pathlib",
          "logging",
          "tree_sitter_indexer"
        ],
        "backend/config/capabilities_loader.py": [
          "os",
          "yaml",
          "logging",
          "typing",
          "pathlib",
          "pathlib",
          "fnmatch"
        ],
        "backend/config/settings.py": [
          "os",
          "pathlib"
        ],
        "backend/tests/test_cache_manager.py": [
          "pytest",
          "asyncio",
          "json",
          "unittest.mock",
          "backend.core.cache_manager"
        ],
        "backend/tests/test_server_auto.py": [
          "asyncio",
          "json",
          "aiohttp",
          "sys"
        ],
        "backend/tests/test_file_capabilities_simple.py": [
          "os",
          "sys",
          "asyncio",
          "tempfile",
          "shutil",
          "agents.tools.file_tools",
          "config.capabilities_loader",
          "traceback"
        ],
        "backend/tests/test_direct_file_write.py": [
          "asyncio",
          "sys",
          "os",
          "agents.specialized.codesmith_agent",
          "traceback"
        ],
        "backend/tests/test_real_agent.py": [
          "asyncio",
          "json",
          "aiohttp",
          "sys"
        ],
        "backend/tests/test_server.py": [
          "asyncio",
          "json",
          "aiohttp",
          "sys",
          "datetime"
        ],
        "backend/tests/test_agent_write_integration.py": [
          "asyncio",
          "json",
          "os",
          "sys",
          "tempfile",
          "shutil",
          "agents.specialized.architect_agent",
          "agents.specialized.codesmith_agent",
          "agents.base.base_agent",
          "aiohttp",
          "traceback"
        ],
        "backend/tests/test_agent_file_capabilities.py": [
          "os",
          "sys",
          "asyncio",
          "tempfile",
          "shutil",
          "pytest",
          "pathlib",
          "typing",
          "agents.base.base_agent",
          "agents.tools.file_tools",
          "agents.specialized.codesmith_agent",
          "agents.specialized.architect_agent",
          "config.capabilities_loader"
        ],
        "backend/tests/test_integration.py": [
          "asyncio",
          "json",
          "sys",
          "aiohttp",
          "datetime",
          "typing"
        ],
        "backend/agents/agent_registry.py": [
          "logging",
          "typing",
          "dataclasses",
          "enum",
          "base.base_agent",
          "specialized.orchestrator_agent_v2",
          "config.capabilities_loader",
          "specialized.research_agent",
          "specialized.fixer_gpt_agent"
        ],
        "backend/agents/tools/__init__.py": [
          "file_tools"
        ],
        "backend/agents/tools/file_tools.py": [
          "os",
          "shutil",
          "json",
          "logging",
          "pathlib",
          "typing",
          "datetime",
          "dataclasses",
          "fnmatch"
        ],
        "backend/agents/tools/browser_tester.py": [
          "asyncio",
          "logging",
          "os",
          "typing",
          "pathlib",
          "playwright.async_api",
          "subprocess",
          "socket"
        ],
        "backend/agents/specialized/fixerbot_agent.py": [
          "logging",
          "os",
          "re",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "utils.claude_code_service",
          "subprocess"
        ],
        "backend/agents/specialized/reviewer_gpt_agent.py": [
          "logging",
          "os",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "base.prime_directives",
          "utils.openai_service",
          "tools.browser_tester",
          "re"
        ],
        "backend/agents/specialized/tradestrat_agent.py": [
          "logging",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "utils.claude_code_service"
        ],
        "backend/agents/specialized/docubot_agent.py": [
          "logging",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service"
        ],
        "backend/agents/specialized/architect_agent.py": [
          "asyncio",
          "json",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service",
          "config",
          "sys",
          "os",
          "core.exceptions",
          "services.project_cache",
          "services.smart_file_watcher",
          "services.code_search",
          "core.indexing.tree_sitter_indexer",
          "core.indexing.code_indexer",
          "core.analysis.semgrep_analyzer",
          "core.analysis.vulture_analyzer",
          "core.analysis.radon_metrics",
          "core.analysis.call_graph_analyzer",
          "core.analysis.layer_analyzer",
          "services.diagram_service",
          "config.capabilities_loader",
          "datetime",
          "core.exceptions",
          "traceback",
          "core.exceptions",
          "api.server"
        ],
        "backend/agents/specialized/codesmith_agent.py": [
          "asyncio",
          "json",
          "re",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base.chat_agent",
          "base.base_agent",
          "utils.claude_code_service",
          "sys",
          "os",
          "core.exceptions",
          "core.indexing.tree_sitter_indexer",
          "core.indexing.code_indexer",
          "core.analysis.vulture_analyzer",
          "core.analysis.radon_metrics",
          "services.diagram_service",
          "os",
          "re",
          "re",
          "config.capabilities_loader",
          "agents.agent_registry",
          "subprocess",
          "traceback"
        ],
        "backend/agents/specialized/fixer_gpt_agent.py": [
          "logging",
          "os",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service",
          "backend.config.settings"
        ],
        "backend/agents/specialized/performance_bot.py": [
          "asyncio",
          "cProfile",
          "pstats",
          "io",
          "tracemalloc",
          "time",
          "subprocess",
          "tempfile",
          "os",
          "json",
          "shutil",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service",
          "re"
        ],
        "backend/agents/specialized/research_agent.py": [
          "logging",
          "os",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "sys",
          "os",
          "utils.perplexity_service"
        ],
        "backend/agents/specialized/orchestrator_agent_v2.py": [
          "asyncio",
          "json",
          "os",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service",
          "os",
          "re",
          "agents.agent_registry",
          "datetime",
          "asyncio",
          "api.server",
          "json"
        ],
        "backend/agents/specialized/opus_arbitrator_agent.py": [
          "logging",
          "typing",
          "datetime",
          "base.chat_agent",
          "base.base_agent",
          "utils.claude_code_service"
        ],
        "backend/agents/specialized/orchestrator_agent.py": [
          "asyncio",
          "json",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base.chat_agent",
          "base.base_agent",
          "utils.openai_service",
          "base.base_agent",
          "json"
        ],
        "backend/agents/base/base_agent.py": [
          "abc",
          "typing",
          "dataclasses",
          "datetime",
          "asyncio",
          "logging",
          "json",
          "os",
          "sys",
          "enum",
          "config.settings",
          "core.memory_manager",
          "core.shared_context_manager",
          "core.conversation_context_manager",
          "prime_directives",
          "core.pause_handler",
          "core.git_checkpoint_manager",
          "agents.tools.file_tools",
          "json",
          "os",
          "json",
          "os",
          "dataclasses",
          "pathlib",
          "agents.specialized.research_agent",
          "core.memory_manager"
        ],
        "backend/agents/base/prime_directives.py": [
          "logging",
          "re",
          "typing",
          "dataclasses",
          "subprocess",
          "os"
        ],
        "backend/agents/base/chat_agent.py": [
          "asyncio",
          "json",
          "typing",
          "dataclasses",
          "datetime",
          "logging",
          "base_agent"
        ],
        "backend/utils/perplexity_service.py": [
          "os",
          "logging",
          "typing",
          "aiohttp",
          "json",
          "datetime",
          "requests"
        ],
        "backend/utils/claude_code_service.py": [
          "asyncio",
          "json",
          "logging",
          "subprocess",
          "re",
          "typing",
          "dataclasses"
        ],
        "backend/utils/openai_service.py": [
          "os",
          "asyncio",
          "logging",
          "typing",
          "dataclasses",
          "openai",
          "dotenv",
          "json",
          "asyncio"
        ],
        "backend/utils/anthropic_service.py": [
          "os",
          "asyncio",
          "logging",
          "typing",
          "dataclasses",
          "anthropic",
          "dotenv"
        ],
        "backend/langgraph_system/intelligent_query_handler.py": [
          "logging",
          "typing",
          "dataclasses",
          "state"
        ],
        "backend/langgraph_system/cache_manager.py": [
          "subprocess",
          "time",
          "logging",
          "redis",
          "os",
          "sys",
          "typing",
          "__version__"
        ],
        "backend/langgraph_system/development_query_handler.py": [
          "logging",
          "typing",
          "dataclasses",
          "re"
        ],
        "backend/langgraph_system/__init__.py": [
          "state",
          "workflow",
          "extensions"
        ],
        "backend/langgraph_system/query_classifier.py": [
          "logging",
          "re",
          "hashlib",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "backend/langgraph_system/workflow_self_diagnosis.py": [
          "logging",
          "asyncio",
          "typing",
          "datetime",
          "dataclasses",
          "enum",
          "re",
          "json",
          "collections",
          "state"
        ],
        "backend/langgraph_system/workflow.py": [
          "logging",
          "asyncio",
          "typing",
          "datetime",
          "langgraph.graph",
          "langgraph.checkpoint.sqlite",
          "langgraph.checkpoint.memory",
          "state",
          "extensions",
          "cache_manager",
          "sys",
          "os",
          "intelligent_query_handler",
          "workflow_self_diagnosis",
          "safe_orchestrator_executor",
          "query_classifier",
          "development_query_handler",
          "agents.specialized.architect_agent",
          "agents.specialized.codesmith_agent",
          "agents.specialized.reviewer_gpt_agent",
          "agents.specialized.fixerbot_agent",
          "agents.base.base_agent",
          "agents.specialized.orchestrator_agent",
          "agents.specialized.research_agent",
          "agents.specialized.fixer_gpt_agent",
          "config.settings",
          "sys",
          "os",
          "config.settings",
          "json",
          "re",
          "json",
          "re"
        ],
        "backend/langgraph_system/state.py": [
          "typing",
          "dataclasses",
          "datetime",
          "uuid",
          "operator",
          "os"
        ],
        "backend/langgraph_system/safe_orchestrator_executor.py": [
          "logging",
          "asyncio",
          "hashlib",
          "typing",
          "datetime",
          "dataclasses",
          "json",
          "query_classifier",
          "development_query_handler",
          "state"
        ],
        "backend/langgraph_system/extensions/dynamic_workflow.py": [
          "logging",
          "typing",
          "dataclasses",
          "langgraph.graph"
        ],
        "backend/langgraph_system/extensions/__init__.py": [
          "tool_discovery",
          "approval_manager",
          "persistent_memory",
          "dynamic_workflow"
        ],
        "backend/langgraph_system/extensions/approval_manager.py": [
          "asyncio",
          "uuid",
          "logging",
          "typing",
          "datetime",
          "dataclasses"
        ],
        "backend/langgraph_system/extensions/tool_discovery.py": [
          "inspect",
          "json",
          "logging",
          "typing",
          "functools",
          "dataclasses",
          "state",
          "time",
          "time",
          "yaml",
          "yaml"
        ],
        "backend/langgraph_system/extensions/persistent_memory.py": [
          "json",
          "sqlite3",
          "logging",
          "pickle",
          "typing",
          "datetime",
          "pathlib",
          "numpy",
          "state",
          "faiss",
          "langchain_openai",
          "langchain_community.vectorstores",
          "hashlib",
          "hashlib"
        ],
        "backend/api/settings_endpoint.py": [
          "fastapi",
          "pydantic",
          "typing",
          "logging",
          "sys",
          "os",
          "config.settings"
        ],
        "backend/api/server_langgraph.py": [
          "fastapi",
          "fastapi.middleware.cors",
          "contextlib",
          "asyncio",
          "json",
          "logging",
          "uuid",
          "typing",
          "datetime",
          "uvicorn",
          "sys",
          "os",
          "langgraph_system",
          "models_endpoint",
          "settings_endpoint",
          "__version__",
          "socket",
          "traceback",
          "traceback"
        ],
        "backend/api/__init__.py": [],
        "backend/api/models_endpoint.py": [
          "fastapi",
          "yaml",
          "json",
          "os",
          "logging",
          "typing",
          "datetime"
        ],
        "backend/services/diagram_service.py": [
          "typing",
          "pathlib",
          "enum",
          "logging"
        ],
        "backend/services/__init__.py": [
          "project_cache",
          "smart_file_watcher",
          "code_search",
          "diagram_service"
        ],
        "backend/services/project_cache.py": [
          "json",
          "hashlib",
          "pathlib",
          "typing",
          "datetime",
          "logging"
        ],
        "backend/services/smart_file_watcher.py": [
          "time",
          "pathlib",
          "typing",
          "datetime",
          "logging"
        ],
        "backend/services/code_search.py": [
          "re",
          "pathlib",
          "typing",
          "logging"
        ],
        "examples/claude_web_integration_example.py": [
          "asyncio",
          "os",
          "sys",
          "pathlib",
          "typing",
          "claude_web_proxy.crewai_integration",
          "claude_web_proxy.fastapi_server",
          "subprocess",
          "time",
          "signal",
          "argparse"
        ],
        "examples/multi_agent_claude_web_demo.py": [
          "asyncio",
          "sys",
          "pathlib",
          "typing",
          "subprocess",
          "time",
          "signal",
          "claude_web_proxy.crewai_integration",
          "orchestration.master_dispatcher",
          "argparse"
        ]
      },
      "statistics": {
        "total_files": 172,
        "total_functions": 718,
        "total_classes": 177,
        "total_imports": 1123,
        "lines_of_code": 51182
      },
      "all_functions": [
        {
          "name": "__init__",
          "line": 21,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_tetris_websocket_workflow.py"
        },
        {
          "name": "__post_init__",
          "line": 69,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_self_diagnosis_simple.py"
        },
        {
          "name": "simulate_query_classification",
          "line": 45,
          "async": false,
          "calls": [],
          "parameters": [
            "query"
          ],
          "decorators": [],
          "file": "test_complex_workflow_simulation.py"
        },
        {
          "name": "simulate_execution_plan",
          "line": 60,
          "async": false,
          "calls": [],
          "parameters": [
            "query"
          ],
          "decorators": [],
          "file": "test_complex_workflow_simulation.py"
        },
        {
          "name": "simulate_workflow_execution",
          "line": 137,
          "async": false,
          "calls": [
            "print",
            "append",
            "simulate_execution_plan",
            "simulate_query_classification",
            "join",
            "set",
            "upper",
            "len",
            "enumerate",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_complex_workflow_simulation.py"
        },
        {
          "name": "evaluate_complexity",
          "line": 235,
          "async": false,
          "calls": [
            "print",
            "isinstance",
            "items",
            "join"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_complex_workflow_simulation.py"
        },
        {
          "name": "main",
          "line": 277,
          "async": false,
          "calls": [
            "print",
            "evaluate_complexity",
            "simulate_workflow_execution",
            "len"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_complex_workflow_simulation.py"
        },
        {
          "name": "log",
          "line": 13,
          "async": false,
          "calls": [
            "strftime",
            "print",
            "now"
          ],
          "parameters": [
            "msg",
            "emoji"
          ],
          "decorators": [],
          "file": "test_simple_workflow.py"
        },
        {
          "name": "test_development_task_detection",
          "line": 28,
          "async": false,
          "calls": [
            "enumerate",
            "info",
            "len",
            "_create_execution_steps"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_orchestrator_steps.py"
        },
        {
          "name": "__init__",
          "line": 17,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "record_agent",
          "line": 28,
          "async": false,
          "calls": [
            "print",
            "append",
            "now",
            "isoformat"
          ],
          "parameters": [
            "self",
            "agent_name",
            "timestamp"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "record_output",
          "line": 38,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "agent_name",
            "output"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "record_quality_score",
          "line": 42,
          "async": false,
          "calls": [
            "print",
            "append",
            "now",
            "isoformat"
          ],
          "parameters": [
            "self",
            "score",
            "agent"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "record_message",
          "line": 51,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "msg"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "generate_report",
          "line": 55,
          "async": false,
          "calls": [
            "isinstance",
            "dumps",
            "str",
            "items",
            "upper",
            "len",
            "enumerate",
            "total_seconds"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "main",
          "line": 394,
          "async": false,
          "calls": [
            "run",
            "_process_task",
            "run_tests",
            "add_argument",
            "parse_args",
            "ArgumentParser",
            "initialize",
            "KIAutoAgentCLI",
            "run_task",
            "_run_test_scenarios"
          ],
          "parameters": [],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "__init__",
          "line": 35,
          "async": false,
          "calls": [
            "now"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_show_welcome",
          "line": 67,
          "async": false,
          "calls": [
            "print",
            "Panel"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_display_results",
          "line": 198,
          "async": false,
          "calls": [
            "findall",
            "Syntax",
            "print",
            "Panel",
            "get",
            "join",
            "len"
          ],
          "parameters": [
            "self",
            "result"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_show_help",
          "line": 257,
          "async": false,
          "calls": [
            "print",
            "Table",
            "add_row",
            "add_column"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_show_agents",
          "line": 275,
          "async": false,
          "calls": [
            "print",
            "Table",
            "add_row",
            "add_column"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_show_history",
          "line": 299,
          "async": false,
          "calls": [
            "Table",
            "print",
            "get",
            "add_column",
            "str",
            "fromisoformat",
            "len",
            "strftime",
            "enumerate",
            "add_row"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_load_history",
          "line": 375,
          "async": false,
          "calls": [
            "exists",
            "open",
            "load"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "_save_history",
          "line": 385,
          "async": false,
          "calls": [
            "open",
            "dump"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "cli.py"
        },
        {
          "name": "print_test",
          "line": 30,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "name",
            "status",
            "message"
          ],
          "decorators": [],
          "file": "test_system.py"
        },
        {
          "name": "print_section",
          "line": 36,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "title"
          ],
          "decorators": [],
          "file": "test_system.py"
        },
        {
          "name": "__init__",
          "line": 206,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_system.py"
        },
        {
          "name": "test_routing_replan_check",
          "line": 8,
          "async": false,
          "calls": [
            "print",
            "open",
            "read"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_routing_in_progress_check",
          "line": 27,
          "async": false,
          "calls": [
            "print",
            "open",
            "read"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_orchestrator_replan_logic",
          "line": 46,
          "async": false,
          "calls": [
            "print",
            "read",
            "open",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_reviewer_collaboration",
          "line": 69,
          "async": false,
          "calls": [
            "print",
            "read",
            "open",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_conditional_edges",
          "line": 90,
          "async": false,
          "calls": [
            "print",
            "open",
            "read"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_settings_sync_code",
          "line": 108,
          "async": false,
          "calls": [
            "print",
            "open",
            "read",
            "exists",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "test_instruction_files",
          "line": 134,
          "async": false,
          "calls": [
            "print",
            "append",
            "join",
            "exists",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "main",
          "line": 158,
          "async": false,
          "calls": [
            "zip",
            "test",
            "print",
            "append",
            "sum",
            "len"
          ],
          "parameters": [],
          "decorators": [],
          "file": "test_code_verification.py"
        },
        {
          "name": "simple_classify",
          "line": 72,
          "async": false,
          "calls": [
            "split",
            "sum",
            "any",
            "lower",
            "len"
          ],
          "parameters": [
            "query"
          ],
          "decorators": [],
          "file": "test_query_classifier_simple.py"
        },
        {
          "name": "__init__",
          "line": 13,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_tetris_complete.py"
        },
        {
          "name": "log",
          "line": 30,
          "async": false,
          "calls": [
            "strftime",
            "print",
            "now"
          ],
          "parameters": [
            "self",
            "message",
            "emoji"
          ],
          "decorators": [],
          "file": "test_tetris_complete.py"
        },
        {
          "name": "print_summary",
          "line": 146,
          "async": false,
          "calls": [
            "print",
            "get",
            "items",
            "len",
            "sorted"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "test_tetris_complete.py"
        },
        {
          "name": "__init__",
          "line": 20,
          "async": false,
          "calls": [
            "home",
            "mkdir",
            "str",
            "Path"
          ],
          "parameters": [
            "self",
            "user_data_dir",
            "headless"
          ],
          "decorators": [],
          "file": "claude_web_proxy/claude_browser.py"
        },
        {
          "name": "print_instructions",
          "line": 159,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [],
          "decorators": [],
          "file": "claude_web_proxy/quick_test.py"
        },
        {
          "name": "run_server",
          "line": 295,
          "async": false,
          "calls": [
            "run"
          ],
          "parameters": [
            "host",
            "port",
            "reload"
          ],
          "decorators": [],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "check_browser_context_status",
          "line": 114,
          "async": false,
          "calls": [
            "debug",
            "str",
            "is_closed",
            "len"
          ],
          "parameters": [],
          "decorators": [],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "create_claude_web_agent",
          "line": 286,
          "async": false,
          "calls": [
            "ImportError",
            "ClaudeWebLLM",
            "Agent"
          ],
          "parameters": [
            "role",
            "goal",
            "backstory",
            "server_url"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "create_claude_web_llm",
          "line": 320,
          "async": false,
          "calls": [
            "ClaudeWebLLM"
          ],
          "parameters": [
            "server_url"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "__init__",
          "line": 35,
          "async": false,
          "calls": [
            "__init__",
            "super",
            "info",
            "rstrip"
          ],
          "parameters": [
            "self",
            "server_url",
            "timeout",
            "new_conversation_per_agent"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "generate",
          "line": 171,
          "async": false,
          "calls": [
            "run",
            "ThreadPoolExecutor",
            "submit",
            "new_event_loop",
            "get",
            "close",
            "set_event_loop",
            "_send_message_async",
            "str",
            "result",
            "run_until_complete",
            "is_running",
            "error",
            "get_running_loop"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "stream_generate",
          "line": 227,
          "async": false,
          "calls": [
            "generate"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "get_model_info",
          "line": 241,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "__del__",
          "line": 257,
          "async": false,
          "calls": [
            "catch_warnings",
            "is_closed",
            "create_task",
            "close",
            "simplefilter",
            "hasattr",
            "get_running_loop"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "__init__",
          "line": 19,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "generate",
          "line": 22,
          "async": false,
          "calls": [
            "NotImplementedError"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "run_in_thread",
          "line": 200,
          "async": false,
          "calls": [
            "new_event_loop",
            "close",
            "set_event_loop",
            "_send_message_async",
            "run_until_complete"
          ],
          "parameters": [],
          "decorators": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "__init__",
          "line": 31,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "install_playwright_browsers",
          "line": 65,
          "async": false,
          "calls": [
            "run",
            "str",
            "info",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "start_server",
          "line": 87,
          "async": false,
          "calls": [
            "poll",
            "Path",
            "str",
            "sleep",
            "Popen",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "stop_server",
          "line": 108,
          "async": false,
          "calls": [
            "terminate",
            "wait",
            "kill"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "generate_setup_report",
          "line": 296,
          "async": false,
          "calls": [
            "strftime",
            "items"
          ],
          "parameters": [
            "self",
            "results"
          ],
          "decorators": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "recommended_browser_status_check",
          "line": 132,
          "async": false,
          "calls": [
            "is_closed",
            "hasattr",
            "len"
          ],
          "parameters": [],
          "decorators": [],
          "file": "claude_web_proxy/debug_browser_api.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "get_capabilities",
          "line": 66,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "_build_arbitration_prompt",
          "line": 134,
          "async": false,
          "calls": [
            "enumerate",
            "append",
            "get",
            "join"
          ],
          "parameters": [
            "self",
            "task",
            "conflicting_outputs",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "_extract_decision_components",
          "line": 354,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "decision"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "is_conflict_resolvable",
          "line": 371,
          "async": false,
          "calls": [
            "str",
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "conflicting_outputs"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "get_conflict_complexity",
          "line": 386,
          "async": false,
          "calls": [
            "get",
            "str",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "conflicting_outputs"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
        },
        {
          "name": "get_capabilities",
          "line": 51,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
        },
        {
          "name": "_build_documentation_prompt",
          "line": 100,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
        },
        {
          "name": "_structure_documentation",
          "line": 371,
          "async": false,
          "calls": [
            "list",
            "startswith",
            "split",
            "append",
            "join",
            "keys",
            "lower",
            "len",
            "replace"
          ],
          "parameters": [
            "self",
            "documentation"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
        },
        {
          "name": "__init__",
          "line": 15,
          "async": false,
          "calls": [
            "print",
            "getenv"
          ],
          "parameters": [
            "self",
            "name",
            "role",
            "model"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "get_capabilities",
          "line": 33,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "_build_prompt",
          "line": 48,
          "async": false,
          "calls": [
            "append",
            "join",
            "str",
            "items",
            "len"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "_extract_code",
          "line": 87,
          "async": false,
          "calls": [
            "findall",
            "join"
          ],
          "parameters": [
            "self",
            "response"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "_validate_code",
          "line": 102,
          "async": false,
          "calls": [
            "append",
            "parse",
            "str"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "get_stats",
          "line": 132,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "reset_stats",
          "line": 148,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "__repr__",
          "line": 155,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "__init__",
          "line": 17,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "get_capabilities",
          "line": 66,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "_mock_research_for_testing",
          "line": 186,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "_create_research_plan",
          "line": 296,
          "async": false,
          "calls": [
            "append",
            "get",
            "lower"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "_build_research_prompt",
          "line": 339,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context",
            "research_plan"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "_synthesize_findings",
          "line": 383,
          "async": false,
          "calls": [
            "findall",
            "startswith",
            "split",
            "lower",
            "strip"
          ],
          "parameters": [
            "self",
            "research_results"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "_generate_recommendations",
          "line": 419,
          "async": false,
          "calls": [
            "extend",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "synthesis"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "get_capabilities",
          "line": 51,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_build_code_review_prompt",
          "line": 134,
          "async": false,
          "calls": [
            "print",
            "append",
            "get",
            "open",
            "join",
            "read",
            "len"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_build_previous_analysis_prompt",
          "line": 258,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_build_final_review_prompt",
          "line": 287,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_build_review_prompt",
          "line": 365,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_categorize_issues",
          "line": 562,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "review_result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_generate_recommendations",
          "line": 620,
          "async": false,
          "calls": [
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "issues"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "_calculate_quality_score",
          "line": 652,
          "async": false,
          "calls": [
            "max",
            "items",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "issues"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
        },
        {
          "name": "get_capabilities",
          "line": 51,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
        },
        {
          "name": "_build_architecture_prompt",
          "line": 100,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
        },
        {
          "name": "_extract_artifacts",
          "line": 242,
          "async": false,
          "calls": [
            "findall"
          ],
          "parameters": [
            "self",
            "response"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "get_capabilities",
          "line": 62,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_build_validation_prompt",
          "line": 154,
          "async": false,
          "calls": [
            "print",
            "append",
            "get",
            "open",
            "join",
            "read",
            "len"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_build_improvement_prompt",
          "line": 242,
          "async": false,
          "calls": [
            "print",
            "append",
            "get",
            "open",
            "join",
            "read",
            "len"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_analyze_requirements",
          "line": 386,
          "async": false,
          "calls": [
            "get",
            "lower"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_build_strategy_prompt",
          "line": 429,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context",
            "requirements"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_create_backtest_framework",
          "line": 902,
          "async": false,
          "calls": [
            "search",
            "group"
          ],
          "parameters": [
            "self",
            "strategy"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "_generate_performance_metrics",
          "line": 962,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "strategy"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "get_capabilities",
          "line": 58,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "_analyze_problem",
          "line": 117,
          "async": false,
          "calls": [
            "get",
            "lower"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "_build_fix_prompt",
          "line": 152,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context",
            "analysis"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "_validate_fixes",
          "line": 537,
          "async": false,
          "calls": [
            "findall",
            "enumerate",
            "compile",
            "append"
          ],
          "parameters": [
            "self",
            "fixes"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "_create_fix_summary",
          "line": 567,
          "async": false,
          "calls": [
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "validated_fixes"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "__init__",
          "line": 14,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "get_capabilities",
          "line": 52,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "_build_analysis_prompt",
          "line": 146,
          "async": false,
          "calls": [
            "print",
            "append",
            "get",
            "open",
            "join",
            "read",
            "len"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "_build_coding_prompt",
          "line": 240,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "task",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "_build_implementation_prompt",
          "line": 572,
          "async": false,
          "calls": [
            "print",
            "append",
            "get",
            "open",
            "join",
            "read",
            "len"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "_organize_code",
          "line": 654,
          "async": false,
          "calls": [
            "findall"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "__init__",
          "line": 26,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
        },
        {
          "name": "start_claude_web_server",
          "line": 31,
          "async": false,
          "calls": [
            "print",
            "Popen",
            "sleep"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
        },
        {
          "name": "stop_claude_web_server",
          "line": 51,
          "async": false,
          "calls": [
            "terminate",
            "wait",
            "print",
            "kill"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
        },
        {
          "name": "main",
          "line": 131,
          "async": false,
          "calls": [
            "run",
            "strip",
            "print",
            "test_login_detection",
            "test_comprehensive_checks",
            "input"
          ],
          "parameters": [],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py"
        },
        {
          "name": "__init__",
          "line": 16,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "_group_steps_for_execution",
          "line": 101,
          "async": false,
          "calls": [
            "append",
            "get",
            "dict",
            "items",
            "sorted"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "_compile_final_output",
          "line": 216,
          "async": false,
          "calls": [
            "append",
            "get",
            "join",
            "str",
            "len"
          ],
          "parameters": [
            "self",
            "result",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "get_current_status",
          "line": 257,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "get_execution_history",
          "line": 269,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "limit"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "__init__",
          "line": 36,
          "async": false,
          "calls": [
            "now"
          ],
          "parameters": [
            "self",
            "max_iterations"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "record_iteration",
          "line": 41,
          "async": false,
          "calls": [
            "IterationReason",
            "append",
            "len"
          ],
          "parameters": [
            "self",
            "reason",
            "agent",
            "quality_score",
            "critical_issues"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_generate_iteration_summary",
          "line": 87,
          "async": false,
          "calls": [
            "list",
            "IterationSummary",
            "now",
            "get",
            "extend",
            "_generate_recommendation",
            "set",
            "items",
            "_identify_problem_areas",
            "len",
            "total_seconds",
            "sorted"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_identify_problem_areas",
          "line": 151,
          "async": false,
          "calls": [
            "append",
            "sum",
            "extend",
            "join",
            "lower",
            "items"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_generate_recommendation",
          "line": 178,
          "async": false,
          "calls": [
            "items",
            "any",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "common_issues",
            "agent_performance"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_generate_user_options",
          "line": 207,
          "async": false,
          "calls": [
            "startswith",
            "sorted",
            "len"
          ],
          "parameters": [
            "self",
            "summary"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_get_primary_recommendation",
          "line": 257,
          "async": false,
          "calls": [
            "_generate_user_options",
            "next"
          ],
          "parameters": [
            "self",
            "summary"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "__init__",
          "line": 269,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_display_iteration_analysis",
          "line": 295,
          "async": false,
          "calls": [
            "_format_iteration_timeline",
            "print",
            "_format_common_issues",
            "_format_agent_performance",
            "display_panel",
            "_format_problematic_areas"
          ],
          "parameters": [
            "self",
            "summary",
            "cli_interface"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_format_common_issues",
          "line": 329,
          "async": false,
          "calls": [
            "join",
            "enumerate",
            "append"
          ],
          "parameters": [
            "self",
            "common_issues"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_format_agent_performance",
          "line": 340,
          "async": false,
          "calls": [
            "join",
            "append",
            "items"
          ],
          "parameters": [
            "self",
            "agent_performance"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_format_problematic_areas",
          "line": 359,
          "async": false,
          "calls": [
            "join"
          ],
          "parameters": [
            "self",
            "problematic_areas"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "_format_iteration_timeline",
          "line": 366,
          "async": false,
          "calls": [
            "split",
            "append",
            "insert",
            "join",
            "len"
          ],
          "parameters": [
            "self",
            "reasons"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "__init__",
          "line": 422,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "__init__",
          "line": 530,
          "async": false,
          "calls": [
            "IterationDecisionExecutor",
            "IterationController",
            "UserInteractionHandler"
          ],
          "parameters": [
            "self",
            "max_iterations"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "get_iteration_statistics",
          "line": 566,
          "async": false,
          "calls": [
            "isoformat",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "__init__",
          "line": 37,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "_calculate_intent_score",
          "line": 275,
          "async": false,
          "calls": [
            "search",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "text",
            "config"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "_calculate_enhanced_intent_score",
          "line": 306,
          "async": false,
          "calls": [
            "lower",
            "any",
            "min",
            "_calculate_intent_score"
          ],
          "parameters": [
            "self",
            "text",
            "config",
            "intent_type"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "_extract_entities",
          "line": 343,
          "async": false,
          "calls": [
            "findall",
            "list",
            "fromkeys",
            "lower",
            "items"
          ],
          "parameters": [
            "self",
            "text"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "_assess_complexity",
          "line": 355,
          "async": false,
          "calls": [
            "split",
            "len"
          ],
          "parameters": [
            "self",
            "text",
            "intent"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "get_intent_description",
          "line": 378,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "intent_type"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "__post_init__",
          "line": 26,
          "async": false,
          "calls": [
            "isoformat",
            "now"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "__init__",
          "line": 36,
          "async": false,
          "calls": [
            "LearningSystem",
            "print",
            "_initialize_agents",
            "ExecutionEngine",
            "WorkflowGenerator",
            "IntentClassifier"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_detect_project_type",
          "line": 160,
          "async": false,
          "calls": [
            "print",
            "max",
            "sum",
            "lower",
            "values",
            "search"
          ],
          "parameters": [
            "self",
            "user_input",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_initialize_agents",
          "line": 239,
          "async": false,
          "calls": [
            "DocuBot",
            "ResearchBot",
            "print",
            "CodeSmithClaude",
            "ArchitectGPT",
            "ReviewerGPT",
            "len",
            "TradeStrat",
            "FixerBot"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_get_agent_capabilities",
          "line": 263,
          "async": false,
          "calls": [
            "get_capabilities",
            "items",
            "hasattr"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_optimize_workflow",
          "line": 276,
          "async": false,
          "calls": [
            "enumerate",
            "get"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_get_quality_gates_for_context",
          "line": 294,
          "async": false,
          "calls": [
            "get",
            "hasattr",
            "get_quality_gates"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "_format_response",
          "line": 317,
          "async": false,
          "calls": [
            "get",
            "getattr",
            "len",
            "get_project_specifics",
            "hasattr"
          ],
          "parameters": [
            "self",
            "result",
            "workflow",
            "intent"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "__post_init__",
          "line": 19,
          "async": false,
          "calls": [
            "isoformat",
            "now"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_context_for_agent",
          "line": 26,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_agent_instruction_summary",
          "line": 31,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "add_agent_output",
          "line": 35,
          "async": false,
          "calls": [
            "isoformat",
            "now"
          ],
          "parameters": [
            "self",
            "agent_name",
            "step_id",
            "output"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_iteration_summary",
          "line": 46,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "start_new_iteration",
          "line": 56,
          "async": false,
          "calls": [
            "isoformat",
            "append",
            "now"
          ],
          "parameters": [
            "self",
            "reason"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_relevant_outputs",
          "line": 65,
          "async": false,
          "calls": [
            "items",
            "range"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "create_project_context",
          "line": 83,
          "async": false,
          "calls": [
            "context_class",
            "get",
            "lower",
            "GenericProjectContext"
          ],
          "parameters": [
            "project_type",
            "project_name"
          ],
          "decorators": [
            "staticmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_available_project_types",
          "line": 119,
          "async": false,
          "calls": [],
          "parameters": [],
          "decorators": [
            "staticmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "create_shared_context",
          "line": 136,
          "async": false,
          "calls": [
            "create_project_context",
            "ProjectSharedContext"
          ],
          "parameters": [
            "project_type",
            "user_request",
            "project_name"
          ],
          "decorators": [
            "staticmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "__init__",
          "line": 165,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "project_name",
            "project_type"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_domain_instructions",
          "line": 169,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_quality_gates",
          "line": 193,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_project_specifics",
          "line": 196,
          "async": false,
          "calls": [
            "ProjectSpecification"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "create_context",
          "line": 215,
          "async": false,
          "calls": [
            "create_shared_context"
          ],
          "parameters": [
            "project_type",
            "user_request"
          ],
          "decorators": [
            "staticmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_context_for_agent",
          "line": 229,
          "async": false,
          "calls": [
            "get_relevant_outputs"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_agent_instruction_summary",
          "line": 238,
          "async": false,
          "calls": [
            "dumps",
            "get_relevant_outputs"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "__init__",
          "line": 257,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "update_context",
          "line": 261,
          "async": false,
          "calls": [
            "add_agent_output",
            "isoformat",
            "append",
            "now"
          ],
          "parameters": [
            "self",
            "agent_name",
            "step_id",
            "output"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "should_continue_iteration",
          "line": 273,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "quality_result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "prepare_agent_context",
          "line": 280,
          "async": false,
          "calls": [
            "get_context_for_agent",
            "update",
            "len"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_context_statistics",
          "line": 293,
          "async": false,
          "calls": [
            "get",
            "max",
            "sum",
            "len",
            "values"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_context_for_agent",
          "line": 322,
          "async": false,
          "calls": [
            "get_project_specifics",
            "getattr",
            "update",
            "get_relevant_outputs",
            "get_quality_gates",
            "get_domain_instructions"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "get_agent_instruction_summary",
          "line": 342,
          "async": false,
          "calls": [
            "get_agent_enhancement_instructions",
            "dumps",
            "getattr",
            "get_relevant_outputs",
            "get_domain_instructions",
            "hasattr"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "__init__",
          "line": 17,
          "async": false,
          "calls": [
            "mkdir",
            "print",
            "Path",
            "_load_patterns",
            "_load_metrics",
            "len",
            "_load_history"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "suggest_workflow",
          "line": 75,
          "async": false,
          "calls": [
            "print",
            "_find_similar_executions",
            "max"
          ],
          "parameters": [
            "self",
            "intent"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "get_intent_statistics",
          "line": 129,
          "async": false,
          "calls": [
            "append",
            "get",
            "items",
            "mean"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_load_history",
          "line": 176,
          "async": false,
          "calls": [
            "print",
            "exists",
            "open",
            "load"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_load_patterns",
          "line": 186,
          "async": false,
          "calls": [
            "print",
            "exists",
            "open",
            "load"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_load_metrics",
          "line": 196,
          "async": false,
          "calls": [
            "print",
            "exists",
            "open",
            "load"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_save_all",
          "line": 206,
          "async": false,
          "calls": [
            "print",
            "open",
            "dump"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_calculate_metrics",
          "line": 224,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_was_successful",
          "line": 251,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_record_success_pattern",
          "line": 255,
          "async": false,
          "calls": [
            "append",
            "get",
            "sorted"
          ],
          "parameters": [
            "self",
            "execution_record"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_update_performance_metrics",
          "line": 279,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "execution_record"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_find_similar_executions",
          "line": 303,
          "async": false,
          "calls": [
            "sort",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "intent"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_extract_agents_used",
          "line": 319,
          "async": false,
          "calls": [
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "_calculate_agent_rating",
          "line": 328,
          "async": false,
          "calls": [
            "get",
            "min"
          ],
          "parameters": [
            "self",
            "metrics"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "__init__",
          "line": 28,
          "async": false,
          "calls": [
            "_load_templates"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_load_templates",
          "line": 66,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_select_template",
          "line": 360,
          "async": false,
          "calls": [
            "print",
            "copy",
            "get"
          ],
          "parameters": [
            "self",
            "intent_type"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_customize_workflow",
          "line": 369,
          "async": false,
          "calls": [
            "append",
            "get",
            "WorkflowStep",
            "insert",
            "len",
            "enumerate"
          ],
          "parameters": [
            "self",
            "template",
            "intent",
            "context",
            "user_input"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_optimize_parallel_execution",
          "line": 418,
          "async": false,
          "calls": [
            "range",
            "get",
            "any",
            "max",
            "len"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_validate_agents",
          "line": 453,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "workflow",
            "agent_capabilities"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "_estimate_total_time",
          "line": 472,
          "async": false,
          "calls": [
            "values",
            "get",
            "sum",
            "max"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "get_workflow_summary",
          "line": 491,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "get_default_thresholds",
          "line": 21,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "_analyze_unified_engine",
          "line": 264,
          "async": false,
          "calls": [
            "append",
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "_analyze_future_leak_prevention",
          "line": 293,
          "async": false,
          "calls": [
            "append",
            "max",
            "sum",
            "min",
            "len",
            "search"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "_analyze_iterative_processing",
          "line": 331,
          "async": false,
          "calls": [
            "append",
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "_analyze_engine_chart_decoupling",
          "line": 360,
          "async": false,
          "calls": [
            "append",
            "max",
            "sum",
            "min",
            "len",
            "search"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
        },
        {
          "name": "get_default_thresholds",
          "line": 21,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
        },
        {
          "name": "__init__",
          "line": 63,
          "async": false,
          "calls": [
            "get_default_thresholds"
          ],
          "parameters": [
            "self",
            "gate_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "get_default_thresholds",
          "line": 68,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "create_quality_check",
          "line": 86,
          "async": false,
          "calls": [
            "QualityCheck",
            "max",
            "min"
          ],
          "parameters": [
            "self",
            "name",
            "passed",
            "score",
            "details",
            "recommendations",
            "level",
            "category",
            "file_path",
            "line_numbers"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "calculate_overall_score",
          "line": 111,
          "async": false,
          "calls": [
            "values",
            "get"
          ],
          "parameters": [
            "self",
            "checks"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "determine_pass_status",
          "line": 135,
          "async": false,
          "calls": [
            "values",
            "get"
          ],
          "parameters": [
            "self",
            "overall_score",
            "checks"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "generate_summary",
          "line": 151,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "generate_recommendations",
          "line": 162,
          "async": false,
          "calls": [
            "sort",
            "append",
            "values"
          ],
          "parameters": [
            "self",
            "checks"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "find_pattern_matches",
          "line": 182,
          "async": false,
          "calls": [
            "split",
            "sub",
            "append",
            "group",
            "enumerate",
            "search",
            "strip"
          ],
          "parameters": [
            "self",
            "code",
            "patterns",
            "ignore_comments"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "check_imports",
          "line": 209,
          "async": false,
          "calls": [
            "findall",
            "append",
            "max",
            "join",
            "create_quality_check",
            "len"
          ],
          "parameters": [
            "self",
            "code",
            "required",
            "forbidden"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "check_function_complexity",
          "line": 242,
          "async": false,
          "calls": [
            "findall",
            "startswith",
            "split",
            "append",
            "max",
            "create_quality_check",
            "len",
            "strip"
          ],
          "parameters": [
            "self",
            "code",
            "max_lines"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "get_default_thresholds",
          "line": 21,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_vwap_fibonacci_condition",
          "line": 325,
          "async": false,
          "calls": [
            "append",
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_ema9_logic",
          "line": 354,
          "async": false,
          "calls": [
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_new_high_logic",
          "line": 374,
          "async": false,
          "calls": [
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_crv_requirement",
          "line": 394,
          "async": false,
          "calls": [
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_space_to_382",
          "line": 414,
          "async": false,
          "calls": [
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "_analyze_ron_trading_hours",
          "line": 434,
          "async": false,
          "calls": [
            "append",
            "search",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "get_default_thresholds",
          "line": 21,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_decimal_precision",
          "line": 296,
          "async": false,
          "calls": [
            "findall",
            "append",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_pnl_calculations",
          "line": 317,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_crv_calculations",
          "line": 336,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_position_validation",
          "line": 356,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_stop_loss_logic",
          "line": 376,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_exposure_limits",
          "line": 395,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_market_hours",
          "line": 414,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_audit_trail",
          "line": 433,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_type_annotations",
          "line": 452,
          "async": false,
          "calls": [
            "findall",
            "max",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_exception_patterns",
          "line": 467,
          "async": false,
          "calls": [
            "findall",
            "append",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_graceful_degradation",
          "line": 496,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_docstring_coverage",
          "line": 515,
          "async": false,
          "calls": [
            "findall",
            "max",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_fallback_policy",
          "line": 530,
          "async": false,
          "calls": [
            "append",
            "search",
            "len"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "_check_live_data_policy",
          "line": 555,
          "async": false,
          "calls": [
            "search",
            "sum",
            "min"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "__init__",
          "line": 22,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "get_workflow_steps",
          "line": 35,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "get_step_agents",
          "line": 39,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "get_step_instructions",
          "line": 53,
          "async": false,
          "calls": [
            "getattr",
            "get"
          ],
          "parameters": [
            "self",
            "step",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "validate_step_completion",
          "line": 319,
          "async": false,
          "calls": [
            "sum",
            "get",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "step",
            "step_output"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "get_workflow_description",
          "line": 361,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "get_success_criteria",
          "line": 381,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "__init__",
          "line": 21,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_workflow_steps",
          "line": 38,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_step_agents",
          "line": 42,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_step_instructions",
          "line": 60,
          "async": false,
          "calls": [
            "getattr",
            "get"
          ],
          "parameters": [
            "self",
            "step",
            "context"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "validate_step_completion",
          "line": 580,
          "async": false,
          "calls": [
            "sum",
            "get",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "step",
            "step_output"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_workflow_description",
          "line": 634,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_success_criteria",
          "line": 659,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "get_workflow_for_project_type",
          "line": 43,
          "async": false,
          "calls": [
            "workflow_class",
            "get",
            "lower"
          ],
          "parameters": [
            "project_type"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
        },
        {
          "name": "get_available_workflows",
          "line": 63,
          "async": false,
          "calls": [
            "workflow_class",
            "get_workflow_description",
            "get_workflow_steps",
            "items",
            "len"
          ],
          "parameters": [],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py"
        },
        {
          "name": "__init__",
          "line": 21,
          "async": false,
          "calls": [
            "now"
          ],
          "parameters": [
            "self",
            "name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_workflow_steps",
          "line": 27,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_step_agents",
          "line": 37,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "step"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_step_instructions",
          "line": 50,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "step",
            "context"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "validate_step_completion",
          "line": 64,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "step",
            "step_output"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_workflow_description",
          "line": 78,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_success_criteria",
          "line": 88,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_workflow_info",
          "line": 97,
          "async": false,
          "calls": [
            "get_workflow_description",
            "get_workflow_steps",
            "isoformat",
            "len",
            "get_success_criteria"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "log_execution",
          "line": 113,
          "async": false,
          "calls": [
            "info",
            "now",
            "append",
            "get",
            "isoformat",
            "str",
            "len"
          ],
          "parameters": [
            "self",
            "step",
            "agent",
            "result"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_next_step",
          "line": 135,
          "async": false,
          "calls": [
            "index",
            "warning",
            "get_workflow_steps",
            "len"
          ],
          "parameters": [
            "self",
            "current_step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_step_position",
          "line": 159,
          "async": false,
          "calls": [
            "index",
            "get_workflow_steps",
            "len"
          ],
          "parameters": [
            "self",
            "step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "is_workflow_complete",
          "line": 176,
          "async": false,
          "calls": [
            "get_workflow_steps"
          ],
          "parameters": [
            "self",
            "current_step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_workflow_progress",
          "line": 189,
          "async": false,
          "calls": [
            "get_step_position"
          ],
          "parameters": [
            "self",
            "current_step"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "get_execution_statistics",
          "line": 202,
          "async": false,
          "calls": [
            "max",
            "get",
            "sum",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "__init__",
          "line": 180,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "project_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "get_domain_instructions",
          "line": 183,
          "async": false,
          "calls": [
            "dumps",
            "get_agent_enhancement_instructions"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "get_quality_gates",
          "line": 214,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "get_project_specifics",
          "line": 224,
          "async": false,
          "calls": [
            "ProjectSpecification"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "get_agent_enhancement_instructions",
          "line": 254,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "get_iteration_limits",
          "line": 334,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "__init__",
          "line": 103,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "project_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "get_domain_instructions",
          "line": 106,
          "async": false,
          "calls": [
            "dumps",
            "get_agent_enhancement_instructions"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "get_quality_gates",
          "line": 143,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "get_project_specifics",
          "line": 153,
          "async": false,
          "calls": [
            "ProjectSpecification"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "get_agent_enhancement_instructions",
          "line": 193,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "get_iteration_limits",
          "line": 276,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "__init__",
          "line": 34,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "project_name"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_domain_instructions",
          "line": 38,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_quality_gates",
          "line": 54,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_project_specifics",
          "line": 67,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [
            "abstractmethod"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_agent_enhancement_instructions",
          "line": 76,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_iteration_limits",
          "line": 88,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_conflict_resolution_priorities",
          "line": 103,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "validate_context",
          "line": 122,
          "async": false,
          "calls": [
            "isinstance",
            "get_domain_instructions",
            "len",
            "get_quality_gates",
            "get_project_specifics",
            "strip"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "get_version",
          "line": 18,
          "async": false,
          "calls": [],
          "parameters": [],
          "decorators": [],
          "file": "backend/__version__.py"
        },
        {
          "name": "get_version_tuple",
          "line": 22,
          "async": false,
          "calls": [],
          "parameters": [],
          "decorators": [],
          "file": "backend/__version__.py"
        },
        {
          "name": "is_compatible",
          "line": 26,
          "async": false,
          "calls": [
            "isinstance",
            "map",
            "tuple",
            "split"
          ],
          "parameters": [
            "required_version"
          ],
          "decorators": [],
          "file": "backend/__version__.py"
        },
        {
          "name": "__init__",
          "line": 33,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/test_websocket_debug.py"
        },
        {
          "name": "test_v4_features",
          "line": 14,
          "async": false,
          "calls": [
            "split",
            "print",
            "append",
            "open",
            "join",
            "read",
            "all"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/test_v4_features.py"
        },
        {
          "name": "print_test_header",
          "line": 40,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "title"
          ],
          "decorators": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "print_success",
          "line": 47,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "message"
          ],
          "decorators": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "print_error",
          "line": 52,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "message"
          ],
          "decorators": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "print_info",
          "line": 57,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "message"
          ],
          "decorators": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "test_node",
          "line": 188,
          "async": false,
          "calls": [],
          "parameters": [
            "state"
          ],
          "decorators": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "_extract_file_path",
          "line": 64,
          "async": false,
          "calls": [
            "search",
            "group"
          ],
          "parameters": [
            "self",
            "description"
          ],
          "decorators": [],
          "file": "backend/fixes/orchestrator_file_write_fix.py"
        },
        {
          "name": "_determine_file_path",
          "line": 84,
          "async": false,
          "calls": [
            "lower",
            "_extract_feature_name"
          ],
          "parameters": [
            "self",
            "description"
          ],
          "decorators": [],
          "file": "backend/fixes/orchestrator_file_write_fix.py"
        },
        {
          "name": "_extract_feature_name",
          "line": 123,
          "async": false,
          "calls": [
            "replace",
            "split",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "description"
          ],
          "decorators": [],
          "file": "backend/fixes/orchestrator_file_write_fix.py"
        },
        {
          "name": "enhance_subtask_for_file_writing",
          "line": 27,
          "async": false,
          "calls": [
            "any",
            "get",
            "lower"
          ],
          "parameters": [
            "subtask"
          ],
          "decorators": [],
          "file": "backend/fixes/task_request_enhancement.py"
        },
        {
          "name": "to_file_task",
          "line": 17,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/fixes/task_request_enhancement.py"
        },
        {
          "name": "get_memory_manager",
          "line": 59,
          "async": false,
          "calls": [
            "MemoryManager"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "__init__",
          "line": 31,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "store",
          "line": 39,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "memory_type",
            "data"
          ],
          "decorators": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "retrieve",
          "line": 43,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "memory_type",
            "query"
          ],
          "decorators": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "clear",
          "line": 47,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "memory_type"
          ],
          "decorators": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "__init__",
          "line": 31,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "pause",
          "line": 42,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self",
            "task_id",
            "state",
            "reason"
          ],
          "decorators": [],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "resume",
          "line": 50,
          "async": false,
          "calls": [
            "info",
            "get",
            "pop"
          ],
          "parameters": [
            "self",
            "task_id"
          ],
          "decorators": [],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "is_paused",
          "line": 58,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "task_id"
          ],
          "decorators": [],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "get_shared_context",
          "line": 51,
          "async": false,
          "calls": [
            "SharedContextManager"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "__init__",
          "line": 23,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "set",
          "line": 27,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "key",
            "value"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "get",
          "line": 31,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "key",
            "default"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "update",
          "line": 35,
          "async": false,
          "calls": [
            "update"
          ],
          "parameters": [
            "self",
            "context"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "clear",
          "line": 39,
          "async": false,
          "calls": [
            "clear"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "get_all",
          "line": 43,
          "async": false,
          "calls": [
            "copy"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "get_conversation_context",
          "line": 50,
          "async": false,
          "calls": [
            "ConversationContextManager"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "__init__",
          "line": 23,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "add_message",
          "line": 27,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "conversation_id",
            "role",
            "content"
          ],
          "decorators": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "get_conversation",
          "line": 37,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "conversation_id"
          ],
          "decorators": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "clear_conversation",
          "line": 41,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "conversation_id"
          ],
          "decorators": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "__init__",
          "line": 23,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "file": "backend/core/git_checkpoint_manager.py"
        },
        {
          "name": "create_checkpoint",
          "line": 34,
          "async": false,
          "calls": [
            "append",
            "info",
            "len"
          ],
          "parameters": [
            "self",
            "name",
            "message"
          ],
          "decorators": [],
          "file": "backend/core/git_checkpoint_manager.py"
        },
        {
          "name": "list_checkpoints",
          "line": 45,
          "async": false,
          "calls": [
            "copy"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/git_checkpoint_manager.py"
        },
        {
          "name": "rollback_to",
          "line": 49,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self",
            "checkpoint_id"
          ],
          "decorators": [],
          "file": "backend/core/git_checkpoint_manager.py"
        },
        {
          "name": "__init__",
          "line": 13,
          "async": false,
          "calls": [
            "__init__",
            "super",
            "append",
            "get",
            "join"
          ],
          "parameters": [
            "self",
            "dependencies"
          ],
          "decorators": [],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "__init__",
          "line": 40,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "component",
            "file",
            "line"
          ],
          "decorators": [],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "__init__",
          "line": 65,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "component",
            "reason",
            "solution",
            "file",
            "line"
          ],
          "decorators": [],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/semgrep_analyzer.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/vulture_analyzer.py"
        },
        {
          "name": "__init__",
          "line": 18,
          "async": false,
          "calls": [
            "debug"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/radon_metrics.py"
        },
        {
          "name": "__init__",
          "line": 56,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_classify_files_into_layers",
          "line": 139,
          "async": false,
          "calls": [
            "_detect_file_layer",
            "keys"
          ],
          "parameters": [
            "self",
            "ast_data"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_detect_file_layer",
          "line": 154,
          "async": false,
          "calls": [
            "defaultdict",
            "max",
            "lower",
            "basename",
            "items"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_build_layer_structure",
          "line": 193,
          "async": false,
          "calls": [
            "defaultdict",
            "sort",
            "append",
            "get",
            "items",
            "len"
          ],
          "parameters": [
            "self",
            "file_layers"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_detect_layer_violations",
          "line": 221,
          "async": false,
          "calls": [
            "append",
            "get",
            "_check_layer_violation",
            "items",
            "_resolve_import_to_file"
          ],
          "parameters": [
            "self",
            "file_layers",
            "import_graph"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_resolve_import_to_file",
          "line": 254,
          "async": false,
          "calls": [
            "replace",
            "keys"
          ],
          "parameters": [
            "self",
            "import_name",
            "file_layers"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_check_layer_violation",
          "line": 274,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "from_file",
            "from_layer",
            "to_file",
            "to_layer"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_calculate_quality_score",
          "line": 331,
          "async": false,
          "calls": [
            "defaultdict",
            "max",
            "min",
            "len",
            "round",
            "values"
          ],
          "parameters": [
            "self",
            "file_layers",
            "violations",
            "ast_data"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_calculate_metrics",
          "line": 373,
          "async": false,
          "calls": [
            "values",
            "dict",
            "defaultdict",
            "len"
          ],
          "parameters": [
            "self",
            "file_layers",
            "violations",
            "ast_data"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "_empty_layer_analysis",
          "line": 405,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "__init__",
          "line": 27,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_build_function_registry",
          "line": 120,
          "async": false,
          "calls": [
            "get",
            "items"
          ],
          "parameters": [
            "self",
            "ast_data"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_build_call_relationships",
          "line": 144,
          "async": false,
          "calls": [
            "defaultdict",
            "append",
            "get",
            "dict",
            "_resolve_function_id",
            "items"
          ],
          "parameters": [
            "self",
            "ast_data",
            "function_registry"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_resolve_function_id",
          "line": 179,
          "async": false,
          "calls": [
            "endswith"
          ],
          "parameters": [
            "self",
            "func_name",
            "current_file",
            "function_registry"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_detect_entry_points",
          "line": 206,
          "async": false,
          "calls": [
            "append",
            "any",
            "items",
            "len"
          ],
          "parameters": [
            "self",
            "function_registry",
            "reverse_call_graph"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_find_unused_functions",
          "line": 240,
          "async": false,
          "calls": [
            "startswith",
            "append",
            "items",
            "len",
            "endswith"
          ],
          "parameters": [
            "self",
            "function_registry",
            "reverse_call_graph",
            "entry_points"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_detect_hot_paths",
          "line": 275,
          "async": false,
          "calls": [
            "sort",
            "_bfs_paths",
            "append",
            "len"
          ],
          "parameters": [
            "self",
            "call_graph",
            "entry_points"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_bfs_paths",
          "line": 304,
          "async": false,
          "calls": [
            "add",
            "append",
            "get",
            "deque",
            "set",
            "len",
            "popleft"
          ],
          "parameters": [
            "self",
            "start",
            "call_graph",
            "max_depth"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_build_nodes",
          "line": 336,
          "async": false,
          "calls": [
            "append",
            "get",
            "items",
            "len"
          ],
          "parameters": [
            "self",
            "function_registry",
            "call_graph",
            "reverse_call_graph"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_build_edges",
          "line": 367,
          "async": false,
          "calls": [
            "append",
            "split",
            "get",
            "items"
          ],
          "parameters": [
            "self",
            "call_graph",
            "ast_data"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_analyze_clusters",
          "line": 399,
          "async": false,
          "calls": [
            "split",
            "defaultdict",
            "sort",
            "append",
            "round",
            "get",
            "items",
            "len",
            "enumerate"
          ],
          "parameters": [
            "self",
            "call_graph",
            "function_registry"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_calculate_metrics",
          "line": 446,
          "async": false,
          "calls": [
            "_calculate_call_depth",
            "round",
            "max",
            "len"
          ],
          "parameters": [
            "self",
            "nodes",
            "edges",
            "call_graph"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_calculate_call_depth",
          "line": 477,
          "async": false,
          "calls": [
            "add",
            "_calculate_call_depth",
            "get",
            "max",
            "set",
            "copy"
          ],
          "parameters": [
            "self",
            "func_id",
            "call_graph",
            "visited"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "_empty_call_graph",
          "line": 505,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "__init__",
          "line": 20,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_extract_function_calls",
          "line": 94,
          "async": false,
          "calls": [
            "list",
            "walk",
            "isinstance",
            "append",
            "_get_call_name",
            "set"
          ],
          "parameters": [
            "self",
            "func_node"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_get_call_name",
          "line": 104,
          "async": false,
          "calls": [
            "isinstance"
          ],
          "parameters": [
            "self",
            "call_node"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_get_name",
          "line": 113,
          "async": false,
          "calls": [
            "isinstance",
            "str",
            "_get_attribute_path"
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_get_attribute_path",
          "line": 121,
          "async": false,
          "calls": [
            "isinstance",
            "append",
            "join",
            "reversed"
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_get_decorator_name",
          "line": 132,
          "async": false,
          "calls": [
            "isinstance",
            "str",
            "_get_call_name"
          ],
          "parameters": [
            "self",
            "decorator"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "_extract_import",
          "line": 140,
          "async": false,
          "calls": [
            "isinstance"
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "__init__",
          "line": 22,
          "async": false,
          "calls": [
            "TreeSitterIndexer"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/core/indexing/code_indexer.py"
        },
        {
          "name": "_find_python_files",
          "line": 108,
          "async": false,
          "calls": [
            "endswith",
            "append",
            "walk",
            "join"
          ],
          "parameters": [
            "self",
            "root_path"
          ],
          "decorators": [],
          "file": "backend/core/indexing/code_indexer.py"
        },
        {
          "name": "_count_total_lines",
          "line": 123,
          "async": false,
          "calls": [
            "readlines",
            "open",
            "len"
          ],
          "parameters": [
            "self",
            "files"
          ],
          "decorators": [],
          "file": "backend/core/indexing/code_indexer.py"
        },
        {
          "name": "get_capabilities_loader",
          "line": 187,
          "async": false,
          "calls": [
            "CapabilitiesLoader"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "apply_capabilities_to_agent",
          "line": 194,
          "async": false,
          "calls": [
            "apply_to_config",
            "get_capabilities_loader"
          ],
          "parameters": [
            "agent_config"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "__init__",
          "line": 17,
          "async": false,
          "calls": [
            "_load_capabilities",
            "dirname",
            "join"
          ],
          "parameters": [
            "self",
            "config_path"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "_load_capabilities",
          "line": 32,
          "async": false,
          "calls": [
            "info",
            "safe_load",
            "error",
            "get",
            "open",
            "warning",
            "len",
            "exists"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "get_agent_capabilities",
          "line": 49,
          "async": false,
          "calls": [
            "replace",
            "info",
            "get"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "apply_to_config",
          "line": 83,
          "async": false,
          "calls": [
            "get_agent_capabilities",
            "isinstance",
            "get",
            "debug",
            "getattr"
          ],
          "parameters": [
            "self",
            "agent_config"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "can_agent_write",
          "line": 113,
          "async": false,
          "calls": [
            "startswith",
            "split",
            "get_agent_capabilities",
            "get",
            "fnmatch",
            "rstrip",
            "len",
            "abspath",
            "lstrip"
          ],
          "parameters": [
            "self",
            "agent_name",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "get_all_capabilities",
          "line": 180,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "get_language_directive",
          "line": 124,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "cls"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/config/settings.py"
        },
        {
          "name": "get_timeout",
          "line": 129,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "cls",
            "task_type"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/config/settings.py"
        },
        {
          "name": "update_from_vscode",
          "line": 139,
          "async": false,
          "calls": [
            "_auto_detect_provider"
          ],
          "parameters": [
            "cls",
            "vscode_settings"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/config/settings.py"
        },
        {
          "name": "_auto_detect_provider",
          "line": 229,
          "async": false,
          "calls": [
            "startswith",
            "lower"
          ],
          "parameters": [
            "cls",
            "model"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/config/settings.py"
        },
        {
          "name": "to_dict",
          "line": 251,
          "async": false,
          "calls": [],
          "parameters": [
            "cls"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/config/settings.py"
        },
        {
          "name": "main",
          "line": 273,
          "async": false,
          "calls": [
            "main",
            "print"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/tests/test_agent_file_capabilities.py"
        },
        {
          "name": "setup_method",
          "line": 28,
          "async": false,
          "calls": [
            "mkdtemp"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/tests/test_agent_file_capabilities.py"
        },
        {
          "name": "teardown_method",
          "line": 33,
          "async": false,
          "calls": [
            "rmtree",
            "exists"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/tests/test_agent_file_capabilities.py"
        },
        {
          "name": "__init__",
          "line": 20,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/tests/test_integration.py"
        },
        {
          "name": "record_result",
          "line": 382,
          "async": false,
          "calls": [
            "print",
            "append",
            "now",
            "isoformat"
          ],
          "parameters": [
            "self",
            "test_name",
            "success",
            "details"
          ],
          "decorators": [],
          "file": "backend/tests/test_integration.py"
        },
        {
          "name": "print_summary",
          "line": 406,
          "async": false,
          "calls": [
            "print"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/tests/test_integration.py"
        },
        {
          "name": "get_agent_registry",
          "line": 317,
          "async": false,
          "calls": [
            "AgentRegistry"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "__new__",
          "line": 56,
          "async": false,
          "calls": [
            "super",
            "__new__"
          ],
          "parameters": [
            "cls"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "__init__",
          "line": 62,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "get_agent",
          "line": 167,
          "async": false,
          "calls": [
            "warning"
          ],
          "parameters": [
            "self",
            "agent_id"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "get_available_agents",
          "line": 177,
          "async": false,
          "calls": [
            "append",
            "items"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "find_agent_by_capability",
          "line": 247,
          "async": false,
          "calls": [
            "items"
          ],
          "parameters": [
            "self",
            "capability"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "get_agents_by_capability",
          "line": 257,
          "async": false,
          "calls": [
            "append",
            "items"
          ],
          "parameters": [
            "self",
            "capability"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "get_status",
          "line": 283,
          "async": false,
          "calls": [
            "values",
            "get_available_agents",
            "sum",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "__init__",
          "line": 35,
          "async": false,
          "calls": [
            "join",
            "makedirs",
            "getcwd"
          ],
          "parameters": [
            "self",
            "workspace_path"
          ],
          "decorators": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "_validate_path",
          "line": 55,
          "async": false,
          "calls": [
            "startswith",
            "isabs",
            "match",
            "lstrip",
            "Path",
            "join",
            "str",
            "fnmatch",
            "abspath",
            "relative_to"
          ],
          "parameters": [
            "self",
            "file_path",
            "agent_name",
            "allowed_paths"
          ],
          "decorators": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "_create_backup",
          "line": 118,
          "async": false,
          "calls": [
            "info",
            "now",
            "error",
            "join",
            "copy2",
            "basename",
            "strftime",
            "exists"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "_log_operation",
          "line": 143,
          "async": false,
          "calls": [
            "write",
            "info",
            "append",
            "asdict",
            "open",
            "dumps",
            "join",
            "dirname",
            "makedirs",
            "error"
          ],
          "parameters": [
            "self",
            "operation"
          ],
          "decorators": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "get_audit_log",
          "line": 449,
          "async": false,
          "calls": [
            "asdict"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "__init__",
          "line": 36,
          "async": false,
          "calls": [
            "ImportError"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/tools/browser_tester.py"
        },
        {
          "name": "__init__",
          "line": 63,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "ClaudeCodeConfig",
            "super",
            "is_available",
            "ClaudeCodeService",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixerbot_agent.py"
        },
        {
          "name": "_match_pattern",
          "line": 187,
          "async": false,
          "calls": [
            "any",
            "search",
            "items"
          ],
          "parameters": [
            "self",
            "error_text",
            "files"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixerbot_agent.py"
        },
        {
          "name": "__init__",
          "line": 37,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "OpenAIService"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "check_asimov_violations",
          "line": 205,
          "async": false,
          "calls": [
            "append",
            "search",
            "lower"
          ],
          "parameters": [
            "self",
            "code"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "_calculate_html_app_quality_score",
          "line": 429,
          "async": false,
          "calls": [
            "max",
            "get",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "test_result"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "_get_recommendation",
          "line": 463,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "quality_score",
            "test_result"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "_format_metrics",
          "line": 478,
          "async": false,
          "calls": [
            "join",
            "isinstance",
            "items",
            "append"
          ],
          "parameters": [
            "self",
            "metrics"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "__init__",
          "line": 28,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "ClaudeCodeConfig",
            "super",
            "is_available",
            "ClaudeCodeService",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/tradestrat_agent.py"
        },
        {
          "name": "__init__",
          "line": 28,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "OpenAIService"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/docubot_agent.py"
        },
        {
          "name": "__init__",
          "line": 116,
          "async": false,
          "calls": [
            "AgentConfig",
            "super",
            "VultureAnalyzer",
            "getcwd",
            "getenv",
            "CacheNotAvailableError",
            "RadonMetrics",
            "abspath",
            "SemgrepAnalyzer",
            "start",
            "LayerAnalyzer",
            "_load_architecture_patterns",
            "apply_capabilities_to_agent",
            "dirname",
            "ProjectCache",
            "__init__",
            "warning",
            "LightweightCodeSearch",
            "OpenAIService",
            "info",
            "TreeSitterIndexer",
            "CallGraphAnalyzer",
            "SmartFileWatcher",
            "CodeIndexer",
            "_load_tech_stacks",
            "basename",
            "DiagramService"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_parse_architecture_response",
          "line": 484,
          "async": false,
          "calls": [
            "append",
            "get",
            "capitalize",
            "ArchitectureDesign",
            "lower",
            "upper"
          ],
          "parameters": [
            "self",
            "response",
            "requirements"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_extract_features",
          "line": 600,
          "async": false,
          "calls": [
            "append",
            "lower"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_load_architecture_patterns",
          "line": 619,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "__del__",
          "line": 742,
          "async": false,
          "calls": [
            "stop",
            "info",
            "error",
            "hasattr"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_load_tech_stacks",
          "line": 754,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_generate_redis_config",
          "line": 845,
          "async": false,
          "calls": [
            "now",
            "get",
            "isoformat",
            "join",
            "keys"
          ],
          "parameters": [
            "self",
            "params"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_generate_docker_compose",
          "line": 912,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "services"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "_detect_request_type",
          "line": 1391,
          "async": false,
          "calls": [
            "any",
            "lower"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "__init__",
          "line": 89,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "ClaudeCodeConfig",
            "super",
            "VultureAnalyzer",
            "TreeSitterIndexer",
            "apply_capabilities_to_agent",
            "is_available",
            "CodeIndexer",
            "warning",
            "ClaudeCodeService",
            "RadonMetrics",
            "DiagramService",
            "error",
            "_load_language_configs",
            "_load_code_patterns"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "format_implementation",
          "line": 890,
          "async": false,
          "calls": [
            "join",
            "append"
          ],
          "parameters": [
            "self",
            "implementation"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_detect_language",
          "line": 926,
          "async": false,
          "calls": [
            "lower",
            "items"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_extract_functionality",
          "line": 953,
          "async": false,
          "calls": [
            "split",
            "lower",
            "strip"
          ],
          "parameters": [
            "self",
            "response"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_assess_complexity",
          "line": 965,
          "async": false,
          "calls": [
            "any",
            "lower"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_generate_filename",
          "line": 978,
          "async": false,
          "calls": [
            "split",
            "get",
            "join",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "prompt",
            "language"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_extract_dependencies",
          "line": 1004,
          "async": false,
          "calls": [
            "list",
            "startswith",
            "findall",
            "split",
            "set"
          ],
          "parameters": [
            "self",
            "code",
            "language"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_get_test_framework",
          "line": 1027,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "language"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_load_code_patterns",
          "line": 1046,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_load_language_configs",
          "line": 1068,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_generate_fix_suggestion",
          "line": 1681,
          "async": false,
          "calls": [
            "join",
            "append"
          ],
          "parameters": [
            "self",
            "issues",
            "line_content"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_check_for_hallucination",
          "line": 1769,
          "async": false,
          "calls": [
            "error",
            "lower"
          ],
          "parameters": [
            "self",
            "content"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_validate_workspace_context",
          "line": 1791,
          "async": false,
          "calls": [
            "info",
            "getcwd",
            "warning",
            "join",
            "exists"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_enforce_asimov_rule_1",
          "line": 1825,
          "async": false,
          "calls": [
            "info",
            "warning",
            "any",
            "ValueError",
            "lower"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_extract_file_path",
          "line": 1978,
          "async": false,
          "calls": [
            "search",
            "group"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_generate_file_path",
          "line": 1995,
          "async": false,
          "calls": [
            "lower",
            "_extract_feature_name"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "_extract_feature_name",
          "line": 2028,
          "async": false,
          "calls": [
            "findall",
            "replace",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "__init__",
          "line": 38,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "OpenAIService",
            "info",
            "getattr"
          ],
          "parameters": [
            "self",
            "model"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixer_gpt_agent.py"
        },
        {
          "name": "_create_fresh_perspective_prompt",
          "line": 70,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "issue",
            "previous_attempts",
            "research_results"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixer_gpt_agent.py"
        },
        {
          "name": "_format_previous_attempts",
          "line": 110,
          "async": false,
          "calls": [
            "enumerate",
            "get"
          ],
          "parameters": [
            "self",
            "attempts"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixer_gpt_agent.py"
        },
        {
          "name": "_format_research_results",
          "line": 124,
          "async": false,
          "calls": [
            "enumerate",
            "get"
          ],
          "parameters": [
            "self",
            "research"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/fixer_gpt_agent.py"
        },
        {
          "name": "__init__",
          "line": 48,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "OpenAIService"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "_extract_bottlenecks",
          "line": 194,
          "async": false,
          "calls": [
            "list",
            "append",
            "sort_stats",
            "items",
            "round"
          ],
          "parameters": [
            "self",
            "stats"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "_parse_profile_stats",
          "line": 275,
          "async": false,
          "calls": [
            "split",
            "append",
            "isdigit",
            "join",
            "len",
            "replace",
            "splitlines"
          ],
          "parameters": [
            "self",
            "stats_output"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "_format_profile_results",
          "line": 296,
          "async": false,
          "calls": [
            "title",
            "append",
            "get",
            "join",
            "items",
            "replace",
            "enumerate"
          ],
          "parameters": [
            "self",
            "profile"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "_format_package_analysis",
          "line": 437,
          "async": false,
          "calls": [
            "join",
            "append",
            "len"
          ],
          "parameters": [
            "self",
            "package_name",
            "analysis"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "__init__",
          "line": 34,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "info",
            "PerplexityService",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/research_agent.py"
        },
        {
          "name": "__init__",
          "line": 50,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super",
            "OpenAIService"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent_v2.py"
        },
        {
          "name": "set_planning_mode",
          "line": 154,
          "async": false,
          "calls": [
            "info",
            "warning"
          ],
          "parameters": [
            "self",
            "mode"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent_v2.py"
        },
        {
          "name": "__init__",
          "line": 28,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "ClaudeCodeConfig",
            "super",
            "is_available",
            "ClaudeCodeService",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/opus_arbitrator_agent.py"
        },
        {
          "name": "__init__",
          "line": 75,
          "async": false,
          "calls": [
            "AgentConfig",
            "__init__",
            "super"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "_calculate_critical_path_duration",
          "line": 530,
          "async": false,
          "calls": [
            "_get_chain_duration",
            "max",
            "sum"
          ],
          "parameters": [
            "self",
            "subtasks"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "_get_chain_duration",
          "line": 545,
          "async": false,
          "calls": [
            "_get_chain_duration",
            "max"
          ],
          "parameters": [
            "self",
            "start_task",
            "all_tasks"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "_group_by_dependency_level",
          "line": 689,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "workflow"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "_dependencies_met",
          "line": 710,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "step",
            "completed",
            "workflow"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "format_orchestration_result",
          "line": 762,
          "async": false,
          "calls": [
            "join",
            "append",
            "str",
            "get"
          ],
          "parameters": [
            "self",
            "decomposition",
            "results"
          ],
          "decorators": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "__init__",
          "line": 138,
          "async": false,
          "calls": [
            "GitCheckpointManager",
            "info",
            "get_shared_context",
            "_get_language_directive",
            "cwd",
            "PauseHandler",
            "getcwd",
            "isinstance",
            "get",
            "_load_instructions",
            "FileSystemTools",
            "getattr",
            "set",
            "get_memory_manager",
            "str",
            "get_conversation_context",
            "hasattr"
          ],
          "parameters": [
            "self",
            "config"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "_load_instructions",
          "line": 223,
          "async": false,
          "calls": [
            "startswith",
            "info",
            "getcwd",
            "append",
            "warning",
            "open",
            "extend",
            "join",
            "dirname",
            "read",
            "replace",
            "abspath",
            "exists"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "_get_language_directive",
          "line": 256,
          "async": false,
          "calls": [
            "get_language_directive"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "get_system_prompt",
          "line": 268,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "calculate_dynamic_timeout",
          "line": 558,
          "async": false,
          "calls": [
            "info",
            "max",
            "get",
            "lower",
            "items",
            "len",
            "min"
          ],
          "parameters": [
            "self",
            "prompt",
            "context"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "_compile_research_summary",
          "line": 847,
          "async": false,
          "calls": [
            "extend",
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "findings"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "set_websocket_callback",
          "line": 1025,
          "async": false,
          "calls": [
            "set_websocket_callback"
          ],
          "parameters": [
            "self",
            "callback"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "get_status",
          "line": 1031,
          "async": false,
          "calls": [
            "isoformat",
            "get_pause_state",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "__repr__",
          "line": 1201,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "validate_request",
          "line": 126,
          "async": false,
          "calls": [
            "check_research_requirements",
            "get",
            "_check_violations"
          ],
          "parameters": [
            "cls",
            "request"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "_check_violations",
          "line": 173,
          "async": false,
          "calls": [
            "append",
            "lower",
            "items",
            "len",
            "search"
          ],
          "parameters": [
            "cls",
            "prompt",
            "context"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "check_research_requirements",
          "line": 247,
          "async": false,
          "calls": [
            "findall",
            "list",
            "append",
            "get",
            "join",
            "set",
            "lower",
            "items",
            "len",
            "search"
          ],
          "parameters": [
            "cls",
            "prompt",
            "context"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "format_challenge_response",
          "line": 316,
          "async": false,
          "calls": [
            "enumerate",
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "cls",
            "validation_result"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "get_directive_prompt",
          "line": 344,
          "async": false,
          "calls": [
            "join",
            "append"
          ],
          "parameters": [
            "cls"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "check_global_error_search",
          "line": 365,
          "async": false,
          "calls": [],
          "parameters": [
            "cls",
            "error_found",
            "file_location"
          ],
          "decorators": [
            "classmethod"
          ],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "__post_init__",
          "line": 26,
          "async": false,
          "calls": [
            "now"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "to_dict",
          "line": 32,
          "async": false,
          "calls": [
            "isoformat"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "__init__",
          "line": 47,
          "async": false,
          "calls": [
            "__init__",
            "super"
          ],
          "parameters": [
            "self",
            "config"
          ],
          "decorators": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "format_response",
          "line": 193,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "content",
            "status"
          ],
          "decorators": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "get_chat_status",
          "line": 203,
          "async": false,
          "calls": [
            "update",
            "get_status",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "__init__",
          "line": 21,
          "async": false,
          "calls": [
            "ValueError",
            "info",
            "getenv"
          ],
          "parameters": [
            "self",
            "model"
          ],
          "decorators": [],
          "file": "backend/utils/perplexity_service.py"
        },
        {
          "name": "test_connection",
          "line": 314,
          "async": false,
          "calls": [
            "error",
            "post"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/utils/perplexity_service.py"
        },
        {
          "name": "__init__",
          "line": 33,
          "async": false,
          "calls": [
            "ClaudeCodeConfig",
            "_check_cli_availability"
          ],
          "parameters": [
            "self",
            "config"
          ],
          "decorators": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "_check_cli_availability",
          "line": 40,
          "async": false,
          "calls": [
            "run",
            "info",
            "error",
            "strip"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "_parse_json_response",
          "line": 136,
          "async": false,
          "calls": [
            "startswith",
            "split",
            "loads",
            "isinstance",
            "append",
            "get",
            "warning",
            "join",
            "type",
            "strip"
          ],
          "parameters": [
            "self",
            "response"
          ],
          "decorators": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "is_available",
          "line": 252,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "__init__",
          "line": 34,
          "async": false,
          "calls": [
            "info",
            "AsyncOpenAI",
            "getenv",
            "warning",
            "OpenAIConfig"
          ],
          "parameters": [
            "self",
            "config",
            "model"
          ],
          "decorators": [],
          "file": "backend/utils/openai_service.py"
        },
        {
          "name": "is_available",
          "line": 266,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/utils/openai_service.py"
        },
        {
          "name": "__init__",
          "line": 34,
          "async": false,
          "calls": [
            "info",
            "getenv",
            "warning",
            "AsyncAnthropic",
            "AnthropicConfig"
          ],
          "parameters": [
            "self",
            "config"
          ],
          "decorators": [],
          "file": "backend/utils/anthropic_service.py"
        },
        {
          "name": "_format_outputs",
          "line": 241,
          "async": false,
          "calls": [
            "join",
            "enumerate",
            "get",
            "append"
          ],
          "parameters": [
            "self",
            "outputs"
          ],
          "decorators": [],
          "file": "backend/utils/anthropic_service.py"
        },
        {
          "name": "is_available",
          "line": 251,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/utils/anthropic_service.py"
        },
        {
          "name": "__init__",
          "line": 35,
          "async": false,
          "calls": [
            "_init_fallback_responses",
            "_init_query_patterns"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "_init_fallback_responses",
          "line": 39,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "_init_query_patterns",
          "line": 119,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "analyze_query",
          "line": 148,
          "async": false,
          "calls": [
            "split",
            "get",
            "any",
            "QueryAnalysis",
            "lower",
            "len"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "get_intelligent_response",
          "line": 219,
          "async": false,
          "calls": [
            "analyze_query",
            "any",
            "lower"
          ],
          "parameters": [
            "self",
            "query",
            "context"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "create_intelligent_execution_plan",
          "line": 256,
          "async": false,
          "calls": [
            "get_intelligent_response",
            "analyze_query",
            "ExecutionStep"
          ],
          "parameters": [
            "self",
            "query",
            "fallback_agent"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "enhance_orchestrator_step",
          "line": 344,
          "async": false,
          "calls": [
            "get_intelligent_response",
            "info",
            "len"
          ],
          "parameters": [
            "self",
            "step",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "integrate_with_classification",
          "line": 359,
          "async": false,
          "calls": [
            "_get_development_guidance",
            "get"
          ],
          "parameters": [
            "self",
            "classification"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "_get_development_guidance",
          "line": 389,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "dev_type"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "__init__",
          "line": 24,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "check_docker_installed",
          "line": 28,
          "async": false,
          "calls": [
            "run"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "check_redis_running",
          "line": 41,
          "async": false,
          "calls": [
            "Redis",
            "ping"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "start_redis_container",
          "line": 51,
          "async": false,
          "calls": [
            "run",
            "info",
            "check_redis_running",
            "append",
            "str",
            "sleep",
            "check_docker_installed"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "fill_caches",
          "line": 131,
          "async": false,
          "calls": [
            "append",
            "extend",
            "join",
            "start_redis_container",
            "set"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "__init__",
          "line": 33,
          "async": false,
          "calls": [
            "getLogger"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "analyze_context",
          "line": 36,
          "async": false,
          "calls": [
            "bool",
            "sum",
            "any",
            "DevelopmentContext",
            "lower",
            "search"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_performance_query",
          "line": 77,
          "async": false,
          "calls": [
            "analyze_context"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_bug_query",
          "line": 116,
          "async": false,
          "calls": [
            "analyze_context"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_refactoring_query",
          "line": 162,
          "async": false,
          "calls": [
            "analyze_context"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_testing_query",
          "line": 204,
          "async": false,
          "calls": [
            "analyze_context"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_implementation_query",
          "line": 253,
          "async": false,
          "calls": [
            "lower",
            "any"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_technology_query",
          "line": 311,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_database_query",
          "line": 355,
          "async": false,
          "calls": [
            "lower",
            "any"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_ai_integration_query",
          "line": 417,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_error_diagnosis_query",
          "line": 470,
          "async": false,
          "calls": [
            "lower",
            "any"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_scope_clarification",
          "line": 546,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "get_handler_for_type",
          "line": 604,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "dev_type"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "handle_development_query",
          "line": 622,
          "async": false,
          "calls": [
            "get_handler_for_type",
            "handler"
          ],
          "parameters": [
            "self",
            "query",
            "dev_type",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "suggest_next_steps",
          "line": 647,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "query_type"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "summary",
          "line": 57,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "__init__",
          "line": 71,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "classify_query",
          "line": 161,
          "async": false,
          "calls": [
            "_is_greeting",
            "_calculate_coherence",
            "encode",
            "DetailedClassification",
            "_calculate_confidence",
            "_has_context_reference",
            "_check_pattern",
            "_prepare_responses",
            "_calculate_safety",
            "md5",
            "hexdigest",
            "lower",
            "_determine_action",
            "_check_development_patterns",
            "strip",
            "_is_nonsense"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_is_greeting",
          "line": 208,
          "async": false,
          "calls": [
            "startswith",
            "split",
            "lower"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_is_nonsense",
          "line": 228,
          "async": false,
          "calls": [
            "split",
            "match",
            "set",
            "len",
            "search"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_has_context_reference",
          "line": 249,
          "async": false,
          "calls": [
            "startswith"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_check_pattern",
          "line": 259,
          "async": false,
          "calls": [
            "any"
          ],
          "parameters": [
            "self",
            "query",
            "patterns"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_check_development_patterns",
          "line": 263,
          "async": false,
          "calls": [
            "_has_context_reference",
            "split",
            "len",
            "_check_pattern"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_calculate_coherence",
          "line": 319,
          "async": false,
          "calls": [
            "split",
            "match",
            "max",
            "set",
            "min",
            "len"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_calculate_confidence",
          "line": 342,
          "async": false,
          "calls": [
            "max",
            "min"
          ],
          "parameters": [
            "self",
            "classification"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_calculate_safety",
          "line": 364,
          "async": false,
          "calls": [
            "get",
            "max",
            "min"
          ],
          "parameters": [
            "self",
            "classification",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_determine_action",
          "line": 386,
          "async": false,
          "calls": [
            "_get_dev_agent"
          ],
          "parameters": [
            "self",
            "classification",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_get_dev_agent",
          "line": 436,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "dev_type"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_prepare_responses",
          "line": 450,
          "async": false,
          "calls": [
            "split"
          ],
          "parameters": [
            "self",
            "classification"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "__init__",
          "line": 527,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "is_safe",
          "line": 530,
          "async": false,
          "calls": [
            "_is_duplicate",
            "get",
            "warning",
            "_detect_loop_pattern",
            "_check_resource_exhaustion"
          ],
          "parameters": [
            "self",
            "classification",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_is_duplicate",
          "line": 562,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "query_hash"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_detect_loop_pattern",
          "line": 568,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "_check_resource_exhaustion",
          "line": 577,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "record_execution",
          "line": 589,
          "async": false,
          "calls": [
            "append",
            "now",
            "len"
          ],
          "parameters": [
            "self",
            "query_hash"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "__init__",
          "line": 57,
          "async": false,
          "calls": [
            "_initialize_patterns",
            "deque"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_initialize_patterns",
          "line": 61,
          "async": false,
          "calls": [
            "KnownAntiPattern"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "detect_patterns",
          "line": 138,
          "async": false,
          "calls": [
            "append",
            "now",
            "_get_detection_reason",
            "_check_pattern"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_check_pattern",
          "line": 154,
          "async": false,
          "calls": [
            "get",
            "_has_circular_dependencies",
            "len"
          ],
          "parameters": [
            "self",
            "pattern",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_has_circular_dependencies",
          "line": 205,
          "async": false,
          "calls": [
            "add",
            "next",
            "remove",
            "set",
            "has_cycle_from"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_get_detection_reason",
          "line": 231,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "pattern",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "__init__",
          "line": 254,
          "async": false,
          "calls": [
            "_define_invariants"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_define_invariants",
          "line": 258,
          "async": false,
          "calls": [
            "_check_dependencies_exist",
            "get",
            "any",
            "_check_valid_transitions",
            "len",
            "_check_agent_capabilities",
            "_check_unique_ids"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "check_all",
          "line": 328,
          "async": false,
          "calls": [
            "append",
            "error",
            "now",
            "len"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_check_valid_transitions",
          "line": 347,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_check_unique_ids",
          "line": 366,
          "async": false,
          "calls": [
            "get",
            "set",
            "len"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_check_dependencies_exist",
          "line": 372,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_check_agent_capabilities",
          "line": 383,
          "async": false,
          "calls": [
            "warning",
            "any",
            "get",
            "lower"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "__init__",
          "line": 418,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "known_patterns",
            "invariants"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_calculate_dependency_depth",
          "line": 679,
          "async": false,
          "calls": [
            "get",
            "max",
            "get_depth"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_find_parallelizable_steps",
          "line": 693,
          "async": false,
          "calls": [
            "add",
            "append",
            "set",
            "len",
            "_has_dependency_conflict"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_has_dependency_conflict",
          "line": 716,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "step1",
            "step2",
            "all_steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_is_in_cycle",
          "line": 721,
          "async": false,
          "calls": [
            "add",
            "next",
            "remove",
            "set",
            "has_cycle"
          ],
          "parameters": [
            "self",
            "step",
            "all_steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "__init__",
          "line": 755,
          "async": false,
          "calls": [
            "_initialize_patterns",
            "deque"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_initialize_patterns",
          "line": 760,
          "async": false,
          "calls": [
            "_detect_collaboration_spiral",
            "_detect_resource_spike",
            "_detect_routing_loop",
            "_detect_timeout_cluster",
            "_detect_stuck_progress"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "analyze_patterns",
          "line": 790,
          "async": false,
          "calls": [
            "append",
            "get",
            "extend",
            "items",
            "min",
            "len",
            "_detect_statistical_anomalies"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_routing_loop",
          "line": 831,
          "async": false,
          "calls": [
            "get",
            "all",
            "len"
          ],
          "parameters": [
            "self",
            "history"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_collaboration_spiral",
          "line": 840,
          "async": false,
          "calls": [
            "get",
            "len"
          ],
          "parameters": [
            "self",
            "history"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_stuck_progress",
          "line": 853,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "metrics"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_resource_spike",
          "line": 858,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "metrics"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_timeout_cluster",
          "line": 863,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "events"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "_detect_statistical_anomalies",
          "line": 868,
          "async": false,
          "calls": [
            "append",
            "max",
            "get",
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "__init__",
          "line": 910,
          "async": false,
          "calls": [
            "deque"
          ],
          "parameters": [
            "self",
            "invariants",
            "validator",
            "pattern_engine"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "__init__",
          "line": 1104,
          "async": false,
          "calls": [
            "SelfTestFramework",
            "PatternRecognitionEngine",
            "info",
            "PreExecutionValidator",
            "KnownAntiPatternsDatabase",
            "WorkflowInvariants"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "get_diagnosis_report",
          "line": 1175,
          "async": false,
          "calls": [
            "list",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "has_cycle_from",
          "line": 208,
          "async": false,
          "calls": [
            "remove",
            "add",
            "next",
            "has_cycle_from"
          ],
          "parameters": [
            "step_id",
            "visited",
            "path"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "get_depth",
          "line": 681,
          "async": false,
          "calls": [
            "get",
            "get_depth",
            "max"
          ],
          "parameters": [
            "step_id",
            "steps_dict"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "has_cycle",
          "line": 726,
          "async": false,
          "calls": [
            "has_cycle",
            "remove",
            "add",
            "next"
          ],
          "parameters": [
            "s_id"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "create_agent_workflow",
          "line": 3015,
          "async": false,
          "calls": [
            "AgentWorkflow",
            "compile_workflow"
          ],
          "parameters": [
            "websocket_manager",
            "db_path",
            "memory_db_path"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "__init__",
          "line": 105,
          "async": false,
          "calls": [
            "ApprovalManager",
            "_init_agent_memories",
            "info",
            "DynamicWorkflowManager",
            "DevelopmentQueryHandler",
            "EnhancedQueryClassifier",
            "_init_real_agents",
            "SafeOrchestratorExecutor",
            "WorkflowSelfDiagnosisSystem",
            "get_tool_registry",
            "MemorySaver",
            "IntelligentQueryHandler",
            "error"
          ],
          "parameters": [
            "self",
            "websocket_manager",
            "db_path",
            "memory_db_path"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_init_agent_memories",
          "line": 182,
          "async": false,
          "calls": [
            "PersistentAgentMemory"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_init_real_agents",
          "line": 203,
          "async": false,
          "calls": [
            "info",
            "ArchitectAgent",
            "ResearchAgent",
            "CodeSmithAgent",
            "warning",
            "OrchestratorAgent",
            "ReviewerGPTAgent",
            "len",
            "FixerBotAgent",
            "exception",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "create_task_ledger",
          "line": 251,
          "async": false,
          "calls": [
            "extract_success_criteria",
            "TaskLedger",
            "get",
            "now"
          ],
          "parameters": [
            "self",
            "task",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "extract_success_criteria",
          "line": 285,
          "async": false,
          "calls": [
            "append",
            "lower",
            "any"
          ],
          "parameters": [
            "self",
            "task"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "create_progress_ledger",
          "line": 309,
          "async": false,
          "calls": [
            "ProgressLedger",
            "update_from_steps",
            "len"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "identify_parallel_groups",
          "line": 372,
          "async": false,
          "calls": [
            "add",
            "append",
            "set",
            "len",
            "_has_dependency_conflict"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_has_dependency_conflict",
          "line": 414,
          "async": false,
          "calls": [
            "_get_all_dependencies"
          ],
          "parameters": [
            "self",
            "step1",
            "step2",
            "all_steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_get_all_dependencies",
          "line": 432,
          "async": false,
          "calls": [
            "list",
            "add",
            "append",
            "next",
            "set",
            "pop"
          ],
          "parameters": [
            "self",
            "step",
            "all_steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "route_after_approval",
          "line": 1231,
          "async": false,
          "calls": [
            "list",
            "info",
            "get",
            "warning",
            "len",
            "enumerate",
            "_dependencies_met"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "route_from_architect",
          "line": 1290,
          "async": false,
          "calls": [
            "route_to_next_agent",
            "list",
            "info",
            "get"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "route_to_next_agent",
          "line": 1319,
          "async": false,
          "calls": [
            "list",
            "update_from_steps",
            "route_to_next_agent",
            "info",
            "now",
            "get",
            "any",
            "create_task",
            "warning",
            "run_health_check",
            "real_time_monitoring",
            "check_and_handle_timeouts",
            "len",
            "error",
            "_dependencies_met"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_dependencies_met",
          "line": 1418,
          "async": false,
          "calls": [
            "next"
          ],
          "parameters": [
            "self",
            "step",
            "all_steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_get_current_step",
          "line": 1426,
          "async": false,
          "calls": [
            "get",
            "next"
          ],
          "parameters": [
            "self",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_get_step_by_agent",
          "line": 1433,
          "async": false,
          "calls": [
            "reversed"
          ],
          "parameters": [
            "self",
            "state",
            "agent"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_check_escalation_needed",
          "line": 1440,
          "async": false,
          "calls": [
            "info",
            "get",
            "any",
            "chr",
            "insert",
            "join",
            "dirname",
            "getattr",
            "len",
            "enumerate",
            "error"
          ],
          "parameters": [
            "self",
            "state",
            "suggested_agent",
            "suggested_query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_calculate_agent_confidence",
          "line": 1903,
          "async": false,
          "calls": [
            "debug",
            "get",
            "items"
          ],
          "parameters": [
            "self",
            "task_lower"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_create_single_agent_step",
          "line": 1958,
          "async": false,
          "calls": [
            "info",
            "enhance_orchestrator_step",
            "get",
            "ExecutionStep",
            "len",
            "get_intelligent_response"
          ],
          "parameters": [
            "self",
            "agent",
            "task"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_detect_task_complexity",
          "line": 2006,
          "async": false,
          "calls": [
            "info",
            "split",
            "any",
            "lower",
            "len",
            "endswith",
            "count",
            "strip"
          ],
          "parameters": [
            "self",
            "task"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_apply_plan_modifications",
          "line": 2194,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "plan",
            "modifications"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "_format_proposal_for_user",
          "line": 2385,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "proposal"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "create_workflow",
          "line": 2791,
          "async": false,
          "calls": [
            "add_edge",
            "add_node",
            "set_entry_point",
            "StateGraph",
            "add_conditional_edges"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "compile_workflow",
          "line": 2867,
          "async": false,
          "calls": [
            "compile",
            "info",
            "create_workflow"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "create_initial_state",
          "line": 245,
          "async": false,
          "calls": [
            "now",
            "getcwd",
            "ExtendedAgentState",
            "str",
            "uuid4"
          ],
          "parameters": [
            "session_id",
            "client_id",
            "workspace_path",
            "plan_first_mode",
            "debug_mode"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "__post_init__",
          "line": 70,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "is_timeout",
          "line": 77,
          "async": false,
          "calls": [
            "total_seconds",
            "now"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "can_retry",
          "line": 84,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "get_retry_delay",
          "line": 88,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "__post_init__",
          "line": 109,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "__post_init__",
          "line": 132,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "update_from_steps",
          "line": 139,
          "async": false,
          "calls": [
            "sum",
            "len"
          ],
          "parameters": [
            "self",
            "steps"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "add_attempt",
          "line": 41,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "attempt"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "__init__",
          "line": 68,
          "async": false,
          "calls": [
            "ExecutionHistory",
            "getLogger",
            "DevelopmentQueryHandler",
            "EnhancedQueryClassifier",
            "ExecutionGuard"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "_generate_query_hash",
          "line": 75,
          "async": false,
          "calls": [
            "encode",
            "md5",
            "hexdigest",
            "lower",
            "strip"
          ],
          "parameters": [
            "self",
            "query"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "_detect_loop_pattern",
          "line": 80,
          "async": false,
          "calls": [
            "warning",
            "min",
            "range",
            "len"
          ],
          "parameters": [
            "self",
            "recent_hashes"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "_get_safe_fallback_response",
          "line": 102,
          "async": false,
          "calls": [
            "handle_development_query"
          ],
          "parameters": [
            "self",
            "query",
            "classification"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "get_execution_stats",
          "line": 314,
          "async": false,
          "calls": [
            "split",
            "get",
            "sum",
            "items",
            "len",
            "sorted"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "should_use_safe_execution",
          "line": 351,
          "async": false,
          "calls": [
            "isinstance",
            "append",
            "get",
            "any",
            "classify_query",
            "dict",
            "set",
            "len",
            "hasattr"
          ],
          "parameters": [
            "self",
            "query",
            "state"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "reset_history",
          "line": 399,
          "async": false,
          "calls": [
            "ExecutionHistory",
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "__init__",
          "line": 48,
          "async": false,
          "calls": [
            "_extract_base_structure"
          ],
          "parameters": [
            "self",
            "base_graph"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "_extract_base_structure",
          "line": 75,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "add_node",
          "line": 81,
          "async": false,
          "calls": [
            "DynamicNode",
            "info",
            "warning"
          ],
          "parameters": [
            "self",
            "name",
            "func",
            "node_type",
            "description",
            "metadata"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "remove_node",
          "line": 118,
          "async": false,
          "calls": [
            "info",
            "warning"
          ],
          "parameters": [
            "self",
            "name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "add_edge",
          "line": 149,
          "async": false,
          "calls": [
            "error",
            "DynamicEdge",
            "info",
            "append"
          ],
          "parameters": [
            "self",
            "source",
            "target",
            "condition",
            "metadata"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "add_conditional_routing",
          "line": 188,
          "async": false,
          "calls": [
            "append",
            "info",
            "ConditionalRoute"
          ],
          "parameters": [
            "self",
            "source",
            "condition",
            "routes",
            "metadata"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "compile_graph",
          "line": 218,
          "async": false,
          "calls": [
            "add_edge",
            "info",
            "append",
            "add_node",
            "StateGraph",
            "compile",
            "items",
            "len",
            "add_conditional_edges"
          ],
          "parameters": [
            "self",
            "state_class"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "create_template",
          "line": 272,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self",
            "name",
            "nodes",
            "edges",
            "routes",
            "description"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "apply_template",
          "line": 303,
          "async": false,
          "calls": [
            "add_edge",
            "info",
            "add_node",
            "add_conditional_routing",
            "items",
            "error"
          ],
          "parameters": [
            "self",
            "template_name",
            "node_prefix",
            "parameter_mapping"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "rollback",
          "line": 361,
          "async": false,
          "calls": [
            "info",
            "max",
            "warning",
            "len",
            "error"
          ],
          "parameters": [
            "self",
            "version"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "get_graph_info",
          "line": 387,
          "async": false,
          "calls": [
            "list",
            "keys",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "visualize_graph",
          "line": 402,
          "async": false,
          "calls": [
            "ValueError",
            "join",
            "append",
            "items"
          ],
          "parameters": [
            "self",
            "format"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "__init__",
          "line": 36,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "websocket_manager",
            "timeout_seconds"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "_format_plan_for_ui",
          "line": 155,
          "async": false,
          "calls": [
            "isinstance",
            "asdict",
            "_format_step",
            "str",
            "vars",
            "hasattr"
          ],
          "parameters": [
            "self",
            "plan"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "_format_step",
          "line": 176,
          "async": false,
          "calls": [
            "get",
            "asdict",
            "vars",
            "str",
            "hasattr"
          ],
          "parameters": [
            "self",
            "step"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "get_approval_status",
          "line": 218,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "approval_id"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "get_approval_history",
          "line": 224,
          "async": false,
          "calls": [
            "sort"
          ],
          "parameters": [
            "self",
            "client_id",
            "limit"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "cleanup_expired",
          "line": 253,
          "async": false,
          "calls": [
            "info",
            "now",
            "append",
            "cancel",
            "items",
            "done",
            "len"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "get_pending_approvals",
          "line": 276,
          "async": false,
          "calls": [
            "values"
          ],
          "parameters": [
            "self",
            "client_id"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "tool",
          "line": 18,
          "async": false,
          "calls": [],
          "parameters": [
            "name",
            "description",
            "tags"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "get_tool_registry",
          "line": 313,
          "async": false,
          "calls": [],
          "parameters": [],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "decorator",
          "line": 27,
          "async": false,
          "calls": [],
          "parameters": [
            "func"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "__init__",
          "line": 41,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "auto_discover_tools",
          "line": 47,
          "async": false,
          "calls": [
            "startswith",
            "info",
            "append",
            "_create_tool_from_decorated",
            "_create_tool_from_prefix",
            "register_tool",
            "getmembers",
            "hasattr"
          ],
          "parameters": [
            "self",
            "agent_instance"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "_create_tool_from_decorated",
          "line": 76,
          "async": false,
          "calls": [
            "_extract_parameters",
            "getattr",
            "ToolDefinition"
          ],
          "parameters": [
            "self",
            "method",
            "agent_name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "_create_tool_from_prefix",
          "line": 87,
          "async": false,
          "calls": [
            "replace",
            "ToolDefinition",
            "_extract_parameters"
          ],
          "parameters": [
            "self",
            "method",
            "agent_name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "_extract_parameters",
          "line": 99,
          "async": false,
          "calls": [
            "get_type_hints",
            "signature",
            "items",
            "_python_type_to_json_type"
          ],
          "parameters": [
            "self",
            "method"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "_python_type_to_json_type",
          "line": 132,
          "async": false,
          "calls": [
            "get",
            "hasattr"
          ],
          "parameters": [
            "self",
            "python_type"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "register_tool",
          "line": 153,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "tool",
            "shared"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "discover_tools_for_agent",
          "line": 173,
          "async": false,
          "calls": [
            "append"
          ],
          "parameters": [
            "self",
            "agent_name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "get_tool_schema",
          "line": 232,
          "async": false,
          "calls": [
            "get",
            "items"
          ],
          "parameters": [
            "self",
            "tool_name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "list_all_tools",
          "line": 253,
          "async": false,
          "calls": [
            "get_tool_schema",
            "keys"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "get_usage_stats",
          "line": 260,
          "async": false,
          "calls": [
            "get"
          ],
          "parameters": [
            "self",
            "tool_name"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "export_tools",
          "line": 266,
          "async": false,
          "calls": [
            "dump",
            "asdict",
            "dumps",
            "ValueError",
            "values"
          ],
          "parameters": [
            "self",
            "format"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "import_tools",
          "line": 283,
          "async": false,
          "calls": [
            "loads",
            "clear",
            "ToolDefinition",
            "safe_load",
            "get",
            "ValueError"
          ],
          "parameters": [
            "self",
            "data",
            "format"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "__init__",
          "line": 35,
          "async": false,
          "calls": [
            "OpenAIEmbeddings",
            "_init_sqlite",
            "warning",
            "_init_vector_store"
          ],
          "parameters": [
            "self",
            "agent_name",
            "db_path",
            "vector_store_path",
            "embedding_model"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "_init_sqlite",
          "line": 71,
          "async": false,
          "calls": [
            "commit",
            "connect",
            "execute",
            "close",
            "cursor"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "_init_vector_store",
          "line": 136,
          "async": false,
          "calls": [
            "info",
            "_create_new_vector_store",
            "error",
            "Path",
            "str",
            "exists",
            "load_local"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "_create_new_vector_store",
          "line": 158,
          "async": false,
          "calls": [
            "info",
            "now",
            "from_texts",
            "str",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "store_memory",
          "line": 175,
          "async": false,
          "calls": [
            "_save_vector_store",
            "now",
            "commit",
            "connect",
            "append",
            "execute",
            "close",
            "dumps",
            "add_texts",
            "str",
            "pop",
            "len",
            "cursor",
            "error"
          ],
          "parameters": [
            "self",
            "content",
            "memory_type",
            "importance",
            "metadata",
            "session_id"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "recall_similar",
          "line": 240,
          "async": false,
          "calls": [
            "loads",
            "_update_access_counts",
            "now",
            "fetchall",
            "connect",
            "append",
            "execute",
            "similarity_search_with_score",
            "get",
            "close",
            "join",
            "extend",
            "MemoryEntry",
            "fromisoformat",
            "str",
            "len",
            "cursor",
            "error"
          ],
          "parameters": [
            "self",
            "query",
            "k",
            "memory_types",
            "min_importance"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "learn_pattern",
          "line": 330,
          "async": false,
          "calls": [
            "encode",
            "commit",
            "fetchone",
            "connect",
            "execute",
            "md5",
            "close",
            "dumps",
            "hexdigest",
            "cursor"
          ],
          "parameters": [
            "self",
            "pattern",
            "solution",
            "success",
            "metadata"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "get_learned_solution",
          "line": 389,
          "async": false,
          "calls": [
            "encode",
            "info",
            "fetchone",
            "connect",
            "execute",
            "md5",
            "close",
            "hexdigest",
            "cursor"
          ],
          "parameters": [
            "self",
            "pattern",
            "min_success_rate"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "record_agent_interaction",
          "line": 417,
          "async": false,
          "calls": [
            "commit",
            "connect",
            "execute",
            "close",
            "cursor"
          ],
          "parameters": [
            "self",
            "to_agent",
            "interaction_type",
            "content",
            "result",
            "session_id"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "get_interaction_history",
          "line": 438,
          "async": false,
          "calls": [
            "fetchall",
            "connect",
            "append",
            "execute",
            "close",
            "cursor"
          ],
          "parameters": [
            "self",
            "with_agent",
            "limit"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "_update_access_counts",
          "line": 479,
          "async": false,
          "calls": [
            "commit",
            "connect",
            "execute",
            "close",
            "cursor"
          ],
          "parameters": [
            "self",
            "memory_ids"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "_save_vector_store",
          "line": 499,
          "async": false,
          "calls": [
            "mkdir",
            "save_local",
            "Path",
            "str",
            "error"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "consolidate_memories",
          "line": 508,
          "async": false,
          "calls": [
            "info",
            "now",
            "timedelta",
            "commit",
            "connect",
            "execute",
            "close",
            "cursor"
          ],
          "parameters": [
            "self",
            "max_age_days"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "get_memory_stats",
          "line": 530,
          "async": false,
          "calls": [
            "fetchall",
            "connect",
            "fetchone",
            "execute",
            "close",
            "len",
            "cursor"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "main",
          "line": 583,
          "async": false,
          "calls": [
            "run",
            "info",
            "range",
            "close",
            "connect_ex",
            "socket"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/api/server_langgraph.py"
        },
        {
          "name": "__init__",
          "line": 56,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/api/server_langgraph.py"
        },
        {
          "name": "disconnect",
          "line": 69,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self",
            "client_id"
          ],
          "decorators": [],
          "file": "backend/api/server_langgraph.py"
        },
        {
          "name": "load_models_from_config",
          "line": 19,
          "async": false,
          "calls": [
            "safe_load",
            "append",
            "get",
            "open",
            "join",
            "dirname",
            "items",
            "lower",
            "error"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/api/models_endpoint.py"
        },
        {
          "name": "load_models_from_available_json",
          "line": 83,
          "async": false,
          "calls": [
            "warning",
            "open",
            "join",
            "dirname",
            "load"
          ],
          "parameters": [],
          "decorators": [],
          "file": "backend/api/models_endpoint.py"
        },
        {
          "name": "get_model_recommendations",
          "line": 102,
          "async": false,
          "calls": [
            "replace",
            "lower",
            "sorted"
          ],
          "parameters": [
            "provider",
            "models"
          ],
          "decorators": [],
          "file": "backend/api/models_endpoint.py"
        },
        {
          "name": "get_latest_models",
          "line": 143,
          "async": false,
          "calls": [
            "lower",
            "sorted"
          ],
          "parameters": [
            "models",
            "limit"
          ],
          "decorators": [],
          "file": "backend/api/models_endpoint.py"
        },
        {
          "name": "__init__",
          "line": 38,
          "async": false,
          "calls": [
            "mkdir",
            "info",
            "Path"
          ],
          "parameters": [
            "self",
            "output_dir"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "generate_flowchart",
          "line": 51,
          "async": false,
          "calls": [
            "warning",
            "_generate_ascii_flowchart",
            "_generate_mermaid_flowchart"
          ],
          "parameters": [
            "self",
            "nodes",
            "format"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "generate_sequence_diagram",
          "line": 71,
          "async": false,
          "calls": [
            "_generate_mermaid_sequence",
            "warning"
          ],
          "parameters": [
            "self",
            "interactions",
            "format"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "generate_class_diagram",
          "line": 89,
          "async": false,
          "calls": [
            "_generate_mermaid_class",
            "warning"
          ],
          "parameters": [
            "self",
            "classes",
            "format"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "generate_architecture_diagram",
          "line": 107,
          "async": false,
          "calls": [
            "_generate_mermaid_architecture",
            "warning"
          ],
          "parameters": [
            "self",
            "components",
            "format"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "_generate_mermaid_flowchart",
          "line": 125,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "nodes"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "_generate_mermaid_sequence",
          "line": 151,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "interactions"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "_generate_mermaid_class",
          "line": 168,
          "async": false,
          "calls": [
            "join",
            "append",
            "get"
          ],
          "parameters": [
            "self",
            "classes"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "_generate_mermaid_architecture",
          "line": 201,
          "async": false,
          "calls": [
            "isinstance",
            "append",
            "get",
            "join",
            "replace"
          ],
          "parameters": [
            "self",
            "components"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "_generate_ascii_flowchart",
          "line": 234,
          "async": false,
          "calls": [
            "append",
            "get",
            "join",
            "len",
            "enumerate"
          ],
          "parameters": [
            "self",
            "nodes"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "save_diagram",
          "line": 260,
          "async": false,
          "calls": [
            "info",
            "write",
            "open",
            "warning",
            "error"
          ],
          "parameters": [
            "self",
            "diagram",
            "filename"
          ],
          "decorators": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "__init__",
          "line": 22,
          "async": false,
          "calls": [
            "mkdir",
            "info",
            "timedelta",
            "Path",
            "error"
          ],
          "parameters": [
            "self",
            "project_root",
            "cache_duration_hours"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "_get_cache_key",
          "line": 43,
          "async": false,
          "calls": [
            "encode",
            "hexdigest",
            "md5"
          ],
          "parameters": [
            "self",
            "key"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "_get_cache_path",
          "line": 49,
          "async": false,
          "calls": [
            "_get_cache_key"
          ],
          "parameters": [
            "self",
            "key"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "get",
          "line": 53,
          "async": false,
          "calls": [
            "now",
            "open",
            "warning",
            "debug",
            "fromisoformat",
            "load",
            "unlink",
            "exists",
            "_get_cache_path"
          ],
          "parameters": [
            "self",
            "key"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "set",
          "line": 86,
          "async": false,
          "calls": [
            "dump",
            "now",
            "open",
            "warning",
            "debug",
            "isoformat",
            "_get_cache_path"
          ],
          "parameters": [
            "self",
            "key",
            "value"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "invalidate",
          "line": 111,
          "async": false,
          "calls": [
            "debug",
            "exists",
            "_get_cache_path",
            "unlink"
          ],
          "parameters": [
            "self",
            "key"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "clear_all",
          "line": 124,
          "async": false,
          "calls": [
            "glob",
            "info",
            "unlink"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "get_stats",
          "line": 130,
          "async": false,
          "calls": [
            "list",
            "glob",
            "sum",
            "stat",
            "str",
            "len",
            "round"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "__init__",
          "line": 21,
          "async": false,
          "calls": [
            "info",
            "Path"
          ],
          "parameters": [
            "self",
            "project_root",
            "cache",
            "debounce_seconds"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "watch_file",
          "line": 38,
          "async": false,
          "calls": [
            "add",
            "_resolve_path",
            "warning",
            "stat",
            "debug",
            "set",
            "exists"
          ],
          "parameters": [
            "self",
            "file_path",
            "callback"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "watch_directory",
          "line": 64,
          "async": false,
          "calls": [
            "glob",
            "info",
            "is_dir",
            "_resolve_path",
            "is_file",
            "warning",
            "watch_file",
            "str"
          ],
          "parameters": [
            "self",
            "dir_path",
            "pattern",
            "callback"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "check_changes",
          "line": 86,
          "async": false,
          "calls": [
            "list",
            "info",
            "fromtimestamp",
            "error",
            "warning",
            "stat",
            "str",
            "items",
            "callback",
            "exists"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "stop_watching",
          "line": 120,
          "async": false,
          "calls": [
            "_resolve_path",
            "debug"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "stop_all",
          "line": 137,
          "async": false,
          "calls": [
            "info",
            "clear"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "get_watched_files",
          "line": 144,
          "async": false,
          "calls": [
            "str",
            "keys"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "_resolve_path",
          "line": 148,
          "async": false,
          "calls": [
            "resolve",
            "is_absolute",
            "Path"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "start",
          "line": 155,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "stop",
          "line": 164,
          "async": false,
          "calls": [
            "info"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "start_monitoring",
          "line": 169,
          "async": false,
          "calls": [
            "info",
            "sleep",
            "check_changes"
          ],
          "parameters": [
            "self",
            "interval_seconds"
          ],
          "decorators": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "__init__",
          "line": 17,
          "async": false,
          "calls": [],
          "parameters": [
            "self",
            "file_path",
            "line_number",
            "line_content",
            "context_before",
            "context_after"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "to_dict",
          "line": 25,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "__init__",
          "line": 42,
          "async": false,
          "calls": [
            "info",
            "Path"
          ],
          "parameters": [
            "self",
            "project_root"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "search",
          "line": 57,
          "async": false,
          "calls": [
            "_find_files",
            "info",
            "warning",
            "_search_file",
            "extend",
            "compile",
            "len",
            "error"
          ],
          "parameters": [
            "self",
            "pattern",
            "file_pattern",
            "case_sensitive",
            "context_lines",
            "max_results"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "search_definition",
          "line": 99,
          "async": false,
          "calls": [
            "get",
            "search"
          ],
          "parameters": [
            "self",
            "symbol_name",
            "symbol_type",
            "file_pattern"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "search_usage",
          "line": 122,
          "async": false,
          "calls": [
            "escape",
            "search"
          ],
          "parameters": [
            "self",
            "symbol_name",
            "file_pattern"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "_find_files",
          "line": 137,
          "async": false,
          "calls": [
            "glob",
            "append",
            "is_file",
            "_should_ignore"
          ],
          "parameters": [
            "self",
            "file_pattern"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "_should_ignore",
          "line": 151,
          "async": false,
          "calls": [
            "match"
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "_search_file",
          "line": 167,
          "async": false,
          "calls": [
            "append",
            "max",
            "warning",
            "open",
            "str",
            "min",
            "rstrip",
            "len",
            "enumerate",
            "relative_to",
            "search",
            "SearchResult",
            "readlines"
          ],
          "parameters": [
            "self",
            "file_path",
            "regex",
            "context_lines",
            "max_results"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "add_ignore_pattern",
          "line": 202,
          "async": false,
          "calls": [
            "add"
          ],
          "parameters": [
            "self",
            "pattern"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "remove_ignore_pattern",
          "line": 206,
          "async": false,
          "calls": [
            "discard"
          ],
          "parameters": [
            "self",
            "pattern"
          ],
          "decorators": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "__init__",
          "line": 24,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/claude_web_integration_example.py"
        },
        {
          "name": "start_proxy_server",
          "line": 28,
          "async": false,
          "calls": [
            "print",
            "Popen",
            "sleep",
            "Path"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/claude_web_integration_example.py"
        },
        {
          "name": "stop_proxy_server",
          "line": 49,
          "async": false,
          "calls": [
            "terminate",
            "wait",
            "print",
            "kill"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/claude_web_integration_example.py"
        },
        {
          "name": "interactive_mode",
          "line": 222,
          "async": false,
          "calls": [
            "strip",
            "create_claude_web_llm",
            "print",
            "lower",
            "generate",
            "input"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/claude_web_integration_example.py"
        },
        {
          "name": "__init__",
          "line": 24,
          "async": false,
          "calls": [],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/multi_agent_claude_web_demo.py"
        },
        {
          "name": "start_claude_web_server",
          "line": 29,
          "async": false,
          "calls": [
            "print",
            "Popen",
            "sleep",
            "Path"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/multi_agent_claude_web_demo.py"
        },
        {
          "name": "stop_claude_web_server",
          "line": 50,
          "async": false,
          "calls": [
            "terminate",
            "wait",
            "print",
            "kill"
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "file": "examples/multi_agent_claude_web_demo.py"
        }
      ],
      "all_classes": [
        {
          "name": "TetrisWorkflowTest",
          "line": 20,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "test_tetris_websocket_workflow.py"
        },
        {
          "name": "MockStep",
          "line": 62,
          "methods": [
            "__post_init__"
          ],
          "bases": [],
          "file": "test_self_diagnosis_simple.py"
        },
        {
          "name": "WorkflowTracker",
          "line": 14,
          "methods": [
            "__init__",
            "record_agent",
            "record_output",
            "record_quality_score",
            "record_message",
            "generate_report"
          ],
          "bases": [],
          "file": "test_tetris_workflow.py"
        },
        {
          "name": "KIAutoAgentCLI",
          "line": 30,
          "methods": [
            "__init__",
            "_show_welcome",
            "_display_results",
            "_show_help",
            "_show_agents",
            "_show_history",
            "_load_history",
            "_save_history"
          ],
          "bases": [],
          "file": "cli.py"
        },
        {
          "name": "Colors",
          "line": 22,
          "methods": [],
          "bases": [],
          "file": "test_system.py"
        },
        {
          "name": "MockAgent",
          "line": 205,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "test_system.py"
        },
        {
          "name": "TetrisWorkflowTest",
          "line": 12,
          "methods": [
            "__init__",
            "log",
            "print_summary"
          ],
          "bases": [],
          "file": "test_tetris_complete.py"
        },
        {
          "name": "ClaudeBrowser",
          "line": 15,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "claude_web_proxy/claude_browser.py"
        },
        {
          "name": "ChatRequest",
          "line": 26,
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "ChatResponse",
          "line": 31,
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "StatusResponse",
          "line": 37,
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "SetupRequest",
          "line": 43,
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "file": "claude_web_proxy/fastapi_server.py"
        },
        {
          "name": "ClaudeWebLLM",
          "line": 29,
          "methods": [
            "__init__",
            "generate",
            "stream_generate",
            "get_model_info",
            "__del__",
            "run_in_thread"
          ],
          "bases": [
            "BaseLLM"
          ],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "BaseLLM",
          "line": 18,
          "methods": [
            "__init__",
            "generate"
          ],
          "bases": [],
          "file": "claude_web_proxy/crewai_integration.py"
        },
        {
          "name": "ClaudeWebProxyTester",
          "line": 28,
          "methods": [
            "__init__",
            "install_playwright_browsers",
            "start_server",
            "stop_server",
            "generate_setup_report"
          ],
          "bases": [],
          "file": "claude_web_proxy/setup_and_test.py"
        },
        {
          "name": "OpusArbitrator",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_arbitration_prompt",
            "_extract_decision_components",
            "is_conflict_resolvable",
            "get_conflict_complexity"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py"
        },
        {
          "name": "DocuBot",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_documentation_prompt",
            "_structure_documentation"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py"
        },
        {
          "name": "BaseAgent",
          "line": 9,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_prompt",
            "_extract_code",
            "_validate_code",
            "get_stats",
            "reset_stats",
            "__repr__"
          ],
          "bases": [
            "ABC"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py"
        },
        {
          "name": "ResearchBot",
          "line": 11,
          "methods": [
            "__init__",
            "get_capabilities",
            "_mock_research_for_testing",
            "_create_research_plan",
            "_build_research_prompt",
            "_synthesize_findings",
            "_generate_recommendations"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py"
        },
        {
          "name": "ReviewerGPT",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_code_review_prompt",
            "_build_previous_analysis_prompt",
            "_build_final_review_prompt",
            "_build_review_prompt",
            "_categorize_issues",
            "_generate_recommendations",
            "_calculate_quality_score"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py"
        },
        {
          "name": "ArchitectGPT",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_architecture_prompt",
            "_extract_artifacts"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py"
        },
        {
          "name": "TradeStrat",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_validation_prompt",
            "_build_improvement_prompt",
            "_analyze_requirements",
            "_build_strategy_prompt",
            "_create_backtest_framework",
            "_generate_performance_metrics"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py"
        },
        {
          "name": "FixerBot",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_analyze_problem",
            "_build_fix_prompt",
            "_validate_fixes",
            "_create_fix_summary"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py"
        },
        {
          "name": "CodeSmithClaude",
          "line": 8,
          "methods": [
            "__init__",
            "get_capabilities",
            "_build_analysis_prompt",
            "_build_coding_prompt",
            "_build_implementation_prompt",
            "_organize_code"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py"
        },
        {
          "name": "KIAutoAgentClaudeWebIntegration",
          "line": 23,
          "methods": [
            "__init__",
            "start_claude_web_server",
            "stop_claude_web_server"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py"
        },
        {
          "name": "ExecutionEngine",
          "line": 10,
          "methods": [
            "__init__",
            "_group_steps_for_execution",
            "_compile_final_output",
            "get_current_status",
            "get_execution_history"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py"
        },
        {
          "name": "IterationReason",
          "line": 11,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "IterationSummary",
          "line": 21,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "IterationController",
          "line": 31,
          "methods": [
            "__init__",
            "record_iteration",
            "_generate_iteration_summary",
            "_identify_problem_areas",
            "_generate_recommendation",
            "_generate_user_options",
            "_get_primary_recommendation"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "UserInteractionHandler",
          "line": 264,
          "methods": [
            "__init__",
            "_display_iteration_analysis",
            "_format_common_issues",
            "_format_agent_performance",
            "_format_problematic_areas",
            "_format_iteration_timeline"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "IterationDecisionExecutor",
          "line": 417,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "IterationManager",
          "line": 525,
          "methods": [
            "__init__",
            "get_iteration_statistics"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py"
        },
        {
          "name": "IntentType",
          "line": 9,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "Intent",
          "line": 23,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "IntentClassifier",
          "line": 31,
          "methods": [
            "__init__",
            "_calculate_intent_score",
            "_calculate_enhanced_intent_score",
            "_extract_entities",
            "_assess_complexity",
            "get_intent_description"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py"
        },
        {
          "name": "UserRequest",
          "line": 20,
          "methods": [
            "__post_init__"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "MasterDispatcher",
          "line": 30,
          "methods": [
            "__init__",
            "_detect_project_type",
            "_initialize_agents",
            "_get_agent_capabilities",
            "_optimize_workflow",
            "_get_quality_gates_for_context",
            "_format_response"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py"
        },
        {
          "name": "SharedContext",
          "line": 12,
          "methods": [
            "__post_init__",
            "get_context_for_agent",
            "get_agent_instruction_summary",
            "add_agent_output",
            "get_iteration_summary",
            "start_new_iteration",
            "get_relevant_outputs"
          ],
          "bases": [
            "ABC"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "ProjectContextFactory",
          "line": 77,
          "methods": [
            "create_project_context",
            "get_available_project_types",
            "create_shared_context"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "GenericProjectContext",
          "line": 162,
          "methods": [
            "__init__",
            "get_domain_instructions",
            "get_quality_gates",
            "get_project_specifics"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "ContextFactory",
          "line": 209,
          "methods": [
            "create_context"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "GenericSharedContext",
          "line": 224,
          "methods": [
            "get_context_for_agent",
            "get_agent_instruction_summary"
          ],
          "bases": [
            "SharedContext"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "SharedContextManager",
          "line": 252,
          "methods": [
            "__init__",
            "update_context",
            "should_continue_iteration",
            "prepare_agent_context",
            "get_context_statistics"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "ProjectSharedContext",
          "line": 316,
          "methods": [
            "get_context_for_agent",
            "get_agent_instruction_summary"
          ],
          "bases": [
            "SharedContext"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py"
        },
        {
          "name": "LearningSystem",
          "line": 11,
          "methods": [
            "__init__",
            "suggest_workflow",
            "get_intent_statistics",
            "_load_history",
            "_load_patterns",
            "_load_metrics",
            "_save_all",
            "_calculate_metrics",
            "_was_successful",
            "_record_success_pattern",
            "_update_performance_metrics",
            "_find_similar_executions",
            "_extract_agents_used",
            "_calculate_agent_rating"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py"
        },
        {
          "name": "WorkflowStep",
          "line": 10,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "WorkflowGenerator",
          "line": 23,
          "methods": [
            "__init__",
            "_load_templates",
            "_select_template",
            "_customize_workflow",
            "_optimize_parallel_execution",
            "_validate_agents",
            "_estimate_total_time",
            "get_workflow_summary"
          ],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py"
        },
        {
          "name": "EngineParityQualityGate",
          "line": 12,
          "methods": [
            "__init__",
            "get_default_thresholds",
            "_analyze_unified_engine",
            "_analyze_future_leak_prevention",
            "_analyze_iterative_processing",
            "_analyze_engine_chart_decoupling"
          ],
          "bases": [
            "BaseQualityGate"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py"
        },
        {
          "name": "SecurityQualityGate",
          "line": 12,
          "methods": [
            "__init__",
            "get_default_thresholds"
          ],
          "bases": [
            "BaseQualityGate"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py"
        },
        {
          "name": "QualityLevel",
          "line": 16,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "QualityCheck",
          "line": 26,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "QualityGateResult",
          "line": 40,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "BaseQualityGate",
          "line": 55,
          "methods": [
            "__init__",
            "get_default_thresholds",
            "create_quality_check",
            "calculate_overall_score",
            "determine_pass_status",
            "generate_summary",
            "generate_recommendations",
            "find_pattern_matches",
            "check_imports",
            "check_function_complexity"
          ],
          "bases": [
            "ABC"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py"
        },
        {
          "name": "RONStrategyQualityGate",
          "line": 12,
          "methods": [
            "__init__",
            "get_default_thresholds",
            "_analyze_vwap_fibonacci_condition",
            "_analyze_ema9_logic",
            "_analyze_new_high_logic",
            "_analyze_crv_requirement",
            "_analyze_space_to_382",
            "_analyze_ron_trading_hours"
          ],
          "bases": [
            "BaseQualityGate"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py"
        },
        {
          "name": "TradingSystemQualityGate",
          "line": 12,
          "methods": [
            "__init__",
            "get_default_thresholds",
            "_check_decimal_precision",
            "_check_pnl_calculations",
            "_check_crv_calculations",
            "_check_position_validation",
            "_check_stop_loss_logic",
            "_check_exposure_limits",
            "_check_market_hours",
            "_check_audit_trail",
            "_check_type_annotations",
            "_check_exception_patterns",
            "_check_graceful_degradation",
            "_check_docstring_coverage",
            "_check_fallback_policy",
            "_check_live_data_policy"
          ],
          "bases": [
            "BaseQualityGate"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py"
        },
        {
          "name": "GenericSoftwareWorkflow",
          "line": 16,
          "methods": [
            "__init__",
            "get_workflow_steps",
            "get_step_agents",
            "get_step_instructions",
            "validate_step_completion",
            "get_workflow_description",
            "get_success_criteria"
          ],
          "bases": [
            "BaseWorkflow"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py"
        },
        {
          "name": "TradingSystemWorkflow",
          "line": 15,
          "methods": [
            "__init__",
            "get_workflow_steps",
            "get_step_agents",
            "get_step_instructions",
            "validate_step_completion",
            "get_workflow_description",
            "get_success_criteria"
          ],
          "bases": [
            "BaseWorkflow"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py"
        },
        {
          "name": "BaseWorkflow",
          "line": 13,
          "methods": [
            "__init__",
            "get_workflow_steps",
            "get_step_agents",
            "get_step_instructions",
            "validate_step_completion",
            "get_workflow_description",
            "get_success_criteria",
            "get_workflow_info",
            "log_execution",
            "get_next_step",
            "get_step_position",
            "is_workflow_complete",
            "get_workflow_progress",
            "get_execution_statistics"
          ],
          "bases": [
            "ABC"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py"
        },
        {
          "name": "TradingProjectContext",
          "line": 177,
          "methods": [
            "__init__",
            "get_domain_instructions",
            "get_quality_gates",
            "get_project_specifics",
            "get_agent_enhancement_instructions",
            "get_iteration_limits"
          ],
          "bases": [
            "BaseProjectContext"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py"
        },
        {
          "name": "WebAppProjectContext",
          "line": 100,
          "methods": [
            "__init__",
            "get_domain_instructions",
            "get_quality_gates",
            "get_project_specifics",
            "get_agent_enhancement_instructions",
            "get_iteration_limits"
          ],
          "bases": [
            "BaseProjectContext"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py"
        },
        {
          "name": "ProjectSpecification",
          "line": 14,
          "methods": [],
          "bases": [],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "BaseProjectContext",
          "line": 25,
          "methods": [
            "__init__",
            "get_domain_instructions",
            "get_quality_gates",
            "get_project_specifics",
            "get_agent_enhancement_instructions",
            "get_iteration_limits",
            "get_conflict_resolution_priorities",
            "validate_context"
          ],
          "bases": [
            "ABC"
          ],
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py"
        },
        {
          "name": "WebSocketTestClient",
          "line": 32,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/test_websocket_debug.py"
        },
        {
          "name": "Colors",
          "line": 29,
          "methods": [],
          "bases": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "TestAgent",
          "line": 67,
          "methods": [],
          "bases": [],
          "file": "backend/test_langgraph_system.py"
        },
        {
          "name": "EnhancedTaskRequest",
          "line": 9,
          "methods": [
            "to_file_task"
          ],
          "bases": [],
          "file": "backend/fixes/task_request_enhancement.py"
        },
        {
          "name": "MemoryType",
          "line": 13,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "MemoryManager",
          "line": 20,
          "methods": [
            "__init__",
            "store",
            "retrieve",
            "clear"
          ],
          "bases": [],
          "file": "backend/core/memory_manager.py"
        },
        {
          "name": "PauseAction",
          "line": 13,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "PauseHandler",
          "line": 20,
          "methods": [
            "__init__",
            "pause",
            "resume",
            "is_paused"
          ],
          "bases": [],
          "file": "backend/core/pause_handler.py"
        },
        {
          "name": "SharedContextManager",
          "line": 12,
          "methods": [
            "__init__",
            "set",
            "get",
            "update",
            "clear",
            "get_all"
          ],
          "bases": [],
          "file": "backend/core/shared_context_manager.py"
        },
        {
          "name": "ConversationContextManager",
          "line": 12,
          "methods": [
            "__init__",
            "add_message",
            "get_conversation",
            "clear_conversation"
          ],
          "bases": [],
          "file": "backend/core/conversation_context_manager.py"
        },
        {
          "name": "GitCheckpointManager",
          "line": 12,
          "methods": [
            "__init__",
            "create_checkpoint",
            "list_checkpoints",
            "rollback_to"
          ],
          "bases": [],
          "file": "backend/core/git_checkpoint_manager.py"
        },
        {
          "name": "DependencyError",
          "line": 6,
          "methods": [
            "__init__"
          ],
          "bases": [
            "Exception"
          ],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "CacheNotAvailableError",
          "line": 33,
          "methods": [
            "__init__"
          ],
          "bases": [
            "Exception"
          ],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "SystemNotReadyError",
          "line": 58,
          "methods": [
            "__init__"
          ],
          "bases": [
            "Exception"
          ],
          "file": "backend/core/exceptions.py"
        },
        {
          "name": "SemgrepAnalyzer",
          "line": 12,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/core/analysis/semgrep_analyzer.py"
        },
        {
          "name": "VultureAnalyzer",
          "line": 12,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/core/analysis/vulture_analyzer.py"
        },
        {
          "name": "RadonMetrics",
          "line": 12,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/core/analysis/radon_metrics.py"
        },
        {
          "name": "LayerAnalyzer",
          "line": 15,
          "methods": [
            "__init__",
            "_classify_files_into_layers",
            "_detect_file_layer",
            "_build_layer_structure",
            "_detect_layer_violations",
            "_resolve_import_to_file",
            "_check_layer_violation",
            "_calculate_quality_score",
            "_calculate_metrics",
            "_empty_layer_analysis"
          ],
          "bases": [],
          "file": "backend/core/analysis/layer_analyzer.py"
        },
        {
          "name": "CallGraphAnalyzer",
          "line": 14,
          "methods": [
            "__init__",
            "_build_function_registry",
            "_build_call_relationships",
            "_resolve_function_id",
            "_detect_entry_points",
            "_find_unused_functions",
            "_detect_hot_paths",
            "_bfs_paths",
            "_build_nodes",
            "_build_edges",
            "_analyze_clusters",
            "_calculate_metrics",
            "_calculate_call_depth",
            "_empty_call_graph"
          ],
          "bases": [],
          "file": "backend/core/analysis/call_graph_analyzer.py"
        },
        {
          "name": "TreeSitterIndexer",
          "line": 14,
          "methods": [
            "__init__",
            "_extract_function_calls",
            "_get_call_name",
            "_get_name",
            "_get_attribute_path",
            "_get_decorator_name",
            "_extract_import"
          ],
          "bases": [],
          "file": "backend/core/indexing/tree_sitter_indexer.py"
        },
        {
          "name": "CodeIndexer",
          "line": 16,
          "methods": [
            "__init__",
            "_find_python_files",
            "_count_total_lines"
          ],
          "bases": [],
          "file": "backend/core/indexing/code_indexer.py"
        },
        {
          "name": "CapabilitiesLoader",
          "line": 14,
          "methods": [
            "__init__",
            "_load_capabilities",
            "get_agent_capabilities",
            "apply_to_config",
            "can_agent_write",
            "get_all_capabilities"
          ],
          "bases": [],
          "file": "backend/config/capabilities_loader.py"
        },
        {
          "name": "Settings",
          "line": 9,
          "methods": [
            "get_language_directive",
            "get_timeout",
            "update_from_vscode",
            "_auto_detect_provider",
            "to_dict"
          ],
          "bases": [],
          "file": "backend/config/settings.py"
        },
        {
          "name": "TestAgent",
          "line": 43,
          "methods": [],
          "bases": [],
          "file": "backend/tests/test_cache_manager.py"
        },
        {
          "name": "TestAgentFileCapabilities",
          "line": 25,
          "methods": [
            "setup_method",
            "teardown_method"
          ],
          "bases": [],
          "file": "backend/tests/test_agent_file_capabilities.py"
        },
        {
          "name": "IntegrationTestSuite",
          "line": 17,
          "methods": [
            "__init__",
            "record_result",
            "print_summary"
          ],
          "bases": [],
          "file": "backend/tests/test_integration.py"
        },
        {
          "name": "AgentType",
          "line": 24,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "RegisteredAgent",
          "line": 39,
          "methods": [],
          "bases": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "AgentRegistry",
          "line": 48,
          "methods": [
            "__new__",
            "__init__",
            "get_agent",
            "get_available_agents",
            "find_agent_by_capability",
            "get_agents_by_capability",
            "get_status"
          ],
          "bases": [],
          "file": "backend/agents/agent_registry.py"
        },
        {
          "name": "FileOperation",
          "line": 18,
          "methods": [],
          "bases": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "FileSystemTools",
          "line": 29,
          "methods": [
            "__init__",
            "_validate_path",
            "_create_backup",
            "_log_operation",
            "get_audit_log"
          ],
          "bases": [],
          "file": "backend/agents/tools/file_tools.py"
        },
        {
          "name": "BrowserTester",
          "line": 22,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/agents/tools/browser_tester.py"
        },
        {
          "name": "FixerBotAgent",
          "line": 20,
          "methods": [
            "__init__",
            "_match_pattern"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/fixerbot_agent.py"
        },
        {
          "name": "ReviewerGPTAgent",
          "line": 27,
          "methods": [
            "__init__",
            "check_asimov_violations",
            "_calculate_html_app_quality_score",
            "_get_recommendation",
            "_format_metrics"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/reviewer_gpt_agent.py"
        },
        {
          "name": "TradeStratAgent",
          "line": 18,
          "methods": [
            "__init__"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/tradestrat_agent.py"
        },
        {
          "name": "DocuBotAgent",
          "line": 18,
          "methods": [
            "__init__"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/docubot_agent.py"
        },
        {
          "name": "ArchitectureDesign",
          "line": 94,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "ArchitectAgent",
          "line": 106,
          "methods": [
            "__init__",
            "_parse_architecture_response",
            "_extract_features",
            "_load_architecture_patterns",
            "__del__",
            "_load_tech_stacks",
            "_generate_redis_config",
            "_generate_docker_compose",
            "_detect_request_type"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/architect_agent.py"
        },
        {
          "name": "CodeImplementation",
          "line": 69,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "CodeSmithAgent",
          "line": 79,
          "methods": [
            "__init__",
            "format_implementation",
            "_detect_language",
            "_extract_functionality",
            "_assess_complexity",
            "_generate_filename",
            "_extract_dependencies",
            "_get_test_framework",
            "_load_code_patterns",
            "_load_language_configs",
            "_generate_fix_suggestion",
            "_check_for_hallucination",
            "_validate_workspace_context",
            "_enforce_asimov_rule_1",
            "_extract_file_path",
            "_generate_file_path",
            "_extract_feature_name"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/codesmith_agent.py"
        },
        {
          "name": "FixerGPTAgent",
          "line": 20,
          "methods": [
            "__init__",
            "_create_fresh_perspective_prompt",
            "_format_previous_attempts",
            "_format_research_results"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/fixer_gpt_agent.py"
        },
        {
          "name": "PerformanceProfile",
          "line": 29,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "PerformanceBot",
          "line": 38,
          "methods": [
            "__init__",
            "_extract_bottlenecks",
            "_parse_profile_stats",
            "_format_profile_results",
            "_format_package_analysis"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/performance_bot.py"
        },
        {
          "name": "ResearchAgent",
          "line": 24,
          "methods": [
            "__init__"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/research_agent.py"
        },
        {
          "name": "SubTask",
          "line": 23,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent_v2.py"
        },
        {
          "name": "TaskDecomposition",
          "line": 36,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent_v2.py"
        },
        {
          "name": "OrchestratorAgentV2",
          "line": 45,
          "methods": [
            "__init__",
            "set_planning_mode"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/orchestrator_agent_v2.py"
        },
        {
          "name": "OpusArbitratorAgent",
          "line": 18,
          "methods": [
            "__init__"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/opus_arbitrator_agent.py"
        },
        {
          "name": "SubTask",
          "line": 21,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "TaskDependency",
          "line": 34,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "TaskDecomposition",
          "line": 42,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "WorkflowStep",
          "line": 53,
          "methods": [],
          "bases": [],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "OrchestratorAgent",
          "line": 64,
          "methods": [
            "__init__",
            "_calculate_critical_path_duration",
            "_get_chain_duration",
            "_group_by_dependency_level",
            "_dependencies_met",
            "format_orchestration_result"
          ],
          "bases": [
            "ChatAgent"
          ],
          "file": "backend/agents/specialized/orchestrator_agent.py"
        },
        {
          "name": "AgentCapability",
          "line": 64,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "AgentConfig",
          "line": 80,
          "methods": [],
          "bases": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "TaskRequest",
          "line": 94,
          "methods": [],
          "bases": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "TaskResult",
          "line": 107,
          "methods": [],
          "bases": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "AgentMessage",
          "line": 119,
          "methods": [],
          "bases": [],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "BaseAgent",
          "line": 128,
          "methods": [
            "__init__",
            "_load_instructions",
            "_get_language_directive",
            "get_system_prompt",
            "calculate_dynamic_timeout",
            "_compile_research_summary",
            "set_websocket_callback",
            "get_status",
            "__repr__"
          ],
          "bases": [
            "ABC"
          ],
          "file": "backend/agents/base/base_agent.py"
        },
        {
          "name": "Directive",
          "line": 15,
          "methods": [],
          "bases": [],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "PrimeDirectives",
          "line": 22,
          "methods": [
            "validate_request",
            "_check_violations",
            "check_research_requirements",
            "format_challenge_response",
            "get_directive_prompt",
            "check_global_error_search"
          ],
          "bases": [],
          "file": "backend/agents/base/prime_directives.py"
        },
        {
          "name": "StreamMessage",
          "line": 18,
          "methods": [
            "__post_init__",
            "to_dict"
          ],
          "bases": [],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "ChatAgent",
          "line": 41,
          "methods": [
            "__init__",
            "format_response",
            "get_chat_status"
          ],
          "bases": [
            "BaseAgent"
          ],
          "file": "backend/agents/base/chat_agent.py"
        },
        {
          "name": "PerplexityService",
          "line": 15,
          "methods": [
            "__init__",
            "test_connection"
          ],
          "bases": [],
          "file": "backend/utils/perplexity_service.py"
        },
        {
          "name": "ClaudeCodeConfig",
          "line": 18,
          "methods": [],
          "bases": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "ClaudeCodeService",
          "line": 25,
          "methods": [
            "__init__",
            "_check_cli_availability",
            "_parse_json_response",
            "is_available"
          ],
          "bases": [],
          "file": "backend/utils/claude_code_service.py"
        },
        {
          "name": "OpenAIConfig",
          "line": 20,
          "methods": [],
          "bases": [],
          "file": "backend/utils/openai_service.py"
        },
        {
          "name": "OpenAIService",
          "line": 28,
          "methods": [
            "__init__",
            "is_available"
          ],
          "bases": [],
          "file": "backend/utils/openai_service.py"
        },
        {
          "name": "AnthropicConfig",
          "line": 20,
          "methods": [],
          "bases": [],
          "file": "backend/utils/anthropic_service.py"
        },
        {
          "name": "AnthropicService",
          "line": 28,
          "methods": [
            "__init__",
            "_format_outputs",
            "is_available"
          ],
          "bases": [],
          "file": "backend/utils/anthropic_service.py"
        },
        {
          "name": "QueryAnalysis",
          "line": 17,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "IntelligentQueryHandler",
          "line": 29,
          "methods": [
            "__init__",
            "_init_fallback_responses",
            "_init_query_patterns",
            "analyze_query",
            "get_intelligent_response",
            "create_intelligent_execution_plan",
            "enhance_orchestrator_step",
            "integrate_with_classification",
            "_get_development_guidance"
          ],
          "bases": [],
          "file": "backend/langgraph_system/intelligent_query_handler.py"
        },
        {
          "name": "CacheManager",
          "line": 21,
          "methods": [
            "__init__",
            "check_docker_installed",
            "check_redis_running",
            "start_redis_container",
            "fill_caches"
          ],
          "bases": [],
          "file": "backend/langgraph_system/cache_manager.py"
        },
        {
          "name": "DevelopmentContext",
          "line": 15,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "DevelopmentQueryHandler",
          "line": 27,
          "methods": [
            "__init__",
            "analyze_context",
            "handle_performance_query",
            "handle_bug_query",
            "handle_refactoring_query",
            "handle_testing_query",
            "handle_implementation_query",
            "handle_technology_query",
            "handle_database_query",
            "handle_ai_integration_query",
            "handle_error_diagnosis_query",
            "handle_scope_clarification",
            "get_handler_for_type",
            "handle_development_query",
            "suggest_next_steps"
          ],
          "bases": [],
          "file": "backend/langgraph_system/development_query_handler.py"
        },
        {
          "name": "DetailedClassification",
          "line": 18,
          "methods": [
            "summary"
          ],
          "bases": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "EnhancedQueryClassifier",
          "line": 65,
          "methods": [
            "__init__",
            "classify_query",
            "_is_greeting",
            "_is_nonsense",
            "_has_context_reference",
            "_check_pattern",
            "_check_development_patterns",
            "_calculate_coherence",
            "_calculate_confidence",
            "_calculate_safety",
            "_determine_action",
            "_get_dev_agent",
            "_prepare_responses"
          ],
          "bases": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "ExecutionGuard",
          "line": 518,
          "methods": [
            "__init__",
            "is_safe",
            "_is_duplicate",
            "_detect_loop_pattern",
            "_check_resource_exhaustion",
            "record_execution"
          ],
          "bases": [],
          "file": "backend/langgraph_system/query_classifier.py"
        },
        {
          "name": "AntiPatternType",
          "line": 26,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "KnownAntiPattern",
          "line": 41,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "KnownAntiPatternsDatabase",
          "line": 51,
          "methods": [
            "__init__",
            "_initialize_patterns",
            "detect_patterns",
            "_check_pattern",
            "_has_circular_dependencies",
            "_get_detection_reason",
            "has_cycle_from"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "WorkflowInvariants",
          "line": 248,
          "methods": [
            "__init__",
            "_define_invariants",
            "check_all",
            "_check_valid_transitions",
            "_check_unique_ids",
            "_check_dependencies_exist",
            "_check_agent_capabilities"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "PreExecutionValidator",
          "line": 412,
          "methods": [
            "__init__",
            "_calculate_dependency_depth",
            "_find_parallelizable_steps",
            "_has_dependency_conflict",
            "_is_in_cycle",
            "get_depth",
            "has_cycle"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "PatternRecognitionEngine",
          "line": 749,
          "methods": [
            "__init__",
            "_initialize_patterns",
            "analyze_patterns",
            "_detect_routing_loop",
            "_detect_collaboration_spiral",
            "_detect_stuck_progress",
            "_detect_resource_spike",
            "_detect_timeout_cluster",
            "_detect_statistical_anomalies"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "SelfTestFramework",
          "line": 904,
          "methods": [
            "__init__"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "WorkflowSelfDiagnosisSystem",
          "line": 1098,
          "methods": [
            "__init__",
            "get_diagnosis_report"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow_self_diagnosis.py"
        },
        {
          "name": "AgentWorkflow",
          "line": 100,
          "methods": [
            "__init__",
            "_init_agent_memories",
            "_init_real_agents",
            "create_task_ledger",
            "extract_success_criteria",
            "create_progress_ledger",
            "identify_parallel_groups",
            "_has_dependency_conflict",
            "_get_all_dependencies",
            "route_after_approval",
            "route_from_architect",
            "route_to_next_agent",
            "_dependencies_met",
            "_get_current_step",
            "_get_step_by_agent",
            "_check_escalation_needed",
            "_calculate_agent_confidence",
            "_create_single_agent_step",
            "_detect_task_complexity",
            "_apply_plan_modifications",
            "_format_proposal_for_user",
            "create_workflow",
            "compile_workflow"
          ],
          "bases": [],
          "file": "backend/langgraph_system/workflow.py"
        },
        {
          "name": "ToolDefinition",
          "line": 14,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "MemoryEntry",
          "line": 26,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "ExecutionStep",
          "line": 37,
          "methods": [
            "__post_init__",
            "is_timeout",
            "can_retry",
            "get_retry_delay"
          ],
          "bases": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "TaskLedger",
          "line": 94,
          "methods": [
            "__post_init__"
          ],
          "bases": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "ProgressLedger",
          "line": 116,
          "methods": [
            "__post_init__",
            "update_from_steps"
          ],
          "bases": [],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "ExtendedAgentState",
          "line": 151,
          "methods": [],
          "bases": [
            "TypedDict"
          ],
          "file": "backend/langgraph_system/state.py"
        },
        {
          "name": "ExecutionAttempt",
          "line": 21,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "ExecutionHistory",
          "line": 33,
          "methods": [
            "add_attempt"
          ],
          "bases": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "SafeOrchestratorExecutor",
          "line": 53,
          "methods": [
            "__init__",
            "_generate_query_hash",
            "_detect_loop_pattern",
            "_get_safe_fallback_response",
            "get_execution_stats",
            "should_use_safe_execution",
            "reset_history"
          ],
          "bases": [],
          "file": "backend/langgraph_system/safe_orchestrator_executor.py"
        },
        {
          "name": "DynamicNode",
          "line": 15,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "DynamicEdge",
          "line": 25,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "ConditionalRoute",
          "line": 34,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "DynamicWorkflowManager",
          "line": 42,
          "methods": [
            "__init__",
            "_extract_base_structure",
            "add_node",
            "remove_node",
            "add_edge",
            "add_conditional_routing",
            "compile_graph",
            "create_template",
            "apply_template",
            "rollback",
            "get_graph_info",
            "visualize_graph"
          ],
          "bases": [],
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py"
        },
        {
          "name": "ApprovalRequest",
          "line": 17,
          "methods": [],
          "bases": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "ApprovalManager",
          "line": 30,
          "methods": [
            "__init__",
            "_format_plan_for_ui",
            "_format_step",
            "get_approval_status",
            "get_approval_history",
            "cleanup_expired",
            "get_pending_approvals"
          ],
          "bases": [],
          "file": "backend/langgraph_system/extensions/approval_manager.py"
        },
        {
          "name": "ToolRegistry",
          "line": 36,
          "methods": [
            "__init__",
            "auto_discover_tools",
            "_create_tool_from_decorated",
            "_create_tool_from_prefix",
            "_extract_parameters",
            "_python_type_to_json_type",
            "register_tool",
            "discover_tools_for_agent",
            "get_tool_schema",
            "list_all_tools",
            "get_usage_stats",
            "export_tools",
            "import_tools"
          ],
          "bases": [],
          "file": "backend/langgraph_system/extensions/tool_discovery.py"
        },
        {
          "name": "PersistentAgentMemory",
          "line": 30,
          "methods": [
            "__init__",
            "_init_sqlite",
            "_init_vector_store",
            "_create_new_vector_store",
            "store_memory",
            "recall_similar",
            "learn_pattern",
            "get_learned_solution",
            "record_agent_interaction",
            "get_interaction_history",
            "_update_access_counts",
            "_save_vector_store",
            "consolidate_memories",
            "get_memory_stats"
          ],
          "bases": [],
          "file": "backend/langgraph_system/extensions/persistent_memory.py"
        },
        {
          "name": "SettingsUpdateRequest",
          "line": 22,
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "file": "backend/api/settings_endpoint.py"
        },
        {
          "name": "ConnectionManager",
          "line": 55,
          "methods": [
            "__init__",
            "disconnect"
          ],
          "bases": [],
          "file": "backend/api/server_langgraph.py"
        },
        {
          "name": "DiagramFormat",
          "line": 14,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "DiagramType",
          "line": 22,
          "methods": [],
          "bases": [
            "Enum"
          ],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "DiagramService",
          "line": 32,
          "methods": [
            "__init__",
            "generate_flowchart",
            "generate_sequence_diagram",
            "generate_class_diagram",
            "generate_architecture_diagram",
            "_generate_mermaid_flowchart",
            "_generate_mermaid_sequence",
            "_generate_mermaid_class",
            "_generate_mermaid_architecture",
            "_generate_ascii_flowchart",
            "save_diagram"
          ],
          "bases": [],
          "file": "backend/services/diagram_service.py"
        },
        {
          "name": "ProjectCache",
          "line": 16,
          "methods": [
            "__init__",
            "_get_cache_key",
            "_get_cache_path",
            "get",
            "set",
            "invalidate",
            "clear_all",
            "get_stats"
          ],
          "bases": [],
          "file": "backend/services/project_cache.py"
        },
        {
          "name": "SmartFileWatcher",
          "line": 15,
          "methods": [
            "__init__",
            "watch_file",
            "watch_directory",
            "check_changes",
            "stop_watching",
            "stop_all",
            "get_watched_files",
            "_resolve_path",
            "start",
            "stop",
            "start_monitoring"
          ],
          "bases": [],
          "file": "backend/services/smart_file_watcher.py"
        },
        {
          "name": "SearchResult",
          "line": 14,
          "methods": [
            "__init__",
            "to_dict"
          ],
          "bases": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "LightweightCodeSearch",
          "line": 36,
          "methods": [
            "__init__",
            "search",
            "search_definition",
            "search_usage",
            "_find_files",
            "_should_ignore",
            "_search_file",
            "add_ignore_pattern",
            "remove_ignore_pattern"
          ],
          "bases": [],
          "file": "backend/services/code_search.py"
        },
        {
          "name": "ClaudeWebIntegrationDemo",
          "line": 21,
          "methods": [
            "__init__",
            "start_proxy_server",
            "stop_proxy_server",
            "interactive_mode"
          ],
          "bases": [],
          "file": "examples/claude_web_integration_example.py"
        },
        {
          "name": "MultiAgentClaudeWebDemo",
          "line": 21,
          "methods": [
            "__init__",
            "start_claude_web_server",
            "stop_claude_web_server"
          ],
          "bases": [],
          "file": "examples/multi_agent_claude_web_demo.py"
        }
      ]
    },
    "security": {
      "findings": [],
      "summary": {
        "critical": 0,
        "high": 0,
        "medium": 0,
        "low": 0
      },
      "note": "Stub implementation - install semgrep CLI for real security analysis"
    },
    "dead_code": {
      "files": [],
      "summary": {
        "total_dead_code": 0,
        "unused_functions": 0,
        "unused_variables": 0
      },
      "note": "Stub implementation - install vulture library for real dead code detection"
    },
    "metrics": {
      "summary": {
        "average_complexity": 0.0,
        "average_maintainability": 0.0,
        "quality_score": 0.0
      },
      "files": [],
      "note": "Stub implementation - install radon library for real code metrics"
    },
    "call_graph": {
      "nodes": [
        {
          "function_id": "test_tetris_websocket_workflow.py:__init__",
          "name": "__init__",
          "file": "test_tetris_websocket_workflow.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_self_diagnosis_simple.py:__post_init__",
          "name": "__post_init__",
          "file": "test_self_diagnosis_simple.py",
          "line": 69,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_complex_workflow_simulation.py:simulate_query_classification",
          "name": "simulate_query_classification",
          "file": "test_complex_workflow_simulation.py",
          "line": 45,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_complex_workflow_simulation.py:simulate_execution_plan",
          "name": "simulate_execution_plan",
          "file": "test_complex_workflow_simulation.py",
          "line": 60,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_complex_workflow_simulation.py:simulate_workflow_execution",
          "name": "simulate_workflow_execution",
          "file": "test_complex_workflow_simulation.py",
          "line": 137,
          "calls": 3,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_complex_workflow_simulation.py:evaluate_complexity",
          "name": "evaluate_complexity",
          "file": "test_complex_workflow_simulation.py",
          "line": 235,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_complex_workflow_simulation.py:main",
          "name": "main",
          "file": "test_complex_workflow_simulation.py",
          "line": 277,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_simple_workflow.py:log",
          "name": "log",
          "file": "test_simple_workflow.py",
          "line": 13,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_orchestrator_steps.py:test_development_task_detection",
          "name": "test_development_task_detection",
          "file": "test_orchestrator_steps.py",
          "line": 28,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:__init__",
          "name": "__init__",
          "file": "test_tetris_workflow.py",
          "line": 17,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:record_agent",
          "name": "record_agent",
          "file": "test_tetris_workflow.py",
          "line": 28,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:record_output",
          "name": "record_output",
          "file": "test_tetris_workflow.py",
          "line": 38,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:record_quality_score",
          "name": "record_quality_score",
          "file": "test_tetris_workflow.py",
          "line": 42,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:record_message",
          "name": "record_message",
          "file": "test_tetris_workflow.py",
          "line": 51,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_workflow.py:generate_report",
          "name": "generate_report",
          "file": "test_tetris_workflow.py",
          "line": 55,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:main",
          "name": "main",
          "file": "cli.py",
          "line": 394,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:__init__",
          "name": "__init__",
          "file": "cli.py",
          "line": 35,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_show_welcome",
          "name": "_show_welcome",
          "file": "cli.py",
          "line": 67,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_display_results",
          "name": "_display_results",
          "file": "cli.py",
          "line": 198,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_show_help",
          "name": "_show_help",
          "file": "cli.py",
          "line": 257,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_show_agents",
          "name": "_show_agents",
          "file": "cli.py",
          "line": 275,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_show_history",
          "name": "_show_history",
          "file": "cli.py",
          "line": 299,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_load_history",
          "name": "_load_history",
          "file": "cli.py",
          "line": 375,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "cli.py:_save_history",
          "name": "_save_history",
          "file": "cli.py",
          "line": 385,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_system.py:print_test",
          "name": "print_test",
          "file": "test_system.py",
          "line": 30,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_system.py:print_section",
          "name": "print_section",
          "file": "test_system.py",
          "line": 36,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_system.py:__init__",
          "name": "__init__",
          "file": "test_system.py",
          "line": 206,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_routing_replan_check",
          "name": "test_routing_replan_check",
          "file": "test_code_verification.py",
          "line": 8,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_routing_in_progress_check",
          "name": "test_routing_in_progress_check",
          "file": "test_code_verification.py",
          "line": 27,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_orchestrator_replan_logic",
          "name": "test_orchestrator_replan_logic",
          "file": "test_code_verification.py",
          "line": 46,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_reviewer_collaboration",
          "name": "test_reviewer_collaboration",
          "file": "test_code_verification.py",
          "line": 69,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_conditional_edges",
          "name": "test_conditional_edges",
          "file": "test_code_verification.py",
          "line": 90,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_settings_sync_code",
          "name": "test_settings_sync_code",
          "file": "test_code_verification.py",
          "line": 108,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:test_instruction_files",
          "name": "test_instruction_files",
          "file": "test_code_verification.py",
          "line": 134,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_code_verification.py:main",
          "name": "main",
          "file": "test_code_verification.py",
          "line": 158,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_query_classifier_simple.py:simple_classify",
          "name": "simple_classify",
          "file": "test_query_classifier_simple.py",
          "line": 72,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_complete.py:__init__",
          "name": "__init__",
          "file": "test_tetris_complete.py",
          "line": 13,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_complete.py:log",
          "name": "log",
          "file": "test_tetris_complete.py",
          "line": 30,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "test_tetris_complete.py:print_summary",
          "name": "print_summary",
          "file": "test_tetris_complete.py",
          "line": 146,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/claude_browser.py:__init__",
          "name": "__init__",
          "file": "claude_web_proxy/claude_browser.py",
          "line": 20,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/quick_test.py:print_instructions",
          "name": "print_instructions",
          "file": "claude_web_proxy/quick_test.py",
          "line": 159,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/fastapi_server.py:run_server",
          "name": "run_server",
          "file": "claude_web_proxy/fastapi_server.py",
          "line": 295,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/fastapi_server.py:check_browser_context_status",
          "name": "check_browser_context_status",
          "file": "claude_web_proxy/fastapi_server.py",
          "line": 114,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:create_claude_web_agent",
          "name": "create_claude_web_agent",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 286,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:create_claude_web_llm",
          "name": "create_claude_web_llm",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 320,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:__init__",
          "name": "__init__",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 19,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:generate",
          "name": "generate",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 22,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:stream_generate",
          "name": "stream_generate",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 227,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:get_model_info",
          "name": "get_model_info",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 241,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:__del__",
          "name": "__del__",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 257,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/crewai_integration.py:run_in_thread",
          "name": "run_in_thread",
          "file": "claude_web_proxy/crewai_integration.py",
          "line": 200,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/setup_and_test.py:__init__",
          "name": "__init__",
          "file": "claude_web_proxy/setup_and_test.py",
          "line": 31,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/setup_and_test.py:install_playwright_browsers",
          "name": "install_playwright_browsers",
          "file": "claude_web_proxy/setup_and_test.py",
          "line": 65,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/setup_and_test.py:start_server",
          "name": "start_server",
          "file": "claude_web_proxy/setup_and_test.py",
          "line": 87,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/setup_and_test.py:stop_server",
          "name": "stop_server",
          "file": "claude_web_proxy/setup_and_test.py",
          "line": 108,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/setup_and_test.py:generate_setup_report",
          "name": "generate_setup_report",
          "file": "claude_web_proxy/setup_and_test.py",
          "line": 296,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "claude_web_proxy/debug_browser_api.py:recommended_browser_status_check",
          "name": "recommended_browser_status_check",
          "file": "claude_web_proxy/debug_browser_api.py",
          "line": 132,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 66,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_build_arbitration_prompt",
          "name": "_build_arbitration_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 134,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_extract_decision_components",
          "name": "_extract_decision_components",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 354,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:is_conflict_resolvable",
          "name": "is_conflict_resolvable",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 371,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_conflict_complexity",
          "name": "get_conflict_complexity",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "line": 386,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "line": 51,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_build_documentation_prompt",
          "name": "_build_documentation_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "line": 100,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_structure_documentation",
          "name": "_structure_documentation",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "line": 371,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 15,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 33,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_build_prompt",
          "name": "_build_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 48,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_extract_code",
          "name": "_extract_code",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 87,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_validate_code",
          "name": "_validate_code",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 102,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_stats",
          "name": "get_stats",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 132,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:reset_stats",
          "name": "reset_stats",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 148,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:__repr__",
          "name": "__repr__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "line": 155,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 17,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 66,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_mock_research_for_testing",
          "name": "_mock_research_for_testing",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 186,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_create_research_plan",
          "name": "_create_research_plan",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 296,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_build_research_prompt",
          "name": "_build_research_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 339,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_synthesize_findings",
          "name": "_synthesize_findings",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 383,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_generate_recommendations",
          "name": "_generate_recommendations",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "line": 419,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 51,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_code_review_prompt",
          "name": "_build_code_review_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 134,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_previous_analysis_prompt",
          "name": "_build_previous_analysis_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 258,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_final_review_prompt",
          "name": "_build_final_review_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 287,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_review_prompt",
          "name": "_build_review_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 365,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_categorize_issues",
          "name": "_categorize_issues",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 562,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_generate_recommendations",
          "name": "_generate_recommendations",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 620,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_calculate_quality_score",
          "name": "_calculate_quality_score",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "line": 652,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "line": 51,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_build_architecture_prompt",
          "name": "_build_architecture_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "line": 100,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_extract_artifacts",
          "name": "_extract_artifacts",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "line": 242,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 62,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_validation_prompt",
          "name": "_build_validation_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 154,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_improvement_prompt",
          "name": "_build_improvement_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 242,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_analyze_requirements",
          "name": "_analyze_requirements",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 386,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_strategy_prompt",
          "name": "_build_strategy_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 429,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_create_backtest_framework",
          "name": "_create_backtest_framework",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 902,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_generate_performance_metrics",
          "name": "_generate_performance_metrics",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "line": 962,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 58,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_analyze_problem",
          "name": "_analyze_problem",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 117,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_build_fix_prompt",
          "name": "_build_fix_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 152,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_validate_fixes",
          "name": "_validate_fixes",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 537,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_create_fix_summary",
          "name": "_create_fix_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "line": 567,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 14,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:get_capabilities",
          "name": "get_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 52,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_analysis_prompt",
          "name": "_build_analysis_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 146,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_coding_prompt",
          "name": "_build_coding_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 240,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_implementation_prompt",
          "name": "_build_implementation_prompt",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 572,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_organize_code",
          "name": "_organize_code",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "line": 654,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py",
          "line": 26,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:start_claude_web_server",
          "name": "start_claude_web_server",
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py",
          "line": 31,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:stop_claude_web_server",
          "name": "stop_claude_web_server",
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py",
          "line": 51,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py:main",
          "name": "main",
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py",
          "line": 131,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "line": 16,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_group_steps_for_execution",
          "name": "_group_steps_for_execution",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "line": 101,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_compile_final_output",
          "name": "_compile_final_output",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "line": 216,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_current_status",
          "name": "get_current_status",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "line": 257,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_execution_history",
          "name": "get_execution_history",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "line": 269,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 530,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:record_iteration",
          "name": "record_iteration",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 41,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
          "name": "_generate_iteration_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 87,
          "calls": 4,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_identify_problem_areas",
          "name": "_identify_problem_areas",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 151,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_recommendation",
          "name": "_generate_recommendation",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 178,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_user_options",
          "name": "_generate_user_options",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 207,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_get_primary_recommendation",
          "name": "_get_primary_recommendation",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 257,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
          "name": "_display_iteration_analysis",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 295,
          "calls": 4,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_common_issues",
          "name": "_format_common_issues",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 329,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_agent_performance",
          "name": "_format_agent_performance",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 340,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_problematic_areas",
          "name": "_format_problematic_areas",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 359,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_iteration_timeline",
          "name": "_format_iteration_timeline",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 366,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:get_iteration_statistics",
          "name": "get_iteration_statistics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "line": 566,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 37,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_intent_score",
          "name": "_calculate_intent_score",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 275,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_enhanced_intent_score",
          "name": "_calculate_enhanced_intent_score",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 306,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_extract_entities",
          "name": "_extract_entities",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 343,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_assess_complexity",
          "name": "_assess_complexity",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 355,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:get_intent_description",
          "name": "get_intent_description",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "line": 378,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__post_init__",
          "name": "__post_init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 26,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 36,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_detect_project_type",
          "name": "_detect_project_type",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 160,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_initialize_agents",
          "name": "_initialize_agents",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 239,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_agent_capabilities",
          "name": "_get_agent_capabilities",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 263,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_optimize_workflow",
          "name": "_optimize_workflow",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 276,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_quality_gates_for_context",
          "name": "_get_quality_gates_for_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 294,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_format_response",
          "name": "_format_response",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "line": 317,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:__post_init__",
          "name": "__post_init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 19,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "name": "get_context_for_agent",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 322,
          "calls": 5,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
          "name": "get_agent_instruction_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 342,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:add_agent_output",
          "name": "add_agent_output",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 35,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_iteration_summary",
          "name": "get_iteration_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 46,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:start_new_iteration",
          "name": "start_new_iteration",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 56,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_relevant_outputs",
          "name": "get_relevant_outputs",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 65,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_project_context",
          "name": "create_project_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 83,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_available_project_types",
          "name": "get_available_project_types",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 119,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_shared_context",
          "name": "create_shared_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 136,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 257,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_domain_instructions",
          "name": "get_domain_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 169,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_quality_gates",
          "name": "get_quality_gates",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 193,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_project_specifics",
          "name": "get_project_specifics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 196,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_context",
          "name": "create_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 215,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:update_context",
          "name": "update_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 261,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:should_continue_iteration",
          "name": "should_continue_iteration",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 273,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:prepare_agent_context",
          "name": "prepare_agent_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 280,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_statistics",
          "name": "get_context_statistics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "line": 293,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 17,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:suggest_workflow",
          "name": "suggest_workflow",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 75,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:get_intent_statistics",
          "name": "get_intent_statistics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 129,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_history",
          "name": "_load_history",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 176,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_patterns",
          "name": "_load_patterns",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 186,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_metrics",
          "name": "_load_metrics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 196,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_save_all",
          "name": "_save_all",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 206,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_metrics",
          "name": "_calculate_metrics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 224,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_was_successful",
          "name": "_was_successful",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 251,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_record_success_pattern",
          "name": "_record_success_pattern",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 255,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_update_performance_metrics",
          "name": "_update_performance_metrics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 279,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_find_similar_executions",
          "name": "_find_similar_executions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 303,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_extract_agents_used",
          "name": "_extract_agents_used",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 319,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_agent_rating",
          "name": "_calculate_agent_rating",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "line": 328,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 28,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_load_templates",
          "name": "_load_templates",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 66,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_select_template",
          "name": "_select_template",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 360,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_customize_workflow",
          "name": "_customize_workflow",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 369,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_optimize_parallel_execution",
          "name": "_optimize_parallel_execution",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 418,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_validate_agents",
          "name": "_validate_agents",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 453,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_estimate_total_time",
          "name": "_estimate_total_time",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 472,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:get_workflow_summary",
          "name": "get_workflow_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "line": 491,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 18,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:get_default_thresholds",
          "name": "get_default_thresholds",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_unified_engine",
          "name": "_analyze_unified_engine",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 264,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_future_leak_prevention",
          "name": "_analyze_future_leak_prevention",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 293,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_iterative_processing",
          "name": "_analyze_iterative_processing",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 331,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_engine_chart_decoupling",
          "name": "_analyze_engine_chart_decoupling",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "line": 360,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py",
          "line": 18,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:get_default_thresholds",
          "name": "get_default_thresholds",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 63,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:get_default_thresholds",
          "name": "get_default_thresholds",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 68,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:create_quality_check",
          "name": "create_quality_check",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 86,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:calculate_overall_score",
          "name": "calculate_overall_score",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 111,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:determine_pass_status",
          "name": "determine_pass_status",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 135,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_summary",
          "name": "generate_summary",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 151,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_recommendations",
          "name": "generate_recommendations",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 162,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:find_pattern_matches",
          "name": "find_pattern_matches",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 182,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_imports",
          "name": "check_imports",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 209,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_function_complexity",
          "name": "check_function_complexity",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "line": 242,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 18,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:get_default_thresholds",
          "name": "get_default_thresholds",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_vwap_fibonacci_condition",
          "name": "_analyze_vwap_fibonacci_condition",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 325,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ema9_logic",
          "name": "_analyze_ema9_logic",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 354,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_new_high_logic",
          "name": "_analyze_new_high_logic",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 374,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_crv_requirement",
          "name": "_analyze_crv_requirement",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 394,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_space_to_382",
          "name": "_analyze_space_to_382",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 414,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ron_trading_hours",
          "name": "_analyze_ron_trading_hours",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "line": 434,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 18,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:get_default_thresholds",
          "name": "get_default_thresholds",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_decimal_precision",
          "name": "_check_decimal_precision",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 296,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_pnl_calculations",
          "name": "_check_pnl_calculations",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 317,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_crv_calculations",
          "name": "_check_crv_calculations",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 336,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_position_validation",
          "name": "_check_position_validation",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 356,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_stop_loss_logic",
          "name": "_check_stop_loss_logic",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 376,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exposure_limits",
          "name": "_check_exposure_limits",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 395,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_market_hours",
          "name": "_check_market_hours",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 414,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_audit_trail",
          "name": "_check_audit_trail",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 433,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_type_annotations",
          "name": "_check_type_annotations",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 452,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exception_patterns",
          "name": "_check_exception_patterns",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 467,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_graceful_degradation",
          "name": "_check_graceful_degradation",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 496,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_docstring_coverage",
          "name": "_check_docstring_coverage",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 515,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_fallback_policy",
          "name": "_check_fallback_policy",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 530,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_live_data_policy",
          "name": "_check_live_data_policy",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "line": 555,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 22,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_steps",
          "name": "get_workflow_steps",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 35,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_agents",
          "name": "get_step_agents",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 39,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_instructions",
          "name": "get_step_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 53,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:validate_step_completion",
          "name": "validate_step_completion",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 319,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_description",
          "name": "get_workflow_description",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 361,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_success_criteria",
          "name": "get_success_criteria",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "line": 381,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 21,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_steps",
          "name": "get_workflow_steps",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 38,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_agents",
          "name": "get_step_agents",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 42,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_instructions",
          "name": "get_step_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 60,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:validate_step_completion",
          "name": "validate_step_completion",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 580,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_description",
          "name": "get_workflow_description",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 634,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_success_criteria",
          "name": "get_success_criteria",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "line": 659,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_workflow_for_project_type",
          "name": "get_workflow_for_project_type",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py",
          "line": 43,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_available_workflows",
          "name": "get_available_workflows",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py",
          "line": 63,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
          "name": "get_workflow_steps",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 27,
          "calls": 0,
          "called_by": 4,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_agents",
          "name": "get_step_agents",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 37,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_instructions",
          "name": "get_step_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 50,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:validate_step_completion",
          "name": "validate_step_completion",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 64,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_description",
          "name": "get_workflow_description",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 78,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_success_criteria",
          "name": "get_success_criteria",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 88,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
          "name": "get_workflow_info",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 97,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:log_execution",
          "name": "log_execution",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 113,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_next_step",
          "name": "get_next_step",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 135,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_position",
          "name": "get_step_position",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 159,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:is_workflow_complete",
          "name": "is_workflow_complete",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 176,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_progress",
          "name": "get_workflow_progress",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 189,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_execution_statistics",
          "name": "get_execution_statistics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "line": 202,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 180,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_domain_instructions",
          "name": "get_domain_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 183,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_quality_gates",
          "name": "get_quality_gates",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 214,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_project_specifics",
          "name": "get_project_specifics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 224,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_agent_enhancement_instructions",
          "name": "get_agent_enhancement_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 254,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_iteration_limits",
          "name": "get_iteration_limits",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "line": 334,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 103,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_domain_instructions",
          "name": "get_domain_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 106,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_quality_gates",
          "name": "get_quality_gates",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 143,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_project_specifics",
          "name": "get_project_specifics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 153,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_agent_enhancement_instructions",
          "name": "get_agent_enhancement_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 193,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_iteration_limits",
          "name": "get_iteration_limits",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "line": 276,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:__init__",
          "name": "__init__",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 34,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_domain_instructions",
          "name": "get_domain_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 38,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_quality_gates",
          "name": "get_quality_gates",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 54,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_project_specifics",
          "name": "get_project_specifics",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 67,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_agent_enhancement_instructions",
          "name": "get_agent_enhancement_instructions",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 76,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_iteration_limits",
          "name": "get_iteration_limits",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 88,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_conflict_resolution_priorities",
          "name": "get_conflict_resolution_priorities",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 103,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context",
          "name": "validate_context",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "line": 122,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/__version__.py:get_version",
          "name": "get_version",
          "file": "backend/__version__.py",
          "line": 18,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/__version__.py:get_version_tuple",
          "name": "get_version_tuple",
          "file": "backend/__version__.py",
          "line": 22,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/__version__.py:is_compatible",
          "name": "is_compatible",
          "file": "backend/__version__.py",
          "line": 26,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_websocket_debug.py:__init__",
          "name": "__init__",
          "file": "backend/test_websocket_debug.py",
          "line": 33,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_v4_features.py:test_v4_features",
          "name": "test_v4_features",
          "file": "backend/test_v4_features.py",
          "line": 14,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_langgraph_system.py:print_test_header",
          "name": "print_test_header",
          "file": "backend/test_langgraph_system.py",
          "line": 40,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_langgraph_system.py:print_success",
          "name": "print_success",
          "file": "backend/test_langgraph_system.py",
          "line": 47,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_langgraph_system.py:print_error",
          "name": "print_error",
          "file": "backend/test_langgraph_system.py",
          "line": 52,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_langgraph_system.py:print_info",
          "name": "print_info",
          "file": "backend/test_langgraph_system.py",
          "line": 57,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/test_langgraph_system.py:test_node",
          "name": "test_node",
          "file": "backend/test_langgraph_system.py",
          "line": 188,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/fixes/orchestrator_file_write_fix.py:_extract_file_path",
          "name": "_extract_file_path",
          "file": "backend/fixes/orchestrator_file_write_fix.py",
          "line": 64,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/fixes/orchestrator_file_write_fix.py:_determine_file_path",
          "name": "_determine_file_path",
          "file": "backend/fixes/orchestrator_file_write_fix.py",
          "line": 84,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/fixes/orchestrator_file_write_fix.py:_extract_feature_name",
          "name": "_extract_feature_name",
          "file": "backend/fixes/orchestrator_file_write_fix.py",
          "line": 123,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/fixes/task_request_enhancement.py:enhance_subtask_for_file_writing",
          "name": "enhance_subtask_for_file_writing",
          "file": "backend/fixes/task_request_enhancement.py",
          "line": 27,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/fixes/task_request_enhancement.py:to_file_task",
          "name": "to_file_task",
          "file": "backend/fixes/task_request_enhancement.py",
          "line": 17,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/memory_manager.py:get_memory_manager",
          "name": "get_memory_manager",
          "file": "backend/core/memory_manager.py",
          "line": 59,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/memory_manager.py:__init__",
          "name": "__init__",
          "file": "backend/core/memory_manager.py",
          "line": 31,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/memory_manager.py:store",
          "name": "store",
          "file": "backend/core/memory_manager.py",
          "line": 39,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/memory_manager.py:retrieve",
          "name": "retrieve",
          "file": "backend/core/memory_manager.py",
          "line": 43,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/memory_manager.py:clear",
          "name": "clear",
          "file": "backend/core/memory_manager.py",
          "line": 47,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/pause_handler.py:__init__",
          "name": "__init__",
          "file": "backend/core/pause_handler.py",
          "line": 31,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/pause_handler.py:pause",
          "name": "pause",
          "file": "backend/core/pause_handler.py",
          "line": 42,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/pause_handler.py:resume",
          "name": "resume",
          "file": "backend/core/pause_handler.py",
          "line": 50,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/pause_handler.py:is_paused",
          "name": "is_paused",
          "file": "backend/core/pause_handler.py",
          "line": 58,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:get_shared_context",
          "name": "get_shared_context",
          "file": "backend/core/shared_context_manager.py",
          "line": 51,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:__init__",
          "name": "__init__",
          "file": "backend/core/shared_context_manager.py",
          "line": 23,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:set",
          "name": "set",
          "file": "backend/core/shared_context_manager.py",
          "line": 27,
          "calls": 0,
          "called_by": 19,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:get",
          "name": "get",
          "file": "backend/core/shared_context_manager.py",
          "line": 31,
          "calls": 1,
          "called_by": 149,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:update",
          "name": "update",
          "file": "backend/core/shared_context_manager.py",
          "line": 35,
          "calls": 1,
          "called_by": 4,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:clear",
          "name": "clear",
          "file": "backend/core/shared_context_manager.py",
          "line": 39,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/core/shared_context_manager.py:get_all",
          "name": "get_all",
          "file": "backend/core/shared_context_manager.py",
          "line": 43,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/conversation_context_manager.py:get_conversation_context",
          "name": "get_conversation_context",
          "file": "backend/core/conversation_context_manager.py",
          "line": 50,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/conversation_context_manager.py:__init__",
          "name": "__init__",
          "file": "backend/core/conversation_context_manager.py",
          "line": 23,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/conversation_context_manager.py:add_message",
          "name": "add_message",
          "file": "backend/core/conversation_context_manager.py",
          "line": 27,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/conversation_context_manager.py:get_conversation",
          "name": "get_conversation",
          "file": "backend/core/conversation_context_manager.py",
          "line": 37,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/conversation_context_manager.py:clear_conversation",
          "name": "clear_conversation",
          "file": "backend/core/conversation_context_manager.py",
          "line": 41,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/git_checkpoint_manager.py:__init__",
          "name": "__init__",
          "file": "backend/core/git_checkpoint_manager.py",
          "line": 23,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/git_checkpoint_manager.py:create_checkpoint",
          "name": "create_checkpoint",
          "file": "backend/core/git_checkpoint_manager.py",
          "line": 34,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/git_checkpoint_manager.py:list_checkpoints",
          "name": "list_checkpoints",
          "file": "backend/core/git_checkpoint_manager.py",
          "line": 45,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/git_checkpoint_manager.py:rollback_to",
          "name": "rollback_to",
          "file": "backend/core/git_checkpoint_manager.py",
          "line": 49,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/exceptions.py:__init__",
          "name": "__init__",
          "file": "backend/core/exceptions.py",
          "line": 65,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/semgrep_analyzer.py:__init__",
          "name": "__init__",
          "file": "backend/core/analysis/semgrep_analyzer.py",
          "line": 18,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/vulture_analyzer.py:__init__",
          "name": "__init__",
          "file": "backend/core/analysis/vulture_analyzer.py",
          "line": 18,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/radon_metrics.py:__init__",
          "name": "__init__",
          "file": "backend/core/analysis/radon_metrics.py",
          "line": 18,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:__init__",
          "name": "__init__",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 56,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_classify_files_into_layers",
          "name": "_classify_files_into_layers",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 139,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_detect_file_layer",
          "name": "_detect_file_layer",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 154,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_build_layer_structure",
          "name": "_build_layer_structure",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 193,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
          "name": "_detect_layer_violations",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 221,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_resolve_import_to_file",
          "name": "_resolve_import_to_file",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 254,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_check_layer_violation",
          "name": "_check_layer_violation",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 274,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_calculate_quality_score",
          "name": "_calculate_quality_score",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 331,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_calculate_metrics",
          "name": "_calculate_metrics",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 373,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/layer_analyzer.py:_empty_layer_analysis",
          "name": "_empty_layer_analysis",
          "file": "backend/core/analysis/layer_analyzer.py",
          "line": 405,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:__init__",
          "name": "__init__",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 27,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_build_function_registry",
          "name": "_build_function_registry",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 120,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_build_call_relationships",
          "name": "_build_call_relationships",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 144,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_resolve_function_id",
          "name": "_resolve_function_id",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 179,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_detect_entry_points",
          "name": "_detect_entry_points",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 206,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_find_unused_functions",
          "name": "_find_unused_functions",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 240,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_detect_hot_paths",
          "name": "_detect_hot_paths",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 275,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_bfs_paths",
          "name": "_bfs_paths",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 304,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_build_nodes",
          "name": "_build_nodes",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 336,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_build_edges",
          "name": "_build_edges",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 367,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_analyze_clusters",
          "name": "_analyze_clusters",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 399,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_calculate_metrics",
          "name": "_calculate_metrics",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 446,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "name": "_calculate_call_depth",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 477,
          "calls": 3,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/core/analysis/call_graph_analyzer.py:_empty_call_graph",
          "name": "_empty_call_graph",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "line": 505,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:__init__",
          "name": "__init__",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 20,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_extract_function_calls",
          "name": "_extract_function_calls",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 94,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_get_call_name",
          "name": "_get_call_name",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 104,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_get_name",
          "name": "_get_name",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 113,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_get_attribute_path",
          "name": "_get_attribute_path",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 121,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_get_decorator_name",
          "name": "_get_decorator_name",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 132,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/tree_sitter_indexer.py:_extract_import",
          "name": "_extract_import",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "line": 140,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/code_indexer.py:__init__",
          "name": "__init__",
          "file": "backend/core/indexing/code_indexer.py",
          "line": 22,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/code_indexer.py:_find_python_files",
          "name": "_find_python_files",
          "file": "backend/core/indexing/code_indexer.py",
          "line": 108,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/core/indexing/code_indexer.py:_count_total_lines",
          "name": "_count_total_lines",
          "file": "backend/core/indexing/code_indexer.py",
          "line": 123,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:get_capabilities_loader",
          "name": "get_capabilities_loader",
          "file": "backend/config/capabilities_loader.py",
          "line": 187,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
          "name": "apply_capabilities_to_agent",
          "file": "backend/config/capabilities_loader.py",
          "line": 194,
          "calls": 2,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:__init__",
          "name": "__init__",
          "file": "backend/config/capabilities_loader.py",
          "line": 17,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:_load_capabilities",
          "name": "_load_capabilities",
          "file": "backend/config/capabilities_loader.py",
          "line": 32,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:get_agent_capabilities",
          "name": "get_agent_capabilities",
          "file": "backend/config/capabilities_loader.py",
          "line": 49,
          "calls": 1,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:apply_to_config",
          "name": "apply_to_config",
          "file": "backend/config/capabilities_loader.py",
          "line": 83,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:can_agent_write",
          "name": "can_agent_write",
          "file": "backend/config/capabilities_loader.py",
          "line": 113,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/capabilities_loader.py:get_all_capabilities",
          "name": "get_all_capabilities",
          "file": "backend/config/capabilities_loader.py",
          "line": 180,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/settings.py:get_language_directive",
          "name": "get_language_directive",
          "file": "backend/config/settings.py",
          "line": 124,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/settings.py:get_timeout",
          "name": "get_timeout",
          "file": "backend/config/settings.py",
          "line": 129,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/settings.py:update_from_vscode",
          "name": "update_from_vscode",
          "file": "backend/config/settings.py",
          "line": 139,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/settings.py:_auto_detect_provider",
          "name": "_auto_detect_provider",
          "file": "backend/config/settings.py",
          "line": 229,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/config/settings.py:to_dict",
          "name": "to_dict",
          "file": "backend/config/settings.py",
          "line": 251,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/tests/test_agent_file_capabilities.py:main",
          "name": "main",
          "file": "backend/tests/test_agent_file_capabilities.py",
          "line": 273,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/tests/test_agent_file_capabilities.py:setup_method",
          "name": "setup_method",
          "file": "backend/tests/test_agent_file_capabilities.py",
          "line": 28,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/tests/test_agent_file_capabilities.py:teardown_method",
          "name": "teardown_method",
          "file": "backend/tests/test_agent_file_capabilities.py",
          "line": 33,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/tests/test_integration.py:__init__",
          "name": "__init__",
          "file": "backend/tests/test_integration.py",
          "line": 20,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/tests/test_integration.py:record_result",
          "name": "record_result",
          "file": "backend/tests/test_integration.py",
          "line": 382,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/tests/test_integration.py:print_summary",
          "name": "print_summary",
          "file": "backend/tests/test_integration.py",
          "line": 406,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:get_agent_registry",
          "name": "get_agent_registry",
          "file": "backend/agents/agent_registry.py",
          "line": 317,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:__new__",
          "name": "__new__",
          "file": "backend/agents/agent_registry.py",
          "line": 56,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:__init__",
          "name": "__init__",
          "file": "backend/agents/agent_registry.py",
          "line": 62,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:get_agent",
          "name": "get_agent",
          "file": "backend/agents/agent_registry.py",
          "line": 167,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:get_available_agents",
          "name": "get_available_agents",
          "file": "backend/agents/agent_registry.py",
          "line": 177,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:find_agent_by_capability",
          "name": "find_agent_by_capability",
          "file": "backend/agents/agent_registry.py",
          "line": 247,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:get_agents_by_capability",
          "name": "get_agents_by_capability",
          "file": "backend/agents/agent_registry.py",
          "line": 257,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/agent_registry.py:get_status",
          "name": "get_status",
          "file": "backend/agents/agent_registry.py",
          "line": 283,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/file_tools.py:__init__",
          "name": "__init__",
          "file": "backend/agents/tools/file_tools.py",
          "line": 35,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/file_tools.py:_validate_path",
          "name": "_validate_path",
          "file": "backend/agents/tools/file_tools.py",
          "line": 55,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/file_tools.py:_create_backup",
          "name": "_create_backup",
          "file": "backend/agents/tools/file_tools.py",
          "line": 118,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/file_tools.py:_log_operation",
          "name": "_log_operation",
          "file": "backend/agents/tools/file_tools.py",
          "line": 143,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/file_tools.py:get_audit_log",
          "name": "get_audit_log",
          "file": "backend/agents/tools/file_tools.py",
          "line": 449,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/tools/browser_tester.py:__init__",
          "name": "__init__",
          "file": "backend/agents/tools/browser_tester.py",
          "line": 36,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixerbot_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/fixerbot_agent.py",
          "line": 63,
          "calls": 2,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixerbot_agent.py:_match_pattern",
          "name": "_match_pattern",
          "file": "backend/agents/specialized/fixerbot_agent.py",
          "line": 187,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/reviewer_gpt_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "line": 37,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/reviewer_gpt_agent.py:check_asimov_violations",
          "name": "check_asimov_violations",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "line": 205,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/reviewer_gpt_agent.py:_calculate_html_app_quality_score",
          "name": "_calculate_html_app_quality_score",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "line": 429,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/reviewer_gpt_agent.py:_get_recommendation",
          "name": "_get_recommendation",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "line": 463,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/reviewer_gpt_agent.py:_format_metrics",
          "name": "_format_metrics",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "line": 478,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/tradestrat_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/tradestrat_agent.py",
          "line": 28,
          "calls": 2,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/docubot_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/docubot_agent.py",
          "line": 28,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 116,
          "calls": 5,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_parse_architecture_response",
          "name": "_parse_architecture_response",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 484,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_extract_features",
          "name": "_extract_features",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 600,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_load_architecture_patterns",
          "name": "_load_architecture_patterns",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 619,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:__del__",
          "name": "__del__",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 742,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_load_tech_stacks",
          "name": "_load_tech_stacks",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 754,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_generate_redis_config",
          "name": "_generate_redis_config",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 845,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_generate_docker_compose",
          "name": "_generate_docker_compose",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 912,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/architect_agent.py:_detect_request_type",
          "name": "_detect_request_type",
          "file": "backend/agents/specialized/architect_agent.py",
          "line": 1391,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 89,
          "calls": 5,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:format_implementation",
          "name": "format_implementation",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 890,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_detect_language",
          "name": "_detect_language",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 926,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_extract_functionality",
          "name": "_extract_functionality",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 953,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_assess_complexity",
          "name": "_assess_complexity",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 965,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_generate_filename",
          "name": "_generate_filename",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 978,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_extract_dependencies",
          "name": "_extract_dependencies",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1004,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_get_test_framework",
          "name": "_get_test_framework",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1027,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_load_code_patterns",
          "name": "_load_code_patterns",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1046,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_load_language_configs",
          "name": "_load_language_configs",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1068,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_generate_fix_suggestion",
          "name": "_generate_fix_suggestion",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1681,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_check_for_hallucination",
          "name": "_check_for_hallucination",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1769,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_validate_workspace_context",
          "name": "_validate_workspace_context",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1791,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_enforce_asimov_rule_1",
          "name": "_enforce_asimov_rule_1",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1825,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_extract_file_path",
          "name": "_extract_file_path",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1978,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_generate_file_path",
          "name": "_generate_file_path",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 1995,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/codesmith_agent.py:_extract_feature_name",
          "name": "_extract_feature_name",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "line": 2028,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixer_gpt_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/fixer_gpt_agent.py",
          "line": 38,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixer_gpt_agent.py:_create_fresh_perspective_prompt",
          "name": "_create_fresh_perspective_prompt",
          "file": "backend/agents/specialized/fixer_gpt_agent.py",
          "line": 70,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixer_gpt_agent.py:_format_previous_attempts",
          "name": "_format_previous_attempts",
          "file": "backend/agents/specialized/fixer_gpt_agent.py",
          "line": 110,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/fixer_gpt_agent.py:_format_research_results",
          "name": "_format_research_results",
          "file": "backend/agents/specialized/fixer_gpt_agent.py",
          "line": 124,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/performance_bot.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/performance_bot.py",
          "line": 48,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/performance_bot.py:_extract_bottlenecks",
          "name": "_extract_bottlenecks",
          "file": "backend/agents/specialized/performance_bot.py",
          "line": 194,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/performance_bot.py:_parse_profile_stats",
          "name": "_parse_profile_stats",
          "file": "backend/agents/specialized/performance_bot.py",
          "line": 275,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/performance_bot.py:_format_profile_results",
          "name": "_format_profile_results",
          "file": "backend/agents/specialized/performance_bot.py",
          "line": 296,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/performance_bot.py:_format_package_analysis",
          "name": "_format_package_analysis",
          "file": "backend/agents/specialized/performance_bot.py",
          "line": 437,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/research_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/research_agent.py",
          "line": 34,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent_v2.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/orchestrator_agent_v2.py",
          "line": 50,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent_v2.py:set_planning_mode",
          "name": "set_planning_mode",
          "file": "backend/agents/specialized/orchestrator_agent_v2.py",
          "line": 154,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/opus_arbitrator_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/opus_arbitrator_agent.py",
          "line": 28,
          "calls": 2,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 75,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:_calculate_critical_path_duration",
          "name": "_calculate_critical_path_duration",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 530,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:_get_chain_duration",
          "name": "_get_chain_duration",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 545,
          "calls": 1,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:_group_by_dependency_level",
          "name": "_group_by_dependency_level",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 689,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:_dependencies_met",
          "name": "_dependencies_met",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 710,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/specialized/orchestrator_agent.py:format_orchestration_result",
          "name": "format_orchestration_result",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "line": 762,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/base/base_agent.py",
          "line": 138,
          "calls": 7,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:_load_instructions",
          "name": "_load_instructions",
          "file": "backend/agents/base/base_agent.py",
          "line": 223,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:_get_language_directive",
          "name": "_get_language_directive",
          "file": "backend/agents/base/base_agent.py",
          "line": 256,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:get_system_prompt",
          "name": "get_system_prompt",
          "file": "backend/agents/base/base_agent.py",
          "line": 268,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:calculate_dynamic_timeout",
          "name": "calculate_dynamic_timeout",
          "file": "backend/agents/base/base_agent.py",
          "line": 558,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:_compile_research_summary",
          "name": "_compile_research_summary",
          "file": "backend/agents/base/base_agent.py",
          "line": 847,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:set_websocket_callback",
          "name": "set_websocket_callback",
          "file": "backend/agents/base/base_agent.py",
          "line": 1025,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:get_status",
          "name": "get_status",
          "file": "backend/agents/base/base_agent.py",
          "line": 1031,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/base_agent.py:__repr__",
          "name": "__repr__",
          "file": "backend/agents/base/base_agent.py",
          "line": 1201,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:validate_request",
          "name": "validate_request",
          "file": "backend/agents/base/prime_directives.py",
          "line": 126,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:_check_violations",
          "name": "_check_violations",
          "file": "backend/agents/base/prime_directives.py",
          "line": 173,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:check_research_requirements",
          "name": "check_research_requirements",
          "file": "backend/agents/base/prime_directives.py",
          "line": 247,
          "calls": 3,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:format_challenge_response",
          "name": "format_challenge_response",
          "file": "backend/agents/base/prime_directives.py",
          "line": 316,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:get_directive_prompt",
          "name": "get_directive_prompt",
          "file": "backend/agents/base/prime_directives.py",
          "line": 344,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/prime_directives.py:check_global_error_search",
          "name": "check_global_error_search",
          "file": "backend/agents/base/prime_directives.py",
          "line": 365,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/chat_agent.py:__post_init__",
          "name": "__post_init__",
          "file": "backend/agents/base/chat_agent.py",
          "line": 26,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/chat_agent.py:to_dict",
          "name": "to_dict",
          "file": "backend/agents/base/chat_agent.py",
          "line": 32,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/chat_agent.py:__init__",
          "name": "__init__",
          "file": "backend/agents/base/chat_agent.py",
          "line": 47,
          "calls": 1,
          "called_by": 1,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/agents/base/chat_agent.py:format_response",
          "name": "format_response",
          "file": "backend/agents/base/chat_agent.py",
          "line": 193,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/agents/base/chat_agent.py:get_chat_status",
          "name": "get_chat_status",
          "file": "backend/agents/base/chat_agent.py",
          "line": 203,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/perplexity_service.py:__init__",
          "name": "__init__",
          "file": "backend/utils/perplexity_service.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/perplexity_service.py:test_connection",
          "name": "test_connection",
          "file": "backend/utils/perplexity_service.py",
          "line": 314,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/claude_code_service.py:__init__",
          "name": "__init__",
          "file": "backend/utils/claude_code_service.py",
          "line": 33,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/claude_code_service.py:_check_cli_availability",
          "name": "_check_cli_availability",
          "file": "backend/utils/claude_code_service.py",
          "line": 40,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/claude_code_service.py:_parse_json_response",
          "name": "_parse_json_response",
          "file": "backend/utils/claude_code_service.py",
          "line": 136,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/claude_code_service.py:is_available",
          "name": "is_available",
          "file": "backend/utils/claude_code_service.py",
          "line": 252,
          "calls": 0,
          "called_by": 4,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/openai_service.py:__init__",
          "name": "__init__",
          "file": "backend/utils/openai_service.py",
          "line": 34,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/openai_service.py:is_available",
          "name": "is_available",
          "file": "backend/utils/openai_service.py",
          "line": 266,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/anthropic_service.py:__init__",
          "name": "__init__",
          "file": "backend/utils/anthropic_service.py",
          "line": 34,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/anthropic_service.py:_format_outputs",
          "name": "_format_outputs",
          "file": "backend/utils/anthropic_service.py",
          "line": 241,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/utils/anthropic_service.py:is_available",
          "name": "is_available",
          "file": "backend/utils/anthropic_service.py",
          "line": 251,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 35,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:_init_fallback_responses",
          "name": "_init_fallback_responses",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 39,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:_init_query_patterns",
          "name": "_init_query_patterns",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 119,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:analyze_query",
          "name": "analyze_query",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 148,
          "calls": 1,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
          "name": "get_intelligent_response",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 219,
          "calls": 1,
          "called_by": 3,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:create_intelligent_execution_plan",
          "name": "create_intelligent_execution_plan",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 256,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:enhance_orchestrator_step",
          "name": "enhance_orchestrator_step",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 344,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:integrate_with_classification",
          "name": "integrate_with_classification",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 359,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/intelligent_query_handler.py:_get_development_guidance",
          "name": "_get_development_guidance",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "line": 389,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/cache_manager.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/cache_manager.py",
          "line": 24,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/cache_manager.py:check_docker_installed",
          "name": "check_docker_installed",
          "file": "backend/langgraph_system/cache_manager.py",
          "line": 28,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/cache_manager.py:check_redis_running",
          "name": "check_redis_running",
          "file": "backend/langgraph_system/cache_manager.py",
          "line": 41,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/cache_manager.py:start_redis_container",
          "name": "start_redis_container",
          "file": "backend/langgraph_system/cache_manager.py",
          "line": 51,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/cache_manager.py:fill_caches",
          "name": "fill_caches",
          "file": "backend/langgraph_system/cache_manager.py",
          "line": 131,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 33,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "name": "analyze_context",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 36,
          "calls": 1,
          "called_by": 4,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_performance_query",
          "name": "handle_performance_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 77,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_bug_query",
          "name": "handle_bug_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 116,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_refactoring_query",
          "name": "handle_refactoring_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 162,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_testing_query",
          "name": "handle_testing_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 204,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_implementation_query",
          "name": "handle_implementation_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 253,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_technology_query",
          "name": "handle_technology_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 311,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_database_query",
          "name": "handle_database_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 355,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_ai_integration_query",
          "name": "handle_ai_integration_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 417,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_error_diagnosis_query",
          "name": "handle_error_diagnosis_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 470,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_scope_clarification",
          "name": "handle_scope_clarification",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 546,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:get_handler_for_type",
          "name": "get_handler_for_type",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 604,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:handle_development_query",
          "name": "handle_development_query",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 622,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/development_query_handler.py:suggest_next_steps",
          "name": "suggest_next_steps",
          "file": "backend/langgraph_system/development_query_handler.py",
          "line": 647,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:summary",
          "name": "summary",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 57,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 527,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:classify_query",
          "name": "classify_query",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 161,
          "calls": 10,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_is_greeting",
          "name": "_is_greeting",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 208,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_is_nonsense",
          "name": "_is_nonsense",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 228,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_has_context_reference",
          "name": "_has_context_reference",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 249,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_check_pattern",
          "name": "_check_pattern",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 259,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_check_development_patterns",
          "name": "_check_development_patterns",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 263,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_calculate_coherence",
          "name": "_calculate_coherence",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 319,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_calculate_confidence",
          "name": "_calculate_confidence",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 342,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_calculate_safety",
          "name": "_calculate_safety",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 364,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_determine_action",
          "name": "_determine_action",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 386,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_get_dev_agent",
          "name": "_get_dev_agent",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 436,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_prepare_responses",
          "name": "_prepare_responses",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 450,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:is_safe",
          "name": "is_safe",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 530,
          "calls": 4,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_is_duplicate",
          "name": "_is_duplicate",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 562,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_detect_loop_pattern",
          "name": "_detect_loop_pattern",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 568,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:_check_resource_exhaustion",
          "name": "_check_resource_exhaustion",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 577,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/query_classifier.py:record_execution",
          "name": "record_execution",
          "file": "backend/langgraph_system/query_classifier.py",
          "line": 589,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 1104,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "name": "_initialize_patterns",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 760,
          "calls": 5,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:detect_patterns",
          "name": "detect_patterns",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 138,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_check_pattern",
          "name": "_check_pattern",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 154,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_has_circular_dependencies",
          "name": "_has_circular_dependencies",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 205,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_get_detection_reason",
          "name": "_get_detection_reason",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 231,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "name": "_define_invariants",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 258,
          "calls": 5,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:check_all",
          "name": "check_all",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 328,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_check_valid_transitions",
          "name": "_check_valid_transitions",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 347,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_check_unique_ids",
          "name": "_check_unique_ids",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 366,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_check_dependencies_exist",
          "name": "_check_dependencies_exist",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 372,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_check_agent_capabilities",
          "name": "_check_agent_capabilities",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 383,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_calculate_dependency_depth",
          "name": "_calculate_dependency_depth",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 679,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_find_parallelizable_steps",
          "name": "_find_parallelizable_steps",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 693,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_has_dependency_conflict",
          "name": "_has_dependency_conflict",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 716,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_is_in_cycle",
          "name": "_is_in_cycle",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 721,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:analyze_patterns",
          "name": "analyze_patterns",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 790,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_routing_loop",
          "name": "_detect_routing_loop",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 831,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_collaboration_spiral",
          "name": "_detect_collaboration_spiral",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 840,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_stuck_progress",
          "name": "_detect_stuck_progress",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 853,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_resource_spike",
          "name": "_detect_resource_spike",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 858,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_timeout_cluster",
          "name": "_detect_timeout_cluster",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 863,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_statistical_anomalies",
          "name": "_detect_statistical_anomalies",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 868,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:get_diagnosis_report",
          "name": "get_diagnosis_report",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 1175,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle_from",
          "name": "has_cycle_from",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 208,
          "calls": 1,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
          "name": "get_depth",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 681,
          "calls": 2,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle",
          "name": "has_cycle",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "line": 726,
          "calls": 1,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:create_agent_workflow",
          "name": "create_agent_workflow",
          "file": "backend/langgraph_system/workflow.py",
          "line": 3015,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/workflow.py",
          "line": 105,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_init_agent_memories",
          "name": "_init_agent_memories",
          "file": "backend/langgraph_system/workflow.py",
          "line": 182,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_init_real_agents",
          "name": "_init_real_agents",
          "file": "backend/langgraph_system/workflow.py",
          "line": 203,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:create_task_ledger",
          "name": "create_task_ledger",
          "file": "backend/langgraph_system/workflow.py",
          "line": 251,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:extract_success_criteria",
          "name": "extract_success_criteria",
          "file": "backend/langgraph_system/workflow.py",
          "line": 285,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:create_progress_ledger",
          "name": "create_progress_ledger",
          "file": "backend/langgraph_system/workflow.py",
          "line": 309,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:identify_parallel_groups",
          "name": "identify_parallel_groups",
          "file": "backend/langgraph_system/workflow.py",
          "line": 372,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_has_dependency_conflict",
          "name": "_has_dependency_conflict",
          "file": "backend/langgraph_system/workflow.py",
          "line": 414,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_get_all_dependencies",
          "name": "_get_all_dependencies",
          "file": "backend/langgraph_system/workflow.py",
          "line": 432,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:route_after_approval",
          "name": "route_after_approval",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1231,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:route_from_architect",
          "name": "route_from_architect",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1290,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "name": "route_to_next_agent",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1319,
          "calls": 4,
          "called_by": 2,
          "is_recursive": true,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_dependencies_met",
          "name": "_dependencies_met",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1418,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_get_current_step",
          "name": "_get_current_step",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1426,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_get_step_by_agent",
          "name": "_get_step_by_agent",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1433,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_check_escalation_needed",
          "name": "_check_escalation_needed",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1440,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_calculate_agent_confidence",
          "name": "_calculate_agent_confidence",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1903,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_create_single_agent_step",
          "name": "_create_single_agent_step",
          "file": "backend/langgraph_system/workflow.py",
          "line": 1958,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_detect_task_complexity",
          "name": "_detect_task_complexity",
          "file": "backend/langgraph_system/workflow.py",
          "line": 2006,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_apply_plan_modifications",
          "name": "_apply_plan_modifications",
          "file": "backend/langgraph_system/workflow.py",
          "line": 2194,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:_format_proposal_for_user",
          "name": "_format_proposal_for_user",
          "file": "backend/langgraph_system/workflow.py",
          "line": 2385,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:create_workflow",
          "name": "create_workflow",
          "file": "backend/langgraph_system/workflow.py",
          "line": 2791,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/workflow.py:compile_workflow",
          "name": "compile_workflow",
          "file": "backend/langgraph_system/workflow.py",
          "line": 2867,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:create_initial_state",
          "name": "create_initial_state",
          "file": "backend/langgraph_system/state.py",
          "line": 245,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:__post_init__",
          "name": "__post_init__",
          "file": "backend/langgraph_system/state.py",
          "line": 132,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:is_timeout",
          "name": "is_timeout",
          "file": "backend/langgraph_system/state.py",
          "line": 77,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:can_retry",
          "name": "can_retry",
          "file": "backend/langgraph_system/state.py",
          "line": 84,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:get_retry_delay",
          "name": "get_retry_delay",
          "file": "backend/langgraph_system/state.py",
          "line": 88,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/state.py:update_from_steps",
          "name": "update_from_steps",
          "file": "backend/langgraph_system/state.py",
          "line": 139,
          "calls": 0,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:add_attempt",
          "name": "add_attempt",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 41,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 68,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:_generate_query_hash",
          "name": "_generate_query_hash",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 75,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:_detect_loop_pattern",
          "name": "_detect_loop_pattern",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 80,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:_get_safe_fallback_response",
          "name": "_get_safe_fallback_response",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 102,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:get_execution_stats",
          "name": "get_execution_stats",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 314,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
          "name": "should_use_safe_execution",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 351,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/safe_orchestrator_executor.py:reset_history",
          "name": "reset_history",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "line": 399,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 48,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:_extract_base_structure",
          "name": "_extract_base_structure",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 75,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:add_node",
          "name": "add_node",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 81,
          "calls": 0,
          "called_by": 3,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:remove_node",
          "name": "remove_node",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 118,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:add_edge",
          "name": "add_edge",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 149,
          "calls": 0,
          "called_by": 3,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:add_conditional_routing",
          "name": "add_conditional_routing",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 188,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:compile_graph",
          "name": "compile_graph",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 218,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:create_template",
          "name": "create_template",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 272,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
          "name": "apply_template",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 303,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:rollback",
          "name": "rollback",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 361,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:get_graph_info",
          "name": "get_graph_info",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 387,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/dynamic_workflow.py:visualize_graph",
          "name": "visualize_graph",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "line": 402,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 36,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:_format_plan_for_ui",
          "name": "_format_plan_for_ui",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 155,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:_format_step",
          "name": "_format_step",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 176,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:get_approval_status",
          "name": "get_approval_status",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 218,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:get_approval_history",
          "name": "get_approval_history",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 224,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:cleanup_expired",
          "name": "cleanup_expired",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 253,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/approval_manager.py:get_pending_approvals",
          "name": "get_pending_approvals",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "line": 276,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:tool",
          "name": "tool",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 18,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:get_tool_registry",
          "name": "get_tool_registry",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 313,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:decorator",
          "name": "decorator",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 27,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 41,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
          "name": "auto_discover_tools",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 47,
          "calls": 3,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_decorated",
          "name": "_create_tool_from_decorated",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 76,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_prefix",
          "name": "_create_tool_from_prefix",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 87,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:_extract_parameters",
          "name": "_extract_parameters",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 99,
          "calls": 1,
          "called_by": 2,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:_python_type_to_json_type",
          "name": "_python_type_to_json_type",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 132,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:register_tool",
          "name": "register_tool",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 153,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:discover_tools_for_agent",
          "name": "discover_tools_for_agent",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 173,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:get_tool_schema",
          "name": "get_tool_schema",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 232,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:list_all_tools",
          "name": "list_all_tools",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 253,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:get_usage_stats",
          "name": "get_usage_stats",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 260,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:export_tools",
          "name": "export_tools",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 266,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/tool_discovery.py:import_tools",
          "name": "import_tools",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "line": 283,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:__init__",
          "name": "__init__",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 35,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:_init_sqlite",
          "name": "_init_sqlite",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 71,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:_init_vector_store",
          "name": "_init_vector_store",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 136,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:_create_new_vector_store",
          "name": "_create_new_vector_store",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 158,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:store_memory",
          "name": "store_memory",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 175,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:recall_similar",
          "name": "recall_similar",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 240,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:learn_pattern",
          "name": "learn_pattern",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 330,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:get_learned_solution",
          "name": "get_learned_solution",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 389,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:record_agent_interaction",
          "name": "record_agent_interaction",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 417,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:get_interaction_history",
          "name": "get_interaction_history",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 438,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:_update_access_counts",
          "name": "_update_access_counts",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 479,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:_save_vector_store",
          "name": "_save_vector_store",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 499,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:consolidate_memories",
          "name": "consolidate_memories",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 508,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/langgraph_system/extensions/persistent_memory.py:get_memory_stats",
          "name": "get_memory_stats",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "line": 530,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/server_langgraph.py:main",
          "name": "main",
          "file": "backend/api/server_langgraph.py",
          "line": 583,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/server_langgraph.py:__init__",
          "name": "__init__",
          "file": "backend/api/server_langgraph.py",
          "line": 56,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/server_langgraph.py:disconnect",
          "name": "disconnect",
          "file": "backend/api/server_langgraph.py",
          "line": 69,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/models_endpoint.py:load_models_from_config",
          "name": "load_models_from_config",
          "file": "backend/api/models_endpoint.py",
          "line": 19,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/models_endpoint.py:load_models_from_available_json",
          "name": "load_models_from_available_json",
          "file": "backend/api/models_endpoint.py",
          "line": 83,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/models_endpoint.py:get_model_recommendations",
          "name": "get_model_recommendations",
          "file": "backend/api/models_endpoint.py",
          "line": 102,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/api/models_endpoint.py:get_latest_models",
          "name": "get_latest_models",
          "file": "backend/api/models_endpoint.py",
          "line": 143,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:__init__",
          "name": "__init__",
          "file": "backend/services/diagram_service.py",
          "line": 38,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:generate_flowchart",
          "name": "generate_flowchart",
          "file": "backend/services/diagram_service.py",
          "line": 51,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:generate_sequence_diagram",
          "name": "generate_sequence_diagram",
          "file": "backend/services/diagram_service.py",
          "line": 71,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:generate_class_diagram",
          "name": "generate_class_diagram",
          "file": "backend/services/diagram_service.py",
          "line": 89,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:generate_architecture_diagram",
          "name": "generate_architecture_diagram",
          "file": "backend/services/diagram_service.py",
          "line": 107,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:_generate_mermaid_flowchart",
          "name": "_generate_mermaid_flowchart",
          "file": "backend/services/diagram_service.py",
          "line": 125,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:_generate_mermaid_sequence",
          "name": "_generate_mermaid_sequence",
          "file": "backend/services/diagram_service.py",
          "line": 151,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:_generate_mermaid_class",
          "name": "_generate_mermaid_class",
          "file": "backend/services/diagram_service.py",
          "line": 168,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:_generate_mermaid_architecture",
          "name": "_generate_mermaid_architecture",
          "file": "backend/services/diagram_service.py",
          "line": 201,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:_generate_ascii_flowchart",
          "name": "_generate_ascii_flowchart",
          "file": "backend/services/diagram_service.py",
          "line": 234,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/diagram_service.py:save_diagram",
          "name": "save_diagram",
          "file": "backend/services/diagram_service.py",
          "line": 260,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:__init__",
          "name": "__init__",
          "file": "backend/services/project_cache.py",
          "line": 22,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:_get_cache_key",
          "name": "_get_cache_key",
          "file": "backend/services/project_cache.py",
          "line": 43,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:_get_cache_path",
          "name": "_get_cache_path",
          "file": "backend/services/project_cache.py",
          "line": 49,
          "calls": 1,
          "called_by": 3,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:get",
          "name": "get",
          "file": "backend/services/project_cache.py",
          "line": 53,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:set",
          "name": "set",
          "file": "backend/services/project_cache.py",
          "line": 86,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:invalidate",
          "name": "invalidate",
          "file": "backend/services/project_cache.py",
          "line": 111,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:clear_all",
          "name": "clear_all",
          "file": "backend/services/project_cache.py",
          "line": 124,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/project_cache.py:get_stats",
          "name": "get_stats",
          "file": "backend/services/project_cache.py",
          "line": 130,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:__init__",
          "name": "__init__",
          "file": "backend/services/smart_file_watcher.py",
          "line": 21,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:watch_file",
          "name": "watch_file",
          "file": "backend/services/smart_file_watcher.py",
          "line": 38,
          "calls": 2,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:watch_directory",
          "name": "watch_directory",
          "file": "backend/services/smart_file_watcher.py",
          "line": 64,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:check_changes",
          "name": "check_changes",
          "file": "backend/services/smart_file_watcher.py",
          "line": 86,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:stop_watching",
          "name": "stop_watching",
          "file": "backend/services/smart_file_watcher.py",
          "line": 120,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:stop_all",
          "name": "stop_all",
          "file": "backend/services/smart_file_watcher.py",
          "line": 137,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:get_watched_files",
          "name": "get_watched_files",
          "file": "backend/services/smart_file_watcher.py",
          "line": 144,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:_resolve_path",
          "name": "_resolve_path",
          "file": "backend/services/smart_file_watcher.py",
          "line": 148,
          "calls": 0,
          "called_by": 3,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:start",
          "name": "start",
          "file": "backend/services/smart_file_watcher.py",
          "line": 155,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:stop",
          "name": "stop",
          "file": "backend/services/smart_file_watcher.py",
          "line": 164,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/smart_file_watcher.py:start_monitoring",
          "name": "start_monitoring",
          "file": "backend/services/smart_file_watcher.py",
          "line": 169,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:__init__",
          "name": "__init__",
          "file": "backend/services/code_search.py",
          "line": 42,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:to_dict",
          "name": "to_dict",
          "file": "backend/services/code_search.py",
          "line": 25,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:search",
          "name": "search",
          "file": "backend/services/code_search.py",
          "line": 57,
          "calls": 2,
          "called_by": 35,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:search_definition",
          "name": "search_definition",
          "file": "backend/services/code_search.py",
          "line": 99,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:search_usage",
          "name": "search_usage",
          "file": "backend/services/code_search.py",
          "line": 122,
          "calls": 1,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:_find_files",
          "name": "_find_files",
          "file": "backend/services/code_search.py",
          "line": 137,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:_should_ignore",
          "name": "_should_ignore",
          "file": "backend/services/code_search.py",
          "line": 151,
          "calls": 0,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:_search_file",
          "name": "_search_file",
          "file": "backend/services/code_search.py",
          "line": 167,
          "calls": 1,
          "called_by": 1,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:add_ignore_pattern",
          "name": "add_ignore_pattern",
          "file": "backend/services/code_search.py",
          "line": 202,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "backend/services/code_search.py:remove_ignore_pattern",
          "name": "remove_ignore_pattern",
          "file": "backend/services/code_search.py",
          "line": 206,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/claude_web_integration_example.py:__init__",
          "name": "__init__",
          "file": "examples/claude_web_integration_example.py",
          "line": 24,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/claude_web_integration_example.py:start_proxy_server",
          "name": "start_proxy_server",
          "file": "examples/claude_web_integration_example.py",
          "line": 28,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/claude_web_integration_example.py:stop_proxy_server",
          "name": "stop_proxy_server",
          "file": "examples/claude_web_integration_example.py",
          "line": 49,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/claude_web_integration_example.py:interactive_mode",
          "name": "interactive_mode",
          "file": "examples/claude_web_integration_example.py",
          "line": 222,
          "calls": 2,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/multi_agent_claude_web_demo.py:__init__",
          "name": "__init__",
          "file": "examples/multi_agent_claude_web_demo.py",
          "line": 24,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/multi_agent_claude_web_demo.py:start_claude_web_server",
          "name": "start_claude_web_server",
          "file": "examples/multi_agent_claude_web_demo.py",
          "line": 29,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        },
        {
          "function_id": "examples/multi_agent_claude_web_demo.py:stop_claude_web_server",
          "name": "stop_claude_web_server",
          "file": "examples/multi_agent_claude_web_demo.py",
          "line": 50,
          "calls": 0,
          "called_by": 0,
          "is_recursive": false,
          "async": false
        }
      ],
      "edges": [
        {
          "from": "test_complex_workflow_simulation.py:simulate_workflow_execution",
          "to": "test_complex_workflow_simulation.py:simulate_execution_plan",
          "count": 1,
          "async": false
        },
        {
          "from": "test_complex_workflow_simulation.py:simulate_workflow_execution",
          "to": "test_complex_workflow_simulation.py:simulate_query_classification",
          "count": 1,
          "async": false
        },
        {
          "from": "test_complex_workflow_simulation.py:simulate_workflow_execution",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "test_complex_workflow_simulation.py:main",
          "to": "test_complex_workflow_simulation.py:evaluate_complexity",
          "count": 1,
          "async": false
        },
        {
          "from": "test_complex_workflow_simulation.py:main",
          "to": "test_complex_workflow_simulation.py:simulate_workflow_execution",
          "count": 1,
          "async": false
        },
        {
          "from": "cli.py:_display_results",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "cli.py:_show_history",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "test_tetris_complete.py:print_summary",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "claude_web_proxy/crewai_integration.py:stream_generate",
          "to": "claude_web_proxy/crewai_integration.py:generate",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_build_arbitration_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:is_conflict_resolvable",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_conflict_complexity",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_build_documentation_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_create_research_plan",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_build_research_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_generate_recommendations",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_code_review_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_previous_analysis_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_final_review_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_review_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_generate_recommendations",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_build_architecture_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_validation_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_improvement_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_analyze_requirements",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_strategy_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_create_backtest_framework",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_analyze_problem",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_build_fix_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_analysis_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_coding_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_implementation_prompt",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_group_steps_for_execution",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_compile_final_output",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_current_status",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_recommendation",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_identify_problem_areas",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_get_primary_recommendation",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_user_options",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_iteration_timeline",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_common_issues",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_agent_performance",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_problematic_areas",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_intent_score",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_enhanced_intent_score",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_intent_score",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:get_intent_description",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_initialize_agents",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_detect_project_type",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_agent_capabilities",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_capabilities",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_optimize_workflow",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_quality_gates_for_context",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_quality_gates_for_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_quality_gates",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_format_response",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_format_response",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_project_specifics",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_project_specifics",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "to": "backend/core/shared_context_manager.py:update",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_relevant_outputs",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_quality_gates",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_domain_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_agent_enhancement_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_relevant_outputs",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_domain_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_iteration_summary",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_project_context",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_shared_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_project_context",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_shared_context",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:update_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:add_agent_output",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:should_continue_iteration",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:prepare_agent_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:prepare_agent_context",
          "to": "backend/core/shared_context_manager.py:update",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_statistics",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_patterns",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_metrics",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_history",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:suggest_workflow",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_find_similar_executions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:get_intent_statistics",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_metrics",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_was_successful",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_record_success_pattern",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_update_performance_metrics",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_find_similar_executions",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_extract_agents_used",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_agent_rating",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_load_templates",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_select_template",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_customize_workflow",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_optimize_parallel_execution",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_validate_agents",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_estimate_total_time",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:get_workflow_summary",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_unified_engine",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_future_leak_prevention",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_iterative_processing",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_engine_chart_decoupling",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:get_default_thresholds",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:calculate_overall_score",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:determine_pass_status",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:find_pattern_matches",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_imports",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:create_quality_check",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_function_complexity",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:create_quality_check",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_vwap_fibonacci_condition",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ema9_logic",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_new_high_logic",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_crv_requirement",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_space_to_382",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ron_trading_hours",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_pnl_calculations",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_crv_calculations",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_position_validation",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_stop_loss_logic",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exposure_limits",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_market_hours",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_audit_trail",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_graceful_degradation",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_fallback_policy",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_live_data_policy",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_agents",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_instructions",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:validate_step_completion",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_agents",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_instructions",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:validate_step_completion",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_workflow_for_project_type",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_available_workflows",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_description",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_available_workflows",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_description",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_success_criteria",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:log_execution",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_next_step",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_position",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:is_workflow_complete",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_progress",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_position",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_execution_statistics",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_domain_instructions",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_agent_enhancement_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:__init__",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_domain_instructions",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_agent_enhancement_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_domain_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_quality_gates",
          "count": 1,
          "async": false
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context",
          "to": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_project_specifics",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/fixes/orchestrator_file_write_fix.py:_extract_file_path",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/fixes/orchestrator_file_write_fix.py:_determine_file_path",
          "to": "backend/fixes/orchestrator_file_write_fix.py:_extract_feature_name",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/fixes/task_request_enhancement.py:enhance_subtask_for_file_writing",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/memory_manager.py:retrieve",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/pause_handler.py:resume",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/shared_context_manager.py:get",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/shared_context_manager.py:update",
          "to": "backend/core/shared_context_manager.py:update",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/shared_context_manager.py:clear",
          "to": "backend/core/shared_context_manager.py:clear",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/conversation_context_manager.py:get_conversation",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/exceptions.py:__init__",
          "to": "backend/core/exceptions.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_classify_files_into_layers",
          "to": "backend/core/analysis/layer_analyzer.py:_detect_file_layer",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_build_layer_structure",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
          "to": "backend/core/analysis/layer_analyzer.py:_check_layer_violation",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
          "to": "backend/core/analysis/layer_analyzer.py:_resolve_import_to_file",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/layer_analyzer.py:_check_layer_violation",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_build_function_registry",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_build_call_relationships",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_build_call_relationships",
          "to": "backend/core/analysis/call_graph_analyzer.py:_resolve_function_id",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_detect_hot_paths",
          "to": "backend/core/analysis/call_graph_analyzer.py:_bfs_paths",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_bfs_paths",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_bfs_paths",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_build_nodes",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_build_edges",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_analyze_clusters",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_calculate_metrics",
          "to": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "to": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/indexing/tree_sitter_indexer.py:_extract_function_calls",
          "to": "backend/core/indexing/tree_sitter_indexer.py:_get_call_name",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/indexing/tree_sitter_indexer.py:_extract_function_calls",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/indexing/tree_sitter_indexer.py:_get_name",
          "to": "backend/core/indexing/tree_sitter_indexer.py:_get_attribute_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/core/indexing/tree_sitter_indexer.py:_get_decorator_name",
          "to": "backend/core/indexing/tree_sitter_indexer.py:_get_call_name",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
          "to": "backend/config/capabilities_loader.py:apply_to_config",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
          "to": "backend/config/capabilities_loader.py:get_capabilities_loader",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:__init__",
          "to": "backend/config/capabilities_loader.py:_load_capabilities",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:_load_capabilities",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:get_agent_capabilities",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:apply_to_config",
          "to": "backend/config/capabilities_loader.py:get_agent_capabilities",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:apply_to_config",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:can_agent_write",
          "to": "backend/config/capabilities_loader.py:get_agent_capabilities",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:can_agent_write",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/capabilities_loader.py:get_all_capabilities",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/settings.py:get_language_directive",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/settings.py:get_timeout",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/config/settings.py:update_from_vscode",
          "to": "backend/config/settings.py:_auto_detect_provider",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/tests/test_agent_file_capabilities.py:main",
          "to": "backend/tests/test_agent_file_capabilities.py:main",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/agent_registry.py:__new__",
          "to": "backend/agents/agent_registry.py:__new__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/agent_registry.py:get_status",
          "to": "backend/agents/agent_registry.py:get_available_agents",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixerbot_agent.py:__init__",
          "to": "backend/agents/specialized/fixerbot_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixerbot_agent.py:__init__",
          "to": "backend/utils/claude_code_service.py:is_available",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixerbot_agent.py:_match_pattern",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/reviewer_gpt_agent.py:__init__",
          "to": "backend/agents/specialized/reviewer_gpt_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/reviewer_gpt_agent.py:check_asimov_violations",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/reviewer_gpt_agent.py:_calculate_html_app_quality_score",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/reviewer_gpt_agent.py:_get_recommendation",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/tradestrat_agent.py:__init__",
          "to": "backend/agents/specialized/tradestrat_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/tradestrat_agent.py:__init__",
          "to": "backend/utils/claude_code_service.py:is_available",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/docubot_agent.py:__init__",
          "to": "backend/agents/specialized/docubot_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__init__",
          "to": "backend/services/smart_file_watcher.py:start",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__init__",
          "to": "backend/agents/specialized/architect_agent.py:_load_architecture_patterns",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__init__",
          "to": "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__init__",
          "to": "backend/agents/specialized/architect_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__init__",
          "to": "backend/agents/specialized/architect_agent.py:_load_tech_stacks",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:_parse_architecture_response",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:__del__",
          "to": "backend/services/smart_file_watcher.py:stop",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/architect_agent.py:_generate_redis_config",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:__init__",
          "to": "backend/agents/specialized/codesmith_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:__init__",
          "to": "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:__init__",
          "to": "backend/utils/claude_code_service.py:is_available",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:__init__",
          "to": "backend/agents/specialized/codesmith_agent.py:_load_language_configs",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:__init__",
          "to": "backend/agents/specialized/codesmith_agent.py:_load_code_patterns",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:_generate_filename",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:_extract_dependencies",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:_get_test_framework",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:_extract_file_path",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py:_generate_file_path",
          "to": "backend/agents/specialized/codesmith_agent.py:_extract_feature_name",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixer_gpt_agent.py:__init__",
          "to": "backend/agents/specialized/fixer_gpt_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixer_gpt_agent.py:_format_previous_attempts",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/fixer_gpt_agent.py:_format_research_results",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/performance_bot.py:__init__",
          "to": "backend/agents/specialized/performance_bot.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/performance_bot.py:_format_profile_results",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/research_agent.py:__init__",
          "to": "backend/agents/specialized/research_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent_v2.py:__init__",
          "to": "backend/agents/specialized/orchestrator_agent_v2.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/opus_arbitrator_agent.py:__init__",
          "to": "backend/agents/specialized/opus_arbitrator_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/opus_arbitrator_agent.py:__init__",
          "to": "backend/utils/claude_code_service.py:is_available",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent.py:__init__",
          "to": "backend/agents/specialized/orchestrator_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent.py:_calculate_critical_path_duration",
          "to": "backend/agents/specialized/orchestrator_agent.py:_get_chain_duration",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent.py:_get_chain_duration",
          "to": "backend/agents/specialized/orchestrator_agent.py:_get_chain_duration",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent.py:format_orchestration_result",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/core/shared_context_manager.py:get_shared_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/agents/base/base_agent.py:_get_language_directive",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/agents/base/base_agent.py:_load_instructions",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/core/memory_manager.py:get_memory_manager",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:__init__",
          "to": "backend/core/conversation_context_manager.py:get_conversation_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:_get_language_directive",
          "to": "backend/config/settings.py:get_language_directive",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:calculate_dynamic_timeout",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:_compile_research_summary",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/base_agent.py:set_websocket_callback",
          "to": "backend/agents/base/base_agent.py:set_websocket_callback",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:validate_request",
          "to": "backend/agents/base/prime_directives.py:check_research_requirements",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:validate_request",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:validate_request",
          "to": "backend/agents/base/prime_directives.py:_check_violations",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:_check_violations",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:check_research_requirements",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:check_research_requirements",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:check_research_requirements",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/prime_directives.py:format_challenge_response",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/chat_agent.py:__init__",
          "to": "backend/agents/base/chat_agent.py:__init__",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/chat_agent.py:get_chat_status",
          "to": "backend/core/shared_context_manager.py:update",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/agents/base/chat_agent.py:get_chat_status",
          "to": "backend/agents/agent_registry.py:get_status",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/utils/claude_code_service.py:__init__",
          "to": "backend/utils/claude_code_service.py:_check_cli_availability",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/utils/claude_code_service.py:_parse_json_response",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/utils/anthropic_service.py:_format_outputs",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:__init__",
          "to": "backend/langgraph_system/intelligent_query_handler.py:_init_fallback_responses",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:__init__",
          "to": "backend/langgraph_system/intelligent_query_handler.py:_init_query_patterns",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:analyze_query",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
          "to": "backend/langgraph_system/intelligent_query_handler.py:analyze_query",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:create_intelligent_execution_plan",
          "to": "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:create_intelligent_execution_plan",
          "to": "backend/langgraph_system/intelligent_query_handler.py:analyze_query",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:enhance_orchestrator_step",
          "to": "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:integrate_with_classification",
          "to": "backend/langgraph_system/intelligent_query_handler.py:_get_development_guidance",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:integrate_with_classification",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/intelligent_query_handler.py:_get_development_guidance",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/cache_manager.py:start_redis_container",
          "to": "backend/langgraph_system/cache_manager.py:check_redis_running",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/cache_manager.py:start_redis_container",
          "to": "backend/langgraph_system/cache_manager.py:check_docker_installed",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/cache_manager.py:fill_caches",
          "to": "backend/langgraph_system/cache_manager.py:start_redis_container",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/cache_manager.py:fill_caches",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:handle_performance_query",
          "to": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:handle_bug_query",
          "to": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:handle_refactoring_query",
          "to": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:handle_testing_query",
          "to": "backend/langgraph_system/development_query_handler.py:analyze_context",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:get_handler_for_type",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:handle_development_query",
          "to": "backend/langgraph_system/development_query_handler.py:get_handler_for_type",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py:suggest_next_steps",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_is_greeting",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_calculate_coherence",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_calculate_confidence",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_has_context_reference",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_check_pattern",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_prepare_responses",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_calculate_safety",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_determine_action",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_check_development_patterns",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:classify_query",
          "to": "backend/langgraph_system/query_classifier.py:_is_nonsense",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_is_nonsense",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_is_nonsense",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_check_development_patterns",
          "to": "backend/langgraph_system/query_classifier.py:_has_context_reference",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_check_development_patterns",
          "to": "backend/langgraph_system/query_classifier.py:_check_pattern",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_calculate_coherence",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_calculate_safety",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_determine_action",
          "to": "backend/langgraph_system/query_classifier.py:_get_dev_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_get_dev_agent",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:is_safe",
          "to": "backend/langgraph_system/query_classifier.py:_is_duplicate",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:is_safe",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:is_safe",
          "to": "backend/langgraph_system/query_classifier.py:_detect_loop_pattern",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:is_safe",
          "to": "backend/langgraph_system/query_classifier.py:_check_resource_exhaustion",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_detect_loop_pattern",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/query_classifier.py:_check_resource_exhaustion",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_collaboration_spiral",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_resource_spike",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_routing_loop",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_timeout_cluster",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_stuck_progress",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:detect_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_get_detection_reason",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:detect_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_check_pattern",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_pattern",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_pattern",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_has_circular_dependencies",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_has_circular_dependencies",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_has_circular_dependencies",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle_from",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_get_detection_reason",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_check_dependencies_exist",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_check_valid_transitions",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_check_agent_capabilities",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_check_unique_ids",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_valid_transitions",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_unique_ids",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_unique_ids",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_dependencies_exist",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_check_agent_capabilities",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_calculate_dependency_depth",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_calculate_dependency_depth",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_find_parallelizable_steps",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_find_parallelizable_steps",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_has_dependency_conflict",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_is_in_cycle",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_is_in_cycle",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:analyze_patterns",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:analyze_patterns",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_statistical_anomalies",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_routing_loop",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_collaboration_spiral",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:_detect_statistical_anomalies",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle_from",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle_from",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle",
          "to": "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_agent_workflow",
          "to": "backend/langgraph_system/workflow.py:compile_workflow",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:__init__",
          "to": "backend/langgraph_system/workflow.py:_init_agent_memories",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:__init__",
          "to": "backend/langgraph_system/workflow.py:_init_real_agents",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:__init__",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:get_tool_registry",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_task_ledger",
          "to": "backend/langgraph_system/workflow.py:extract_success_criteria",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_task_ledger",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_progress_ledger",
          "to": "backend/langgraph_system/state.py:update_from_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:identify_parallel_groups",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:identify_parallel_groups",
          "to": "backend/langgraph_system/workflow.py:_has_dependency_conflict",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_has_dependency_conflict",
          "to": "backend/langgraph_system/workflow.py:_get_all_dependencies",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_get_all_dependencies",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_after_approval",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_after_approval",
          "to": "backend/langgraph_system/workflow.py:_dependencies_met",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_from_architect",
          "to": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_from_architect",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "to": "backend/langgraph_system/state.py:update_from_steps",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "to": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:route_to_next_agent",
          "to": "backend/langgraph_system/workflow.py:_dependencies_met",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_get_current_step",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_check_escalation_needed",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_calculate_agent_confidence",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_create_single_agent_step",
          "to": "backend/langgraph_system/intelligent_query_handler.py:enhance_orchestrator_step",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_create_single_agent_step",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_create_single_agent_step",
          "to": "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:_format_proposal_for_user",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_workflow",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_edge",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:create_workflow",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_node",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/workflow.py:compile_workflow",
          "to": "backend/langgraph_system/workflow.py:create_workflow",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py:_get_safe_fallback_response",
          "to": "backend/langgraph_system/development_query_handler.py:handle_development_query",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py:get_execution_stats",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
          "to": "backend/langgraph_system/query_classifier.py:classify_query",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:__init__",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:_extract_base_structure",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:compile_graph",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_edge",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:compile_graph",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_node",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_edge",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_node",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
          "to": "backend/langgraph_system/extensions/dynamic_workflow.py:add_conditional_routing",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/approval_manager.py:_format_plan_for_ui",
          "to": "backend/langgraph_system/extensions/approval_manager.py:_format_step",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/approval_manager.py:_format_step",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_decorated",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_prefix",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:register_tool",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_decorated",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:_extract_parameters",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_prefix",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:_extract_parameters",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:_extract_parameters",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:_python_type_to_json_type",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:_python_type_to_json_type",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:get_tool_schema",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:list_all_tools",
          "to": "backend/langgraph_system/extensions/tool_discovery.py:get_tool_schema",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:get_usage_stats",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:import_tools",
          "to": "backend/core/memory_manager.py:clear",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/tool_discovery.py:import_tools",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:__init__",
          "to": "backend/langgraph_system/extensions/persistent_memory.py:_init_sqlite",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:__init__",
          "to": "backend/langgraph_system/extensions/persistent_memory.py:_init_vector_store",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:_init_vector_store",
          "to": "backend/langgraph_system/extensions/persistent_memory.py:_create_new_vector_store",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:store_memory",
          "to": "backend/langgraph_system/extensions/persistent_memory.py:_save_vector_store",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:recall_similar",
          "to": "backend/langgraph_system/extensions/persistent_memory.py:_update_access_counts",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/langgraph_system/extensions/persistent_memory.py:recall_similar",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/api/models_endpoint.py:load_models_from_config",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:generate_flowchart",
          "to": "backend/services/diagram_service.py:_generate_ascii_flowchart",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:generate_flowchart",
          "to": "backend/services/diagram_service.py:_generate_mermaid_flowchart",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:generate_sequence_diagram",
          "to": "backend/services/diagram_service.py:_generate_mermaid_sequence",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:generate_class_diagram",
          "to": "backend/services/diagram_service.py:_generate_mermaid_class",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:generate_architecture_diagram",
          "to": "backend/services/diagram_service.py:_generate_mermaid_architecture",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:_generate_mermaid_flowchart",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:_generate_mermaid_sequence",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:_generate_mermaid_class",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:_generate_mermaid_architecture",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/diagram_service.py:_generate_ascii_flowchart",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/project_cache.py:_get_cache_path",
          "to": "backend/services/project_cache.py:_get_cache_key",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/project_cache.py:get",
          "to": "backend/services/project_cache.py:_get_cache_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/project_cache.py:set",
          "to": "backend/services/project_cache.py:_get_cache_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/project_cache.py:invalidate",
          "to": "backend/services/project_cache.py:_get_cache_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:watch_file",
          "to": "backend/services/smart_file_watcher.py:_resolve_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:watch_file",
          "to": "backend/core/shared_context_manager.py:set",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:watch_directory",
          "to": "backend/services/smart_file_watcher.py:_resolve_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:watch_directory",
          "to": "backend/services/smart_file_watcher.py:watch_file",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:stop_watching",
          "to": "backend/services/smart_file_watcher.py:_resolve_path",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:stop_all",
          "to": "backend/core/memory_manager.py:clear",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/smart_file_watcher.py:start_monitoring",
          "to": "backend/services/smart_file_watcher.py:check_changes",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:search",
          "to": "backend/services/code_search.py:_find_files",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:search",
          "to": "backend/services/code_search.py:_search_file",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:search_definition",
          "to": "backend/core/shared_context_manager.py:get",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:search_definition",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:search_usage",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:_find_files",
          "to": "backend/services/code_search.py:_should_ignore",
          "count": 1,
          "async": false
        },
        {
          "from": "backend/services/code_search.py:_search_file",
          "to": "backend/services/code_search.py:search",
          "count": 1,
          "async": false
        },
        {
          "from": "examples/claude_web_integration_example.py:interactive_mode",
          "to": "claude_web_proxy/crewai_integration.py:create_claude_web_llm",
          "count": 1,
          "async": false
        },
        {
          "from": "examples/claude_web_integration_example.py:interactive_mode",
          "to": "claude_web_proxy/crewai_integration.py:generate",
          "count": 1,
          "async": false
        }
      ],
      "entry_points": [
        "test_tetris_websocket_workflow.py:__init__",
        "test_complex_workflow_simulation.py:main",
        "test_tetris_workflow.py:__init__",
        "cli.py:main",
        "cli.py:__init__",
        "test_system.py:__init__",
        "test_code_verification.py:main",
        "test_tetris_complete.py:__init__",
        "claude_web_proxy/claude_browser.py:__init__",
        "claude_web_proxy/fastapi_server.py:run_server",
        "claude_web_proxy/fastapi_server.py:check_browser_context_status",
        "claude_web_proxy/crewai_integration.py:__init__",
        "claude_web_proxy/setup_and_test.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py:main",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:__init__",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_domain_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_quality_gates",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_project_specifics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_iteration_limits",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:__init__",
        "backend/test_websocket_debug.py:__init__",
        "backend/core/memory_manager.py:__init__",
        "backend/core/pause_handler.py:__init__",
        "backend/core/shared_context_manager.py:__init__",
        "backend/core/conversation_context_manager.py:__init__",
        "backend/core/git_checkpoint_manager.py:__init__",
        "backend/core/exceptions.py:__init__",
        "backend/core/analysis/semgrep_analyzer.py:__init__",
        "backend/core/analysis/vulture_analyzer.py:__init__",
        "backend/core/analysis/radon_metrics.py:__init__",
        "backend/core/analysis/layer_analyzer.py:__init__",
        "backend/core/analysis/call_graph_analyzer.py:__init__",
        "backend/core/indexing/tree_sitter_indexer.py:__init__",
        "backend/core/indexing/code_indexer.py:__init__",
        "backend/config/capabilities_loader.py:__init__",
        "backend/tests/test_agent_file_capabilities.py:main",
        "backend/tests/test_integration.py:__init__",
        "backend/agents/agent_registry.py:__init__",
        "backend/agents/tools/file_tools.py:__init__",
        "backend/agents/tools/browser_tester.py:__init__",
        "backend/agents/specialized/fixerbot_agent.py:__init__",
        "backend/agents/specialized/reviewer_gpt_agent.py:__init__",
        "backend/agents/specialized/tradestrat_agent.py:__init__",
        "backend/agents/specialized/docubot_agent.py:__init__",
        "backend/agents/specialized/architect_agent.py:__init__",
        "backend/agents/specialized/codesmith_agent.py:__init__",
        "backend/agents/specialized/fixer_gpt_agent.py:__init__",
        "backend/agents/specialized/performance_bot.py:__init__",
        "backend/agents/specialized/research_agent.py:__init__",
        "backend/agents/specialized/orchestrator_agent_v2.py:__init__",
        "backend/agents/specialized/opus_arbitrator_agent.py:__init__",
        "backend/agents/specialized/orchestrator_agent.py:__init__",
        "backend/agents/base/base_agent.py:__init__",
        "backend/agents/base/chat_agent.py:__init__",
        "backend/utils/perplexity_service.py:__init__",
        "backend/utils/claude_code_service.py:__init__",
        "backend/utils/openai_service.py:__init__",
        "backend/utils/anthropic_service.py:__init__",
        "backend/langgraph_system/intelligent_query_handler.py:__init__",
        "backend/langgraph_system/cache_manager.py:__init__",
        "backend/langgraph_system/development_query_handler.py:__init__",
        "backend/langgraph_system/query_classifier.py:__init__",
        "backend/langgraph_system/workflow_self_diagnosis.py:__init__",
        "backend/langgraph_system/workflow.py:__init__",
        "backend/langgraph_system/safe_orchestrator_executor.py:__init__",
        "backend/langgraph_system/extensions/dynamic_workflow.py:__init__",
        "backend/langgraph_system/extensions/approval_manager.py:__init__",
        "backend/langgraph_system/extensions/approval_manager.py:_format_plan_for_ui",
        "backend/langgraph_system/extensions/approval_manager.py:get_approval_status",
        "backend/langgraph_system/extensions/approval_manager.py:get_approval_history",
        "backend/langgraph_system/extensions/approval_manager.py:cleanup_expired",
        "backend/langgraph_system/extensions/approval_manager.py:get_pending_approvals",
        "backend/langgraph_system/extensions/tool_discovery.py:__init__",
        "backend/langgraph_system/extensions/persistent_memory.py:__init__",
        "backend/api/server_langgraph.py:main",
        "backend/api/server_langgraph.py:__init__",
        "backend/api/server_langgraph.py:disconnect",
        "backend/services/diagram_service.py:__init__",
        "backend/services/project_cache.py:__init__",
        "backend/services/smart_file_watcher.py:__init__",
        "backend/services/smart_file_watcher.py:start",
        "backend/services/code_search.py:__init__",
        "examples/claude_web_integration_example.py:__init__",
        "examples/multi_agent_claude_web_demo.py:__init__"
      ],
      "hot_paths": [
        {
          "path": [
            "test_complex_workflow_simulation.py:main",
            "test_complex_workflow_simulation.py:simulate_workflow_execution",
            "test_complex_workflow_simulation.py:simulate_execution_plan"
          ],
          "frequency": 1,
          "depth": 3
        },
        {
          "path": [
            "test_complex_workflow_simulation.py:main",
            "test_complex_workflow_simulation.py:simulate_workflow_execution",
            "test_complex_workflow_simulation.py:simulate_query_classification"
          ],
          "frequency": 1,
          "depth": 3
        },
        {
          "path": [
            "test_complex_workflow_simulation.py:main",
            "test_complex_workflow_simulation.py:simulate_workflow_execution",
            "backend/core/shared_context_manager.py:set"
          ],
          "frequency": 1,
          "depth": 3
        },
        {
          "path": [
            "test_complex_workflow_simulation.py:main",
            "test_complex_workflow_simulation.py:evaluate_complexity"
          ],
          "frequency": 1,
          "depth": 2
        },
        {
          "path": [
            "test_complex_workflow_simulation.py:main",
            "test_complex_workflow_simulation.py:simulate_workflow_execution"
          ],
          "frequency": 1,
          "depth": 2
        }
      ],
      "unused_functions": [
        "test_simple_workflow.py:log",
        "test_orchestrator_steps.py:test_development_task_detection",
        "test_tetris_workflow.py:record_agent",
        "test_tetris_workflow.py:record_output",
        "test_tetris_workflow.py:record_quality_score",
        "test_tetris_workflow.py:record_message",
        "test_tetris_workflow.py:generate_report",
        "cli.py:_show_welcome",
        "cli.py:_display_results",
        "cli.py:_show_help",
        "cli.py:_show_agents",
        "cli.py:_show_history",
        "cli.py:_load_history",
        "cli.py:_save_history",
        "test_system.py:print_test",
        "test_system.py:print_section",
        "test_code_verification.py:test_routing_replan_check",
        "test_code_verification.py:test_routing_in_progress_check",
        "test_code_verification.py:test_orchestrator_replan_logic",
        "test_code_verification.py:test_reviewer_collaboration",
        "test_code_verification.py:test_conditional_edges",
        "test_code_verification.py:test_settings_sync_code",
        "test_code_verification.py:test_instruction_files",
        "test_query_classifier_simple.py:simple_classify",
        "test_tetris_complete.py:log",
        "test_tetris_complete.py:print_summary",
        "claude_web_proxy/quick_test.py:print_instructions",
        "claude_web_proxy/crewai_integration.py:create_claude_web_agent",
        "claude_web_proxy/crewai_integration.py:stream_generate",
        "claude_web_proxy/crewai_integration.py:get_model_info",
        "claude_web_proxy/crewai_integration.py:run_in_thread",
        "claude_web_proxy/setup_and_test.py:install_playwright_browsers",
        "claude_web_proxy/setup_and_test.py:start_server",
        "claude_web_proxy/setup_and_test.py:stop_server",
        "claude_web_proxy/setup_and_test.py:generate_setup_report",
        "claude_web_proxy/debug_browser_api.py:recommended_browser_status_check",
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_build_arbitration_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_extract_decision_components",
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:is_conflict_resolvable",
        "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_conflict_complexity",
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_build_documentation_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_structure_documentation",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_build_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_extract_code",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_validate_code",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_stats",
        "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:reset_stats",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_mock_research_for_testing",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_create_research_plan",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_build_research_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_synthesize_findings",
        "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_generate_recommendations",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_code_review_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_previous_analysis_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_final_review_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_review_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_categorize_issues",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_generate_recommendations",
        "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_calculate_quality_score",
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_build_architecture_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_extract_artifacts",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_validation_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_improvement_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_analyze_requirements",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_strategy_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_create_backtest_framework",
        "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_generate_performance_metrics",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_analyze_problem",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_build_fix_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_validate_fixes",
        "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_create_fix_summary",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:get_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_analysis_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_coding_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_implementation_prompt",
        "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_organize_code",
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:start_claude_web_server",
        "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:stop_claude_web_server",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_group_steps_for_execution",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_compile_final_output",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_current_status",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_execution_history",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:record_iteration",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_get_primary_recommendation",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:get_iteration_statistics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_enhanced_intent_score",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_extract_entities",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_assess_complexity",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:get_intent_description",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_detect_project_type",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_agent_capabilities",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_optimize_workflow",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_quality_gates_for_context",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_format_response",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_iteration_summary",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:start_new_iteration",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_available_project_types",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_context",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:update_context",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:should_continue_iteration",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:prepare_agent_context",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_statistics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:suggest_workflow",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:get_intent_statistics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_save_all",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_metrics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_was_successful",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_record_success_pattern",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_update_performance_metrics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_extract_agents_used",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_agent_rating",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_select_template",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_customize_workflow",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_optimize_parallel_execution",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_validate_agents",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_estimate_total_time",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:get_workflow_summary",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:get_default_thresholds",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_unified_engine",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_future_leak_prevention",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_iterative_processing",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_engine_chart_decoupling",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:get_default_thresholds",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:calculate_overall_score",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:determine_pass_status",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_summary",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_recommendations",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:find_pattern_matches",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_imports",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_function_complexity",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:get_default_thresholds",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_vwap_fibonacci_condition",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ema9_logic",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_new_high_logic",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_crv_requirement",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_space_to_382",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ron_trading_hours",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:get_default_thresholds",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_decimal_precision",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_pnl_calculations",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_crv_calculations",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_position_validation",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_stop_loss_logic",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exposure_limits",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_market_hours",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_audit_trail",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_type_annotations",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exception_patterns",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_graceful_degradation",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_docstring_coverage",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_fallback_policy",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_live_data_policy",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_agents",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:validate_step_completion",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_success_criteria",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_steps",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_agents",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:validate_step_completion",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_description",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_success_criteria",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_workflow_for_project_type",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_available_workflows",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_agents",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:validate_step_completion",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:log_execution",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_next_step",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:is_workflow_complete",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_progress",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_execution_statistics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_domain_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_quality_gates",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_project_specifics",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_iteration_limits",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_agent_enhancement_instructions",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_iteration_limits",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_conflict_resolution_priorities",
        "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context",
        "backend/__version__.py:get_version",
        "backend/__version__.py:get_version_tuple",
        "backend/__version__.py:is_compatible",
        "backend/test_v4_features.py:test_v4_features",
        "backend/test_langgraph_system.py:print_test_header",
        "backend/test_langgraph_system.py:print_success",
        "backend/test_langgraph_system.py:print_error",
        "backend/test_langgraph_system.py:print_info",
        "backend/test_langgraph_system.py:test_node",
        "backend/fixes/orchestrator_file_write_fix.py:_extract_file_path",
        "backend/fixes/orchestrator_file_write_fix.py:_determine_file_path",
        "backend/fixes/task_request_enhancement.py:enhance_subtask_for_file_writing",
        "backend/fixes/task_request_enhancement.py:to_file_task",
        "backend/core/memory_manager.py:store",
        "backend/core/memory_manager.py:retrieve",
        "backend/core/pause_handler.py:pause",
        "backend/core/pause_handler.py:resume",
        "backend/core/pause_handler.py:is_paused",
        "backend/core/shared_context_manager.py:get_all",
        "backend/core/conversation_context_manager.py:add_message",
        "backend/core/conversation_context_manager.py:get_conversation",
        "backend/core/conversation_context_manager.py:clear_conversation",
        "backend/core/git_checkpoint_manager.py:create_checkpoint",
        "backend/core/git_checkpoint_manager.py:list_checkpoints",
        "backend/core/git_checkpoint_manager.py:rollback_to",
        "backend/core/analysis/layer_analyzer.py:_classify_files_into_layers",
        "backend/core/analysis/layer_analyzer.py:_build_layer_structure",
        "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
        "backend/core/analysis/layer_analyzer.py:_calculate_quality_score",
        "backend/core/analysis/layer_analyzer.py:_calculate_metrics",
        "backend/core/analysis/layer_analyzer.py:_empty_layer_analysis",
        "backend/core/analysis/call_graph_analyzer.py:_build_function_registry",
        "backend/core/analysis/call_graph_analyzer.py:_build_call_relationships",
        "backend/core/analysis/call_graph_analyzer.py:_detect_entry_points",
        "backend/core/analysis/call_graph_analyzer.py:_find_unused_functions",
        "backend/core/analysis/call_graph_analyzer.py:_detect_hot_paths",
        "backend/core/analysis/call_graph_analyzer.py:_build_nodes",
        "backend/core/analysis/call_graph_analyzer.py:_build_edges",
        "backend/core/analysis/call_graph_analyzer.py:_analyze_clusters",
        "backend/core/analysis/call_graph_analyzer.py:_calculate_metrics",
        "backend/core/analysis/call_graph_analyzer.py:_empty_call_graph",
        "backend/core/indexing/tree_sitter_indexer.py:_extract_function_calls",
        "backend/core/indexing/tree_sitter_indexer.py:_get_name",
        "backend/core/indexing/tree_sitter_indexer.py:_get_decorator_name",
        "backend/core/indexing/tree_sitter_indexer.py:_extract_import",
        "backend/core/indexing/code_indexer.py:_find_python_files",
        "backend/core/indexing/code_indexer.py:_count_total_lines",
        "backend/config/capabilities_loader.py:can_agent_write",
        "backend/config/capabilities_loader.py:get_all_capabilities",
        "backend/config/settings.py:get_timeout",
        "backend/config/settings.py:update_from_vscode",
        "backend/config/settings.py:to_dict",
        "backend/tests/test_agent_file_capabilities.py:setup_method",
        "backend/tests/test_agent_file_capabilities.py:teardown_method",
        "backend/tests/test_integration.py:record_result",
        "backend/tests/test_integration.py:print_summary",
        "backend/agents/agent_registry.py:get_agent_registry",
        "backend/agents/agent_registry.py:get_agent",
        "backend/agents/agent_registry.py:find_agent_by_capability",
        "backend/agents/agent_registry.py:get_agents_by_capability",
        "backend/agents/tools/file_tools.py:_validate_path",
        "backend/agents/tools/file_tools.py:_create_backup",
        "backend/agents/tools/file_tools.py:_log_operation",
        "backend/agents/tools/file_tools.py:get_audit_log",
        "backend/agents/specialized/fixerbot_agent.py:_match_pattern",
        "backend/agents/specialized/reviewer_gpt_agent.py:check_asimov_violations",
        "backend/agents/specialized/reviewer_gpt_agent.py:_calculate_html_app_quality_score",
        "backend/agents/specialized/reviewer_gpt_agent.py:_get_recommendation",
        "backend/agents/specialized/reviewer_gpt_agent.py:_format_metrics",
        "backend/agents/specialized/architect_agent.py:_parse_architecture_response",
        "backend/agents/specialized/architect_agent.py:_extract_features",
        "backend/agents/specialized/architect_agent.py:_generate_redis_config",
        "backend/agents/specialized/architect_agent.py:_generate_docker_compose",
        "backend/agents/specialized/architect_agent.py:_detect_request_type",
        "backend/agents/specialized/codesmith_agent.py:format_implementation",
        "backend/agents/specialized/codesmith_agent.py:_detect_language",
        "backend/agents/specialized/codesmith_agent.py:_extract_functionality",
        "backend/agents/specialized/codesmith_agent.py:_assess_complexity",
        "backend/agents/specialized/codesmith_agent.py:_generate_filename",
        "backend/agents/specialized/codesmith_agent.py:_extract_dependencies",
        "backend/agents/specialized/codesmith_agent.py:_get_test_framework",
        "backend/agents/specialized/codesmith_agent.py:_generate_fix_suggestion",
        "backend/agents/specialized/codesmith_agent.py:_check_for_hallucination",
        "backend/agents/specialized/codesmith_agent.py:_validate_workspace_context",
        "backend/agents/specialized/codesmith_agent.py:_enforce_asimov_rule_1",
        "backend/agents/specialized/codesmith_agent.py:_extract_file_path",
        "backend/agents/specialized/codesmith_agent.py:_generate_file_path",
        "backend/agents/specialized/fixer_gpt_agent.py:_create_fresh_perspective_prompt",
        "backend/agents/specialized/fixer_gpt_agent.py:_format_previous_attempts",
        "backend/agents/specialized/fixer_gpt_agent.py:_format_research_results",
        "backend/agents/specialized/performance_bot.py:_extract_bottlenecks",
        "backend/agents/specialized/performance_bot.py:_parse_profile_stats",
        "backend/agents/specialized/performance_bot.py:_format_profile_results",
        "backend/agents/specialized/performance_bot.py:_format_package_analysis",
        "backend/agents/specialized/orchestrator_agent_v2.py:set_planning_mode",
        "backend/agents/specialized/orchestrator_agent.py:_calculate_critical_path_duration",
        "backend/agents/specialized/orchestrator_agent.py:_group_by_dependency_level",
        "backend/agents/specialized/orchestrator_agent.py:_dependencies_met",
        "backend/agents/specialized/orchestrator_agent.py:format_orchestration_result",
        "backend/agents/base/base_agent.py:get_system_prompt",
        "backend/agents/base/base_agent.py:calculate_dynamic_timeout",
        "backend/agents/base/base_agent.py:_compile_research_summary",
        "backend/agents/base/base_agent.py:get_status",
        "backend/agents/base/prime_directives.py:validate_request",
        "backend/agents/base/prime_directives.py:format_challenge_response",
        "backend/agents/base/prime_directives.py:get_directive_prompt",
        "backend/agents/base/prime_directives.py:check_global_error_search",
        "backend/agents/base/chat_agent.py:to_dict",
        "backend/agents/base/chat_agent.py:format_response",
        "backend/agents/base/chat_agent.py:get_chat_status",
        "backend/utils/perplexity_service.py:test_connection",
        "backend/utils/claude_code_service.py:_parse_json_response",
        "backend/utils/openai_service.py:is_available",
        "backend/utils/anthropic_service.py:_format_outputs",
        "backend/utils/anthropic_service.py:is_available",
        "backend/langgraph_system/intelligent_query_handler.py:create_intelligent_execution_plan",
        "backend/langgraph_system/intelligent_query_handler.py:integrate_with_classification",
        "backend/langgraph_system/cache_manager.py:fill_caches",
        "backend/langgraph_system/development_query_handler.py:handle_performance_query",
        "backend/langgraph_system/development_query_handler.py:handle_bug_query",
        "backend/langgraph_system/development_query_handler.py:handle_refactoring_query",
        "backend/langgraph_system/development_query_handler.py:handle_testing_query",
        "backend/langgraph_system/development_query_handler.py:handle_implementation_query",
        "backend/langgraph_system/development_query_handler.py:handle_technology_query",
        "backend/langgraph_system/development_query_handler.py:handle_database_query",
        "backend/langgraph_system/development_query_handler.py:handle_ai_integration_query",
        "backend/langgraph_system/development_query_handler.py:handle_error_diagnosis_query",
        "backend/langgraph_system/development_query_handler.py:handle_scope_clarification",
        "backend/langgraph_system/development_query_handler.py:suggest_next_steps",
        "backend/langgraph_system/query_classifier.py:summary",
        "backend/langgraph_system/query_classifier.py:is_safe",
        "backend/langgraph_system/query_classifier.py:record_execution",
        "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
        "backend/langgraph_system/workflow_self_diagnosis.py:detect_patterns",
        "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
        "backend/langgraph_system/workflow_self_diagnosis.py:check_all",
        "backend/langgraph_system/workflow_self_diagnosis.py:_calculate_dependency_depth",
        "backend/langgraph_system/workflow_self_diagnosis.py:_find_parallelizable_steps",
        "backend/langgraph_system/workflow_self_diagnosis.py:_is_in_cycle",
        "backend/langgraph_system/workflow_self_diagnosis.py:analyze_patterns",
        "backend/langgraph_system/workflow_self_diagnosis.py:get_diagnosis_report",
        "backend/langgraph_system/workflow.py:create_agent_workflow",
        "backend/langgraph_system/workflow.py:create_task_ledger",
        "backend/langgraph_system/workflow.py:create_progress_ledger",
        "backend/langgraph_system/workflow.py:identify_parallel_groups",
        "backend/langgraph_system/workflow.py:route_after_approval",
        "backend/langgraph_system/workflow.py:route_from_architect",
        "backend/langgraph_system/workflow.py:_get_current_step",
        "backend/langgraph_system/workflow.py:_get_step_by_agent",
        "backend/langgraph_system/workflow.py:_check_escalation_needed",
        "backend/langgraph_system/workflow.py:_calculate_agent_confidence",
        "backend/langgraph_system/workflow.py:_create_single_agent_step",
        "backend/langgraph_system/workflow.py:_detect_task_complexity",
        "backend/langgraph_system/workflow.py:_apply_plan_modifications",
        "backend/langgraph_system/workflow.py:_format_proposal_for_user",
        "backend/langgraph_system/state.py:create_initial_state",
        "backend/langgraph_system/state.py:is_timeout",
        "backend/langgraph_system/state.py:can_retry",
        "backend/langgraph_system/state.py:get_retry_delay",
        "backend/langgraph_system/safe_orchestrator_executor.py:add_attempt",
        "backend/langgraph_system/safe_orchestrator_executor.py:_generate_query_hash",
        "backend/langgraph_system/safe_orchestrator_executor.py:_detect_loop_pattern",
        "backend/langgraph_system/safe_orchestrator_executor.py:_get_safe_fallback_response",
        "backend/langgraph_system/safe_orchestrator_executor.py:get_execution_stats",
        "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
        "backend/langgraph_system/safe_orchestrator_executor.py:reset_history",
        "backend/langgraph_system/extensions/dynamic_workflow.py:remove_node",
        "backend/langgraph_system/extensions/dynamic_workflow.py:compile_graph",
        "backend/langgraph_system/extensions/dynamic_workflow.py:create_template",
        "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
        "backend/langgraph_system/extensions/dynamic_workflow.py:rollback",
        "backend/langgraph_system/extensions/dynamic_workflow.py:get_graph_info",
        "backend/langgraph_system/extensions/dynamic_workflow.py:visualize_graph",
        "backend/langgraph_system/extensions/tool_discovery.py:tool",
        "backend/langgraph_system/extensions/tool_discovery.py:decorator",
        "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
        "backend/langgraph_system/extensions/tool_discovery.py:discover_tools_for_agent",
        "backend/langgraph_system/extensions/tool_discovery.py:list_all_tools",
        "backend/langgraph_system/extensions/tool_discovery.py:get_usage_stats",
        "backend/langgraph_system/extensions/tool_discovery.py:export_tools",
        "backend/langgraph_system/extensions/tool_discovery.py:import_tools",
        "backend/langgraph_system/extensions/persistent_memory.py:store_memory",
        "backend/langgraph_system/extensions/persistent_memory.py:recall_similar",
        "backend/langgraph_system/extensions/persistent_memory.py:learn_pattern",
        "backend/langgraph_system/extensions/persistent_memory.py:get_learned_solution",
        "backend/langgraph_system/extensions/persistent_memory.py:record_agent_interaction",
        "backend/langgraph_system/extensions/persistent_memory.py:get_interaction_history",
        "backend/langgraph_system/extensions/persistent_memory.py:consolidate_memories",
        "backend/langgraph_system/extensions/persistent_memory.py:get_memory_stats",
        "backend/api/models_endpoint.py:load_models_from_config",
        "backend/api/models_endpoint.py:load_models_from_available_json",
        "backend/api/models_endpoint.py:get_model_recommendations",
        "backend/api/models_endpoint.py:get_latest_models",
        "backend/services/diagram_service.py:generate_flowchart",
        "backend/services/diagram_service.py:generate_sequence_diagram",
        "backend/services/diagram_service.py:generate_class_diagram",
        "backend/services/diagram_service.py:generate_architecture_diagram",
        "backend/services/diagram_service.py:save_diagram",
        "backend/services/project_cache.py:get",
        "backend/services/project_cache.py:set",
        "backend/services/project_cache.py:invalidate",
        "backend/services/project_cache.py:clear_all",
        "backend/services/project_cache.py:get_stats",
        "backend/services/smart_file_watcher.py:watch_directory",
        "backend/services/smart_file_watcher.py:stop_watching",
        "backend/services/smart_file_watcher.py:stop_all",
        "backend/services/smart_file_watcher.py:get_watched_files",
        "backend/services/smart_file_watcher.py:start_monitoring",
        "backend/services/code_search.py:to_dict",
        "backend/services/code_search.py:search_definition",
        "backend/services/code_search.py:search_usage",
        "backend/services/code_search.py:add_ignore_pattern",
        "backend/services/code_search.py:remove_ignore_pattern",
        "examples/claude_web_integration_example.py:start_proxy_server",
        "examples/claude_web_integration_example.py:stop_proxy_server",
        "examples/claude_web_integration_example.py:interactive_mode",
        "examples/multi_agent_claude_web_demo.py:start_claude_web_server",
        "examples/multi_agent_claude_web_demo.py:stop_claude_web_server"
      ],
      "clusters": [
        {
          "id": "cluster_14",
          "file": "claude_web_proxy/crewai_integration.py",
          "functions": [
            "claude_web_proxy/crewai_integration.py:create_claude_web_agent",
            "claude_web_proxy/crewai_integration.py:create_claude_web_llm",
            "claude_web_proxy/crewai_integration.py:__init__",
            "claude_web_proxy/crewai_integration.py:generate",
            "claude_web_proxy/crewai_integration.py:stream_generate",
            "claude_web_proxy/crewai_integration.py:get_model_info",
            "claude_web_proxy/crewai_integration.py:__del__",
            "claude_web_proxy/crewai_integration.py:run_in_thread"
          ],
          "size": 8,
          "cohesion": 1.0,
          "internal_calls": 1,
          "external_calls": 0
        },
        {
          "id": "cluster_36",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py:get_default_thresholds"
          ],
          "size": 2,
          "cohesion": 1.0,
          "internal_calls": 1,
          "external_calls": 0
        },
        {
          "id": "cluster_44",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_domain_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_quality_gates",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_project_specifics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_agent_enhancement_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py:get_iteration_limits"
          ],
          "size": 6,
          "cohesion": 1.0,
          "internal_calls": 2,
          "external_calls": 0
        },
        {
          "id": "cluster_45",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_domain_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_quality_gates",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_project_specifics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_agent_enhancement_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py:get_iteration_limits"
          ],
          "size": 6,
          "cohesion": 1.0,
          "internal_calls": 2,
          "external_calls": 0
        },
        {
          "id": "cluster_46",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_domain_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_quality_gates",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_project_specifics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_agent_enhancement_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_iteration_limits",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:get_conflict_resolution_priorities",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py:validate_context"
          ],
          "size": 8,
          "cohesion": 1.0,
          "internal_calls": 3,
          "external_calls": 0
        },
        {
          "id": "cluster_55",
          "file": "backend/core/shared_context_manager.py",
          "functions": [
            "backend/core/shared_context_manager.py:get_shared_context",
            "backend/core/shared_context_manager.py:__init__",
            "backend/core/shared_context_manager.py:set",
            "backend/core/shared_context_manager.py:get",
            "backend/core/shared_context_manager.py:update",
            "backend/core/shared_context_manager.py:clear",
            "backend/core/shared_context_manager.py:get_all"
          ],
          "size": 7,
          "cohesion": 1.0,
          "internal_calls": 3,
          "external_calls": 0
        },
        {
          "id": "cluster_68",
          "file": "backend/tests/test_agent_file_capabilities.py",
          "functions": [
            "backend/tests/test_agent_file_capabilities.py:main",
            "backend/tests/test_agent_file_capabilities.py:setup_method",
            "backend/tests/test_agent_file_capabilities.py:teardown_method"
          ],
          "size": 3,
          "cohesion": 1.0,
          "internal_calls": 1,
          "external_calls": 0
        },
        {
          "id": "cluster_70",
          "file": "backend/agents/agent_registry.py",
          "functions": [
            "backend/agents/agent_registry.py:get_agent_registry",
            "backend/agents/agent_registry.py:__new__",
            "backend/agents/agent_registry.py:__init__",
            "backend/agents/agent_registry.py:get_agent",
            "backend/agents/agent_registry.py:get_available_agents",
            "backend/agents/agent_registry.py:find_agent_by_capability",
            "backend/agents/agent_registry.py:get_agents_by_capability",
            "backend/agents/agent_registry.py:get_status"
          ],
          "size": 8,
          "cohesion": 1.0,
          "internal_calls": 2,
          "external_calls": 0
        },
        {
          "id": "cluster_82",
          "file": "backend/agents/specialized/orchestrator_agent_v2.py",
          "functions": [
            "backend/agents/specialized/orchestrator_agent_v2.py:__init__",
            "backend/agents/specialized/orchestrator_agent_v2.py:set_planning_mode"
          ],
          "size": 2,
          "cohesion": 1.0,
          "internal_calls": 1,
          "external_calls": 0
        },
        {
          "id": "cluster_100",
          "file": "backend/langgraph_system/extensions/dynamic_workflow.py",
          "functions": [
            "backend/langgraph_system/extensions/dynamic_workflow.py:__init__",
            "backend/langgraph_system/extensions/dynamic_workflow.py:_extract_base_structure",
            "backend/langgraph_system/extensions/dynamic_workflow.py:add_node",
            "backend/langgraph_system/extensions/dynamic_workflow.py:remove_node",
            "backend/langgraph_system/extensions/dynamic_workflow.py:add_edge",
            "backend/langgraph_system/extensions/dynamic_workflow.py:add_conditional_routing",
            "backend/langgraph_system/extensions/dynamic_workflow.py:compile_graph",
            "backend/langgraph_system/extensions/dynamic_workflow.py:create_template",
            "backend/langgraph_system/extensions/dynamic_workflow.py:apply_template",
            "backend/langgraph_system/extensions/dynamic_workflow.py:rollback",
            "backend/langgraph_system/extensions/dynamic_workflow.py:get_graph_info",
            "backend/langgraph_system/extensions/dynamic_workflow.py:visualize_graph"
          ],
          "size": 12,
          "cohesion": 1.0,
          "internal_calls": 6,
          "external_calls": 0
        },
        {
          "id": "cluster_107",
          "file": "backend/services/project_cache.py",
          "functions": [
            "backend/services/project_cache.py:__init__",
            "backend/services/project_cache.py:_get_cache_key",
            "backend/services/project_cache.py:_get_cache_path",
            "backend/services/project_cache.py:get",
            "backend/services/project_cache.py:set",
            "backend/services/project_cache.py:invalidate",
            "backend/services/project_cache.py:clear_all",
            "backend/services/project_cache.py:get_stats"
          ],
          "size": 8,
          "cohesion": 1.0,
          "internal_calls": 4,
          "external_calls": 0
        },
        {
          "id": "cluster_109",
          "file": "backend/services/code_search.py",
          "functions": [
            "backend/services/code_search.py:__init__",
            "backend/services/code_search.py:to_dict",
            "backend/services/code_search.py:search",
            "backend/services/code_search.py:search_definition",
            "backend/services/code_search.py:search_usage",
            "backend/services/code_search.py:_find_files",
            "backend/services/code_search.py:_should_ignore",
            "backend/services/code_search.py:_search_file",
            "backend/services/code_search.py:add_ignore_pattern",
            "backend/services/code_search.py:remove_ignore_pattern"
          ],
          "size": 10,
          "cohesion": 0.86,
          "internal_calls": 6,
          "external_calls": 1
        },
        {
          "id": "cluster_103",
          "file": "backend/langgraph_system/extensions/persistent_memory.py",
          "functions": [
            "backend/langgraph_system/extensions/persistent_memory.py:__init__",
            "backend/langgraph_system/extensions/persistent_memory.py:_init_sqlite",
            "backend/langgraph_system/extensions/persistent_memory.py:_init_vector_store",
            "backend/langgraph_system/extensions/persistent_memory.py:_create_new_vector_store",
            "backend/langgraph_system/extensions/persistent_memory.py:store_memory",
            "backend/langgraph_system/extensions/persistent_memory.py:recall_similar",
            "backend/langgraph_system/extensions/persistent_memory.py:learn_pattern",
            "backend/langgraph_system/extensions/persistent_memory.py:get_learned_solution",
            "backend/langgraph_system/extensions/persistent_memory.py:record_agent_interaction",
            "backend/langgraph_system/extensions/persistent_memory.py:get_interaction_history",
            "backend/langgraph_system/extensions/persistent_memory.py:_update_access_counts",
            "backend/langgraph_system/extensions/persistent_memory.py:_save_vector_store",
            "backend/langgraph_system/extensions/persistent_memory.py:consolidate_memories",
            "backend/langgraph_system/extensions/persistent_memory.py:get_memory_stats"
          ],
          "size": 14,
          "cohesion": 0.83,
          "internal_calls": 5,
          "external_calls": 1
        },
        {
          "id": "cluster_2",
          "file": "test_complex_workflow_simulation.py",
          "functions": [
            "test_complex_workflow_simulation.py:simulate_query_classification",
            "test_complex_workflow_simulation.py:simulate_execution_plan",
            "test_complex_workflow_simulation.py:simulate_workflow_execution",
            "test_complex_workflow_simulation.py:evaluate_complexity",
            "test_complex_workflow_simulation.py:main"
          ],
          "size": 5,
          "cohesion": 0.8,
          "internal_calls": 4,
          "external_calls": 1
        },
        {
          "id": "cluster_29",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:record_iteration",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_iteration_summary",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_identify_problem_areas",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_recommendation",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_generate_user_options",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_get_primary_recommendation",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_display_iteration_analysis",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_common_issues",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_agent_performance",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_problematic_areas",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:_format_iteration_timeline",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py:get_iteration_statistics"
          ],
          "size": 13,
          "cohesion": 0.78,
          "internal_calls": 7,
          "external_calls": 2
        },
        {
          "id": "cluster_43",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_steps",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_agents",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:validate_step_completion",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_description",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_success_criteria",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_info",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:log_execution",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_next_step",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_step_position",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:is_workflow_complete",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_workflow_progress",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py:get_execution_statistics"
          ],
          "size": 14,
          "cohesion": 0.78,
          "internal_calls": 7,
          "external_calls": 2
        },
        {
          "id": "cluster_64",
          "file": "backend/core/indexing/tree_sitter_indexer.py",
          "functions": [
            "backend/core/indexing/tree_sitter_indexer.py:__init__",
            "backend/core/indexing/tree_sitter_indexer.py:_extract_function_calls",
            "backend/core/indexing/tree_sitter_indexer.py:_get_call_name",
            "backend/core/indexing/tree_sitter_indexer.py:_get_name",
            "backend/core/indexing/tree_sitter_indexer.py:_get_attribute_path",
            "backend/core/indexing/tree_sitter_indexer.py:_get_decorator_name",
            "backend/core/indexing/tree_sitter_indexer.py:_extract_import"
          ],
          "size": 7,
          "cohesion": 0.75,
          "internal_calls": 3,
          "external_calls": 1
        },
        {
          "id": "cluster_84",
          "file": "backend/agents/specialized/orchestrator_agent.py",
          "functions": [
            "backend/agents/specialized/orchestrator_agent.py:__init__",
            "backend/agents/specialized/orchestrator_agent.py:_calculate_critical_path_duration",
            "backend/agents/specialized/orchestrator_agent.py:_get_chain_duration",
            "backend/agents/specialized/orchestrator_agent.py:_group_by_dependency_level",
            "backend/agents/specialized/orchestrator_agent.py:_dependencies_met",
            "backend/agents/specialized/orchestrator_agent.py:format_orchestration_result"
          ],
          "size": 6,
          "cohesion": 0.75,
          "internal_calls": 3,
          "external_calls": 1
        },
        {
          "id": "cluster_93",
          "file": "backend/langgraph_system/cache_manager.py",
          "functions": [
            "backend/langgraph_system/cache_manager.py:__init__",
            "backend/langgraph_system/cache_manager.py:check_docker_installed",
            "backend/langgraph_system/cache_manager.py:check_redis_running",
            "backend/langgraph_system/cache_manager.py:start_redis_container",
            "backend/langgraph_system/cache_manager.py:fill_caches"
          ],
          "size": 5,
          "cohesion": 0.75,
          "internal_calls": 3,
          "external_calls": 1
        },
        {
          "id": "cluster_108",
          "file": "backend/services/smart_file_watcher.py",
          "functions": [
            "backend/services/smart_file_watcher.py:__init__",
            "backend/services/smart_file_watcher.py:watch_file",
            "backend/services/smart_file_watcher.py:watch_directory",
            "backend/services/smart_file_watcher.py:check_changes",
            "backend/services/smart_file_watcher.py:stop_watching",
            "backend/services/smart_file_watcher.py:stop_all",
            "backend/services/smart_file_watcher.py:get_watched_files",
            "backend/services/smart_file_watcher.py:_resolve_path",
            "backend/services/smart_file_watcher.py:start",
            "backend/services/smart_file_watcher.py:stop",
            "backend/services/smart_file_watcher.py:start_monitoring"
          ],
          "size": 11,
          "cohesion": 0.71,
          "internal_calls": 5,
          "external_calls": 2
        },
        {
          "id": "cluster_92",
          "file": "backend/langgraph_system/intelligent_query_handler.py",
          "functions": [
            "backend/langgraph_system/intelligent_query_handler.py:__init__",
            "backend/langgraph_system/intelligent_query_handler.py:_init_fallback_responses",
            "backend/langgraph_system/intelligent_query_handler.py:_init_query_patterns",
            "backend/langgraph_system/intelligent_query_handler.py:analyze_query",
            "backend/langgraph_system/intelligent_query_handler.py:get_intelligent_response",
            "backend/langgraph_system/intelligent_query_handler.py:create_intelligent_execution_plan",
            "backend/langgraph_system/intelligent_query_handler.py:enhance_orchestrator_step",
            "backend/langgraph_system/intelligent_query_handler.py:integrate_with_classification",
            "backend/langgraph_system/intelligent_query_handler.py:_get_development_guidance"
          ],
          "size": 9,
          "cohesion": 0.7,
          "internal_calls": 7,
          "external_calls": 3
        },
        {
          "id": "cluster_95",
          "file": "backend/langgraph_system/query_classifier.py",
          "functions": [
            "backend/langgraph_system/query_classifier.py:summary",
            "backend/langgraph_system/query_classifier.py:__init__",
            "backend/langgraph_system/query_classifier.py:classify_query",
            "backend/langgraph_system/query_classifier.py:_is_greeting",
            "backend/langgraph_system/query_classifier.py:_is_nonsense",
            "backend/langgraph_system/query_classifier.py:_has_context_reference",
            "backend/langgraph_system/query_classifier.py:_check_pattern",
            "backend/langgraph_system/query_classifier.py:_check_development_patterns",
            "backend/langgraph_system/query_classifier.py:_calculate_coherence",
            "backend/langgraph_system/query_classifier.py:_calculate_confidence",
            "backend/langgraph_system/query_classifier.py:_calculate_safety",
            "backend/langgraph_system/query_classifier.py:_determine_action",
            "backend/langgraph_system/query_classifier.py:_get_dev_agent",
            "backend/langgraph_system/query_classifier.py:_prepare_responses",
            "backend/langgraph_system/query_classifier.py:is_safe",
            "backend/langgraph_system/query_classifier.py:_is_duplicate",
            "backend/langgraph_system/query_classifier.py:_detect_loop_pattern",
            "backend/langgraph_system/query_classifier.py:_check_resource_exhaustion",
            "backend/langgraph_system/query_classifier.py:record_execution"
          ],
          "size": 19,
          "cohesion": 0.67,
          "internal_calls": 16,
          "external_calls": 8
        },
        {
          "id": "cluster_94",
          "file": "backend/langgraph_system/development_query_handler.py",
          "functions": [
            "backend/langgraph_system/development_query_handler.py:__init__",
            "backend/langgraph_system/development_query_handler.py:analyze_context",
            "backend/langgraph_system/development_query_handler.py:handle_performance_query",
            "backend/langgraph_system/development_query_handler.py:handle_bug_query",
            "backend/langgraph_system/development_query_handler.py:handle_refactoring_query",
            "backend/langgraph_system/development_query_handler.py:handle_testing_query",
            "backend/langgraph_system/development_query_handler.py:handle_implementation_query",
            "backend/langgraph_system/development_query_handler.py:handle_technology_query",
            "backend/langgraph_system/development_query_handler.py:handle_database_query",
            "backend/langgraph_system/development_query_handler.py:handle_ai_integration_query",
            "backend/langgraph_system/development_query_handler.py:handle_error_diagnosis_query",
            "backend/langgraph_system/development_query_handler.py:handle_scope_clarification",
            "backend/langgraph_system/development_query_handler.py:get_handler_for_type",
            "backend/langgraph_system/development_query_handler.py:handle_development_query",
            "backend/langgraph_system/development_query_handler.py:suggest_next_steps"
          ],
          "size": 15,
          "cohesion": 0.62,
          "internal_calls": 5,
          "external_calls": 3
        },
        {
          "id": "cluster_32",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:__post_init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_for_agent",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_agent_instruction_summary",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:add_agent_output",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_iteration_summary",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:start_new_iteration",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_relevant_outputs",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_project_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_available_project_types",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_shared_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_domain_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_quality_gates",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_project_specifics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:create_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:update_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:should_continue_iteration",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:prepare_agent_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py:get_context_statistics"
          ],
          "size": 19,
          "cohesion": 0.59,
          "internal_calls": 10,
          "external_calls": 7
        },
        {
          "id": "cluster_102",
          "file": "backend/langgraph_system/extensions/tool_discovery.py",
          "functions": [
            "backend/langgraph_system/extensions/tool_discovery.py:tool",
            "backend/langgraph_system/extensions/tool_discovery.py:get_tool_registry",
            "backend/langgraph_system/extensions/tool_discovery.py:decorator",
            "backend/langgraph_system/extensions/tool_discovery.py:__init__",
            "backend/langgraph_system/extensions/tool_discovery.py:auto_discover_tools",
            "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_decorated",
            "backend/langgraph_system/extensions/tool_discovery.py:_create_tool_from_prefix",
            "backend/langgraph_system/extensions/tool_discovery.py:_extract_parameters",
            "backend/langgraph_system/extensions/tool_discovery.py:_python_type_to_json_type",
            "backend/langgraph_system/extensions/tool_discovery.py:register_tool",
            "backend/langgraph_system/extensions/tool_discovery.py:discover_tools_for_agent",
            "backend/langgraph_system/extensions/tool_discovery.py:get_tool_schema",
            "backend/langgraph_system/extensions/tool_discovery.py:list_all_tools",
            "backend/langgraph_system/extensions/tool_discovery.py:get_usage_stats",
            "backend/langgraph_system/extensions/tool_discovery.py:export_tools",
            "backend/langgraph_system/extensions/tool_discovery.py:import_tools"
          ],
          "size": 16,
          "cohesion": 0.58,
          "internal_calls": 7,
          "external_calls": 5
        },
        {
          "id": "cluster_96",
          "file": "backend/langgraph_system/workflow_self_diagnosis.py",
          "functions": [
            "backend/langgraph_system/workflow_self_diagnosis.py:__init__",
            "backend/langgraph_system/workflow_self_diagnosis.py:_initialize_patterns",
            "backend/langgraph_system/workflow_self_diagnosis.py:detect_patterns",
            "backend/langgraph_system/workflow_self_diagnosis.py:_check_pattern",
            "backend/langgraph_system/workflow_self_diagnosis.py:_has_circular_dependencies",
            "backend/langgraph_system/workflow_self_diagnosis.py:_get_detection_reason",
            "backend/langgraph_system/workflow_self_diagnosis.py:_define_invariants",
            "backend/langgraph_system/workflow_self_diagnosis.py:check_all",
            "backend/langgraph_system/workflow_self_diagnosis.py:_check_valid_transitions",
            "backend/langgraph_system/workflow_self_diagnosis.py:_check_unique_ids",
            "backend/langgraph_system/workflow_self_diagnosis.py:_check_dependencies_exist",
            "backend/langgraph_system/workflow_self_diagnosis.py:_check_agent_capabilities",
            "backend/langgraph_system/workflow_self_diagnosis.py:_calculate_dependency_depth",
            "backend/langgraph_system/workflow_self_diagnosis.py:_find_parallelizable_steps",
            "backend/langgraph_system/workflow_self_diagnosis.py:_has_dependency_conflict",
            "backend/langgraph_system/workflow_self_diagnosis.py:_is_in_cycle",
            "backend/langgraph_system/workflow_self_diagnosis.py:analyze_patterns",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_routing_loop",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_collaboration_spiral",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_stuck_progress",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_resource_spike",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_timeout_cluster",
            "backend/langgraph_system/workflow_self_diagnosis.py:_detect_statistical_anomalies",
            "backend/langgraph_system/workflow_self_diagnosis.py:get_diagnosis_report",
            "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle_from",
            "backend/langgraph_system/workflow_self_diagnosis.py:get_depth",
            "backend/langgraph_system/workflow_self_diagnosis.py:has_cycle"
          ],
          "size": 27,
          "cohesion": 0.54,
          "internal_calls": 20,
          "external_calls": 17
        },
        {
          "id": "cluster_18",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_build_documentation_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py:_structure_documentation"
          ],
          "size": 4,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_22",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_build_architecture_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py:_extract_artifacts"
          ],
          "size": 4,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_37",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:get_default_thresholds",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:create_quality_check",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:calculate_overall_score",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:determine_pass_status",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_summary",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:generate_recommendations",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:find_pattern_matches",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_imports",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py:check_function_complexity"
          ],
          "size": 10,
          "cohesion": 0.5,
          "internal_calls": 3,
          "external_calls": 3
        },
        {
          "id": "cluster_51",
          "file": "backend/fixes/orchestrator_file_write_fix.py",
          "functions": [
            "backend/fixes/orchestrator_file_write_fix.py:_extract_file_path",
            "backend/fixes/orchestrator_file_write_fix.py:_determine_file_path",
            "backend/fixes/orchestrator_file_write_fix.py:_extract_feature_name"
          ],
          "size": 3,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_62",
          "file": "backend/core/analysis/layer_analyzer.py",
          "functions": [
            "backend/core/analysis/layer_analyzer.py:__init__",
            "backend/core/analysis/layer_analyzer.py:_classify_files_into_layers",
            "backend/core/analysis/layer_analyzer.py:_detect_file_layer",
            "backend/core/analysis/layer_analyzer.py:_build_layer_structure",
            "backend/core/analysis/layer_analyzer.py:_detect_layer_violations",
            "backend/core/analysis/layer_analyzer.py:_resolve_import_to_file",
            "backend/core/analysis/layer_analyzer.py:_check_layer_violation",
            "backend/core/analysis/layer_analyzer.py:_calculate_quality_score",
            "backend/core/analysis/layer_analyzer.py:_calculate_metrics",
            "backend/core/analysis/layer_analyzer.py:_empty_layer_analysis"
          ],
          "size": 10,
          "cohesion": 0.5,
          "internal_calls": 3,
          "external_calls": 3
        },
        {
          "id": "cluster_66",
          "file": "backend/config/capabilities_loader.py",
          "functions": [
            "backend/config/capabilities_loader.py:get_capabilities_loader",
            "backend/config/capabilities_loader.py:apply_capabilities_to_agent",
            "backend/config/capabilities_loader.py:__init__",
            "backend/config/capabilities_loader.py:_load_capabilities",
            "backend/config/capabilities_loader.py:get_agent_capabilities",
            "backend/config/capabilities_loader.py:apply_to_config",
            "backend/config/capabilities_loader.py:can_agent_write",
            "backend/config/capabilities_loader.py:get_all_capabilities"
          ],
          "size": 8,
          "cohesion": 0.5,
          "internal_calls": 5,
          "external_calls": 5
        },
        {
          "id": "cluster_80",
          "file": "backend/agents/specialized/performance_bot.py",
          "functions": [
            "backend/agents/specialized/performance_bot.py:__init__",
            "backend/agents/specialized/performance_bot.py:_extract_bottlenecks",
            "backend/agents/specialized/performance_bot.py:_parse_profile_stats",
            "backend/agents/specialized/performance_bot.py:_format_profile_results",
            "backend/agents/specialized/performance_bot.py:_format_package_analysis"
          ],
          "size": 5,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_89",
          "file": "backend/utils/claude_code_service.py",
          "functions": [
            "backend/utils/claude_code_service.py:__init__",
            "backend/utils/claude_code_service.py:_check_cli_availability",
            "backend/utils/claude_code_service.py:_parse_json_response",
            "backend/utils/claude_code_service.py:is_available"
          ],
          "size": 4,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_101",
          "file": "backend/langgraph_system/extensions/approval_manager.py",
          "functions": [
            "backend/langgraph_system/extensions/approval_manager.py:__init__",
            "backend/langgraph_system/extensions/approval_manager.py:_format_plan_for_ui",
            "backend/langgraph_system/extensions/approval_manager.py:_format_step",
            "backend/langgraph_system/extensions/approval_manager.py:get_approval_status",
            "backend/langgraph_system/extensions/approval_manager.py:get_approval_history",
            "backend/langgraph_system/extensions/approval_manager.py:cleanup_expired",
            "backend/langgraph_system/extensions/approval_manager.py:get_pending_approvals"
          ],
          "size": 7,
          "cohesion": 0.5,
          "internal_calls": 1,
          "external_calls": 1
        },
        {
          "id": "cluster_106",
          "file": "backend/services/diagram_service.py",
          "functions": [
            "backend/services/diagram_service.py:__init__",
            "backend/services/diagram_service.py:generate_flowchart",
            "backend/services/diagram_service.py:generate_sequence_diagram",
            "backend/services/diagram_service.py:generate_class_diagram",
            "backend/services/diagram_service.py:generate_architecture_diagram",
            "backend/services/diagram_service.py:_generate_mermaid_flowchart",
            "backend/services/diagram_service.py:_generate_mermaid_sequence",
            "backend/services/diagram_service.py:_generate_mermaid_class",
            "backend/services/diagram_service.py:_generate_mermaid_architecture",
            "backend/services/diagram_service.py:_generate_ascii_flowchart",
            "backend/services/diagram_service.py:save_diagram"
          ],
          "size": 11,
          "cohesion": 0.5,
          "internal_calls": 5,
          "external_calls": 5
        },
        {
          "id": "cluster_78",
          "file": "backend/agents/specialized/codesmith_agent.py",
          "functions": [
            "backend/agents/specialized/codesmith_agent.py:__init__",
            "backend/agents/specialized/codesmith_agent.py:format_implementation",
            "backend/agents/specialized/codesmith_agent.py:_detect_language",
            "backend/agents/specialized/codesmith_agent.py:_extract_functionality",
            "backend/agents/specialized/codesmith_agent.py:_assess_complexity",
            "backend/agents/specialized/codesmith_agent.py:_generate_filename",
            "backend/agents/specialized/codesmith_agent.py:_extract_dependencies",
            "backend/agents/specialized/codesmith_agent.py:_get_test_framework",
            "backend/agents/specialized/codesmith_agent.py:_load_code_patterns",
            "backend/agents/specialized/codesmith_agent.py:_load_language_configs",
            "backend/agents/specialized/codesmith_agent.py:_generate_fix_suggestion",
            "backend/agents/specialized/codesmith_agent.py:_check_for_hallucination",
            "backend/agents/specialized/codesmith_agent.py:_validate_workspace_context",
            "backend/agents/specialized/codesmith_agent.py:_enforce_asimov_rule_1",
            "backend/agents/specialized/codesmith_agent.py:_extract_file_path",
            "backend/agents/specialized/codesmith_agent.py:_generate_file_path",
            "backend/agents/specialized/codesmith_agent.py:_extract_feature_name"
          ],
          "size": 17,
          "cohesion": 0.4,
          "internal_calls": 4,
          "external_calls": 6
        },
        {
          "id": "cluster_77",
          "file": "backend/agents/specialized/architect_agent.py",
          "functions": [
            "backend/agents/specialized/architect_agent.py:__init__",
            "backend/agents/specialized/architect_agent.py:_parse_architecture_response",
            "backend/agents/specialized/architect_agent.py:_extract_features",
            "backend/agents/specialized/architect_agent.py:_load_architecture_patterns",
            "backend/agents/specialized/architect_agent.py:__del__",
            "backend/agents/specialized/architect_agent.py:_load_tech_stacks",
            "backend/agents/specialized/architect_agent.py:_generate_redis_config",
            "backend/agents/specialized/architect_agent.py:_generate_docker_compose",
            "backend/agents/specialized/architect_agent.py:_detect_request_type"
          ],
          "size": 9,
          "cohesion": 0.38,
          "internal_calls": 3,
          "external_calls": 5
        },
        {
          "id": "cluster_97",
          "file": "backend/langgraph_system/workflow.py",
          "functions": [
            "backend/langgraph_system/workflow.py:create_agent_workflow",
            "backend/langgraph_system/workflow.py:__init__",
            "backend/langgraph_system/workflow.py:_init_agent_memories",
            "backend/langgraph_system/workflow.py:_init_real_agents",
            "backend/langgraph_system/workflow.py:create_task_ledger",
            "backend/langgraph_system/workflow.py:extract_success_criteria",
            "backend/langgraph_system/workflow.py:create_progress_ledger",
            "backend/langgraph_system/workflow.py:identify_parallel_groups",
            "backend/langgraph_system/workflow.py:_has_dependency_conflict",
            "backend/langgraph_system/workflow.py:_get_all_dependencies",
            "backend/langgraph_system/workflow.py:route_after_approval",
            "backend/langgraph_system/workflow.py:route_from_architect",
            "backend/langgraph_system/workflow.py:route_to_next_agent",
            "backend/langgraph_system/workflow.py:_dependencies_met",
            "backend/langgraph_system/workflow.py:_get_current_step",
            "backend/langgraph_system/workflow.py:_get_step_by_agent",
            "backend/langgraph_system/workflow.py:_check_escalation_needed",
            "backend/langgraph_system/workflow.py:_calculate_agent_confidence",
            "backend/langgraph_system/workflow.py:_create_single_agent_step",
            "backend/langgraph_system/workflow.py:_detect_task_complexity",
            "backend/langgraph_system/workflow.py:_apply_plan_modifications",
            "backend/langgraph_system/workflow.py:_format_proposal_for_user",
            "backend/langgraph_system/workflow.py:create_workflow",
            "backend/langgraph_system/workflow.py:compile_workflow"
          ],
          "size": 24,
          "cohesion": 0.38,
          "internal_calls": 11,
          "external_calls": 18
        },
        {
          "id": "cluster_24",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_analyze_problem",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_build_fix_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_validate_fixes",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py:_create_fix_summary"
          ],
          "size": 6,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_30",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_intent_score",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_calculate_enhanced_intent_score",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_extract_entities",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:_assess_complexity",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py:get_intent_description"
          ],
          "size": 6,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_33",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:suggest_workflow",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:get_intent_statistics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_history",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_patterns",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_load_metrics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_save_all",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_metrics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_was_successful",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_record_success_pattern",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_update_performance_metrics",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_find_similar_executions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_extract_agents_used",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py:_calculate_agent_rating"
          ],
          "size": 14,
          "cohesion": 0.33,
          "internal_calls": 4,
          "external_calls": 8
        },
        {
          "id": "cluster_67",
          "file": "backend/config/settings.py",
          "functions": [
            "backend/config/settings.py:get_language_directive",
            "backend/config/settings.py:get_timeout",
            "backend/config/settings.py:update_from_vscode",
            "backend/config/settings.py:_auto_detect_provider",
            "backend/config/settings.py:to_dict"
          ],
          "size": 5,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_73",
          "file": "backend/agents/specialized/fixerbot_agent.py",
          "functions": [
            "backend/agents/specialized/fixerbot_agent.py:__init__",
            "backend/agents/specialized/fixerbot_agent.py:_match_pattern"
          ],
          "size": 2,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_79",
          "file": "backend/agents/specialized/fixer_gpt_agent.py",
          "functions": [
            "backend/agents/specialized/fixer_gpt_agent.py:__init__",
            "backend/agents/specialized/fixer_gpt_agent.py:_create_fresh_perspective_prompt",
            "backend/agents/specialized/fixer_gpt_agent.py:_format_previous_attempts",
            "backend/agents/specialized/fixer_gpt_agent.py:_format_research_results"
          ],
          "size": 4,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_87",
          "file": "backend/agents/base/chat_agent.py",
          "functions": [
            "backend/agents/base/chat_agent.py:__post_init__",
            "backend/agents/base/chat_agent.py:to_dict",
            "backend/agents/base/chat_agent.py:__init__",
            "backend/agents/base/chat_agent.py:format_response",
            "backend/agents/base/chat_agent.py:get_chat_status"
          ],
          "size": 5,
          "cohesion": 0.33,
          "internal_calls": 1,
          "external_calls": 2
        },
        {
          "id": "cluster_63",
          "file": "backend/core/analysis/call_graph_analyzer.py",
          "functions": [
            "backend/core/analysis/call_graph_analyzer.py:__init__",
            "backend/core/analysis/call_graph_analyzer.py:_build_function_registry",
            "backend/core/analysis/call_graph_analyzer.py:_build_call_relationships",
            "backend/core/analysis/call_graph_analyzer.py:_resolve_function_id",
            "backend/core/analysis/call_graph_analyzer.py:_detect_entry_points",
            "backend/core/analysis/call_graph_analyzer.py:_find_unused_functions",
            "backend/core/analysis/call_graph_analyzer.py:_detect_hot_paths",
            "backend/core/analysis/call_graph_analyzer.py:_bfs_paths",
            "backend/core/analysis/call_graph_analyzer.py:_build_nodes",
            "backend/core/analysis/call_graph_analyzer.py:_build_edges",
            "backend/core/analysis/call_graph_analyzer.py:_analyze_clusters",
            "backend/core/analysis/call_graph_analyzer.py:_calculate_metrics",
            "backend/core/analysis/call_graph_analyzer.py:_calculate_call_depth",
            "backend/core/analysis/call_graph_analyzer.py:_empty_call_graph"
          ],
          "size": 14,
          "cohesion": 0.31,
          "internal_calls": 4,
          "external_calls": 9
        },
        {
          "id": "cluster_85",
          "file": "backend/agents/base/base_agent.py",
          "functions": [
            "backend/agents/base/base_agent.py:__init__",
            "backend/agents/base/base_agent.py:_load_instructions",
            "backend/agents/base/base_agent.py:_get_language_directive",
            "backend/agents/base/base_agent.py:get_system_prompt",
            "backend/agents/base/base_agent.py:calculate_dynamic_timeout",
            "backend/agents/base/base_agent.py:_compile_research_summary",
            "backend/agents/base/base_agent.py:set_websocket_callback",
            "backend/agents/base/base_agent.py:get_status",
            "backend/agents/base/base_agent.py:__repr__"
          ],
          "size": 9,
          "cohesion": 0.27,
          "internal_calls": 3,
          "external_calls": 8
        },
        {
          "id": "cluster_17",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_build_arbitration_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:_extract_decision_components",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:is_conflict_resolvable",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py:get_conflict_complexity"
          ],
          "size": 6,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_20",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_mock_research_for_testing",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_create_research_plan",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_build_research_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_synthesize_findings",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py:_generate_recommendations"
          ],
          "size": 7,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_25",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_analysis_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_coding_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_build_implementation_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py:_organize_code"
          ],
          "size": 6,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_40",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_steps",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_agents",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_step_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:validate_step_completion",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_workflow_description",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py:get_success_criteria"
          ],
          "size": 7,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_41",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_steps",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_agents",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_step_instructions",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:validate_step_completion",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_workflow_description",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py:get_success_criteria"
          ],
          "size": 7,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_74",
          "file": "backend/agents/specialized/reviewer_gpt_agent.py",
          "functions": [
            "backend/agents/specialized/reviewer_gpt_agent.py:__init__",
            "backend/agents/specialized/reviewer_gpt_agent.py:check_asimov_violations",
            "backend/agents/specialized/reviewer_gpt_agent.py:_calculate_html_app_quality_score",
            "backend/agents/specialized/reviewer_gpt_agent.py:_get_recommendation",
            "backend/agents/specialized/reviewer_gpt_agent.py:_format_metrics"
          ],
          "size": 5,
          "cohesion": 0.25,
          "internal_calls": 1,
          "external_calls": 3
        },
        {
          "id": "cluster_86",
          "file": "backend/agents/base/prime_directives.py",
          "functions": [
            "backend/agents/base/prime_directives.py:validate_request",
            "backend/agents/base/prime_directives.py:_check_violations",
            "backend/agents/base/prime_directives.py:check_research_requirements",
            "backend/agents/base/prime_directives.py:format_challenge_response",
            "backend/agents/base/prime_directives.py:get_directive_prompt",
            "backend/agents/base/prime_directives.py:check_global_error_search"
          ],
          "size": 6,
          "cohesion": 0.25,
          "internal_calls": 2,
          "external_calls": 6
        },
        {
          "id": "cluster_35",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:get_default_thresholds",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_unified_engine",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_future_leak_prevention",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_iterative_processing",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py:_analyze_engine_chart_decoupling"
          ],
          "size": 6,
          "cohesion": 0.2,
          "internal_calls": 1,
          "external_calls": 4
        },
        {
          "id": "cluster_21",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_code_review_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_previous_analysis_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_final_review_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_build_review_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_categorize_issues",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_generate_recommendations",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py:_calculate_quality_score"
          ],
          "size": 9,
          "cohesion": 0.17,
          "internal_calls": 1,
          "external_calls": 5
        },
        {
          "id": "cluster_23",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_validation_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_improvement_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_analyze_requirements",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_build_strategy_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_create_backtest_framework",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py:_generate_performance_metrics"
          ],
          "size": 8,
          "cohesion": 0.17,
          "internal_calls": 1,
          "external_calls": 5
        },
        {
          "id": "cluster_34",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_load_templates",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_select_template",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_customize_workflow",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_optimize_parallel_execution",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_validate_agents",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:_estimate_total_time",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py:get_workflow_summary"
          ],
          "size": 8,
          "cohesion": 0.14,
          "internal_calls": 1,
          "external_calls": 6
        },
        {
          "id": "cluster_38",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:get_default_thresholds",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_vwap_fibonacci_condition",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ema9_logic",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_new_high_logic",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_crv_requirement",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_space_to_382",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py:_analyze_ron_trading_hours"
          ],
          "size": 8,
          "cohesion": 0.14,
          "internal_calls": 1,
          "external_calls": 6
        },
        {
          "id": "cluster_31",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__post_init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_detect_project_type",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_initialize_agents",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_agent_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_optimize_workflow",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_get_quality_gates_for_context",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py:_format_response"
          ],
          "size": 8,
          "cohesion": 0.12,
          "internal_calls": 1,
          "external_calls": 7
        },
        {
          "id": "cluster_39",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:get_default_thresholds",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_decimal_precision",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_pnl_calculations",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_crv_calculations",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_position_validation",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_stop_loss_logic",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exposure_limits",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_market_hours",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_audit_trail",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_type_annotations",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_exception_patterns",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_graceful_degradation",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_docstring_coverage",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_fallback_policy",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py:_check_live_data_policy"
          ],
          "size": 16,
          "cohesion": 0.09,
          "internal_calls": 1,
          "external_calls": 10
        },
        {
          "id": "cluster_5",
          "file": "test_tetris_workflow.py",
          "functions": [
            "test_tetris_workflow.py:__init__",
            "test_tetris_workflow.py:record_agent",
            "test_tetris_workflow.py:record_output",
            "test_tetris_workflow.py:record_quality_score",
            "test_tetris_workflow.py:record_message",
            "test_tetris_workflow.py:generate_report"
          ],
          "size": 6,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_6",
          "file": "cli.py",
          "functions": [
            "cli.py:main",
            "cli.py:__init__",
            "cli.py:_show_welcome",
            "cli.py:_display_results",
            "cli.py:_show_help",
            "cli.py:_show_agents",
            "cli.py:_show_history",
            "cli.py:_load_history",
            "cli.py:_save_history"
          ],
          "size": 9,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 2
        },
        {
          "id": "cluster_7",
          "file": "test_system.py",
          "functions": [
            "test_system.py:print_test",
            "test_system.py:print_section",
            "test_system.py:__init__"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_8",
          "file": "test_code_verification.py",
          "functions": [
            "test_code_verification.py:test_routing_replan_check",
            "test_code_verification.py:test_routing_in_progress_check",
            "test_code_verification.py:test_orchestrator_replan_logic",
            "test_code_verification.py:test_reviewer_collaboration",
            "test_code_verification.py:test_conditional_edges",
            "test_code_verification.py:test_settings_sync_code",
            "test_code_verification.py:test_instruction_files",
            "test_code_verification.py:main"
          ],
          "size": 8,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_10",
          "file": "test_tetris_complete.py",
          "functions": [
            "test_tetris_complete.py:__init__",
            "test_tetris_complete.py:log",
            "test_tetris_complete.py:print_summary"
          ],
          "size": 3,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_13",
          "file": "claude_web_proxy/fastapi_server.py",
          "functions": [
            "claude_web_proxy/fastapi_server.py:run_server",
            "claude_web_proxy/fastapi_server.py:check_browser_context_status"
          ],
          "size": 2,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_15",
          "file": "claude_web_proxy/setup_and_test.py",
          "functions": [
            "claude_web_proxy/setup_and_test.py:__init__",
            "claude_web_proxy/setup_and_test.py:install_playwright_browsers",
            "claude_web_proxy/setup_and_test.py:start_server",
            "claude_web_proxy/setup_and_test.py:stop_server",
            "claude_web_proxy/setup_and_test.py:generate_setup_report"
          ],
          "size": 5,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_19",
          "file": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_capabilities",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_build_prompt",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_extract_code",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:_validate_code",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:get_stats",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:reset_stats",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py:__repr__"
          ],
          "size": 8,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_26",
          "file": "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:start_claude_web_server",
            "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py:stop_claude_web_server"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_28",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:__init__",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_group_steps_for_execution",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:_compile_final_output",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_current_status",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py:get_execution_history"
          ],
          "size": 5,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 3
        },
        {
          "id": "cluster_42",
          "file": "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py",
          "functions": [
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_workflow_for_project_type",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py:get_available_workflows"
          ],
          "size": 2,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 3
        },
        {
          "id": "cluster_47",
          "file": "backend/__version__.py",
          "functions": [
            "backend/__version__.py:get_version",
            "backend/__version__.py:get_version_tuple",
            "backend/__version__.py:is_compatible"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_50",
          "file": "backend/test_langgraph_system.py",
          "functions": [
            "backend/test_langgraph_system.py:print_test_header",
            "backend/test_langgraph_system.py:print_success",
            "backend/test_langgraph_system.py:print_error",
            "backend/test_langgraph_system.py:print_info",
            "backend/test_langgraph_system.py:test_node"
          ],
          "size": 5,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_52",
          "file": "backend/fixes/task_request_enhancement.py",
          "functions": [
            "backend/fixes/task_request_enhancement.py:enhance_subtask_for_file_writing",
            "backend/fixes/task_request_enhancement.py:to_file_task"
          ],
          "size": 2,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_53",
          "file": "backend/core/memory_manager.py",
          "functions": [
            "backend/core/memory_manager.py:get_memory_manager",
            "backend/core/memory_manager.py:__init__",
            "backend/core/memory_manager.py:store",
            "backend/core/memory_manager.py:retrieve",
            "backend/core/memory_manager.py:clear"
          ],
          "size": 5,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_54",
          "file": "backend/core/pause_handler.py",
          "functions": [
            "backend/core/pause_handler.py:__init__",
            "backend/core/pause_handler.py:pause",
            "backend/core/pause_handler.py:resume",
            "backend/core/pause_handler.py:is_paused"
          ],
          "size": 4,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_56",
          "file": "backend/core/conversation_context_manager.py",
          "functions": [
            "backend/core/conversation_context_manager.py:get_conversation_context",
            "backend/core/conversation_context_manager.py:__init__",
            "backend/core/conversation_context_manager.py:add_message",
            "backend/core/conversation_context_manager.py:get_conversation",
            "backend/core/conversation_context_manager.py:clear_conversation"
          ],
          "size": 5,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_57",
          "file": "backend/core/git_checkpoint_manager.py",
          "functions": [
            "backend/core/git_checkpoint_manager.py:__init__",
            "backend/core/git_checkpoint_manager.py:create_checkpoint",
            "backend/core/git_checkpoint_manager.py:list_checkpoints",
            "backend/core/git_checkpoint_manager.py:rollback_to"
          ],
          "size": 4,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_65",
          "file": "backend/core/indexing/code_indexer.py",
          "functions": [
            "backend/core/indexing/code_indexer.py:__init__",
            "backend/core/indexing/code_indexer.py:_find_python_files",
            "backend/core/indexing/code_indexer.py:_count_total_lines"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_69",
          "file": "backend/tests/test_integration.py",
          "functions": [
            "backend/tests/test_integration.py:__init__",
            "backend/tests/test_integration.py:record_result",
            "backend/tests/test_integration.py:print_summary"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_71",
          "file": "backend/agents/tools/file_tools.py",
          "functions": [
            "backend/agents/tools/file_tools.py:__init__",
            "backend/agents/tools/file_tools.py:_validate_path",
            "backend/agents/tools/file_tools.py:_create_backup",
            "backend/agents/tools/file_tools.py:_log_operation",
            "backend/agents/tools/file_tools.py:get_audit_log"
          ],
          "size": 5,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_88",
          "file": "backend/utils/perplexity_service.py",
          "functions": [
            "backend/utils/perplexity_service.py:__init__",
            "backend/utils/perplexity_service.py:test_connection"
          ],
          "size": 2,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_90",
          "file": "backend/utils/openai_service.py",
          "functions": [
            "backend/utils/openai_service.py:__init__",
            "backend/utils/openai_service.py:is_available"
          ],
          "size": 2,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_91",
          "file": "backend/utils/anthropic_service.py",
          "functions": [
            "backend/utils/anthropic_service.py:__init__",
            "backend/utils/anthropic_service.py:_format_outputs",
            "backend/utils/anthropic_service.py:is_available"
          ],
          "size": 3,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_98",
          "file": "backend/langgraph_system/state.py",
          "functions": [
            "backend/langgraph_system/state.py:create_initial_state",
            "backend/langgraph_system/state.py:__post_init__",
            "backend/langgraph_system/state.py:is_timeout",
            "backend/langgraph_system/state.py:can_retry",
            "backend/langgraph_system/state.py:get_retry_delay",
            "backend/langgraph_system/state.py:update_from_steps"
          ],
          "size": 6,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_99",
          "file": "backend/langgraph_system/safe_orchestrator_executor.py",
          "functions": [
            "backend/langgraph_system/safe_orchestrator_executor.py:add_attempt",
            "backend/langgraph_system/safe_orchestrator_executor.py:__init__",
            "backend/langgraph_system/safe_orchestrator_executor.py:_generate_query_hash",
            "backend/langgraph_system/safe_orchestrator_executor.py:_detect_loop_pattern",
            "backend/langgraph_system/safe_orchestrator_executor.py:_get_safe_fallback_response",
            "backend/langgraph_system/safe_orchestrator_executor.py:get_execution_stats",
            "backend/langgraph_system/safe_orchestrator_executor.py:should_use_safe_execution",
            "backend/langgraph_system/safe_orchestrator_executor.py:reset_history"
          ],
          "size": 8,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 5
        },
        {
          "id": "cluster_104",
          "file": "backend/api/server_langgraph.py",
          "functions": [
            "backend/api/server_langgraph.py:main",
            "backend/api/server_langgraph.py:__init__",
            "backend/api/server_langgraph.py:disconnect"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        },
        {
          "id": "cluster_105",
          "file": "backend/api/models_endpoint.py",
          "functions": [
            "backend/api/models_endpoint.py:load_models_from_config",
            "backend/api/models_endpoint.py:load_models_from_available_json",
            "backend/api/models_endpoint.py:get_model_recommendations",
            "backend/api/models_endpoint.py:get_latest_models"
          ],
          "size": 4,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 1
        },
        {
          "id": "cluster_110",
          "file": "examples/claude_web_integration_example.py",
          "functions": [
            "examples/claude_web_integration_example.py:__init__",
            "examples/claude_web_integration_example.py:start_proxy_server",
            "examples/claude_web_integration_example.py:stop_proxy_server",
            "examples/claude_web_integration_example.py:interactive_mode"
          ],
          "size": 4,
          "cohesion": 0.0,
          "internal_calls": 0,
          "external_calls": 2
        },
        {
          "id": "cluster_111",
          "file": "examples/multi_agent_claude_web_demo.py",
          "functions": [
            "examples/multi_agent_claude_web_demo.py:__init__",
            "examples/multi_agent_claude_web_demo.py:start_claude_web_server",
            "examples/multi_agent_claude_web_demo.py:stop_claude_web_server"
          ],
          "size": 3,
          "cohesion": 0,
          "internal_calls": 0,
          "external_calls": 0
        }
      ],
      "metrics": {
        "total_functions": 696,
        "total_calls": 445,
        "max_call_depth": 6,
        "avg_calls_per_function": 0.64,
        "functions_with_no_calls": 372,
        "functions_not_called": 496
      },
      "timestamp": null
    },
    "system_layers": {
      "layers": [
        {
          "name": "presentation",
          "level": 3,
          "components": [
            "verify_reviewer_test.py",
            "test_quick_approval.py",
            "test_quick_fix.py",
            "claude_web_proxy/quick_test.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/iteration_controller.py",
            "backend/test_quick_infra.py",
            "backend/quick_test_key.py",
            "backend/agents/specialized/reviewer_gpt_agent.py"
          ],
          "component_count": 9,
          "allowed_dependencies": [
            "business",
            "infrastructure"
          ],
          "violations": []
        },
        {
          "name": "business",
          "level": 2,
          "components": [
            "backend/core/pause_handler.py",
            "backend/langgraph_system/intelligent_query_handler.py",
            "backend/langgraph_system/development_query_handler.py",
            "backend/services/diagram_service.py",
            "backend/services/__init__.py",
            "backend/services/project_cache.py",
            "backend/services/smart_file_watcher.py",
            "backend/services/code_search.py"
          ],
          "component_count": 8,
          "allowed_dependencies": [
            "data",
            "infrastructure"
          ],
          "violations": []
        },
        {
          "name": "data",
          "level": 1,
          "components": [
            "test_available_models.py",
            "backend/agents/specialized/performance_bot.py",
            "backend/api/models_endpoint.py"
          ],
          "component_count": 3,
          "allowed_dependencies": [
            "infrastructure"
          ],
          "violations": []
        },
        {
          "name": "infrastructure",
          "level": 0,
          "components": [
            "hello.py",
            "test_safe_executor_552.py",
            "test_architecture_proposal_workflow.py",
            "test_tetris_websocket_workflow.py",
            "test_new_features.py",
            "test_self_diagnosis.py",
            "test_indexing_progress.py",
            "test_button_implementation.py",
            "test_routing_debug.py",
            "test_perplexity_integration.py",
            "test_self_diagnosis_simple.py",
            "test_intelligent_agents.py",
            "test_architect_progress.py",
            "test_complex_workflow_simulation.py",
            "test_no_cache.py",
            "test_simple_workflow.py",
            "test_progress_enhanced.py",
            "test_orchestrator_steps.py",
            "test_agent_collaboration.py",
            "test_agents_fixed.py",
            "test_multi_agent_workflow.py",
            "real_whiteboard_request.py",
            "test_final.py",
            "test_tetris_workflow.py",
            "cli.py",
            "test_query_class.py",
            "test_system.py",
            "test_code_verification.py",
            "test_research_api.py",
            "test_query_classifier_simple.py",
            "test_websocket_messages.py",
            "test_complex_app_request.py",
            "test_instructions_learning.py",
            "test_tetris_now.py",
            "send_real_request.py",
            "test_tetris_complete.py",
            "test_infrastructure_analysis.py",
            "test_tetris_simple.py",
            "test_perplexity_raw.py",
            "test_whiteboard_real.py",
            "claude_web_proxy/claude_browser.py",
            "claude_web_proxy/fastapi_server.py",
            "claude_web_proxy/crewai_integration.py",
            "claude_web_proxy/setup_and_test.py",
            "claude_web_proxy/__init__.py",
            "claude_web_proxy/debug_browser_api.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/opus_arbitrator.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
            "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
            "BACKUP_OLD_archived_typescript_implementation/claude_web_related/claude_web_integration_complete.py",
            "BACKUP_OLD_archived_typescript_implementation/claude_web_related/debug_login_flow.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/execution_engine.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/__init__.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/shared_context.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/learning_system.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflow_generator.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/__init__.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/generic_software_workflow.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/trading_system_workflow.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/__init__.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/workflows/base_workflow.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/trading_project_context.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/__init__.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/web_app_context.py",
            "BACKUP_OLD_archived_typescript_implementation/orchestration/project_contexts/base_project_context.py",
            "backend/test_system_understanding.py",
            "backend/__version__.py",
            "backend/test_infrastructure_comprehensive.py",
            "backend/test_api_keys.py",
            "backend/test_websocket_debug.py",
            "backend/test_v4_features.py",
            "backend/test_execution_time_fix.py",
            "backend/test_langgraph_system.py",
            "backend/fixes/orchestrator_file_write_fix.py",
            "backend/fixes/task_request_enhancement.py",
            "backend/core/memory_manager.py",
            "backend/core/__init__.py",
            "backend/core/shared_context_manager.py",
            "backend/core/conversation_context_manager.py",
            "backend/core/git_checkpoint_manager.py",
            "backend/core/exceptions.py",
            "backend/core/analysis/semgrep_analyzer.py",
            "backend/core/analysis/vulture_analyzer.py",
            "backend/core/analysis/__init__.py",
            "backend/core/analysis/radon_metrics.py",
            "backend/core/analysis/layer_analyzer.py",
            "backend/core/analysis/call_graph_analyzer.py",
            "backend/core/indexing/tree_sitter_indexer.py",
            "backend/core/indexing/__init__.py",
            "backend/core/indexing/code_indexer.py",
            "backend/config/capabilities_loader.py",
            "backend/config/settings.py",
            "backend/tests/test_cache_manager.py",
            "backend/tests/test_server_auto.py",
            "backend/tests/test_file_capabilities_simple.py",
            "backend/tests/test_direct_file_write.py",
            "backend/tests/test_real_agent.py",
            "backend/tests/test_server.py",
            "backend/tests/test_agent_write_integration.py",
            "backend/tests/test_agent_file_capabilities.py",
            "backend/tests/test_integration.py",
            "backend/agents/agent_registry.py",
            "backend/agents/tools/__init__.py",
            "backend/agents/tools/file_tools.py",
            "backend/agents/tools/browser_tester.py",
            "backend/agents/specialized/fixerbot_agent.py",
            "backend/agents/specialized/tradestrat_agent.py",
            "backend/agents/specialized/docubot_agent.py",
            "backend/agents/specialized/architect_agent.py",
            "backend/agents/specialized/codesmith_agent.py",
            "backend/agents/specialized/fixer_gpt_agent.py",
            "backend/agents/specialized/research_agent.py",
            "backend/agents/specialized/orchestrator_agent_v2.py",
            "backend/agents/specialized/opus_arbitrator_agent.py",
            "backend/agents/specialized/orchestrator_agent.py",
            "backend/agents/base/base_agent.py",
            "backend/agents/base/prime_directives.py",
            "backend/agents/base/chat_agent.py",
            "backend/utils/perplexity_service.py",
            "backend/utils/claude_code_service.py",
            "backend/utils/openai_service.py",
            "backend/utils/anthropic_service.py",
            "backend/langgraph_system/cache_manager.py",
            "backend/langgraph_system/__init__.py",
            "backend/langgraph_system/query_classifier.py",
            "backend/langgraph_system/workflow_self_diagnosis.py",
            "backend/langgraph_system/workflow.py",
            "backend/langgraph_system/state.py",
            "backend/langgraph_system/safe_orchestrator_executor.py",
            "backend/langgraph_system/extensions/dynamic_workflow.py",
            "backend/langgraph_system/extensions/__init__.py",
            "backend/langgraph_system/extensions/approval_manager.py",
            "backend/langgraph_system/extensions/tool_discovery.py",
            "backend/langgraph_system/extensions/persistent_memory.py",
            "backend/api/settings_endpoint.py",
            "backend/api/server_langgraph.py",
            "backend/api/__init__.py",
            "examples/claude_web_integration_example.py",
            "examples/multi_agent_claude_web_demo.py"
          ],
          "component_count": 152,
          "allowed_dependencies": [],
          "violations": []
        }
      ],
      "violations": [
        {
          "from": "test_safe_executor_552.py",
          "to": "backend/langgraph_system/development_query_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "test_new_features.py",
          "to": "backend/agents/specialized/reviewer_gpt_agent.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "test_multi_agent_workflow.py",
          "to": "backend/agents/specialized/reviewer_gpt_agent.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "cli.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "test_code_verification.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/docu_bot.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/base_agent.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/research_bot.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/__init__.py",
          "to": "BACKUP_OLD_archived_typescript_implementation/agents/reviewer_gpt.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/architect_gpt.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/trade_strat.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/fixer_bot.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/agents/codesmith_claude.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/intent_classifier.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/master_dispatcher.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/engine_parity_quality_gate.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/security_quality_gate.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/base_quality_gate.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/ron_strategy_quality_gate.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "BACKUP_OLD_archived_typescript_implementation/orchestration/quality_gates/trading_quality_gate.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/fixes/orchestrator_file_write_fix.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/fixes/orchestrator_file_write_fix.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/core/__init__.py",
          "to": "backend/core/pause_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/fixerbot_agent.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/architect_agent.py",
          "to": "backend/services/project_cache.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/architect_agent.py",
          "to": "backend/services/smart_file_watcher.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/architect_agent.py",
          "to": "backend/services/code_search.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/architect_agent.py",
          "to": "backend/services/diagram_service.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py",
          "to": "backend/services/diagram_service.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/codesmith_agent.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/performance_bot.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "data",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "data should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/specialized/orchestrator_agent_v2.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/base/base_agent.py",
          "to": "backend/core/pause_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/agents/base/prime_directives.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/utils/claude_code_service.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/development_query_handler.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "business",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "business should not depend on presentation. Refactor to use data."
        },
        {
          "from": "backend/langgraph_system/query_classifier.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow_self_diagnosis.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow.py",
          "to": "backend/langgraph_system/intelligent_query_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow.py",
          "to": "backend/langgraph_system/development_query_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow.py",
          "to": "backend/agents/specialized/reviewer_gpt_agent.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/workflow.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "infrastructure",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on presentation. Refactor to use infrastructure."
        },
        {
          "from": "backend/langgraph_system/safe_orchestrator_executor.py",
          "to": "backend/langgraph_system/development_query_handler.py",
          "from_layer": "infrastructure",
          "to_layer": "business",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on business. Refactor to use infrastructure."
        },
        {
          "from": "backend/api/server_langgraph.py",
          "to": "backend/api/models_endpoint.py",
          "from_layer": "infrastructure",
          "to_layer": "data",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "infrastructure should not depend on data. Refactor to use infrastructure."
        },
        {
          "from": "backend/services/code_search.py",
          "to": "verify_reviewer_test.py",
          "from_layer": "business",
          "to_layer": "presentation",
          "severity": "error",
          "type": "upward_dependency",
          "suggestion": "business should not depend on presentation. Refactor to use data."
        }
      ],
      "quality_score": 0.3,
      "metrics": {
        "total_files": 172,
        "layered_files": 172,
        "unlayered_files": 0,
        "total_violations": 48,
        "critical_violations": 48,
        "warning_violations": 0,
        "layer_distribution": {
          "infrastructure": 152,
          "presentation": 9,
          "data": 3,
          "business": 8
        }
      },
      "timestamp": null
    },
    "diagrams": {
      "system_context": "```mermaid\ngraph TB\n```",
      "container": "```mermaid\ngraph TB\n```",
      "component": "```mermaid\ngraph TB\n```",
      "dependency_graph": "```mermaid\ngraph TB\n    A[Module] --> B[Dependencies]\n```",
      "sequence": "```mermaid\nsequenceDiagram\n```",
      "state": "```mermaid\nstateDiagram-v2\n    [*] --> Idle\n    Idle --> Processing\n    Processing --> Complete\n    Complete --> [*]\n```"
    },
    "timestamp": "2025-10-03T16:00:41.790456"
  }
}